package parser

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleSciName
	ruleTail
	ruleName
	ruleHybridFormula
	ruleHybridFormulaFull
	ruleHybridFormulaPart
	ruleNamedHybrid
	ruleNamedSpeciesHybrid
	ruleNamedGenusHybrid
	ruleCandidatusName
	ruleCandidatus
	ruleSingleName
	ruleNameUninomial
	ruleNameApprox
	ruleNameComp
	ruleNameSpecies
	ruleGenusWord
	ruleInfraspGroup
	ruleInfraspEpithet
	ruleCultivarWordGroup
	ruleCultivar
	ruleRankCultivar
	ruleNotHybridChar
	ruleCultivarRecursive
	ruleCultivarApostrophe
	ruleSpeciesEpithet
	ruleComparison
	ruleRank
	ruleRankNotho
	ruleRankOtherUncommon
	ruleRankOther
	ruleRankVar
	ruleRankForma
	ruleRankSsp
	ruleRankAgamo
	ruleSubgenusOrSuperspecies
	ruleSubgenus
	ruleSubgenus2
	ruleSubgenus1
	ruleUninomialCombo
	ruleUninomialCombo1
	ruleUninomialCombo2
	ruleRankUninomial
	ruleRankUninomialPlain
	ruleRankUninomialNotho
	ruleUninomial
	ruleUninomialWord
	ruleAbbrSubgenus
	ruleAbbrGenus
	ruleCapWord
	ruleCapWord1
	ruleCapWordWithDash
	ruleUpperAfterDash
	ruleLowerAfterDash
	ruleTwoLetterGenus
	ruleWord
	ruleWord1
	ruleWordStartsWithDigit
	ruleWord2
	ruleWordApostr
	ruleWord4
	ruleMultiDashedWord
	ruleHybridChar
	ruleApproxNameIgnored
	ruleApproximation
	ruleAuthorship
	ruleAuthorshipCombo
	ruleOriginalAuthorship
	ruleOriginalAuthorshipComb
	ruleCombinationAuthorship
	ruleBasionymAuthorshipMissingParens
	ruleMissingParensStart
	ruleMissingParensEnd
	ruleBasionymAuthorshipYearMisformed
	ruleBasionymAuthorship
	ruleBasionymAuthorship1
	ruleBasionymAuthorship2Parens
	ruleAuthorsGroup
	ruleAuthorsTeam
	ruleAuthorSep
	ruleAuthorSep1
	ruleAuthorSep2
	ruleAuthorSepSpanish
	ruleAuthorEx
	ruleAuthorEmend
	ruleAuthor
	ruleAuthor0
	ruleAuthor1
	ruleAuthor2
	ruleUnknownAuthor
	ruleAuthorWord
	ruleAuthorEtAl
	ruleAuthorWord2
	ruleAuthorWord3
	ruleAuthorDashInitials
	ruleAuthorWordSoft
	ruleCapAuthorWord
	ruleAllCapsAuthorWord
	ruleFilius
	ruleFiliusF
	ruleFiliusFNoSpace
	ruleAuthorSuffix
	ruleAuthorPrefixGlued
	ruleAuthorPrefix
	ruleAuthorPrefix2
	ruleAuthorPrefix1
	ruleAuthorUpperChar
	ruleAuthorLowerChar
	ruleYear
	ruleYearRange
	ruleYearWithDot
	ruleYearApprox
	ruleYearWithPage
	ruleYearWithParens
	ruleYearWithChar
	ruleYearNum
	ruleNameUpperChar
	ruleUpperCharExtended
	ruleUpperChar
	ruleNameLowerChar
	ruleMiscodedChar
	ruleLowerCharExtended
	ruleLowerChar
	ruleSpaceCharEOI
	ruleNums
	ruleLowerGreek
	ruleLowerASCII
	ruleUpperASCII
	ruleApostrophe
	ruleApostrASCII
	ruleApostrOther
	ruleDash
	ruleSlash
	rule_
	ruleMultipleSpace
	ruleSingleSpace
	ruleOtherSpace
	ruleEND
)

var rul3s = [...]string{
	"Unknown",
	"SciName",
	"Tail",
	"Name",
	"HybridFormula",
	"HybridFormulaFull",
	"HybridFormulaPart",
	"NamedHybrid",
	"NamedSpeciesHybrid",
	"NamedGenusHybrid",
	"CandidatusName",
	"Candidatus",
	"SingleName",
	"NameUninomial",
	"NameApprox",
	"NameComp",
	"NameSpecies",
	"GenusWord",
	"InfraspGroup",
	"InfraspEpithet",
	"CultivarWordGroup",
	"Cultivar",
	"RankCultivar",
	"NotHybridChar",
	"CultivarRecursive",
	"CultivarApostrophe",
	"SpeciesEpithet",
	"Comparison",
	"Rank",
	"RankNotho",
	"RankOtherUncommon",
	"RankOther",
	"RankVar",
	"RankForma",
	"RankSsp",
	"RankAgamo",
	"SubgenusOrSuperspecies",
	"Subgenus",
	"Subgenus2",
	"Subgenus1",
	"UninomialCombo",
	"UninomialCombo1",
	"UninomialCombo2",
	"RankUninomial",
	"RankUninomialPlain",
	"RankUninomialNotho",
	"Uninomial",
	"UninomialWord",
	"AbbrSubgenus",
	"AbbrGenus",
	"CapWord",
	"CapWord1",
	"CapWordWithDash",
	"UpperAfterDash",
	"LowerAfterDash",
	"TwoLetterGenus",
	"Word",
	"Word1",
	"WordStartsWithDigit",
	"Word2",
	"WordApostr",
	"Word4",
	"MultiDashedWord",
	"HybridChar",
	"ApproxNameIgnored",
	"Approximation",
	"Authorship",
	"AuthorshipCombo",
	"OriginalAuthorship",
	"OriginalAuthorshipComb",
	"CombinationAuthorship",
	"BasionymAuthorshipMissingParens",
	"MissingParensStart",
	"MissingParensEnd",
	"BasionymAuthorshipYearMisformed",
	"BasionymAuthorship",
	"BasionymAuthorship1",
	"BasionymAuthorship2Parens",
	"AuthorsGroup",
	"AuthorsTeam",
	"AuthorSep",
	"AuthorSep1",
	"AuthorSep2",
	"AuthorSepSpanish",
	"AuthorEx",
	"AuthorEmend",
	"Author",
	"Author0",
	"Author1",
	"Author2",
	"UnknownAuthor",
	"AuthorWord",
	"AuthorEtAl",
	"AuthorWord2",
	"AuthorWord3",
	"AuthorDashInitials",
	"AuthorWordSoft",
	"CapAuthorWord",
	"AllCapsAuthorWord",
	"Filius",
	"FiliusF",
	"FiliusFNoSpace",
	"AuthorSuffix",
	"AuthorPrefixGlued",
	"AuthorPrefix",
	"AuthorPrefix2",
	"AuthorPrefix1",
	"AuthorUpperChar",
	"AuthorLowerChar",
	"Year",
	"YearRange",
	"YearWithDot",
	"YearApprox",
	"YearWithPage",
	"YearWithParens",
	"YearWithChar",
	"YearNum",
	"NameUpperChar",
	"UpperCharExtended",
	"UpperChar",
	"NameLowerChar",
	"MiscodedChar",
	"LowerCharExtended",
	"LowerChar",
	"SpaceCharEOI",
	"Nums",
	"LowerGreek",
	"LowerASCII",
	"UpperASCII",
	"Apostrophe",
	"ApostrASCII",
	"ApostrOther",
	"Dash",
	"Slash",
	"_",
	"MultipleSpace",
	"SingleSpace",
	"OtherSpace",
	"END",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type Engine struct {
	baseEngine

	Buffer string
	buffer []rune
	rules  [139]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *Engine) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *Engine) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *Engine
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *Engine) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *Engine) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *Engine) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func Pretty(pretty bool) func(*Engine) error {
	return func(p *Engine) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*Engine) error {
	return func(p *Engine) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *Engine) Init(options ...func(*Engine) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 SciName <- <(_? Name Tail END)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				{
					position2, tokenIndex2 := position, tokenIndex
					if !_rules[rule_]() {
						goto l2
					}
					goto l3
				l2:
					position, tokenIndex = position2, tokenIndex2
				}
			l3:
				if !_rules[ruleName]() {
					goto l0
				}
				if !_rules[ruleTail]() {
					goto l0
				}
				if !_rules[ruleEND]() {
					goto l0
				}
				add(ruleSciName, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Tail <- <((_ / ';' / ',') .*)?> */
		func() bool {
			{
				position5 := position
				{
					position6, tokenIndex6 := position, tokenIndex
					{
						position8, tokenIndex8 := position, tokenIndex
						if !_rules[rule_]() {
							goto l9
						}
						goto l8
					l9:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(';') {
							goto l10
						}
						position++
						goto l8
					l10:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(',') {
							goto l6
						}
						position++
					}
				l8:
				l11:
					{
						position12, tokenIndex12 := position, tokenIndex
						if !matchDot() {
							goto l12
						}
						goto l11
					l12:
						position, tokenIndex = position12, tokenIndex12
					}
					goto l7
				l6:
					position, tokenIndex = position6, tokenIndex6
				}
			l7:
				add(ruleTail, position5)
			}
			return true
		},
		/* 2 Name <- <(NamedHybrid / HybridFormula / CandidatusName / SingleName)> */
		func() bool {
			position13, tokenIndex13 := position, tokenIndex
			{
				position14 := position
				{
					position15, tokenIndex15 := position, tokenIndex
					if !_rules[ruleNamedHybrid]() {
						goto l16
					}
					goto l15
				l16:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleHybridFormula]() {
						goto l17
					}
					goto l15
				l17:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleCandidatusName]() {
						goto l18
					}
					goto l15
				l18:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleSingleName]() {
						goto l13
					}
				}
			l15:
				add(ruleName, position14)
			}
			return true
		l13:
			position, tokenIndex = position13, tokenIndex13
			return false
		},
		/* 3 HybridFormula <- <(SingleName (_ (HybridFormulaPart / HybridFormulaFull))+)> */
		func() bool {
			position19, tokenIndex19 := position, tokenIndex
			{
				position20 := position
				if !_rules[ruleSingleName]() {
					goto l19
				}
				if !_rules[rule_]() {
					goto l19
				}
				{
					position23, tokenIndex23 := position, tokenIndex
					if !_rules[ruleHybridFormulaPart]() {
						goto l24
					}
					goto l23
				l24:
					position, tokenIndex = position23, tokenIndex23
					if !_rules[ruleHybridFormulaFull]() {
						goto l19
					}
				}
			l23:
			l21:
				{
					position22, tokenIndex22 := position, tokenIndex
					if !_rules[rule_]() {
						goto l22
					}
					{
						position25, tokenIndex25 := position, tokenIndex
						if !_rules[ruleHybridFormulaPart]() {
							goto l26
						}
						goto l25
					l26:
						position, tokenIndex = position25, tokenIndex25
						if !_rules[ruleHybridFormulaFull]() {
							goto l22
						}
					}
				l25:
					goto l21
				l22:
					position, tokenIndex = position22, tokenIndex22
				}
				add(ruleHybridFormula, position20)
			}
			return true
		l19:
			position, tokenIndex = position19, tokenIndex19
			return false
		},
		/* 4 HybridFormulaFull <- <(HybridChar (_ SingleName)?)> */
		func() bool {
			position27, tokenIndex27 := position, tokenIndex
			{
				position28 := position
				if !_rules[ruleHybridChar]() {
					goto l27
				}
				{
					position29, tokenIndex29 := position, tokenIndex
					if !_rules[rule_]() {
						goto l29
					}
					if !_rules[ruleSingleName]() {
						goto l29
					}
					goto l30
				l29:
					position, tokenIndex = position29, tokenIndex29
				}
			l30:
				add(ruleHybridFormulaFull, position28)
			}
			return true
		l27:
			position, tokenIndex = position27, tokenIndex27
			return false
		},
		/* 5 HybridFormulaPart <- <(HybridChar _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position31, tokenIndex31 := position, tokenIndex
			{
				position32 := position
				if !_rules[ruleHybridChar]() {
					goto l31
				}
				if !_rules[rule_]() {
					goto l31
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l31
				}
				{
					position33, tokenIndex33 := position, tokenIndex
					if !_rules[rule_]() {
						goto l33
					}
					if !_rules[ruleInfraspGroup]() {
						goto l33
					}
					goto l34
				l33:
					position, tokenIndex = position33, tokenIndex33
				}
			l34:
				add(ruleHybridFormulaPart, position32)
			}
			return true
		l31:
			position, tokenIndex = position31, tokenIndex31
			return false
		},
		/* 6 NamedHybrid <- <(NamedGenusHybrid / NamedSpeciesHybrid)> */
		func() bool {
			position35, tokenIndex35 := position, tokenIndex
			{
				position36 := position
				{
					position37, tokenIndex37 := position, tokenIndex
					if !_rules[ruleNamedGenusHybrid]() {
						goto l38
					}
					goto l37
				l38:
					position, tokenIndex = position37, tokenIndex37
					if !_rules[ruleNamedSpeciesHybrid]() {
						goto l35
					}
				}
			l37:
				add(ruleNamedHybrid, position36)
			}
			return true
		l35:
			position, tokenIndex = position35, tokenIndex35
			return false
		},
		/* 7 NamedSpeciesHybrid <- <(GenusWord (_ Subgenus)? (_ Comparison)? _ HybridChar _? SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position39, tokenIndex39 := position, tokenIndex
			{
				position40 := position
				if !_rules[ruleGenusWord]() {
					goto l39
				}
				{
					position41, tokenIndex41 := position, tokenIndex
					if !_rules[rule_]() {
						goto l41
					}
					if !_rules[ruleSubgenus]() {
						goto l41
					}
					goto l42
				l41:
					position, tokenIndex = position41, tokenIndex41
				}
			l42:
				{
					position43, tokenIndex43 := position, tokenIndex
					if !_rules[rule_]() {
						goto l43
					}
					if !_rules[ruleComparison]() {
						goto l43
					}
					goto l44
				l43:
					position, tokenIndex = position43, tokenIndex43
				}
			l44:
				if !_rules[rule_]() {
					goto l39
				}
				if !_rules[ruleHybridChar]() {
					goto l39
				}
				{
					position45, tokenIndex45 := position, tokenIndex
					if !_rules[rule_]() {
						goto l45
					}
					goto l46
				l45:
					position, tokenIndex = position45, tokenIndex45
				}
			l46:
				if !_rules[ruleSpeciesEpithet]() {
					goto l39
				}
				{
					position47, tokenIndex47 := position, tokenIndex
					if !_rules[rule_]() {
						goto l47
					}
					if !_rules[ruleInfraspGroup]() {
						goto l47
					}
					goto l48
				l47:
					position, tokenIndex = position47, tokenIndex47
				}
			l48:
				add(ruleNamedSpeciesHybrid, position40)
			}
			return true
		l39:
			position, tokenIndex = position39, tokenIndex39
			return false
		},
		/* 8 NamedGenusHybrid <- <(HybridChar _? SingleName)> */
		func() bool {
			position49, tokenIndex49 := position, tokenIndex
			{
				position50 := position
				if !_rules[ruleHybridChar]() {
					goto l49
				}
				{
					position51, tokenIndex51 := position, tokenIndex
					if !_rules[rule_]() {
						goto l51
					}
					goto l52
				l51:
					position, tokenIndex = position51, tokenIndex51
				}
			l52:
				if !_rules[ruleSingleName]() {
					goto l49
				}
				add(ruleNamedGenusHybrid, position50)
			}
			return true
		l49:
			position, tokenIndex = position49, tokenIndex49
			return false
		},
		/* 9 CandidatusName <- <(Candidatus _ SingleName)> */
		func() bool {
			position53, tokenIndex53 := position, tokenIndex
			{
				position54 := position
				if !_rules[ruleCandidatus]() {
					goto l53
				}
				if !_rules[rule_]() {
					goto l53
				}
				if !_rules[ruleSingleName]() {
					goto l53
				}
				add(ruleCandidatusName, position54)
			}
			return true
		l53:
			position, tokenIndex = position53, tokenIndex53
			return false
		},
		/* 10 Candidatus <- <('C' 'a' 'n' 'd' 'i' 'd' 'a' 't' 'u' 's')> */
		func() bool {
			position55, tokenIndex55 := position, tokenIndex
			{
				position56 := position
				if buffer[position] != rune('C') {
					goto l55
				}
				position++
				if buffer[position] != rune('a') {
					goto l55
				}
				position++
				if buffer[position] != rune('n') {
					goto l55
				}
				position++
				if buffer[position] != rune('d') {
					goto l55
				}
				position++
				if buffer[position] != rune('i') {
					goto l55
				}
				position++
				if buffer[position] != rune('d') {
					goto l55
				}
				position++
				if buffer[position] != rune('a') {
					goto l55
				}
				position++
				if buffer[position] != rune('t') {
					goto l55
				}
				position++
				if buffer[position] != rune('u') {
					goto l55
				}
				position++
				if buffer[position] != rune('s') {
					goto l55
				}
				position++
				add(ruleCandidatus, position56)
			}
			return true
		l55:
			position, tokenIndex = position55, tokenIndex55
			return false
		},
		/* 11 SingleName <- <(NameComp / NameApprox / NameSpecies / NameUninomial)> */
		func() bool {
			position57, tokenIndex57 := position, tokenIndex
			{
				position58 := position
				{
					position59, tokenIndex59 := position, tokenIndex
					if !_rules[ruleNameComp]() {
						goto l60
					}
					goto l59
				l60:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleNameApprox]() {
						goto l61
					}
					goto l59
				l61:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleNameSpecies]() {
						goto l62
					}
					goto l59
				l62:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleNameUninomial]() {
						goto l57
					}
				}
			l59:
				add(ruleSingleName, position58)
			}
			return true
		l57:
			position, tokenIndex = position57, tokenIndex57
			return false
		},
		/* 12 NameUninomial <- <((UninomialCombo / Uninomial) (_ CultivarWordGroup)?)> */
		func() bool {
			position63, tokenIndex63 := position, tokenIndex
			{
				position64 := position
				{
					position65, tokenIndex65 := position, tokenIndex
					if !_rules[ruleUninomialCombo]() {
						goto l66
					}
					goto l65
				l66:
					position, tokenIndex = position65, tokenIndex65
					if !_rules[ruleUninomial]() {
						goto l63
					}
				}
			l65:
				{
					position67, tokenIndex67 := position, tokenIndex
					if !_rules[rule_]() {
						goto l67
					}
					if !_rules[ruleCultivarWordGroup]() {
						goto l67
					}
					goto l68
				l67:
					position, tokenIndex = position67, tokenIndex67
				}
			l68:
				add(ruleNameUninomial, position64)
			}
			return true
		l63:
			position, tokenIndex = position63, tokenIndex63
			return false
		},
		/* 13 NameApprox <- <(GenusWord (_ SpeciesEpithet)? _ Approximation ApproxNameIgnored)> */
		func() bool {
			position69, tokenIndex69 := position, tokenIndex
			{
				position70 := position
				if !_rules[ruleGenusWord]() {
					goto l69
				}
				{
					position71, tokenIndex71 := position, tokenIndex
					if !_rules[rule_]() {
						goto l71
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l71
					}
					goto l72
				l71:
					position, tokenIndex = position71, tokenIndex71
				}
			l72:
				if !_rules[rule_]() {
					goto l69
				}
				if !_rules[ruleApproximation]() {
					goto l69
				}
				if !_rules[ruleApproxNameIgnored]() {
					goto l69
				}
				add(ruleNameApprox, position70)
			}
			return true
		l69:
			position, tokenIndex = position69, tokenIndex69
			return false
		},
		/* 14 NameComp <- <(GenusWord _ Comparison (_ SpeciesEpithet)?)> */
		func() bool {
			position73, tokenIndex73 := position, tokenIndex
			{
				position74 := position
				if !_rules[ruleGenusWord]() {
					goto l73
				}
				if !_rules[rule_]() {
					goto l73
				}
				if !_rules[ruleComparison]() {
					goto l73
				}
				{
					position75, tokenIndex75 := position, tokenIndex
					if !_rules[rule_]() {
						goto l75
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l75
					}
					goto l76
				l75:
					position, tokenIndex = position75, tokenIndex75
				}
			l76:
				add(ruleNameComp, position74)
			}
			return true
		l73:
			position, tokenIndex = position73, tokenIndex73
			return false
		},
		/* 15 NameSpecies <- <(GenusWord (_? (Subgenus / SubgenusOrSuperspecies))? _ SpeciesEpithet (_ InfraspGroup)? (_ CultivarWordGroup)?)> */
		func() bool {
			position77, tokenIndex77 := position, tokenIndex
			{
				position78 := position
				if !_rules[ruleGenusWord]() {
					goto l77
				}
				{
					position79, tokenIndex79 := position, tokenIndex
					{
						position81, tokenIndex81 := position, tokenIndex
						if !_rules[rule_]() {
							goto l81
						}
						goto l82
					l81:
						position, tokenIndex = position81, tokenIndex81
					}
				l82:
					{
						position83, tokenIndex83 := position, tokenIndex
						if !_rules[ruleSubgenus]() {
							goto l84
						}
						goto l83
					l84:
						position, tokenIndex = position83, tokenIndex83
						if !_rules[ruleSubgenusOrSuperspecies]() {
							goto l79
						}
					}
				l83:
					goto l80
				l79:
					position, tokenIndex = position79, tokenIndex79
				}
			l80:
				if !_rules[rule_]() {
					goto l77
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l77
				}
				{
					position85, tokenIndex85 := position, tokenIndex
					if !_rules[rule_]() {
						goto l85
					}
					if !_rules[ruleInfraspGroup]() {
						goto l85
					}
					goto l86
				l85:
					position, tokenIndex = position85, tokenIndex85
				}
			l86:
				{
					position87, tokenIndex87 := position, tokenIndex
					if !_rules[rule_]() {
						goto l87
					}
					if !_rules[ruleCultivarWordGroup]() {
						goto l87
					}
					goto l88
				l87:
					position, tokenIndex = position87, tokenIndex87
				}
			l88:
				add(ruleNameSpecies, position78)
			}
			return true
		l77:
			position, tokenIndex = position77, tokenIndex77
			return false
		},
		/* 16 GenusWord <- <((AbbrGenus / UninomialWord) !(_ AuthorWord))> */
		func() bool {
			position89, tokenIndex89 := position, tokenIndex
			{
				position90 := position
				{
					position91, tokenIndex91 := position, tokenIndex
					if !_rules[ruleAbbrGenus]() {
						goto l92
					}
					goto l91
				l92:
					position, tokenIndex = position91, tokenIndex91
					if !_rules[ruleUninomialWord]() {
						goto l89
					}
				}
			l91:
				{
					position93, tokenIndex93 := position, tokenIndex
					if !_rules[rule_]() {
						goto l93
					}
					if !_rules[ruleAuthorWord]() {
						goto l93
					}
					goto l89
				l93:
					position, tokenIndex = position93, tokenIndex93
				}
				add(ruleGenusWord, position90)
			}
			return true
		l89:
			position, tokenIndex = position89, tokenIndex89
			return false
		},
		/* 17 InfraspGroup <- <(InfraspEpithet (_ InfraspEpithet)? (_ InfraspEpithet)?)> */
		func() bool {
			position94, tokenIndex94 := position, tokenIndex
			{
				position95 := position
				if !_rules[ruleInfraspEpithet]() {
					goto l94
				}
				{
					position96, tokenIndex96 := position, tokenIndex
					if !_rules[rule_]() {
						goto l96
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l96
					}
					goto l97
				l96:
					position, tokenIndex = position96, tokenIndex96
				}
			l97:
				{
					position98, tokenIndex98 := position, tokenIndex
					if !_rules[rule_]() {
						goto l98
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l98
					}
					goto l99
				l98:
					position, tokenIndex = position98, tokenIndex98
				}
			l99:
				add(ruleInfraspGroup, position95)
			}
			return true
		l94:
			position, tokenIndex = position94, tokenIndex94
			return false
		},
		/* 18 InfraspEpithet <- <((Rank _?)? !AuthorEx Word (_ Authorship)?)> */
		func() bool {
			position100, tokenIndex100 := position, tokenIndex
			{
				position101 := position
				{
					position102, tokenIndex102 := position, tokenIndex
					if !_rules[ruleRank]() {
						goto l102
					}
					{
						position104, tokenIndex104 := position, tokenIndex
						if !_rules[rule_]() {
							goto l104
						}
						goto l105
					l104:
						position, tokenIndex = position104, tokenIndex104
					}
				l105:
					goto l103
				l102:
					position, tokenIndex = position102, tokenIndex102
				}
			l103:
				{
					position106, tokenIndex106 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l106
					}
					goto l100
				l106:
					position, tokenIndex = position106, tokenIndex106
				}
				if !_rules[ruleWord]() {
					goto l100
				}
				{
					position107, tokenIndex107 := position, tokenIndex
					if !_rules[rule_]() {
						goto l107
					}
					if !_rules[ruleAuthorship]() {
						goto l107
					}
					goto l108
				l107:
					position, tokenIndex = position107, tokenIndex107
				}
			l108:
				add(ruleInfraspEpithet, position101)
			}
			return true
		l100:
			position, tokenIndex = position100, tokenIndex100
			return false
		},
		/* 19 CultivarWordGroup <- <(((RankCultivar _)? CultivarApostrophe CultivarRecursive CultivarApostrophe) / (RankCultivar _ Cultivar))> */
		func() bool {
			position109, tokenIndex109 := position, tokenIndex
			{
				position110 := position
				{
					position111, tokenIndex111 := position, tokenIndex
					{
						position113, tokenIndex113 := position, tokenIndex
						if !_rules[ruleRankCultivar]() {
							goto l113
						}
						if !_rules[rule_]() {
							goto l113
						}
						goto l114
					l113:
						position, tokenIndex = position113, tokenIndex113
					}
				l114:
					if !_rules[ruleCultivarApostrophe]() {
						goto l112
					}
					if !_rules[ruleCultivarRecursive]() {
						goto l112
					}
					if !_rules[ruleCultivarApostrophe]() {
						goto l112
					}
					goto l111
				l112:
					position, tokenIndex = position111, tokenIndex111
					if !_rules[ruleRankCultivar]() {
						goto l109
					}
					if !_rules[rule_]() {
						goto l109
					}
					if !_rules[ruleCultivar]() {
						goto l109
					}
				}
			l111:
				add(ruleCultivarWordGroup, position110)
			}
			return true
		l109:
			position, tokenIndex = position109, tokenIndex109
			return false
		},
		/* 20 Cultivar <- <NotHybridChar+> */
		func() bool {
			position115, tokenIndex115 := position, tokenIndex
			{
				position116 := position
				if !_rules[ruleNotHybridChar]() {
					goto l115
				}
			l117:
				{
					position118, tokenIndex118 := position, tokenIndex
					if !_rules[ruleNotHybridChar]() {
						goto l118
					}
					goto l117
				l118:
					position, tokenIndex = position118, tokenIndex118
				}
				add(ruleCultivar, position116)
			}
			return true
		l115:
			position, tokenIndex = position115, tokenIndex115
			return false
		},
		/* 21 RankCultivar <- <('c' 'v' '.'?)> */
		func() bool {
			position119, tokenIndex119 := position, tokenIndex
			{
				position120 := position
				if buffer[position] != rune('c') {
					goto l119
				}
				position++
				if buffer[position] != rune('v') {
					goto l119
				}
				position++
				{
					position121, tokenIndex121 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l121
					}
					position++
					goto l122
				l121:
					position, tokenIndex = position121, tokenIndex121
				}
			l122:
				add(ruleRankCultivar, position120)
			}
			return true
		l119:
			position, tokenIndex = position119, tokenIndex119
			return false
		},
		/* 22 NotHybridChar <- <(!(_ HybridChar) .)> */
		func() bool {
			position123, tokenIndex123 := position, tokenIndex
			{
				position124 := position
				{
					position125, tokenIndex125 := position, tokenIndex
					if !_rules[rule_]() {
						goto l125
					}
					if !_rules[ruleHybridChar]() {
						goto l125
					}
					goto l123
				l125:
					position, tokenIndex = position125, tokenIndex125
				}
				if !matchDot() {
					goto l123
				}
				add(ruleNotHybridChar, position124)
			}
			return true
		l123:
			position, tokenIndex = position123, tokenIndex123
			return false
		},
		/* 23 CultivarRecursive <- <((NotHybridChar CultivarRecursive) / &CultivarApostrophe)> */
		func() bool {
			position126, tokenIndex126 := position, tokenIndex
			{
				position127 := position
				{
					position128, tokenIndex128 := position, tokenIndex
					if !_rules[ruleNotHybridChar]() {
						goto l129
					}
					if !_rules[ruleCultivarRecursive]() {
						goto l129
					}
					goto l128
				l129:
					position, tokenIndex = position128, tokenIndex128
					{
						position130, tokenIndex130 := position, tokenIndex
						if !_rules[ruleCultivarApostrophe]() {
							goto l126
						}
						position, tokenIndex = position130, tokenIndex130
					}
				}
			l128:
				add(ruleCultivarRecursive, position127)
			}
			return true
		l126:
			position, tokenIndex = position126, tokenIndex126
			return false
		},
		/* 24 CultivarApostrophe <- <('\'' / '‘' / '’' / '"' / '“' / '”')> */
		func() bool {
			position131, tokenIndex131 := position, tokenIndex
			{
				position132 := position
				{
					position133, tokenIndex133 := position, tokenIndex
					if buffer[position] != rune('\'') {
						goto l134
					}
					position++
					goto l133
				l134:
					position, tokenIndex = position133, tokenIndex133
					if buffer[position] != rune('‘') {
						goto l135
					}
					position++
					goto l133
				l135:
					position, tokenIndex = position133, tokenIndex133
					if buffer[position] != rune('’') {
						goto l136
					}
					position++
					goto l133
				l136:
					position, tokenIndex = position133, tokenIndex133
					if buffer[position] != rune('"') {
						goto l137
					}
					position++
					goto l133
				l137:
					position, tokenIndex = position133, tokenIndex133
					if buffer[position] != rune('“') {
						goto l138
					}
					position++
					goto l133
				l138:
					position, tokenIndex = position133, tokenIndex133
					if buffer[position] != rune('”') {
						goto l131
					}
					position++
				}
			l133:
				add(ruleCultivarApostrophe, position132)
			}
			return true
		l131:
			position, tokenIndex = position131, tokenIndex131
			return false
		},
		/* 25 SpeciesEpithet <- <(!AuthorEx Word (_? Authorship)?)> */
		func() bool {
			position139, tokenIndex139 := position, tokenIndex
			{
				position140 := position
				{
					position141, tokenIndex141 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l141
					}
					goto l139
				l141:
					position, tokenIndex = position141, tokenIndex141
				}
				if !_rules[ruleWord]() {
					goto l139
				}
				{
					position142, tokenIndex142 := position, tokenIndex
					{
						position144, tokenIndex144 := position, tokenIndex
						if !_rules[rule_]() {
							goto l144
						}
						goto l145
					l144:
						position, tokenIndex = position144, tokenIndex144
					}
				l145:
					if !_rules[ruleAuthorship]() {
						goto l142
					}
					goto l143
				l142:
					position, tokenIndex = position142, tokenIndex142
				}
			l143:
				add(ruleSpeciesEpithet, position140)
			}
			return true
		l139:
			position, tokenIndex = position139, tokenIndex139
			return false
		},
		/* 26 Comparison <- <('c' 'f' '.'? &SpaceCharEOI)> */
		func() bool {
			position146, tokenIndex146 := position, tokenIndex
			{
				position147 := position
				if buffer[position] != rune('c') {
					goto l146
				}
				position++
				if buffer[position] != rune('f') {
					goto l146
				}
				position++
				{
					position148, tokenIndex148 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l148
					}
					position++
					goto l149
				l148:
					position, tokenIndex = position148, tokenIndex148
				}
			l149:
				{
					position150, tokenIndex150 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l146
					}
					position, tokenIndex = position150, tokenIndex150
				}
				add(ruleComparison, position147)
			}
			return true
		l146:
			position, tokenIndex = position146, tokenIndex146
			return false
		},
		/* 27 Rank <- <((RankForma / RankVar / RankSsp / RankOther / RankOtherUncommon / RankAgamo / RankNotho) (_? LowerGreek ('.' / &SpaceCharEOI))?)> */
		func() bool {
			position151, tokenIndex151 := position, tokenIndex
			{
				position152 := position
				{
					position153, tokenIndex153 := position, tokenIndex
					if !_rules[ruleRankForma]() {
						goto l154
					}
					goto l153
				l154:
					position, tokenIndex = position153, tokenIndex153
					if !_rules[ruleRankVar]() {
						goto l155
					}
					goto l153
				l155:
					position, tokenIndex = position153, tokenIndex153
					if !_rules[ruleRankSsp]() {
						goto l156
					}
					goto l153
				l156:
					position, tokenIndex = position153, tokenIndex153
					if !_rules[ruleRankOther]() {
						goto l157
					}
					goto l153
				l157:
					position, tokenIndex = position153, tokenIndex153
					if !_rules[ruleRankOtherUncommon]() {
						goto l158
					}
					goto l153
				l158:
					position, tokenIndex = position153, tokenIndex153
					if !_rules[ruleRankAgamo]() {
						goto l159
					}
					goto l153
				l159:
					position, tokenIndex = position153, tokenIndex153
					if !_rules[ruleRankNotho]() {
						goto l151
					}
				}
			l153:
				{
					position160, tokenIndex160 := position, tokenIndex
					{
						position162, tokenIndex162 := position, tokenIndex
						if !_rules[rule_]() {
							goto l162
						}
						goto l163
					l162:
						position, tokenIndex = position162, tokenIndex162
					}
				l163:
					if !_rules[ruleLowerGreek]() {
						goto l160
					}
					{
						position164, tokenIndex164 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l165
						}
						position++
						goto l164
					l165:
						position, tokenIndex = position164, tokenIndex164
						{
							position166, tokenIndex166 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l160
							}
							position, tokenIndex = position166, tokenIndex166
						}
					}
				l164:
					goto l161
				l160:
					position, tokenIndex = position160, tokenIndex160
				}
			l161:
				add(ruleRank, position152)
			}
			return true
		l151:
			position, tokenIndex = position151, tokenIndex151
			return false
		},
		/* 28 RankNotho <- <((('n' 'o' 't' 'h' 'o' (('v' 'a' 'r') / ('f' 'o') / 'f' / ('s' 'u' 'b' 's' 'p') / ('s' 's' 'p') / ('s' 'p') / ('m' 'o' 'r' 't' 'h') / ('s' 'u' 'p' 's' 'p') / ('s' 'u'))) / ('n' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position167, tokenIndex167 := position, tokenIndex
			{
				position168 := position
				{
					position169, tokenIndex169 := position, tokenIndex
					if buffer[position] != rune('n') {
						goto l170
					}
					position++
					if buffer[position] != rune('o') {
						goto l170
					}
					position++
					if buffer[position] != rune('t') {
						goto l170
					}
					position++
					if buffer[position] != rune('h') {
						goto l170
					}
					position++
					if buffer[position] != rune('o') {
						goto l170
					}
					position++
					{
						position171, tokenIndex171 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l172
						}
						position++
						if buffer[position] != rune('a') {
							goto l172
						}
						position++
						if buffer[position] != rune('r') {
							goto l172
						}
						position++
						goto l171
					l172:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('f') {
							goto l173
						}
						position++
						if buffer[position] != rune('o') {
							goto l173
						}
						position++
						goto l171
					l173:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('f') {
							goto l174
						}
						position++
						goto l171
					l174:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('s') {
							goto l175
						}
						position++
						if buffer[position] != rune('u') {
							goto l175
						}
						position++
						if buffer[position] != rune('b') {
							goto l175
						}
						position++
						if buffer[position] != rune('s') {
							goto l175
						}
						position++
						if buffer[position] != rune('p') {
							goto l175
						}
						position++
						goto l171
					l175:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('s') {
							goto l176
						}
						position++
						if buffer[position] != rune('s') {
							goto l176
						}
						position++
						if buffer[position] != rune('p') {
							goto l176
						}
						position++
						goto l171
					l176:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('s') {
							goto l177
						}
						position++
						if buffer[position] != rune('p') {
							goto l177
						}
						position++
						goto l171
					l177:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('m') {
							goto l178
						}
						position++
						if buffer[position] != rune('o') {
							goto l178
						}
						position++
						if buffer[position] != rune('r') {
							goto l178
						}
						position++
						if buffer[position] != rune('t') {
							goto l178
						}
						position++
						if buffer[position] != rune('h') {
							goto l178
						}
						position++
						goto l171
					l178:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('s') {
							goto l179
						}
						position++
						if buffer[position] != rune('u') {
							goto l179
						}
						position++
						if buffer[position] != rune('p') {
							goto l179
						}
						position++
						if buffer[position] != rune('s') {
							goto l179
						}
						position++
						if buffer[position] != rune('p') {
							goto l179
						}
						position++
						goto l171
					l179:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('s') {
							goto l170
						}
						position++
						if buffer[position] != rune('u') {
							goto l170
						}
						position++
					}
				l171:
					goto l169
				l170:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('n') {
						goto l167
					}
					position++
					if buffer[position] != rune('v') {
						goto l167
					}
					position++
					if buffer[position] != rune('a') {
						goto l167
					}
					position++
					if buffer[position] != rune('r') {
						goto l167
					}
					position++
				}
			l169:
				{
					position180, tokenIndex180 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l181
					}
					position++
					goto l180
				l181:
					position, tokenIndex = position180, tokenIndex180
					{
						position182, tokenIndex182 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l167
						}
						position, tokenIndex = position182, tokenIndex182
					}
				}
			l180:
				add(ruleRankNotho, position168)
			}
			return true
		l167:
			position, tokenIndex = position167, tokenIndex167
			return false
		},
		/* 29 RankOtherUncommon <- <(('*' / ('n' 'a' 't' 'i' 'o') / ('n' 'a' 't' '.') / ('n' 'a' 't') / ('f' '.' 's' 'p') / 'α' / ('β' 'β') / 'β' / 'γ' / 'δ' / 'ε' / 'φ' / 'θ' / 'μ' / ('a' '.') / ('b' '.') / ('c' '.') / ('d' '.') / ('e' '.') / ('g' '.') / ('k' '.') / ('m' 'u' 't' '.')) &SpaceCharEOI)> */
		func() bool {
			position183, tokenIndex183 := position, tokenIndex
			{
				position184 := position
				{
					position185, tokenIndex185 := position, tokenIndex
					if buffer[position] != rune('*') {
						goto l186
					}
					position++
					goto l185
				l186:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('n') {
						goto l187
					}
					position++
					if buffer[position] != rune('a') {
						goto l187
					}
					position++
					if buffer[position] != rune('t') {
						goto l187
					}
					position++
					if buffer[position] != rune('i') {
						goto l187
					}
					position++
					if buffer[position] != rune('o') {
						goto l187
					}
					position++
					goto l185
				l187:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('n') {
						goto l188
					}
					position++
					if buffer[position] != rune('a') {
						goto l188
					}
					position++
					if buffer[position] != rune('t') {
						goto l188
					}
					position++
					if buffer[position] != rune('.') {
						goto l188
					}
					position++
					goto l185
				l188:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('n') {
						goto l189
					}
					position++
					if buffer[position] != rune('a') {
						goto l189
					}
					position++
					if buffer[position] != rune('t') {
						goto l189
					}
					position++
					goto l185
				l189:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('f') {
						goto l190
					}
					position++
					if buffer[position] != rune('.') {
						goto l190
					}
					position++
					if buffer[position] != rune('s') {
						goto l190
					}
					position++
					if buffer[position] != rune('p') {
						goto l190
					}
					position++
					goto l185
				l190:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('α') {
						goto l191
					}
					position++
					goto l185
				l191:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('β') {
						goto l192
					}
					position++
					if buffer[position] != rune('β') {
						goto l192
					}
					position++
					goto l185
				l192:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('β') {
						goto l193
					}
					position++
					goto l185
				l193:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('γ') {
						goto l194
					}
					position++
					goto l185
				l194:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('δ') {
						goto l195
					}
					position++
					goto l185
				l195:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('ε') {
						goto l196
					}
					position++
					goto l185
				l196:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('φ') {
						goto l197
					}
					position++
					goto l185
				l197:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('θ') {
						goto l198
					}
					position++
					goto l185
				l198:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('μ') {
						goto l199
					}
					position++
					goto l185
				l199:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('a') {
						goto l200
					}
					position++
					if buffer[position] != rune('.') {
						goto l200
					}
					position++
					goto l185
				l200:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('b') {
						goto l201
					}
					position++
					if buffer[position] != rune('.') {
						goto l201
					}
					position++
					goto l185
				l201:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('c') {
						goto l202
					}
					position++
					if buffer[position] != rune('.') {
						goto l202
					}
					position++
					goto l185
				l202:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('d') {
						goto l203
					}
					position++
					if buffer[position] != rune('.') {
						goto l203
					}
					position++
					goto l185
				l203:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('e') {
						goto l204
					}
					position++
					if buffer[position] != rune('.') {
						goto l204
					}
					position++
					goto l185
				l204:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('g') {
						goto l205
					}
					position++
					if buffer[position] != rune('.') {
						goto l205
					}
					position++
					goto l185
				l205:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('k') {
						goto l206
					}
					position++
					if buffer[position] != rune('.') {
						goto l206
					}
					position++
					goto l185
				l206:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('m') {
						goto l183
					}
					position++
					if buffer[position] != rune('u') {
						goto l183
					}
					position++
					if buffer[position] != rune('t') {
						goto l183
					}
					position++
					if buffer[position] != rune('.') {
						goto l183
					}
					position++
				}
			l185:
				{
					position207, tokenIndex207 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l183
					}
					position, tokenIndex = position207, tokenIndex207
				}
				add(ruleRankOtherUncommon, position184)
			}
			return true
		l183:
			position, tokenIndex = position183, tokenIndex183
			return false
		},
		/* 30 RankOther <- <((('m' 'o' 'r' 'p' 'h') / ('c' 'o' 'n' 'v' 'a' 'r') / ('p' 's' 'e' 'u' 'd' 'o' 'v' 'a' 'r') / ('s' 'e' 'c' 't') / ('s' 'e' 'r') / ('s' 'u' 'b' 'v' 'a' 'r') / ('s' 'u' 'b' 'f') / ('r' 'a' 'c' 'e') / ('p' 'v') / ('p' 'a' 't' 'h' 'o' 'v' 'a' 'r') / ('a' 'b' '.' (_? ('n' '.'))?) / ('s' 't')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position208, tokenIndex208 := position, tokenIndex
			{
				position209 := position
				{
					position210, tokenIndex210 := position, tokenIndex
					if buffer[position] != rune('m') {
						goto l211
					}
					position++
					if buffer[position] != rune('o') {
						goto l211
					}
					position++
					if buffer[position] != rune('r') {
						goto l211
					}
					position++
					if buffer[position] != rune('p') {
						goto l211
					}
					position++
					if buffer[position] != rune('h') {
						goto l211
					}
					position++
					goto l210
				l211:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('c') {
						goto l212
					}
					position++
					if buffer[position] != rune('o') {
						goto l212
					}
					position++
					if buffer[position] != rune('n') {
						goto l212
					}
					position++
					if buffer[position] != rune('v') {
						goto l212
					}
					position++
					if buffer[position] != rune('a') {
						goto l212
					}
					position++
					if buffer[position] != rune('r') {
						goto l212
					}
					position++
					goto l210
				l212:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('p') {
						goto l213
					}
					position++
					if buffer[position] != rune('s') {
						goto l213
					}
					position++
					if buffer[position] != rune('e') {
						goto l213
					}
					position++
					if buffer[position] != rune('u') {
						goto l213
					}
					position++
					if buffer[position] != rune('d') {
						goto l213
					}
					position++
					if buffer[position] != rune('o') {
						goto l213
					}
					position++
					if buffer[position] != rune('v') {
						goto l213
					}
					position++
					if buffer[position] != rune('a') {
						goto l213
					}
					position++
					if buffer[position] != rune('r') {
						goto l213
					}
					position++
					goto l210
				l213:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('s') {
						goto l214
					}
					position++
					if buffer[position] != rune('e') {
						goto l214
					}
					position++
					if buffer[position] != rune('c') {
						goto l214
					}
					position++
					if buffer[position] != rune('t') {
						goto l214
					}
					position++
					goto l210
				l214:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('s') {
						goto l215
					}
					position++
					if buffer[position] != rune('e') {
						goto l215
					}
					position++
					if buffer[position] != rune('r') {
						goto l215
					}
					position++
					goto l210
				l215:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('s') {
						goto l216
					}
					position++
					if buffer[position] != rune('u') {
						goto l216
					}
					position++
					if buffer[position] != rune('b') {
						goto l216
					}
					position++
					if buffer[position] != rune('v') {
						goto l216
					}
					position++
					if buffer[position] != rune('a') {
						goto l216
					}
					position++
					if buffer[position] != rune('r') {
						goto l216
					}
					position++
					goto l210
				l216:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('s') {
						goto l217
					}
					position++
					if buffer[position] != rune('u') {
						goto l217
					}
					position++
					if buffer[position] != rune('b') {
						goto l217
					}
					position++
					if buffer[position] != rune('f') {
						goto l217
					}
					position++
					goto l210
				l217:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('r') {
						goto l218
					}
					position++
					if buffer[position] != rune('a') {
						goto l218
					}
					position++
					if buffer[position] != rune('c') {
						goto l218
					}
					position++
					if buffer[position] != rune('e') {
						goto l218
					}
					position++
					goto l210
				l218:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('p') {
						goto l219
					}
					position++
					if buffer[position] != rune('v') {
						goto l219
					}
					position++
					goto l210
				l219:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('p') {
						goto l220
					}
					position++
					if buffer[position] != rune('a') {
						goto l220
					}
					position++
					if buffer[position] != rune('t') {
						goto l220
					}
					position++
					if buffer[position] != rune('h') {
						goto l220
					}
					position++
					if buffer[position] != rune('o') {
						goto l220
					}
					position++
					if buffer[position] != rune('v') {
						goto l220
					}
					position++
					if buffer[position] != rune('a') {
						goto l220
					}
					position++
					if buffer[position] != rune('r') {
						goto l220
					}
					position++
					goto l210
				l220:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('a') {
						goto l221
					}
					position++
					if buffer[position] != rune('b') {
						goto l221
					}
					position++
					if buffer[position] != rune('.') {
						goto l221
					}
					position++
					{
						position222, tokenIndex222 := position, tokenIndex
						{
							position224, tokenIndex224 := position, tokenIndex
							if !_rules[rule_]() {
								goto l224
							}
							goto l225
						l224:
							position, tokenIndex = position224, tokenIndex224
						}
					l225:
						if buffer[position] != rune('n') {
							goto l222
						}
						position++
						if buffer[position] != rune('.') {
							goto l222
						}
						position++
						goto l223
					l222:
						position, tokenIndex = position222, tokenIndex222
					}
				l223:
					goto l210
				l221:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('s') {
						goto l208
					}
					position++
					if buffer[position] != rune('t') {
						goto l208
					}
					position++
				}
			l210:
				{
					position226, tokenIndex226 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l227
					}
					position++
					goto l226
				l227:
					position, tokenIndex = position226, tokenIndex226
					{
						position228, tokenIndex228 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l208
						}
						position, tokenIndex = position228, tokenIndex228
					}
				}
			l226:
				add(ruleRankOther, position209)
			}
			return true
		l208:
			position, tokenIndex = position208, tokenIndex208
			return false
		},
		/* 31 RankVar <- <((('v' 'a' 'r' 'i' 'e' 't' 'y') / ('[' 'v' 'a' 'r' '.' ']') / ('v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position229, tokenIndex229 := position, tokenIndex
			{
				position230 := position
				{
					position231, tokenIndex231 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l232
					}
					position++
					if buffer[position] != rune('a') {
						goto l232
					}
					position++
					if buffer[position] != rune('r') {
						goto l232
					}
					position++
					if buffer[position] != rune('i') {
						goto l232
					}
					position++
					if buffer[position] != rune('e') {
						goto l232
					}
					position++
					if buffer[position] != rune('t') {
						goto l232
					}
					position++
					if buffer[position] != rune('y') {
						goto l232
					}
					position++
					goto l231
				l232:
					position, tokenIndex = position231, tokenIndex231
					if buffer[position] != rune('[') {
						goto l233
					}
					position++
					if buffer[position] != rune('v') {
						goto l233
					}
					position++
					if buffer[position] != rune('a') {
						goto l233
					}
					position++
					if buffer[position] != rune('r') {
						goto l233
					}
					position++
					if buffer[position] != rune('.') {
						goto l233
					}
					position++
					if buffer[position] != rune(']') {
						goto l233
					}
					position++
					goto l231
				l233:
					position, tokenIndex = position231, tokenIndex231
					if buffer[position] != rune('v') {
						goto l229
					}
					position++
					if buffer[position] != rune('a') {
						goto l229
					}
					position++
					if buffer[position] != rune('r') {
						goto l229
					}
					position++
				}
			l231:
				{
					position234, tokenIndex234 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l235
					}
					position++
					goto l234
				l235:
					position, tokenIndex = position234, tokenIndex234
					{
						position236, tokenIndex236 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l229
						}
						position, tokenIndex = position236, tokenIndex236
					}
				}
			l234:
				add(ruleRankVar, position230)
			}
			return true
		l229:
			position, tokenIndex = position229, tokenIndex229
			return false
		},
		/* 32 RankForma <- <((('f' 'o' 'r' 'm' 'a') / ('f' 'm' 'a') / ('f' 'm') / ('f' 'o' 'r' 'm') / ('f' 'o') / 'f') ('.' / &SpaceCharEOI))> */
		func() bool {
			position237, tokenIndex237 := position, tokenIndex
			{
				position238 := position
				{
					position239, tokenIndex239 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l240
					}
					position++
					if buffer[position] != rune('o') {
						goto l240
					}
					position++
					if buffer[position] != rune('r') {
						goto l240
					}
					position++
					if buffer[position] != rune('m') {
						goto l240
					}
					position++
					if buffer[position] != rune('a') {
						goto l240
					}
					position++
					goto l239
				l240:
					position, tokenIndex = position239, tokenIndex239
					if buffer[position] != rune('f') {
						goto l241
					}
					position++
					if buffer[position] != rune('m') {
						goto l241
					}
					position++
					if buffer[position] != rune('a') {
						goto l241
					}
					position++
					goto l239
				l241:
					position, tokenIndex = position239, tokenIndex239
					if buffer[position] != rune('f') {
						goto l242
					}
					position++
					if buffer[position] != rune('m') {
						goto l242
					}
					position++
					goto l239
				l242:
					position, tokenIndex = position239, tokenIndex239
					if buffer[position] != rune('f') {
						goto l243
					}
					position++
					if buffer[position] != rune('o') {
						goto l243
					}
					position++
					if buffer[position] != rune('r') {
						goto l243
					}
					position++
					if buffer[position] != rune('m') {
						goto l243
					}
					position++
					goto l239
				l243:
					position, tokenIndex = position239, tokenIndex239
					if buffer[position] != rune('f') {
						goto l244
					}
					position++
					if buffer[position] != rune('o') {
						goto l244
					}
					position++
					goto l239
				l244:
					position, tokenIndex = position239, tokenIndex239
					if buffer[position] != rune('f') {
						goto l237
					}
					position++
				}
			l239:
				{
					position245, tokenIndex245 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l246
					}
					position++
					goto l245
				l246:
					position, tokenIndex = position245, tokenIndex245
					{
						position247, tokenIndex247 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l237
						}
						position, tokenIndex = position247, tokenIndex247
					}
				}
			l245:
				add(ruleRankForma, position238)
			}
			return true
		l237:
			position, tokenIndex = position237, tokenIndex237
			return false
		},
		/* 33 RankSsp <- <((('s' 's' 'p') / ('s' 'u' 'b' 's' 'p' 'e' 'c') / ('s' 'u' 'b' 's' 'p')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position248, tokenIndex248 := position, tokenIndex
			{
				position249 := position
				{
					position250, tokenIndex250 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l251
					}
					position++
					if buffer[position] != rune('s') {
						goto l251
					}
					position++
					if buffer[position] != rune('p') {
						goto l251
					}
					position++
					goto l250
				l251:
					position, tokenIndex = position250, tokenIndex250
					if buffer[position] != rune('s') {
						goto l252
					}
					position++
					if buffer[position] != rune('u') {
						goto l252
					}
					position++
					if buffer[position] != rune('b') {
						goto l252
					}
					position++
					if buffer[position] != rune('s') {
						goto l252
					}
					position++
					if buffer[position] != rune('p') {
						goto l252
					}
					position++
					if buffer[position] != rune('e') {
						goto l252
					}
					position++
					if buffer[position] != rune('c') {
						goto l252
					}
					position++
					goto l250
				l252:
					position, tokenIndex = position250, tokenIndex250
					if buffer[position] != rune('s') {
						goto l248
					}
					position++
					if buffer[position] != rune('u') {
						goto l248
					}
					position++
					if buffer[position] != rune('b') {
						goto l248
					}
					position++
					if buffer[position] != rune('s') {
						goto l248
					}
					position++
					if buffer[position] != rune('p') {
						goto l248
					}
					position++
				}
			l250:
				{
					position253, tokenIndex253 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l254
					}
					position++
					goto l253
				l254:
					position, tokenIndex = position253, tokenIndex253
					{
						position255, tokenIndex255 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l248
						}
						position, tokenIndex = position255, tokenIndex255
					}
				}
			l253:
				add(ruleRankSsp, position249)
			}
			return true
		l248:
			position, tokenIndex = position248, tokenIndex248
			return false
		},
		/* 34 RankAgamo <- <((('a' 'g' 'a' 'm' 'o' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 's' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position256, tokenIndex256 := position, tokenIndex
			{
				position257 := position
				{
					position258, tokenIndex258 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l259
					}
					position++
					if buffer[position] != rune('g') {
						goto l259
					}
					position++
					if buffer[position] != rune('a') {
						goto l259
					}
					position++
					if buffer[position] != rune('m') {
						goto l259
					}
					position++
					if buffer[position] != rune('o') {
						goto l259
					}
					position++
					if buffer[position] != rune('s') {
						goto l259
					}
					position++
					if buffer[position] != rune('p') {
						goto l259
					}
					position++
					goto l258
				l259:
					position, tokenIndex = position258, tokenIndex258
					if buffer[position] != rune('a') {
						goto l260
					}
					position++
					if buffer[position] != rune('g') {
						goto l260
					}
					position++
					if buffer[position] != rune('a') {
						goto l260
					}
					position++
					if buffer[position] != rune('m') {
						goto l260
					}
					position++
					if buffer[position] != rune('o') {
						goto l260
					}
					position++
					if buffer[position] != rune('s') {
						goto l260
					}
					position++
					if buffer[position] != rune('s') {
						goto l260
					}
					position++
					if buffer[position] != rune('p') {
						goto l260
					}
					position++
					goto l258
				l260:
					position, tokenIndex = position258, tokenIndex258
					if buffer[position] != rune('a') {
						goto l256
					}
					position++
					if buffer[position] != rune('g') {
						goto l256
					}
					position++
					if buffer[position] != rune('a') {
						goto l256
					}
					position++
					if buffer[position] != rune('m') {
						goto l256
					}
					position++
					if buffer[position] != rune('o') {
						goto l256
					}
					position++
					if buffer[position] != rune('v') {
						goto l256
					}
					position++
					if buffer[position] != rune('a') {
						goto l256
					}
					position++
					if buffer[position] != rune('r') {
						goto l256
					}
					position++
				}
			l258:
				{
					position261, tokenIndex261 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l262
					}
					position++
					goto l261
				l262:
					position, tokenIndex = position261, tokenIndex261
					{
						position263, tokenIndex263 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l256
						}
						position, tokenIndex = position263, tokenIndex263
					}
				}
			l261:
				add(ruleRankAgamo, position257)
			}
			return true
		l256:
			position, tokenIndex = position256, tokenIndex256
			return false
		},
		/* 35 SubgenusOrSuperspecies <- <('(' _? NameLowerChar+ _? ')')> */
		func() bool {
			position264, tokenIndex264 := position, tokenIndex
			{
				position265 := position
				if buffer[position] != rune('(') {
					goto l264
				}
				position++
				{
					position266, tokenIndex266 := position, tokenIndex
					if !_rules[rule_]() {
						goto l266
					}
					goto l267
				l266:
					position, tokenIndex = position266, tokenIndex266
				}
			l267:
				if !_rules[ruleNameLowerChar]() {
					goto l264
				}
			l268:
				{
					position269, tokenIndex269 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l269
					}
					goto l268
				l269:
					position, tokenIndex = position269, tokenIndex269
				}
				{
					position270, tokenIndex270 := position, tokenIndex
					if !_rules[rule_]() {
						goto l270
					}
					goto l271
				l270:
					position, tokenIndex = position270, tokenIndex270
				}
			l271:
				if buffer[position] != rune(')') {
					goto l264
				}
				position++
				add(ruleSubgenusOrSuperspecies, position265)
			}
			return true
		l264:
			position, tokenIndex = position264, tokenIndex264
			return false
		},
		/* 36 Subgenus <- <(Subgenus2 / Subgenus1)> */
		func() bool {
			position272, tokenIndex272 := position, tokenIndex
			{
				position273 := position
				{
					position274, tokenIndex274 := position, tokenIndex
					if !_rules[ruleSubgenus2]() {
						goto l275
					}
					goto l274
				l275:
					position, tokenIndex = position274, tokenIndex274
					if !_rules[ruleSubgenus1]() {
						goto l272
					}
				}
			l274:
				add(ruleSubgenus, position273)
			}
			return true
		l272:
			position, tokenIndex = position272, tokenIndex272
			return false
		},
		/* 37 Subgenus2 <- <('(' _? AbbrSubgenus _? ')' !(_? NameUpperChar))> */
		func() bool {
			position276, tokenIndex276 := position, tokenIndex
			{
				position277 := position
				if buffer[position] != rune('(') {
					goto l276
				}
				position++
				{
					position278, tokenIndex278 := position, tokenIndex
					if !_rules[rule_]() {
						goto l278
					}
					goto l279
				l278:
					position, tokenIndex = position278, tokenIndex278
				}
			l279:
				if !_rules[ruleAbbrSubgenus]() {
					goto l276
				}
				{
					position280, tokenIndex280 := position, tokenIndex
					if !_rules[rule_]() {
						goto l280
					}
					goto l281
				l280:
					position, tokenIndex = position280, tokenIndex280
				}
			l281:
				if buffer[position] != rune(')') {
					goto l276
				}
				position++
				{
					position282, tokenIndex282 := position, tokenIndex
					{
						position283, tokenIndex283 := position, tokenIndex
						if !_rules[rule_]() {
							goto l283
						}
						goto l284
					l283:
						position, tokenIndex = position283, tokenIndex283
					}
				l284:
					if !_rules[ruleNameUpperChar]() {
						goto l282
					}
					goto l276
				l282:
					position, tokenIndex = position282, tokenIndex282
				}
				add(ruleSubgenus2, position277)
			}
			return true
		l276:
			position, tokenIndex = position276, tokenIndex276
			return false
		},
		/* 38 Subgenus1 <- <('(' _? UninomialWord _? ')')> */
		func() bool {
			position285, tokenIndex285 := position, tokenIndex
			{
				position286 := position
				if buffer[position] != rune('(') {
					goto l285
				}
				position++
				{
					position287, tokenIndex287 := position, tokenIndex
					if !_rules[rule_]() {
						goto l287
					}
					goto l288
				l287:
					position, tokenIndex = position287, tokenIndex287
				}
			l288:
				if !_rules[ruleUninomialWord]() {
					goto l285
				}
				{
					position289, tokenIndex289 := position, tokenIndex
					if !_rules[rule_]() {
						goto l289
					}
					goto l290
				l289:
					position, tokenIndex = position289, tokenIndex289
				}
			l290:
				if buffer[position] != rune(')') {
					goto l285
				}
				position++
				add(ruleSubgenus1, position286)
			}
			return true
		l285:
			position, tokenIndex = position285, tokenIndex285
			return false
		},
		/* 39 UninomialCombo <- <(UninomialCombo1 / UninomialCombo2)> */
		func() bool {
			position291, tokenIndex291 := position, tokenIndex
			{
				position292 := position
				{
					position293, tokenIndex293 := position, tokenIndex
					if !_rules[ruleUninomialCombo1]() {
						goto l294
					}
					goto l293
				l294:
					position, tokenIndex = position293, tokenIndex293
					if !_rules[ruleUninomialCombo2]() {
						goto l291
					}
				}
			l293:
				add(ruleUninomialCombo, position292)
			}
			return true
		l291:
			position, tokenIndex = position291, tokenIndex291
			return false
		},
		/* 40 UninomialCombo1 <- <(UninomialWord _? Subgenus (_? Authorship)?)> */
		func() bool {
			position295, tokenIndex295 := position, tokenIndex
			{
				position296 := position
				if !_rules[ruleUninomialWord]() {
					goto l295
				}
				{
					position297, tokenIndex297 := position, tokenIndex
					if !_rules[rule_]() {
						goto l297
					}
					goto l298
				l297:
					position, tokenIndex = position297, tokenIndex297
				}
			l298:
				if !_rules[ruleSubgenus]() {
					goto l295
				}
				{
					position299, tokenIndex299 := position, tokenIndex
					{
						position301, tokenIndex301 := position, tokenIndex
						if !_rules[rule_]() {
							goto l301
						}
						goto l302
					l301:
						position, tokenIndex = position301, tokenIndex301
					}
				l302:
					if !_rules[ruleAuthorship]() {
						goto l299
					}
					goto l300
				l299:
					position, tokenIndex = position299, tokenIndex299
				}
			l300:
				add(ruleUninomialCombo1, position296)
			}
			return true
		l295:
			position, tokenIndex = position295, tokenIndex295
			return false
		},
		/* 41 UninomialCombo2 <- <(Uninomial _ RankUninomial _ Uninomial)> */
		func() bool {
			position303, tokenIndex303 := position, tokenIndex
			{
				position304 := position
				if !_rules[ruleUninomial]() {
					goto l303
				}
				if !_rules[rule_]() {
					goto l303
				}
				if !_rules[ruleRankUninomial]() {
					goto l303
				}
				if !_rules[rule_]() {
					goto l303
				}
				if !_rules[ruleUninomial]() {
					goto l303
				}
				add(ruleUninomialCombo2, position304)
			}
			return true
		l303:
			position, tokenIndex = position303, tokenIndex303
			return false
		},
		/* 42 RankUninomial <- <(RankUninomialPlain / RankUninomialNotho)> */
		func() bool {
			position305, tokenIndex305 := position, tokenIndex
			{
				position306 := position
				{
					position307, tokenIndex307 := position, tokenIndex
					if !_rules[ruleRankUninomialPlain]() {
						goto l308
					}
					goto l307
				l308:
					position, tokenIndex = position307, tokenIndex307
					if !_rules[ruleRankUninomialNotho]() {
						goto l305
					}
				}
			l307:
				add(ruleRankUninomial, position306)
			}
			return true
		l305:
			position, tokenIndex = position305, tokenIndex305
			return false
		},
		/* 43 RankUninomialPlain <- <((('s' 'e' 'c' 't') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('t' 'r' 'i' 'b') / ('s' 'u' 'b' 't' 'r' 'i' 'b') / ('s' 'u' 'b' 's' 'e' 'r') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('f' 'a' 'm') / ('s' 'u' 'b' 'f' 'a' 'm') / ('s' 'u' 'p' 'e' 'r' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position309, tokenIndex309 := position, tokenIndex
			{
				position310 := position
				{
					position311, tokenIndex311 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l312
					}
					position++
					if buffer[position] != rune('e') {
						goto l312
					}
					position++
					if buffer[position] != rune('c') {
						goto l312
					}
					position++
					if buffer[position] != rune('t') {
						goto l312
					}
					position++
					goto l311
				l312:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('s') {
						goto l313
					}
					position++
					if buffer[position] != rune('u') {
						goto l313
					}
					position++
					if buffer[position] != rune('b') {
						goto l313
					}
					position++
					if buffer[position] != rune('s') {
						goto l313
					}
					position++
					if buffer[position] != rune('e') {
						goto l313
					}
					position++
					if buffer[position] != rune('c') {
						goto l313
					}
					position++
					if buffer[position] != rune('t') {
						goto l313
					}
					position++
					goto l311
				l313:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('t') {
						goto l314
					}
					position++
					if buffer[position] != rune('r') {
						goto l314
					}
					position++
					if buffer[position] != rune('i') {
						goto l314
					}
					position++
					if buffer[position] != rune('b') {
						goto l314
					}
					position++
					goto l311
				l314:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('s') {
						goto l315
					}
					position++
					if buffer[position] != rune('u') {
						goto l315
					}
					position++
					if buffer[position] != rune('b') {
						goto l315
					}
					position++
					if buffer[position] != rune('t') {
						goto l315
					}
					position++
					if buffer[position] != rune('r') {
						goto l315
					}
					position++
					if buffer[position] != rune('i') {
						goto l315
					}
					position++
					if buffer[position] != rune('b') {
						goto l315
					}
					position++
					goto l311
				l315:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('s') {
						goto l316
					}
					position++
					if buffer[position] != rune('u') {
						goto l316
					}
					position++
					if buffer[position] != rune('b') {
						goto l316
					}
					position++
					if buffer[position] != rune('s') {
						goto l316
					}
					position++
					if buffer[position] != rune('e') {
						goto l316
					}
					position++
					if buffer[position] != rune('r') {
						goto l316
					}
					position++
					goto l311
				l316:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('s') {
						goto l317
					}
					position++
					if buffer[position] != rune('e') {
						goto l317
					}
					position++
					if buffer[position] != rune('r') {
						goto l317
					}
					position++
					goto l311
				l317:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('s') {
						goto l318
					}
					position++
					if buffer[position] != rune('u') {
						goto l318
					}
					position++
					if buffer[position] != rune('b') {
						goto l318
					}
					position++
					if buffer[position] != rune('g') {
						goto l318
					}
					position++
					if buffer[position] != rune('e') {
						goto l318
					}
					position++
					if buffer[position] != rune('n') {
						goto l318
					}
					position++
					goto l311
				l318:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('s') {
						goto l319
					}
					position++
					if buffer[position] != rune('u') {
						goto l319
					}
					position++
					if buffer[position] != rune('b') {
						goto l319
					}
					position++
					if buffer[position] != rune('g') {
						goto l319
					}
					position++
					goto l311
				l319:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('f') {
						goto l320
					}
					position++
					if buffer[position] != rune('a') {
						goto l320
					}
					position++
					if buffer[position] != rune('m') {
						goto l320
					}
					position++
					goto l311
				l320:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('s') {
						goto l321
					}
					position++
					if buffer[position] != rune('u') {
						goto l321
					}
					position++
					if buffer[position] != rune('b') {
						goto l321
					}
					position++
					if buffer[position] != rune('f') {
						goto l321
					}
					position++
					if buffer[position] != rune('a') {
						goto l321
					}
					position++
					if buffer[position] != rune('m') {
						goto l321
					}
					position++
					goto l311
				l321:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('s') {
						goto l309
					}
					position++
					if buffer[position] != rune('u') {
						goto l309
					}
					position++
					if buffer[position] != rune('p') {
						goto l309
					}
					position++
					if buffer[position] != rune('e') {
						goto l309
					}
					position++
					if buffer[position] != rune('r') {
						goto l309
					}
					position++
					if buffer[position] != rune('t') {
						goto l309
					}
					position++
					if buffer[position] != rune('r') {
						goto l309
					}
					position++
					if buffer[position] != rune('i') {
						goto l309
					}
					position++
					if buffer[position] != rune('b') {
						goto l309
					}
					position++
				}
			l311:
				{
					position322, tokenIndex322 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l323
					}
					position++
					goto l322
				l323:
					position, tokenIndex = position322, tokenIndex322
					{
						position324, tokenIndex324 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l309
						}
						position, tokenIndex = position324, tokenIndex324
					}
				}
			l322:
				add(ruleRankUninomialPlain, position310)
			}
			return true
		l309:
			position, tokenIndex = position309, tokenIndex309
			return false
		},
		/* 44 RankUninomialNotho <- <('n' 'o' 't' 'h' 'o' _? (('s' 'e' 'c' 't') / ('g' 'e' 'n') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'e' 'n') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('s' 'u' 'b' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position325, tokenIndex325 := position, tokenIndex
			{
				position326 := position
				if buffer[position] != rune('n') {
					goto l325
				}
				position++
				if buffer[position] != rune('o') {
					goto l325
				}
				position++
				if buffer[position] != rune('t') {
					goto l325
				}
				position++
				if buffer[position] != rune('h') {
					goto l325
				}
				position++
				if buffer[position] != rune('o') {
					goto l325
				}
				position++
				{
					position327, tokenIndex327 := position, tokenIndex
					if !_rules[rule_]() {
						goto l327
					}
					goto l328
				l327:
					position, tokenIndex = position327, tokenIndex327
				}
			l328:
				{
					position329, tokenIndex329 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l330
					}
					position++
					if buffer[position] != rune('e') {
						goto l330
					}
					position++
					if buffer[position] != rune('c') {
						goto l330
					}
					position++
					if buffer[position] != rune('t') {
						goto l330
					}
					position++
					goto l329
				l330:
					position, tokenIndex = position329, tokenIndex329
					if buffer[position] != rune('g') {
						goto l331
					}
					position++
					if buffer[position] != rune('e') {
						goto l331
					}
					position++
					if buffer[position] != rune('n') {
						goto l331
					}
					position++
					goto l329
				l331:
					position, tokenIndex = position329, tokenIndex329
					if buffer[position] != rune('s') {
						goto l332
					}
					position++
					if buffer[position] != rune('e') {
						goto l332
					}
					position++
					if buffer[position] != rune('r') {
						goto l332
					}
					position++
					goto l329
				l332:
					position, tokenIndex = position329, tokenIndex329
					if buffer[position] != rune('s') {
						goto l333
					}
					position++
					if buffer[position] != rune('u') {
						goto l333
					}
					position++
					if buffer[position] != rune('b') {
						goto l333
					}
					position++
					if buffer[position] != rune('g') {
						goto l333
					}
					position++
					if buffer[position] != rune('e') {
						goto l333
					}
					position++
					if buffer[position] != rune('e') {
						goto l333
					}
					position++
					if buffer[position] != rune('n') {
						goto l333
					}
					position++
					goto l329
				l333:
					position, tokenIndex = position329, tokenIndex329
					if buffer[position] != rune('s') {
						goto l334
					}
					position++
					if buffer[position] != rune('u') {
						goto l334
					}
					position++
					if buffer[position] != rune('b') {
						goto l334
					}
					position++
					if buffer[position] != rune('g') {
						goto l334
					}
					position++
					if buffer[position] != rune('e') {
						goto l334
					}
					position++
					if buffer[position] != rune('n') {
						goto l334
					}
					position++
					goto l329
				l334:
					position, tokenIndex = position329, tokenIndex329
					if buffer[position] != rune('s') {
						goto l335
					}
					position++
					if buffer[position] != rune('u') {
						goto l335
					}
					position++
					if buffer[position] != rune('b') {
						goto l335
					}
					position++
					if buffer[position] != rune('g') {
						goto l335
					}
					position++
					goto l329
				l335:
					position, tokenIndex = position329, tokenIndex329
					if buffer[position] != rune('s') {
						goto l336
					}
					position++
					if buffer[position] != rune('u') {
						goto l336
					}
					position++
					if buffer[position] != rune('b') {
						goto l336
					}
					position++
					if buffer[position] != rune('s') {
						goto l336
					}
					position++
					if buffer[position] != rune('e') {
						goto l336
					}
					position++
					if buffer[position] != rune('c') {
						goto l336
					}
					position++
					if buffer[position] != rune('t') {
						goto l336
					}
					position++
					goto l329
				l336:
					position, tokenIndex = position329, tokenIndex329
					if buffer[position] != rune('s') {
						goto l325
					}
					position++
					if buffer[position] != rune('u') {
						goto l325
					}
					position++
					if buffer[position] != rune('b') {
						goto l325
					}
					position++
					if buffer[position] != rune('t') {
						goto l325
					}
					position++
					if buffer[position] != rune('r') {
						goto l325
					}
					position++
					if buffer[position] != rune('i') {
						goto l325
					}
					position++
					if buffer[position] != rune('b') {
						goto l325
					}
					position++
				}
			l329:
				{
					position337, tokenIndex337 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l338
					}
					position++
					goto l337
				l338:
					position, tokenIndex = position337, tokenIndex337
					{
						position339, tokenIndex339 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l325
						}
						position, tokenIndex = position339, tokenIndex339
					}
				}
			l337:
				add(ruleRankUninomialNotho, position326)
			}
			return true
		l325:
			position, tokenIndex = position325, tokenIndex325
			return false
		},
		/* 45 Uninomial <- <(UninomialWord (_ Authorship !(_ LowerCharExtended LowerCharExtended LowerCharExtended))?)> */
		func() bool {
			position340, tokenIndex340 := position, tokenIndex
			{
				position341 := position
				if !_rules[ruleUninomialWord]() {
					goto l340
				}
				{
					position342, tokenIndex342 := position, tokenIndex
					if !_rules[rule_]() {
						goto l342
					}
					if !_rules[ruleAuthorship]() {
						goto l342
					}
					{
						position344, tokenIndex344 := position, tokenIndex
						if !_rules[rule_]() {
							goto l344
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l344
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l344
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l344
						}
						goto l342
					l344:
						position, tokenIndex = position344, tokenIndex344
					}
					goto l343
				l342:
					position, tokenIndex = position342, tokenIndex342
				}
			l343:
				add(ruleUninomial, position341)
			}
			return true
		l340:
			position, tokenIndex = position340, tokenIndex340
			return false
		},
		/* 46 UninomialWord <- <(CapWord / TwoLetterGenus)> */
		func() bool {
			position345, tokenIndex345 := position, tokenIndex
			{
				position346 := position
				{
					position347, tokenIndex347 := position, tokenIndex
					if !_rules[ruleCapWord]() {
						goto l348
					}
					goto l347
				l348:
					position, tokenIndex = position347, tokenIndex347
					if !_rules[ruleTwoLetterGenus]() {
						goto l345
					}
				}
			l347:
				add(ruleUninomialWord, position346)
			}
			return true
		l345:
			position, tokenIndex = position345, tokenIndex345
			return false
		},
		/* 47 AbbrSubgenus <- <(UpperChar LowerChar* '.')> */
		func() bool {
			position349, tokenIndex349 := position, tokenIndex
			{
				position350 := position
				if !_rules[ruleUpperChar]() {
					goto l349
				}
			l351:
				{
					position352, tokenIndex352 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l352
					}
					goto l351
				l352:
					position, tokenIndex = position352, tokenIndex352
				}
				if buffer[position] != rune('.') {
					goto l349
				}
				position++
				add(ruleAbbrSubgenus, position350)
			}
			return true
		l349:
			position, tokenIndex = position349, tokenIndex349
			return false
		},
		/* 48 AbbrGenus <- <(UpperChar LowerChar? '.')> */
		func() bool {
			position353, tokenIndex353 := position, tokenIndex
			{
				position354 := position
				if !_rules[ruleUpperChar]() {
					goto l353
				}
				{
					position355, tokenIndex355 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l355
					}
					goto l356
				l355:
					position, tokenIndex = position355, tokenIndex355
				}
			l356:
				if buffer[position] != rune('.') {
					goto l353
				}
				position++
				add(ruleAbbrGenus, position354)
			}
			return true
		l353:
			position, tokenIndex = position353, tokenIndex353
			return false
		},
		/* 49 CapWord <- <(CapWordWithDash / CapWord1)> */
		func() bool {
			position357, tokenIndex357 := position, tokenIndex
			{
				position358 := position
				{
					position359, tokenIndex359 := position, tokenIndex
					if !_rules[ruleCapWordWithDash]() {
						goto l360
					}
					goto l359
				l360:
					position, tokenIndex = position359, tokenIndex359
					if !_rules[ruleCapWord1]() {
						goto l357
					}
				}
			l359:
				add(ruleCapWord, position358)
			}
			return true
		l357:
			position, tokenIndex = position357, tokenIndex357
			return false
		},
		/* 50 CapWord1 <- <(NameUpperChar NameLowerChar NameLowerChar+ '?'?)> */
		func() bool {
			position361, tokenIndex361 := position, tokenIndex
			{
				position362 := position
				if !_rules[ruleNameUpperChar]() {
					goto l361
				}
				if !_rules[ruleNameLowerChar]() {
					goto l361
				}
				if !_rules[ruleNameLowerChar]() {
					goto l361
				}
			l363:
				{
					position364, tokenIndex364 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l364
					}
					goto l363
				l364:
					position, tokenIndex = position364, tokenIndex364
				}
				{
					position365, tokenIndex365 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l365
					}
					position++
					goto l366
				l365:
					position, tokenIndex = position365, tokenIndex365
				}
			l366:
				add(ruleCapWord1, position362)
			}
			return true
		l361:
			position, tokenIndex = position361, tokenIndex361
			return false
		},
		/* 51 CapWordWithDash <- <(CapWord1 Dash (UpperAfterDash / LowerAfterDash))> */
		func() bool {
			position367, tokenIndex367 := position, tokenIndex
			{
				position368 := position
				if !_rules[ruleCapWord1]() {
					goto l367
				}
				if !_rules[ruleDash]() {
					goto l367
				}
				{
					position369, tokenIndex369 := position, tokenIndex
					if !_rules[ruleUpperAfterDash]() {
						goto l370
					}
					goto l369
				l370:
					position, tokenIndex = position369, tokenIndex369
					if !_rules[ruleLowerAfterDash]() {
						goto l367
					}
				}
			l369:
				add(ruleCapWordWithDash, position368)
			}
			return true
		l367:
			position, tokenIndex = position367, tokenIndex367
			return false
		},
		/* 52 UpperAfterDash <- <CapWord1> */
		func() bool {
			position371, tokenIndex371 := position, tokenIndex
			{
				position372 := position
				if !_rules[ruleCapWord1]() {
					goto l371
				}
				add(ruleUpperAfterDash, position372)
			}
			return true
		l371:
			position, tokenIndex = position371, tokenIndex371
			return false
		},
		/* 53 LowerAfterDash <- <Word1> */
		func() bool {
			position373, tokenIndex373 := position, tokenIndex
			{
				position374 := position
				if !_rules[ruleWord1]() {
					goto l373
				}
				add(ruleLowerAfterDash, position374)
			}
			return true
		l373:
			position, tokenIndex = position373, tokenIndex373
			return false
		},
		/* 54 TwoLetterGenus <- <(('C' 'a') / ('D' 'o') / ('E' 'a') / ('G' 'e') / ('I' 'a') / ('I' 'o') / ('I' 'x') / ('L' 'o') / ('O' 'a') / ('O' 'o') / ('N' 'u') / ('R' 'a') / ('T' 'y') / ('U' 'a') / ('A' 'a') / ('J' 'a') / ('Z' 'u') / ('L' 'a') / ('Q' 'u') / ('A' 's') / ('B' 'a'))> */
		func() bool {
			position375, tokenIndex375 := position, tokenIndex
			{
				position376 := position
				{
					position377, tokenIndex377 := position, tokenIndex
					if buffer[position] != rune('C') {
						goto l378
					}
					position++
					if buffer[position] != rune('a') {
						goto l378
					}
					position++
					goto l377
				l378:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('D') {
						goto l379
					}
					position++
					if buffer[position] != rune('o') {
						goto l379
					}
					position++
					goto l377
				l379:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('E') {
						goto l380
					}
					position++
					if buffer[position] != rune('a') {
						goto l380
					}
					position++
					goto l377
				l380:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('G') {
						goto l381
					}
					position++
					if buffer[position] != rune('e') {
						goto l381
					}
					position++
					goto l377
				l381:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('I') {
						goto l382
					}
					position++
					if buffer[position] != rune('a') {
						goto l382
					}
					position++
					goto l377
				l382:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('I') {
						goto l383
					}
					position++
					if buffer[position] != rune('o') {
						goto l383
					}
					position++
					goto l377
				l383:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('I') {
						goto l384
					}
					position++
					if buffer[position] != rune('x') {
						goto l384
					}
					position++
					goto l377
				l384:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('L') {
						goto l385
					}
					position++
					if buffer[position] != rune('o') {
						goto l385
					}
					position++
					goto l377
				l385:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('O') {
						goto l386
					}
					position++
					if buffer[position] != rune('a') {
						goto l386
					}
					position++
					goto l377
				l386:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('O') {
						goto l387
					}
					position++
					if buffer[position] != rune('o') {
						goto l387
					}
					position++
					goto l377
				l387:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('N') {
						goto l388
					}
					position++
					if buffer[position] != rune('u') {
						goto l388
					}
					position++
					goto l377
				l388:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('R') {
						goto l389
					}
					position++
					if buffer[position] != rune('a') {
						goto l389
					}
					position++
					goto l377
				l389:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('T') {
						goto l390
					}
					position++
					if buffer[position] != rune('y') {
						goto l390
					}
					position++
					goto l377
				l390:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('U') {
						goto l391
					}
					position++
					if buffer[position] != rune('a') {
						goto l391
					}
					position++
					goto l377
				l391:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('A') {
						goto l392
					}
					position++
					if buffer[position] != rune('a') {
						goto l392
					}
					position++
					goto l377
				l392:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('J') {
						goto l393
					}
					position++
					if buffer[position] != rune('a') {
						goto l393
					}
					position++
					goto l377
				l393:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('Z') {
						goto l394
					}
					position++
					if buffer[position] != rune('u') {
						goto l394
					}
					position++
					goto l377
				l394:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('L') {
						goto l395
					}
					position++
					if buffer[position] != rune('a') {
						goto l395
					}
					position++
					goto l377
				l395:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('Q') {
						goto l396
					}
					position++
					if buffer[position] != rune('u') {
						goto l396
					}
					position++
					goto l377
				l396:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('A') {
						goto l397
					}
					position++
					if buffer[position] != rune('s') {
						goto l397
					}
					position++
					goto l377
				l397:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('B') {
						goto l375
					}
					position++
					if buffer[position] != rune('a') {
						goto l375
					}
					position++
				}
			l377:
				add(ruleTwoLetterGenus, position376)
			}
			return true
		l375:
			position, tokenIndex = position375, tokenIndex375
			return false
		},
		/* 55 Word <- <(!((('e' 'x') / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd') / ('p' 'r' 'o') / ('c' 'v') / ('c' 'u' 'l' 't' 'i' 'v' 'a' 'r') / AuthorPrefix / RankUninomial / Approximation / Word4) SpaceCharEOI) (WordApostr / WordStartsWithDigit / MultiDashedWord / Word2 / Word1) &(SpaceCharEOI / '('))> */
		func() bool {
			position398, tokenIndex398 := position, tokenIndex
			{
				position399 := position
				{
					position400, tokenIndex400 := position, tokenIndex
					{
						position401, tokenIndex401 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l402
						}
						position++
						if buffer[position] != rune('x') {
							goto l402
						}
						position++
						goto l401
					l402:
						position, tokenIndex = position401, tokenIndex401
						if buffer[position] != rune('e') {
							goto l403
						}
						position++
						if buffer[position] != rune('t') {
							goto l403
						}
						position++
						goto l401
					l403:
						position, tokenIndex = position401, tokenIndex401
						if buffer[position] != rune('a') {
							goto l404
						}
						position++
						if buffer[position] != rune('n') {
							goto l404
						}
						position++
						if buffer[position] != rune('d') {
							goto l404
						}
						position++
						goto l401
					l404:
						position, tokenIndex = position401, tokenIndex401
						if buffer[position] != rune('a') {
							goto l405
						}
						position++
						if buffer[position] != rune('p') {
							goto l405
						}
						position++
						if buffer[position] != rune('u') {
							goto l405
						}
						position++
						if buffer[position] != rune('d') {
							goto l405
						}
						position++
						goto l401
					l405:
						position, tokenIndex = position401, tokenIndex401
						if buffer[position] != rune('p') {
							goto l406
						}
						position++
						if buffer[position] != rune('r') {
							goto l406
						}
						position++
						if buffer[position] != rune('o') {
							goto l406
						}
						position++
						goto l401
					l406:
						position, tokenIndex = position401, tokenIndex401
						if buffer[position] != rune('c') {
							goto l407
						}
						position++
						if buffer[position] != rune('v') {
							goto l407
						}
						position++
						goto l401
					l407:
						position, tokenIndex = position401, tokenIndex401
						if buffer[position] != rune('c') {
							goto l408
						}
						position++
						if buffer[position] != rune('u') {
							goto l408
						}
						position++
						if buffer[position] != rune('l') {
							goto l408
						}
						position++
						if buffer[position] != rune('t') {
							goto l408
						}
						position++
						if buffer[position] != rune('i') {
							goto l408
						}
						position++
						if buffer[position] != rune('v') {
							goto l408
						}
						position++
						if buffer[position] != rune('a') {
							goto l408
						}
						position++
						if buffer[position] != rune('r') {
							goto l408
						}
						position++
						goto l401
					l408:
						position, tokenIndex = position401, tokenIndex401
						if !_rules[ruleAuthorPrefix]() {
							goto l409
						}
						goto l401
					l409:
						position, tokenIndex = position401, tokenIndex401
						if !_rules[ruleRankUninomial]() {
							goto l410
						}
						goto l401
					l410:
						position, tokenIndex = position401, tokenIndex401
						if !_rules[ruleApproximation]() {
							goto l411
						}
						goto l401
					l411:
						position, tokenIndex = position401, tokenIndex401
						if !_rules[ruleWord4]() {
							goto l400
						}
					}
				l401:
					if !_rules[ruleSpaceCharEOI]() {
						goto l400
					}
					goto l398
				l400:
					position, tokenIndex = position400, tokenIndex400
				}
				{
					position412, tokenIndex412 := position, tokenIndex
					if !_rules[ruleWordApostr]() {
						goto l413
					}
					goto l412
				l413:
					position, tokenIndex = position412, tokenIndex412
					if !_rules[ruleWordStartsWithDigit]() {
						goto l414
					}
					goto l412
				l414:
					position, tokenIndex = position412, tokenIndex412
					if !_rules[ruleMultiDashedWord]() {
						goto l415
					}
					goto l412
				l415:
					position, tokenIndex = position412, tokenIndex412
					if !_rules[ruleWord2]() {
						goto l416
					}
					goto l412
				l416:
					position, tokenIndex = position412, tokenIndex412
					if !_rules[ruleWord1]() {
						goto l398
					}
				}
			l412:
				{
					position417, tokenIndex417 := position, tokenIndex
					{
						position418, tokenIndex418 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l419
						}
						goto l418
					l419:
						position, tokenIndex = position418, tokenIndex418
						if buffer[position] != rune('(') {
							goto l398
						}
						position++
					}
				l418:
					position, tokenIndex = position417, tokenIndex417
				}
				add(ruleWord, position399)
			}
			return true
		l398:
			position, tokenIndex = position398, tokenIndex398
			return false
		},
		/* 56 Word1 <- <((LowerASCII Dash)? NameLowerChar NameLowerChar+)> */
		func() bool {
			position420, tokenIndex420 := position, tokenIndex
			{
				position421 := position
				{
					position422, tokenIndex422 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l422
					}
					if !_rules[ruleDash]() {
						goto l422
					}
					goto l423
				l422:
					position, tokenIndex = position422, tokenIndex422
				}
			l423:
				if !_rules[ruleNameLowerChar]() {
					goto l420
				}
				if !_rules[ruleNameLowerChar]() {
					goto l420
				}
			l424:
				{
					position425, tokenIndex425 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l425
					}
					goto l424
				l425:
					position, tokenIndex = position425, tokenIndex425
				}
				add(ruleWord1, position421)
			}
			return true
		l420:
			position, tokenIndex = position420, tokenIndex420
			return false
		},
		/* 57 WordStartsWithDigit <- <(('1' / '2' / '3' / '4' / '5' / '6' / '7' / '8' / '9') Nums? ('.' / Dash)? NameLowerChar NameLowerChar NameLowerChar NameLowerChar+)> */
		func() bool {
			position426, tokenIndex426 := position, tokenIndex
			{
				position427 := position
				{
					position428, tokenIndex428 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l429
					}
					position++
					goto l428
				l429:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('2') {
						goto l430
					}
					position++
					goto l428
				l430:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('3') {
						goto l431
					}
					position++
					goto l428
				l431:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('4') {
						goto l432
					}
					position++
					goto l428
				l432:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('5') {
						goto l433
					}
					position++
					goto l428
				l433:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('6') {
						goto l434
					}
					position++
					goto l428
				l434:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('7') {
						goto l435
					}
					position++
					goto l428
				l435:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('8') {
						goto l436
					}
					position++
					goto l428
				l436:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('9') {
						goto l426
					}
					position++
				}
			l428:
				{
					position437, tokenIndex437 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l437
					}
					goto l438
				l437:
					position, tokenIndex = position437, tokenIndex437
				}
			l438:
				{
					position439, tokenIndex439 := position, tokenIndex
					{
						position441, tokenIndex441 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l442
						}
						position++
						goto l441
					l442:
						position, tokenIndex = position441, tokenIndex441
						if !_rules[ruleDash]() {
							goto l439
						}
					}
				l441:
					goto l440
				l439:
					position, tokenIndex = position439, tokenIndex439
				}
			l440:
				if !_rules[ruleNameLowerChar]() {
					goto l426
				}
				if !_rules[ruleNameLowerChar]() {
					goto l426
				}
				if !_rules[ruleNameLowerChar]() {
					goto l426
				}
				if !_rules[ruleNameLowerChar]() {
					goto l426
				}
			l443:
				{
					position444, tokenIndex444 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l444
					}
					goto l443
				l444:
					position, tokenIndex = position444, tokenIndex444
				}
				add(ruleWordStartsWithDigit, position427)
			}
			return true
		l426:
			position, tokenIndex = position426, tokenIndex426
			return false
		},
		/* 58 Word2 <- <(NameLowerChar+ Dash? NameLowerChar+)> */
		func() bool {
			position445, tokenIndex445 := position, tokenIndex
			{
				position446 := position
				if !_rules[ruleNameLowerChar]() {
					goto l445
				}
			l447:
				{
					position448, tokenIndex448 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l448
					}
					goto l447
				l448:
					position, tokenIndex = position448, tokenIndex448
				}
				{
					position449, tokenIndex449 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l449
					}
					goto l450
				l449:
					position, tokenIndex = position449, tokenIndex449
				}
			l450:
				if !_rules[ruleNameLowerChar]() {
					goto l445
				}
			l451:
				{
					position452, tokenIndex452 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l452
					}
					goto l451
				l452:
					position, tokenIndex = position452, tokenIndex452
				}
				add(ruleWord2, position446)
			}
			return true
		l445:
			position, tokenIndex = position445, tokenIndex445
			return false
		},
		/* 59 WordApostr <- <(NameLowerChar NameLowerChar* Apostrophe Word1)> */
		func() bool {
			position453, tokenIndex453 := position, tokenIndex
			{
				position454 := position
				if !_rules[ruleNameLowerChar]() {
					goto l453
				}
			l455:
				{
					position456, tokenIndex456 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l456
					}
					goto l455
				l456:
					position, tokenIndex = position456, tokenIndex456
				}
				if !_rules[ruleApostrophe]() {
					goto l453
				}
				if !_rules[ruleWord1]() {
					goto l453
				}
				add(ruleWordApostr, position454)
			}
			return true
		l453:
			position, tokenIndex = position453, tokenIndex453
			return false
		},
		/* 60 Word4 <- <(NameLowerChar+ '.' NameLowerChar)> */
		func() bool {
			position457, tokenIndex457 := position, tokenIndex
			{
				position458 := position
				if !_rules[ruleNameLowerChar]() {
					goto l457
				}
			l459:
				{
					position460, tokenIndex460 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l460
					}
					goto l459
				l460:
					position, tokenIndex = position460, tokenIndex460
				}
				if buffer[position] != rune('.') {
					goto l457
				}
				position++
				if !_rules[ruleNameLowerChar]() {
					goto l457
				}
				add(ruleWord4, position458)
			}
			return true
		l457:
			position, tokenIndex = position457, tokenIndex457
			return false
		},
		/* 61 MultiDashedWord <- <(NameLowerChar+ Dash NameLowerChar+ Dash NameLowerChar+ (Dash NameLowerChar+)?)> */
		func() bool {
			position461, tokenIndex461 := position, tokenIndex
			{
				position462 := position
				if !_rules[ruleNameLowerChar]() {
					goto l461
				}
			l463:
				{
					position464, tokenIndex464 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l464
					}
					goto l463
				l464:
					position, tokenIndex = position464, tokenIndex464
				}
				if !_rules[ruleDash]() {
					goto l461
				}
				if !_rules[ruleNameLowerChar]() {
					goto l461
				}
			l465:
				{
					position466, tokenIndex466 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l466
					}
					goto l465
				l466:
					position, tokenIndex = position466, tokenIndex466
				}
				if !_rules[ruleDash]() {
					goto l461
				}
				if !_rules[ruleNameLowerChar]() {
					goto l461
				}
			l467:
				{
					position468, tokenIndex468 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l468
					}
					goto l467
				l468:
					position, tokenIndex = position468, tokenIndex468
				}
				{
					position469, tokenIndex469 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l469
					}
					if !_rules[ruleNameLowerChar]() {
						goto l469
					}
				l471:
					{
						position472, tokenIndex472 := position, tokenIndex
						if !_rules[ruleNameLowerChar]() {
							goto l472
						}
						goto l471
					l472:
						position, tokenIndex = position472, tokenIndex472
					}
					goto l470
				l469:
					position, tokenIndex = position469, tokenIndex469
				}
			l470:
				add(ruleMultiDashedWord, position462)
			}
			return true
		l461:
			position, tokenIndex = position461, tokenIndex461
			return false
		},
		/* 62 HybridChar <- <('×' / (('x' / 'X') &_) / (('x' / 'X') &UninomialWord) / (('x' / 'X') &END))> */
		func() bool {
			position473, tokenIndex473 := position, tokenIndex
			{
				position474 := position
				{
					position475, tokenIndex475 := position, tokenIndex
					if buffer[position] != rune('×') {
						goto l476
					}
					position++
					goto l475
				l476:
					position, tokenIndex = position475, tokenIndex475
					{
						position478, tokenIndex478 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l479
						}
						position++
						goto l478
					l479:
						position, tokenIndex = position478, tokenIndex478
						if buffer[position] != rune('X') {
							goto l477
						}
						position++
					}
				l478:
					{
						position480, tokenIndex480 := position, tokenIndex
						if !_rules[rule_]() {
							goto l477
						}
						position, tokenIndex = position480, tokenIndex480
					}
					goto l475
				l477:
					position, tokenIndex = position475, tokenIndex475
					{
						position482, tokenIndex482 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l483
						}
						position++
						goto l482
					l483:
						position, tokenIndex = position482, tokenIndex482
						if buffer[position] != rune('X') {
							goto l481
						}
						position++
					}
				l482:
					{
						position484, tokenIndex484 := position, tokenIndex
						if !_rules[ruleUninomialWord]() {
							goto l481
						}
						position, tokenIndex = position484, tokenIndex484
					}
					goto l475
				l481:
					position, tokenIndex = position475, tokenIndex475
					{
						position485, tokenIndex485 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l486
						}
						position++
						goto l485
					l486:
						position, tokenIndex = position485, tokenIndex485
						if buffer[position] != rune('X') {
							goto l473
						}
						position++
					}
				l485:
					{
						position487, tokenIndex487 := position, tokenIndex
						if !_rules[ruleEND]() {
							goto l473
						}
						position, tokenIndex = position487, tokenIndex487
					}
				}
			l475:
				add(ruleHybridChar, position474)
			}
			return true
		l473:
			position, tokenIndex = position473, tokenIndex473
			return false
		},
		/* 63 ApproxNameIgnored <- <.*> */
		func() bool {
			{
				position489 := position
			l490:
				{
					position491, tokenIndex491 := position, tokenIndex
					if !matchDot() {
						goto l491
					}
					goto l490
				l491:
					position, tokenIndex = position491, tokenIndex491
				}
				add(ruleApproxNameIgnored, position489)
			}
			return true
		},
		/* 64 Approximation <- <(('s' 'p' '.' _? ('n' 'r' '.')) / ('s' 'p' '.' _? ('a' 'f' 'f' '.')) / ('m' 'o' 'n' 's' 't' '.') / '?' / ((('s' 'p' 'p') / ('n' 'r') / ('s' 'p') / ('a' 'f' 'f') / ('s' 'p' 'e' 'c' 'i' 'e' 's')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position492, tokenIndex492 := position, tokenIndex
			{
				position493 := position
				{
					position494, tokenIndex494 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l495
					}
					position++
					if buffer[position] != rune('p') {
						goto l495
					}
					position++
					if buffer[position] != rune('.') {
						goto l495
					}
					position++
					{
						position496, tokenIndex496 := position, tokenIndex
						if !_rules[rule_]() {
							goto l496
						}
						goto l497
					l496:
						position, tokenIndex = position496, tokenIndex496
					}
				l497:
					if buffer[position] != rune('n') {
						goto l495
					}
					position++
					if buffer[position] != rune('r') {
						goto l495
					}
					position++
					if buffer[position] != rune('.') {
						goto l495
					}
					position++
					goto l494
				l495:
					position, tokenIndex = position494, tokenIndex494
					if buffer[position] != rune('s') {
						goto l498
					}
					position++
					if buffer[position] != rune('p') {
						goto l498
					}
					position++
					if buffer[position] != rune('.') {
						goto l498
					}
					position++
					{
						position499, tokenIndex499 := position, tokenIndex
						if !_rules[rule_]() {
							goto l499
						}
						goto l500
					l499:
						position, tokenIndex = position499, tokenIndex499
					}
				l500:
					if buffer[position] != rune('a') {
						goto l498
					}
					position++
					if buffer[position] != rune('f') {
						goto l498
					}
					position++
					if buffer[position] != rune('f') {
						goto l498
					}
					position++
					if buffer[position] != rune('.') {
						goto l498
					}
					position++
					goto l494
				l498:
					position, tokenIndex = position494, tokenIndex494
					if buffer[position] != rune('m') {
						goto l501
					}
					position++
					if buffer[position] != rune('o') {
						goto l501
					}
					position++
					if buffer[position] != rune('n') {
						goto l501
					}
					position++
					if buffer[position] != rune('s') {
						goto l501
					}
					position++
					if buffer[position] != rune('t') {
						goto l501
					}
					position++
					if buffer[position] != rune('.') {
						goto l501
					}
					position++
					goto l494
				l501:
					position, tokenIndex = position494, tokenIndex494
					if buffer[position] != rune('?') {
						goto l502
					}
					position++
					goto l494
				l502:
					position, tokenIndex = position494, tokenIndex494
					{
						position503, tokenIndex503 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l504
						}
						position++
						if buffer[position] != rune('p') {
							goto l504
						}
						position++
						if buffer[position] != rune('p') {
							goto l504
						}
						position++
						goto l503
					l504:
						position, tokenIndex = position503, tokenIndex503
						if buffer[position] != rune('n') {
							goto l505
						}
						position++
						if buffer[position] != rune('r') {
							goto l505
						}
						position++
						goto l503
					l505:
						position, tokenIndex = position503, tokenIndex503
						if buffer[position] != rune('s') {
							goto l506
						}
						position++
						if buffer[position] != rune('p') {
							goto l506
						}
						position++
						goto l503
					l506:
						position, tokenIndex = position503, tokenIndex503
						if buffer[position] != rune('a') {
							goto l507
						}
						position++
						if buffer[position] != rune('f') {
							goto l507
						}
						position++
						if buffer[position] != rune('f') {
							goto l507
						}
						position++
						goto l503
					l507:
						position, tokenIndex = position503, tokenIndex503
						if buffer[position] != rune('s') {
							goto l492
						}
						position++
						if buffer[position] != rune('p') {
							goto l492
						}
						position++
						if buffer[position] != rune('e') {
							goto l492
						}
						position++
						if buffer[position] != rune('c') {
							goto l492
						}
						position++
						if buffer[position] != rune('i') {
							goto l492
						}
						position++
						if buffer[position] != rune('e') {
							goto l492
						}
						position++
						if buffer[position] != rune('s') {
							goto l492
						}
						position++
					}
				l503:
					{
						position508, tokenIndex508 := position, tokenIndex
						{
							position510, tokenIndex510 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l509
							}
							position, tokenIndex = position510, tokenIndex510
						}
						goto l508
					l509:
						position, tokenIndex = position508, tokenIndex508
						if buffer[position] != rune('.') {
							goto l492
						}
						position++
					}
				l508:
				}
			l494:
				add(ruleApproximation, position493)
			}
			return true
		l492:
			position, tokenIndex = position492, tokenIndex492
			return false
		},
		/* 65 Authorship <- <((AuthorshipCombo / OriginalAuthorship) &(SpaceCharEOI / ';' / ','))> */
		func() bool {
			position511, tokenIndex511 := position, tokenIndex
			{
				position512 := position
				{
					position513, tokenIndex513 := position, tokenIndex
					if !_rules[ruleAuthorshipCombo]() {
						goto l514
					}
					goto l513
				l514:
					position, tokenIndex = position513, tokenIndex513
					if !_rules[ruleOriginalAuthorship]() {
						goto l511
					}
				}
			l513:
				{
					position515, tokenIndex515 := position, tokenIndex
					{
						position516, tokenIndex516 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l517
						}
						goto l516
					l517:
						position, tokenIndex = position516, tokenIndex516
						if buffer[position] != rune(';') {
							goto l518
						}
						position++
						goto l516
					l518:
						position, tokenIndex = position516, tokenIndex516
						if buffer[position] != rune(',') {
							goto l511
						}
						position++
					}
				l516:
					position, tokenIndex = position515, tokenIndex515
				}
				add(ruleAuthorship, position512)
			}
			return true
		l511:
			position, tokenIndex = position511, tokenIndex511
			return false
		},
		/* 66 AuthorshipCombo <- <(OriginalAuthorshipComb (_? CombinationAuthorship)?)> */
		func() bool {
			position519, tokenIndex519 := position, tokenIndex
			{
				position520 := position
				if !_rules[ruleOriginalAuthorshipComb]() {
					goto l519
				}
				{
					position521, tokenIndex521 := position, tokenIndex
					{
						position523, tokenIndex523 := position, tokenIndex
						if !_rules[rule_]() {
							goto l523
						}
						goto l524
					l523:
						position, tokenIndex = position523, tokenIndex523
					}
				l524:
					if !_rules[ruleCombinationAuthorship]() {
						goto l521
					}
					goto l522
				l521:
					position, tokenIndex = position521, tokenIndex521
				}
			l522:
				add(ruleAuthorshipCombo, position520)
			}
			return true
		l519:
			position, tokenIndex = position519, tokenIndex519
			return false
		},
		/* 67 OriginalAuthorship <- <AuthorsGroup> */
		func() bool {
			position525, tokenIndex525 := position, tokenIndex
			{
				position526 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l525
				}
				add(ruleOriginalAuthorship, position526)
			}
			return true
		l525:
			position, tokenIndex = position525, tokenIndex525
			return false
		},
		/* 68 OriginalAuthorshipComb <- <(BasionymAuthorshipYearMisformed / BasionymAuthorship / BasionymAuthorshipMissingParens)> */
		func() bool {
			position527, tokenIndex527 := position, tokenIndex
			{
				position528 := position
				{
					position529, tokenIndex529 := position, tokenIndex
					if !_rules[ruleBasionymAuthorshipYearMisformed]() {
						goto l530
					}
					goto l529
				l530:
					position, tokenIndex = position529, tokenIndex529
					if !_rules[ruleBasionymAuthorship]() {
						goto l531
					}
					goto l529
				l531:
					position, tokenIndex = position529, tokenIndex529
					if !_rules[ruleBasionymAuthorshipMissingParens]() {
						goto l527
					}
				}
			l529:
				add(ruleOriginalAuthorshipComb, position528)
			}
			return true
		l527:
			position, tokenIndex = position527, tokenIndex527
			return false
		},
		/* 69 CombinationAuthorship <- <AuthorsGroup> */
		func() bool {
			position532, tokenIndex532 := position, tokenIndex
			{
				position533 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l532
				}
				add(ruleCombinationAuthorship, position533)
			}
			return true
		l532:
			position, tokenIndex = position532, tokenIndex532
			return false
		},
		/* 70 BasionymAuthorshipMissingParens <- <(MissingParensStart / MissingParensEnd)> */
		func() bool {
			position534, tokenIndex534 := position, tokenIndex
			{
				position535 := position
				{
					position536, tokenIndex536 := position, tokenIndex
					if !_rules[ruleMissingParensStart]() {
						goto l537
					}
					goto l536
				l537:
					position, tokenIndex = position536, tokenIndex536
					if !_rules[ruleMissingParensEnd]() {
						goto l534
					}
				}
			l536:
				add(ruleBasionymAuthorshipMissingParens, position535)
			}
			return true
		l534:
			position, tokenIndex = position534, tokenIndex534
			return false
		},
		/* 71 MissingParensStart <- <('(' _? AuthorsGroup)> */
		func() bool {
			position538, tokenIndex538 := position, tokenIndex
			{
				position539 := position
				if buffer[position] != rune('(') {
					goto l538
				}
				position++
				{
					position540, tokenIndex540 := position, tokenIndex
					if !_rules[rule_]() {
						goto l540
					}
					goto l541
				l540:
					position, tokenIndex = position540, tokenIndex540
				}
			l541:
				if !_rules[ruleAuthorsGroup]() {
					goto l538
				}
				add(ruleMissingParensStart, position539)
			}
			return true
		l538:
			position, tokenIndex = position538, tokenIndex538
			return false
		},
		/* 72 MissingParensEnd <- <(AuthorsGroup _? ')')> */
		func() bool {
			position542, tokenIndex542 := position, tokenIndex
			{
				position543 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l542
				}
				{
					position544, tokenIndex544 := position, tokenIndex
					if !_rules[rule_]() {
						goto l544
					}
					goto l545
				l544:
					position, tokenIndex = position544, tokenIndex544
				}
			l545:
				if buffer[position] != rune(')') {
					goto l542
				}
				position++
				add(ruleMissingParensEnd, position543)
			}
			return true
		l542:
			position, tokenIndex = position542, tokenIndex542
			return false
		},
		/* 73 BasionymAuthorshipYearMisformed <- <('(' _? AuthorsGroup _? ')' (_? ',')? _? Year)> */
		func() bool {
			position546, tokenIndex546 := position, tokenIndex
			{
				position547 := position
				if buffer[position] != rune('(') {
					goto l546
				}
				position++
				{
					position548, tokenIndex548 := position, tokenIndex
					if !_rules[rule_]() {
						goto l548
					}
					goto l549
				l548:
					position, tokenIndex = position548, tokenIndex548
				}
			l549:
				if !_rules[ruleAuthorsGroup]() {
					goto l546
				}
				{
					position550, tokenIndex550 := position, tokenIndex
					if !_rules[rule_]() {
						goto l550
					}
					goto l551
				l550:
					position, tokenIndex = position550, tokenIndex550
				}
			l551:
				if buffer[position] != rune(')') {
					goto l546
				}
				position++
				{
					position552, tokenIndex552 := position, tokenIndex
					{
						position554, tokenIndex554 := position, tokenIndex
						if !_rules[rule_]() {
							goto l554
						}
						goto l555
					l554:
						position, tokenIndex = position554, tokenIndex554
					}
				l555:
					if buffer[position] != rune(',') {
						goto l552
					}
					position++
					goto l553
				l552:
					position, tokenIndex = position552, tokenIndex552
				}
			l553:
				{
					position556, tokenIndex556 := position, tokenIndex
					if !_rules[rule_]() {
						goto l556
					}
					goto l557
				l556:
					position, tokenIndex = position556, tokenIndex556
				}
			l557:
				if !_rules[ruleYear]() {
					goto l546
				}
				add(ruleBasionymAuthorshipYearMisformed, position547)
			}
			return true
		l546:
			position, tokenIndex = position546, tokenIndex546
			return false
		},
		/* 74 BasionymAuthorship <- <(BasionymAuthorship1 / BasionymAuthorship2Parens)> */
		func() bool {
			position558, tokenIndex558 := position, tokenIndex
			{
				position559 := position
				{
					position560, tokenIndex560 := position, tokenIndex
					if !_rules[ruleBasionymAuthorship1]() {
						goto l561
					}
					goto l560
				l561:
					position, tokenIndex = position560, tokenIndex560
					if !_rules[ruleBasionymAuthorship2Parens]() {
						goto l558
					}
				}
			l560:
				add(ruleBasionymAuthorship, position559)
			}
			return true
		l558:
			position, tokenIndex = position558, tokenIndex558
			return false
		},
		/* 75 BasionymAuthorship1 <- <('(' _? AuthorsGroup _? ')')> */
		func() bool {
			position562, tokenIndex562 := position, tokenIndex
			{
				position563 := position
				if buffer[position] != rune('(') {
					goto l562
				}
				position++
				{
					position564, tokenIndex564 := position, tokenIndex
					if !_rules[rule_]() {
						goto l564
					}
					goto l565
				l564:
					position, tokenIndex = position564, tokenIndex564
				}
			l565:
				if !_rules[ruleAuthorsGroup]() {
					goto l562
				}
				{
					position566, tokenIndex566 := position, tokenIndex
					if !_rules[rule_]() {
						goto l566
					}
					goto l567
				l566:
					position, tokenIndex = position566, tokenIndex566
				}
			l567:
				if buffer[position] != rune(')') {
					goto l562
				}
				position++
				add(ruleBasionymAuthorship1, position563)
			}
			return true
		l562:
			position, tokenIndex = position562, tokenIndex562
			return false
		},
		/* 76 BasionymAuthorship2Parens <- <('(' _? '(' _? AuthorsGroup _? ')' _? ')')> */
		func() bool {
			position568, tokenIndex568 := position, tokenIndex
			{
				position569 := position
				if buffer[position] != rune('(') {
					goto l568
				}
				position++
				{
					position570, tokenIndex570 := position, tokenIndex
					if !_rules[rule_]() {
						goto l570
					}
					goto l571
				l570:
					position, tokenIndex = position570, tokenIndex570
				}
			l571:
				if buffer[position] != rune('(') {
					goto l568
				}
				position++
				{
					position572, tokenIndex572 := position, tokenIndex
					if !_rules[rule_]() {
						goto l572
					}
					goto l573
				l572:
					position, tokenIndex = position572, tokenIndex572
				}
			l573:
				if !_rules[ruleAuthorsGroup]() {
					goto l568
				}
				{
					position574, tokenIndex574 := position, tokenIndex
					if !_rules[rule_]() {
						goto l574
					}
					goto l575
				l574:
					position, tokenIndex = position574, tokenIndex574
				}
			l575:
				if buffer[position] != rune(')') {
					goto l568
				}
				position++
				{
					position576, tokenIndex576 := position, tokenIndex
					if !_rules[rule_]() {
						goto l576
					}
					goto l577
				l576:
					position, tokenIndex = position576, tokenIndex576
				}
			l577:
				if buffer[position] != rune(')') {
					goto l568
				}
				position++
				add(ruleBasionymAuthorship2Parens, position569)
			}
			return true
		l568:
			position, tokenIndex = position568, tokenIndex568
			return false
		},
		/* 77 AuthorsGroup <- <(AuthorsTeam (_ (AuthorEmend / AuthorEx) AuthorsTeam)?)> */
		func() bool {
			position578, tokenIndex578 := position, tokenIndex
			{
				position579 := position
				if !_rules[ruleAuthorsTeam]() {
					goto l578
				}
				{
					position580, tokenIndex580 := position, tokenIndex
					if !_rules[rule_]() {
						goto l580
					}
					{
						position582, tokenIndex582 := position, tokenIndex
						if !_rules[ruleAuthorEmend]() {
							goto l583
						}
						goto l582
					l583:
						position, tokenIndex = position582, tokenIndex582
						if !_rules[ruleAuthorEx]() {
							goto l580
						}
					}
				l582:
					if !_rules[ruleAuthorsTeam]() {
						goto l580
					}
					goto l581
				l580:
					position, tokenIndex = position580, tokenIndex580
				}
			l581:
				add(ruleAuthorsGroup, position579)
			}
			return true
		l578:
			position, tokenIndex = position578, tokenIndex578
			return false
		},
		/* 78 AuthorsTeam <- <(Author (AuthorSep Author)* (_? ','? _? Year)?)> */
		func() bool {
			position584, tokenIndex584 := position, tokenIndex
			{
				position585 := position
				if !_rules[ruleAuthor]() {
					goto l584
				}
			l586:
				{
					position587, tokenIndex587 := position, tokenIndex
					if !_rules[ruleAuthorSep]() {
						goto l587
					}
					if !_rules[ruleAuthor]() {
						goto l587
					}
					goto l586
				l587:
					position, tokenIndex = position587, tokenIndex587
				}
				{
					position588, tokenIndex588 := position, tokenIndex
					{
						position590, tokenIndex590 := position, tokenIndex
						if !_rules[rule_]() {
							goto l590
						}
						goto l591
					l590:
						position, tokenIndex = position590, tokenIndex590
					}
				l591:
					{
						position592, tokenIndex592 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l592
						}
						position++
						goto l593
					l592:
						position, tokenIndex = position592, tokenIndex592
					}
				l593:
					{
						position594, tokenIndex594 := position, tokenIndex
						if !_rules[rule_]() {
							goto l594
						}
						goto l595
					l594:
						position, tokenIndex = position594, tokenIndex594
					}
				l595:
					if !_rules[ruleYear]() {
						goto l588
					}
					goto l589
				l588:
					position, tokenIndex = position588, tokenIndex588
				}
			l589:
				add(ruleAuthorsTeam, position585)
			}
			return true
		l584:
			position, tokenIndex = position584, tokenIndex584
			return false
		},
		/* 79 AuthorSep <- <(AuthorSep1 / AuthorSep2)> */
		func() bool {
			position596, tokenIndex596 := position, tokenIndex
			{
				position597 := position
				{
					position598, tokenIndex598 := position, tokenIndex
					if !_rules[ruleAuthorSep1]() {
						goto l599
					}
					goto l598
				l599:
					position, tokenIndex = position598, tokenIndex598
					if !_rules[ruleAuthorSep2]() {
						goto l596
					}
				}
			l598:
				add(ruleAuthorSep, position597)
			}
			return true
		l596:
			position, tokenIndex = position596, tokenIndex596
			return false
		},
		/* 80 AuthorSep1 <- <(_? (',' _)? ('&' / AuthorSepSpanish / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd')) _?)> */
		func() bool {
			position600, tokenIndex600 := position, tokenIndex
			{
				position601 := position
				{
					position602, tokenIndex602 := position, tokenIndex
					if !_rules[rule_]() {
						goto l602
					}
					goto l603
				l602:
					position, tokenIndex = position602, tokenIndex602
				}
			l603:
				{
					position604, tokenIndex604 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l604
					}
					position++
					if !_rules[rule_]() {
						goto l604
					}
					goto l605
				l604:
					position, tokenIndex = position604, tokenIndex604
				}
			l605:
				{
					position606, tokenIndex606 := position, tokenIndex
					if buffer[position] != rune('&') {
						goto l607
					}
					position++
					goto l606
				l607:
					position, tokenIndex = position606, tokenIndex606
					if !_rules[ruleAuthorSepSpanish]() {
						goto l608
					}
					goto l606
				l608:
					position, tokenIndex = position606, tokenIndex606
					if buffer[position] != rune('e') {
						goto l609
					}
					position++
					if buffer[position] != rune('t') {
						goto l609
					}
					position++
					goto l606
				l609:
					position, tokenIndex = position606, tokenIndex606
					if buffer[position] != rune('a') {
						goto l610
					}
					position++
					if buffer[position] != rune('n') {
						goto l610
					}
					position++
					if buffer[position] != rune('d') {
						goto l610
					}
					position++
					goto l606
				l610:
					position, tokenIndex = position606, tokenIndex606
					if buffer[position] != rune('a') {
						goto l600
					}
					position++
					if buffer[position] != rune('p') {
						goto l600
					}
					position++
					if buffer[position] != rune('u') {
						goto l600
					}
					position++
					if buffer[position] != rune('d') {
						goto l600
					}
					position++
				}
			l606:
				{
					position611, tokenIndex611 := position, tokenIndex
					if !_rules[rule_]() {
						goto l611
					}
					goto l612
				l611:
					position, tokenIndex = position611, tokenIndex611
				}
			l612:
				add(ruleAuthorSep1, position601)
			}
			return true
		l600:
			position, tokenIndex = position600, tokenIndex600
			return false
		},
		/* 81 AuthorSep2 <- <(_? ',' _?)> */
		func() bool {
			position613, tokenIndex613 := position, tokenIndex
			{
				position614 := position
				{
					position615, tokenIndex615 := position, tokenIndex
					if !_rules[rule_]() {
						goto l615
					}
					goto l616
				l615:
					position, tokenIndex = position615, tokenIndex615
				}
			l616:
				if buffer[position] != rune(',') {
					goto l613
				}
				position++
				{
					position617, tokenIndex617 := position, tokenIndex
					if !_rules[rule_]() {
						goto l617
					}
					goto l618
				l617:
					position, tokenIndex = position617, tokenIndex617
				}
			l618:
				add(ruleAuthorSep2, position614)
			}
			return true
		l613:
			position, tokenIndex = position613, tokenIndex613
			return false
		},
		/* 82 AuthorSepSpanish <- <(_? 'y' _?)> */
		func() bool {
			position619, tokenIndex619 := position, tokenIndex
			{
				position620 := position
				{
					position621, tokenIndex621 := position, tokenIndex
					if !_rules[rule_]() {
						goto l621
					}
					goto l622
				l621:
					position, tokenIndex = position621, tokenIndex621
				}
			l622:
				if buffer[position] != rune('y') {
					goto l619
				}
				position++
				{
					position623, tokenIndex623 := position, tokenIndex
					if !_rules[rule_]() {
						goto l623
					}
					goto l624
				l623:
					position, tokenIndex = position623, tokenIndex623
				}
			l624:
				add(ruleAuthorSepSpanish, position620)
			}
			return true
		l619:
			position, tokenIndex = position619, tokenIndex619
			return false
		},
		/* 83 AuthorEx <- <((('e' 'x' '.'?) / ('m' 's' _ ('i' 'n')) / ('i' 'n')) _)> */
		func() bool {
			position625, tokenIndex625 := position, tokenIndex
			{
				position626 := position
				{
					position627, tokenIndex627 := position, tokenIndex
					if buffer[position] != rune('e') {
						goto l628
					}
					position++
					if buffer[position] != rune('x') {
						goto l628
					}
					position++
					{
						position629, tokenIndex629 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l629
						}
						position++
						goto l630
					l629:
						position, tokenIndex = position629, tokenIndex629
					}
				l630:
					goto l627
				l628:
					position, tokenIndex = position627, tokenIndex627
					if buffer[position] != rune('m') {
						goto l631
					}
					position++
					if buffer[position] != rune('s') {
						goto l631
					}
					position++
					if !_rules[rule_]() {
						goto l631
					}
					if buffer[position] != rune('i') {
						goto l631
					}
					position++
					if buffer[position] != rune('n') {
						goto l631
					}
					position++
					goto l627
				l631:
					position, tokenIndex = position627, tokenIndex627
					if buffer[position] != rune('i') {
						goto l625
					}
					position++
					if buffer[position] != rune('n') {
						goto l625
					}
					position++
				}
			l627:
				if !_rules[rule_]() {
					goto l625
				}
				add(ruleAuthorEx, position626)
			}
			return true
		l625:
			position, tokenIndex = position625, tokenIndex625
			return false
		},
		/* 84 AuthorEmend <- <('e' 'm' 'e' 'n' 'd' '.'? _)> */
		func() bool {
			position632, tokenIndex632 := position, tokenIndex
			{
				position633 := position
				if buffer[position] != rune('e') {
					goto l632
				}
				position++
				if buffer[position] != rune('m') {
					goto l632
				}
				position++
				if buffer[position] != rune('e') {
					goto l632
				}
				position++
				if buffer[position] != rune('n') {
					goto l632
				}
				position++
				if buffer[position] != rune('d') {
					goto l632
				}
				position++
				{
					position634, tokenIndex634 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l634
					}
					position++
					goto l635
				l634:
					position, tokenIndex = position634, tokenIndex634
				}
			l635:
				if !_rules[rule_]() {
					goto l632
				}
				add(ruleAuthorEmend, position633)
			}
			return true
		l632:
			position, tokenIndex = position632, tokenIndex632
			return false
		},
		/* 85 Author <- <((Author0 / Author1 / Author2 / UnknownAuthor) (_ AuthorEtAl)?)> */
		func() bool {
			position636, tokenIndex636 := position, tokenIndex
			{
				position637 := position
				{
					position638, tokenIndex638 := position, tokenIndex
					if !_rules[ruleAuthor0]() {
						goto l639
					}
					goto l638
				l639:
					position, tokenIndex = position638, tokenIndex638
					if !_rules[ruleAuthor1]() {
						goto l640
					}
					goto l638
				l640:
					position, tokenIndex = position638, tokenIndex638
					if !_rules[ruleAuthor2]() {
						goto l641
					}
					goto l638
				l641:
					position, tokenIndex = position638, tokenIndex638
					if !_rules[ruleUnknownAuthor]() {
						goto l636
					}
				}
			l638:
				{
					position642, tokenIndex642 := position, tokenIndex
					if !_rules[rule_]() {
						goto l642
					}
					if !_rules[ruleAuthorEtAl]() {
						goto l642
					}
					goto l643
				l642:
					position, tokenIndex = position642, tokenIndex642
				}
			l643:
				add(ruleAuthor, position637)
			}
			return true
		l636:
			position, tokenIndex = position636, tokenIndex636
			return false
		},
		/* 86 Author0 <- <(Author2 FiliusFNoSpace)> */
		func() bool {
			position644, tokenIndex644 := position, tokenIndex
			{
				position645 := position
				if !_rules[ruleAuthor2]() {
					goto l644
				}
				if !_rules[ruleFiliusFNoSpace]() {
					goto l644
				}
				add(ruleAuthor0, position645)
			}
			return true
		l644:
			position, tokenIndex = position644, tokenIndex644
			return false
		},
		/* 87 Author1 <- <(Author2 _? (Filius / AuthorSuffix))> */
		func() bool {
			position646, tokenIndex646 := position, tokenIndex
			{
				position647 := position
				if !_rules[ruleAuthor2]() {
					goto l646
				}
				{
					position648, tokenIndex648 := position, tokenIndex
					if !_rules[rule_]() {
						goto l648
					}
					goto l649
				l648:
					position, tokenIndex = position648, tokenIndex648
				}
			l649:
				{
					position650, tokenIndex650 := position, tokenIndex
					if !_rules[ruleFilius]() {
						goto l651
					}
					goto l650
				l651:
					position, tokenIndex = position650, tokenIndex650
					if !_rules[ruleAuthorSuffix]() {
						goto l646
					}
				}
			l650:
				add(ruleAuthor1, position647)
			}
			return true
		l646:
			position, tokenIndex = position646, tokenIndex646
			return false
		},
		/* 88 Author2 <- <(AuthorWord (_? AuthorWord)*)> */
		func() bool {
			position652, tokenIndex652 := position, tokenIndex
			{
				position653 := position
				if !_rules[ruleAuthorWord]() {
					goto l652
				}
			l654:
				{
					position655, tokenIndex655 := position, tokenIndex
					{
						position656, tokenIndex656 := position, tokenIndex
						if !_rules[rule_]() {
							goto l656
						}
						goto l657
					l656:
						position, tokenIndex = position656, tokenIndex656
					}
				l657:
					if !_rules[ruleAuthorWord]() {
						goto l655
					}
					goto l654
				l655:
					position, tokenIndex = position655, tokenIndex655
				}
				add(ruleAuthor2, position653)
			}
			return true
		l652:
			position, tokenIndex = position652, tokenIndex652
			return false
		},
		/* 89 UnknownAuthor <- <('?' / ((('a' 'u' 'c' 't') / ('a' 'n' 'o' 'n')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position658, tokenIndex658 := position, tokenIndex
			{
				position659 := position
				{
					position660, tokenIndex660 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l661
					}
					position++
					goto l660
				l661:
					position, tokenIndex = position660, tokenIndex660
					{
						position662, tokenIndex662 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l663
						}
						position++
						if buffer[position] != rune('u') {
							goto l663
						}
						position++
						if buffer[position] != rune('c') {
							goto l663
						}
						position++
						if buffer[position] != rune('t') {
							goto l663
						}
						position++
						goto l662
					l663:
						position, tokenIndex = position662, tokenIndex662
						if buffer[position] != rune('a') {
							goto l658
						}
						position++
						if buffer[position] != rune('n') {
							goto l658
						}
						position++
						if buffer[position] != rune('o') {
							goto l658
						}
						position++
						if buffer[position] != rune('n') {
							goto l658
						}
						position++
					}
				l662:
					{
						position664, tokenIndex664 := position, tokenIndex
						{
							position666, tokenIndex666 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l665
							}
							position, tokenIndex = position666, tokenIndex666
						}
						goto l664
					l665:
						position, tokenIndex = position664, tokenIndex664
						if buffer[position] != rune('.') {
							goto l658
						}
						position++
					}
				l664:
				}
			l660:
				add(ruleUnknownAuthor, position659)
			}
			return true
		l658:
			position, tokenIndex = position658, tokenIndex658
			return false
		},
		/* 90 AuthorWord <- <(!(HybridChar / (('b' / 'B') ('o' / 'O') ('l' / 'L') ('d' / 'D') ':')) (AuthorDashInitials / AuthorWord2 / AuthorWord3 / AuthorPrefix))> */
		func() bool {
			position667, tokenIndex667 := position, tokenIndex
			{
				position668 := position
				{
					position669, tokenIndex669 := position, tokenIndex
					{
						position670, tokenIndex670 := position, tokenIndex
						if !_rules[ruleHybridChar]() {
							goto l671
						}
						goto l670
					l671:
						position, tokenIndex = position670, tokenIndex670
						{
							position672, tokenIndex672 := position, tokenIndex
							if buffer[position] != rune('b') {
								goto l673
							}
							position++
							goto l672
						l673:
							position, tokenIndex = position672, tokenIndex672
							if buffer[position] != rune('B') {
								goto l669
							}
							position++
						}
					l672:
						{
							position674, tokenIndex674 := position, tokenIndex
							if buffer[position] != rune('o') {
								goto l675
							}
							position++
							goto l674
						l675:
							position, tokenIndex = position674, tokenIndex674
							if buffer[position] != rune('O') {
								goto l669
							}
							position++
						}
					l674:
						{
							position676, tokenIndex676 := position, tokenIndex
							if buffer[position] != rune('l') {
								goto l677
							}
							position++
							goto l676
						l677:
							position, tokenIndex = position676, tokenIndex676
							if buffer[position] != rune('L') {
								goto l669
							}
							position++
						}
					l676:
						{
							position678, tokenIndex678 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l679
							}
							position++
							goto l678
						l679:
							position, tokenIndex = position678, tokenIndex678
							if buffer[position] != rune('D') {
								goto l669
							}
							position++
						}
					l678:
						if buffer[position] != rune(':') {
							goto l669
						}
						position++
					}
				l670:
					goto l667
				l669:
					position, tokenIndex = position669, tokenIndex669
				}
				{
					position680, tokenIndex680 := position, tokenIndex
					if !_rules[ruleAuthorDashInitials]() {
						goto l681
					}
					goto l680
				l681:
					position, tokenIndex = position680, tokenIndex680
					if !_rules[ruleAuthorWord2]() {
						goto l682
					}
					goto l680
				l682:
					position, tokenIndex = position680, tokenIndex680
					if !_rules[ruleAuthorWord3]() {
						goto l683
					}
					goto l680
				l683:
					position, tokenIndex = position680, tokenIndex680
					if !_rules[ruleAuthorPrefix]() {
						goto l667
					}
				}
			l680:
				add(ruleAuthorWord, position668)
			}
			return true
		l667:
			position, tokenIndex = position667, tokenIndex667
			return false
		},
		/* 91 AuthorEtAl <- <(('a' 'r' 'g' '.') / ('e' 't' ' ' 'a' 'l' '.' '{' '?' '}') / ((('e' 't') / '&') (' ' 'a' 'l') '.'?))> */
		func() bool {
			position684, tokenIndex684 := position, tokenIndex
			{
				position685 := position
				{
					position686, tokenIndex686 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l687
					}
					position++
					if buffer[position] != rune('r') {
						goto l687
					}
					position++
					if buffer[position] != rune('g') {
						goto l687
					}
					position++
					if buffer[position] != rune('.') {
						goto l687
					}
					position++
					goto l686
				l687:
					position, tokenIndex = position686, tokenIndex686
					if buffer[position] != rune('e') {
						goto l688
					}
					position++
					if buffer[position] != rune('t') {
						goto l688
					}
					position++
					if buffer[position] != rune(' ') {
						goto l688
					}
					position++
					if buffer[position] != rune('a') {
						goto l688
					}
					position++
					if buffer[position] != rune('l') {
						goto l688
					}
					position++
					if buffer[position] != rune('.') {
						goto l688
					}
					position++
					if buffer[position] != rune('{') {
						goto l688
					}
					position++
					if buffer[position] != rune('?') {
						goto l688
					}
					position++
					if buffer[position] != rune('}') {
						goto l688
					}
					position++
					goto l686
				l688:
					position, tokenIndex = position686, tokenIndex686
					{
						position689, tokenIndex689 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l690
						}
						position++
						if buffer[position] != rune('t') {
							goto l690
						}
						position++
						goto l689
					l690:
						position, tokenIndex = position689, tokenIndex689
						if buffer[position] != rune('&') {
							goto l684
						}
						position++
					}
				l689:
					if buffer[position] != rune(' ') {
						goto l684
					}
					position++
					if buffer[position] != rune('a') {
						goto l684
					}
					position++
					if buffer[position] != rune('l') {
						goto l684
					}
					position++
					{
						position691, tokenIndex691 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l691
						}
						position++
						goto l692
					l691:
						position, tokenIndex = position691, tokenIndex691
					}
				l692:
				}
			l686:
				add(ruleAuthorEtAl, position685)
			}
			return true
		l684:
			position, tokenIndex = position684, tokenIndex684
			return false
		},
		/* 92 AuthorWord2 <- <(AuthorWord3 Dash AuthorWordSoft)> */
		func() bool {
			position693, tokenIndex693 := position, tokenIndex
			{
				position694 := position
				if !_rules[ruleAuthorWord3]() {
					goto l693
				}
				if !_rules[ruleDash]() {
					goto l693
				}
				if !_rules[ruleAuthorWordSoft]() {
					goto l693
				}
				add(ruleAuthorWord2, position694)
			}
			return true
		l693:
			position, tokenIndex = position693, tokenIndex693
			return false
		},
		/* 93 AuthorWord3 <- <(AuthorPrefixGlued? (AllCapsAuthorWord / CapAuthorWord) '.'?)> */
		func() bool {
			position695, tokenIndex695 := position, tokenIndex
			{
				position696 := position
				{
					position697, tokenIndex697 := position, tokenIndex
					if !_rules[ruleAuthorPrefixGlued]() {
						goto l697
					}
					goto l698
				l697:
					position, tokenIndex = position697, tokenIndex697
				}
			l698:
				{
					position699, tokenIndex699 := position, tokenIndex
					if !_rules[ruleAllCapsAuthorWord]() {
						goto l700
					}
					goto l699
				l700:
					position, tokenIndex = position699, tokenIndex699
					if !_rules[ruleCapAuthorWord]() {
						goto l695
					}
				}
			l699:
				{
					position701, tokenIndex701 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l701
					}
					position++
					goto l702
				l701:
					position, tokenIndex = position701, tokenIndex701
				}
			l702:
				add(ruleAuthorWord3, position696)
			}
			return true
		l695:
			position, tokenIndex = position695, tokenIndex695
			return false
		},
		/* 94 AuthorDashInitials <- <(AuthorUpperChar '.'? Dash AuthorUpperChar '.'?)> */
		func() bool {
			position703, tokenIndex703 := position, tokenIndex
			{
				position704 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l703
				}
				{
					position705, tokenIndex705 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l705
					}
					position++
					goto l706
				l705:
					position, tokenIndex = position705, tokenIndex705
				}
			l706:
				if !_rules[ruleDash]() {
					goto l703
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l703
				}
				{
					position707, tokenIndex707 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l707
					}
					position++
					goto l708
				l707:
					position, tokenIndex = position707, tokenIndex707
				}
			l708:
				add(ruleAuthorDashInitials, position704)
			}
			return true
		l703:
			position, tokenIndex = position703, tokenIndex703
			return false
		},
		/* 95 AuthorWordSoft <- <(((AuthorUpperChar (AuthorUpperChar+ / AuthorLowerChar+)) / AuthorLowerChar+) '.'?)> */
		func() bool {
			position709, tokenIndex709 := position, tokenIndex
			{
				position710 := position
				{
					position711, tokenIndex711 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l712
					}
					{
						position713, tokenIndex713 := position, tokenIndex
						if !_rules[ruleAuthorUpperChar]() {
							goto l714
						}
					l715:
						{
							position716, tokenIndex716 := position, tokenIndex
							if !_rules[ruleAuthorUpperChar]() {
								goto l716
							}
							goto l715
						l716:
							position, tokenIndex = position716, tokenIndex716
						}
						goto l713
					l714:
						position, tokenIndex = position713, tokenIndex713
						if !_rules[ruleAuthorLowerChar]() {
							goto l712
						}
					l717:
						{
							position718, tokenIndex718 := position, tokenIndex
							if !_rules[ruleAuthorLowerChar]() {
								goto l718
							}
							goto l717
						l718:
							position, tokenIndex = position718, tokenIndex718
						}
					}
				l713:
					goto l711
				l712:
					position, tokenIndex = position711, tokenIndex711
					if !_rules[ruleAuthorLowerChar]() {
						goto l709
					}
				l719:
					{
						position720, tokenIndex720 := position, tokenIndex
						if !_rules[ruleAuthorLowerChar]() {
							goto l720
						}
						goto l719
					l720:
						position, tokenIndex = position720, tokenIndex720
					}
				}
			l711:
				{
					position721, tokenIndex721 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l721
					}
					position++
					goto l722
				l721:
					position, tokenIndex = position721, tokenIndex721
				}
			l722:
				add(ruleAuthorWordSoft, position710)
			}
			return true
		l709:
			position, tokenIndex = position709, tokenIndex709
			return false
		},
		/* 96 CapAuthorWord <- <(AuthorUpperChar AuthorLowerChar*)> */
		func() bool {
			position723, tokenIndex723 := position, tokenIndex
			{
				position724 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l723
				}
			l725:
				{
					position726, tokenIndex726 := position, tokenIndex
					if !_rules[ruleAuthorLowerChar]() {
						goto l726
					}
					goto l725
				l726:
					position, tokenIndex = position726, tokenIndex726
				}
				add(ruleCapAuthorWord, position724)
			}
			return true
		l723:
			position, tokenIndex = position723, tokenIndex723
			return false
		},
		/* 97 AllCapsAuthorWord <- <(AuthorUpperChar AuthorUpperChar+)> */
		func() bool {
			position727, tokenIndex727 := position, tokenIndex
			{
				position728 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l727
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l727
				}
			l729:
				{
					position730, tokenIndex730 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l730
					}
					goto l729
				l730:
					position, tokenIndex = position730, tokenIndex730
				}
				add(ruleAllCapsAuthorWord, position728)
			}
			return true
		l727:
			position, tokenIndex = position727, tokenIndex727
			return false
		},
		/* 98 Filius <- <(FiliusF / ('f' 'i' 'l' '.') / ('f' 'i' 'l' 'i' 'u' 's'))> */
		func() bool {
			position731, tokenIndex731 := position, tokenIndex
			{
				position732 := position
				{
					position733, tokenIndex733 := position, tokenIndex
					if !_rules[ruleFiliusF]() {
						goto l734
					}
					goto l733
				l734:
					position, tokenIndex = position733, tokenIndex733
					if buffer[position] != rune('f') {
						goto l735
					}
					position++
					if buffer[position] != rune('i') {
						goto l735
					}
					position++
					if buffer[position] != rune('l') {
						goto l735
					}
					position++
					if buffer[position] != rune('.') {
						goto l735
					}
					position++
					goto l733
				l735:
					position, tokenIndex = position733, tokenIndex733
					if buffer[position] != rune('f') {
						goto l731
					}
					position++
					if buffer[position] != rune('i') {
						goto l731
					}
					position++
					if buffer[position] != rune('l') {
						goto l731
					}
					position++
					if buffer[position] != rune('i') {
						goto l731
					}
					position++
					if buffer[position] != rune('u') {
						goto l731
					}
					position++
					if buffer[position] != rune('s') {
						goto l731
					}
					position++
				}
			l733:
				add(ruleFilius, position732)
			}
			return true
		l731:
			position, tokenIndex = position731, tokenIndex731
			return false
		},
		/* 99 FiliusF <- <('f' '.' !(_ Word))> */
		func() bool {
			position736, tokenIndex736 := position, tokenIndex
			{
				position737 := position
				if buffer[position] != rune('f') {
					goto l736
				}
				position++
				if buffer[position] != rune('.') {
					goto l736
				}
				position++
				{
					position738, tokenIndex738 := position, tokenIndex
					if !_rules[rule_]() {
						goto l738
					}
					if !_rules[ruleWord]() {
						goto l738
					}
					goto l736
				l738:
					position, tokenIndex = position738, tokenIndex738
				}
				add(ruleFiliusF, position737)
			}
			return true
		l736:
			position, tokenIndex = position736, tokenIndex736
			return false
		},
		/* 100 FiliusFNoSpace <- <('f' '.')> */
		func() bool {
			position739, tokenIndex739 := position, tokenIndex
			{
				position740 := position
				if buffer[position] != rune('f') {
					goto l739
				}
				position++
				if buffer[position] != rune('.') {
					goto l739
				}
				position++
				add(ruleFiliusFNoSpace, position740)
			}
			return true
		l739:
			position, tokenIndex = position739, tokenIndex739
			return false
		},
		/* 101 AuthorSuffix <- <(('b' 'i' 's') / ('t' 'e' 'r'))> */
		func() bool {
			position741, tokenIndex741 := position, tokenIndex
			{
				position742 := position
				{
					position743, tokenIndex743 := position, tokenIndex
					if buffer[position] != rune('b') {
						goto l744
					}
					position++
					if buffer[position] != rune('i') {
						goto l744
					}
					position++
					if buffer[position] != rune('s') {
						goto l744
					}
					position++
					goto l743
				l744:
					position, tokenIndex = position743, tokenIndex743
					if buffer[position] != rune('t') {
						goto l741
					}
					position++
					if buffer[position] != rune('e') {
						goto l741
					}
					position++
					if buffer[position] != rune('r') {
						goto l741
					}
					position++
				}
			l743:
				add(ruleAuthorSuffix, position742)
			}
			return true
		l741:
			position, tokenIndex = position741, tokenIndex741
			return false
		},
		/* 102 AuthorPrefixGlued <- <(('d' / 'O' / 'L' / ('M' 'c') / 'M') Apostrophe)> */
		func() bool {
			position745, tokenIndex745 := position, tokenIndex
			{
				position746 := position
				{
					position747, tokenIndex747 := position, tokenIndex
					if buffer[position] != rune('d') {
						goto l748
					}
					position++
					goto l747
				l748:
					position, tokenIndex = position747, tokenIndex747
					if buffer[position] != rune('O') {
						goto l749
					}
					position++
					goto l747
				l749:
					position, tokenIndex = position747, tokenIndex747
					if buffer[position] != rune('L') {
						goto l750
					}
					position++
					goto l747
				l750:
					position, tokenIndex = position747, tokenIndex747
					if buffer[position] != rune('M') {
						goto l751
					}
					position++
					if buffer[position] != rune('c') {
						goto l751
					}
					position++
					goto l747
				l751:
					position, tokenIndex = position747, tokenIndex747
					if buffer[position] != rune('M') {
						goto l745
					}
					position++
				}
			l747:
				if !_rules[ruleApostrophe]() {
					goto l745
				}
				add(ruleAuthorPrefixGlued, position746)
			}
			return true
		l745:
			position, tokenIndex = position745, tokenIndex745
			return false
		},
		/* 103 AuthorPrefix <- <(AuthorPrefix1 / AuthorPrefix2)> */
		func() bool {
			position752, tokenIndex752 := position, tokenIndex
			{
				position753 := position
				{
					position754, tokenIndex754 := position, tokenIndex
					if !_rules[ruleAuthorPrefix1]() {
						goto l755
					}
					goto l754
				l755:
					position, tokenIndex = position754, tokenIndex754
					if !_rules[ruleAuthorPrefix2]() {
						goto l752
					}
				}
			l754:
				add(ruleAuthorPrefix, position753)
			}
			return true
		l752:
			position, tokenIndex = position752, tokenIndex752
			return false
		},
		/* 104 AuthorPrefix2 <- <(('v' '.' (_? ('d' '.'))?) / (Apostrophe 't'))> */
		func() bool {
			position756, tokenIndex756 := position, tokenIndex
			{
				position757 := position
				{
					position758, tokenIndex758 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l759
					}
					position++
					if buffer[position] != rune('.') {
						goto l759
					}
					position++
					{
						position760, tokenIndex760 := position, tokenIndex
						{
							position762, tokenIndex762 := position, tokenIndex
							if !_rules[rule_]() {
								goto l762
							}
							goto l763
						l762:
							position, tokenIndex = position762, tokenIndex762
						}
					l763:
						if buffer[position] != rune('d') {
							goto l760
						}
						position++
						if buffer[position] != rune('.') {
							goto l760
						}
						position++
						goto l761
					l760:
						position, tokenIndex = position760, tokenIndex760
					}
				l761:
					goto l758
				l759:
					position, tokenIndex = position758, tokenIndex758
					if !_rules[ruleApostrophe]() {
						goto l756
					}
					if buffer[position] != rune('t') {
						goto l756
					}
					position++
				}
			l758:
				add(ruleAuthorPrefix2, position757)
			}
			return true
		l756:
			position, tokenIndex = position756, tokenIndex756
			return false
		},
		/* 105 AuthorPrefix1 <- <((('a' 'b') / ('a' 'f') / ('b' 'i' 's') / ('d' 'a') / ('d' 'e' 'r') / ('d' 'e' 's') / ('d' 'e' 'n') / ('d' 'e' 'l' 'l' 'a') / ('d' 'e' 'l' 'a') / ('d' 'e' 'l' 'l' 'e') / ('d' 'e' 'l') / ('d' 'e') / ('d' 'i') / ('d' 'o' 's') / ('d' 'u') / ('e' 'l') / ('l' 'a') / ('l' 'e') / ('t' 'e' 'n') / ('t' 'e' 'r') / ('v' 'a' 'n') / ('d' Apostrophe) / ('i' 'n' Apostrophe 't') / ('z' 'u' 'r') / ('z' 'u') / ('v' 'o' 'n' (_ (('d' '.') / ('d' 'e' 'm')))?) / ('v' (_ 'd')?)) &_)> */
		func() bool {
			position764, tokenIndex764 := position, tokenIndex
			{
				position765 := position
				{
					position766, tokenIndex766 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l767
					}
					position++
					if buffer[position] != rune('b') {
						goto l767
					}
					position++
					goto l766
				l767:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('a') {
						goto l768
					}
					position++
					if buffer[position] != rune('f') {
						goto l768
					}
					position++
					goto l766
				l768:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('b') {
						goto l769
					}
					position++
					if buffer[position] != rune('i') {
						goto l769
					}
					position++
					if buffer[position] != rune('s') {
						goto l769
					}
					position++
					goto l766
				l769:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('d') {
						goto l770
					}
					position++
					if buffer[position] != rune('a') {
						goto l770
					}
					position++
					goto l766
				l770:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('d') {
						goto l771
					}
					position++
					if buffer[position] != rune('e') {
						goto l771
					}
					position++
					if buffer[position] != rune('r') {
						goto l771
					}
					position++
					goto l766
				l771:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('d') {
						goto l772
					}
					position++
					if buffer[position] != rune('e') {
						goto l772
					}
					position++
					if buffer[position] != rune('s') {
						goto l772
					}
					position++
					goto l766
				l772:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('d') {
						goto l773
					}
					position++
					if buffer[position] != rune('e') {
						goto l773
					}
					position++
					if buffer[position] != rune('n') {
						goto l773
					}
					position++
					goto l766
				l773:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('d') {
						goto l774
					}
					position++
					if buffer[position] != rune('e') {
						goto l774
					}
					position++
					if buffer[position] != rune('l') {
						goto l774
					}
					position++
					if buffer[position] != rune('l') {
						goto l774
					}
					position++
					if buffer[position] != rune('a') {
						goto l774
					}
					position++
					goto l766
				l774:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('d') {
						goto l775
					}
					position++
					if buffer[position] != rune('e') {
						goto l775
					}
					position++
					if buffer[position] != rune('l') {
						goto l775
					}
					position++
					if buffer[position] != rune('a') {
						goto l775
					}
					position++
					goto l766
				l775:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('d') {
						goto l776
					}
					position++
					if buffer[position] != rune('e') {
						goto l776
					}
					position++
					if buffer[position] != rune('l') {
						goto l776
					}
					position++
					if buffer[position] != rune('l') {
						goto l776
					}
					position++
					if buffer[position] != rune('e') {
						goto l776
					}
					position++
					goto l766
				l776:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('d') {
						goto l777
					}
					position++
					if buffer[position] != rune('e') {
						goto l777
					}
					position++
					if buffer[position] != rune('l') {
						goto l777
					}
					position++
					goto l766
				l777:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('d') {
						goto l778
					}
					position++
					if buffer[position] != rune('e') {
						goto l778
					}
					position++
					goto l766
				l778:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('d') {
						goto l779
					}
					position++
					if buffer[position] != rune('i') {
						goto l779
					}
					position++
					goto l766
				l779:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('d') {
						goto l780
					}
					position++
					if buffer[position] != rune('o') {
						goto l780
					}
					position++
					if buffer[position] != rune('s') {
						goto l780
					}
					position++
					goto l766
				l780:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('d') {
						goto l781
					}
					position++
					if buffer[position] != rune('u') {
						goto l781
					}
					position++
					goto l766
				l781:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('e') {
						goto l782
					}
					position++
					if buffer[position] != rune('l') {
						goto l782
					}
					position++
					goto l766
				l782:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('l') {
						goto l783
					}
					position++
					if buffer[position] != rune('a') {
						goto l783
					}
					position++
					goto l766
				l783:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('l') {
						goto l784
					}
					position++
					if buffer[position] != rune('e') {
						goto l784
					}
					position++
					goto l766
				l784:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('t') {
						goto l785
					}
					position++
					if buffer[position] != rune('e') {
						goto l785
					}
					position++
					if buffer[position] != rune('n') {
						goto l785
					}
					position++
					goto l766
				l785:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('t') {
						goto l786
					}
					position++
					if buffer[position] != rune('e') {
						goto l786
					}
					position++
					if buffer[position] != rune('r') {
						goto l786
					}
					position++
					goto l766
				l786:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('v') {
						goto l787
					}
					position++
					if buffer[position] != rune('a') {
						goto l787
					}
					position++
					if buffer[position] != rune('n') {
						goto l787
					}
					position++
					goto l766
				l787:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('d') {
						goto l788
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l788
					}
					goto l766
				l788:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('i') {
						goto l789
					}
					position++
					if buffer[position] != rune('n') {
						goto l789
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l789
					}
					if buffer[position] != rune('t') {
						goto l789
					}
					position++
					goto l766
				l789:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('z') {
						goto l790
					}
					position++
					if buffer[position] != rune('u') {
						goto l790
					}
					position++
					if buffer[position] != rune('r') {
						goto l790
					}
					position++
					goto l766
				l790:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('z') {
						goto l791
					}
					position++
					if buffer[position] != rune('u') {
						goto l791
					}
					position++
					goto l766
				l791:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('v') {
						goto l792
					}
					position++
					if buffer[position] != rune('o') {
						goto l792
					}
					position++
					if buffer[position] != rune('n') {
						goto l792
					}
					position++
					{
						position793, tokenIndex793 := position, tokenIndex
						if !_rules[rule_]() {
							goto l793
						}
						{
							position795, tokenIndex795 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l796
							}
							position++
							if buffer[position] != rune('.') {
								goto l796
							}
							position++
							goto l795
						l796:
							position, tokenIndex = position795, tokenIndex795
							if buffer[position] != rune('d') {
								goto l793
							}
							position++
							if buffer[position] != rune('e') {
								goto l793
							}
							position++
							if buffer[position] != rune('m') {
								goto l793
							}
							position++
						}
					l795:
						goto l794
					l793:
						position, tokenIndex = position793, tokenIndex793
					}
				l794:
					goto l766
				l792:
					position, tokenIndex = position766, tokenIndex766
					if buffer[position] != rune('v') {
						goto l764
					}
					position++
					{
						position797, tokenIndex797 := position, tokenIndex
						if !_rules[rule_]() {
							goto l797
						}
						if buffer[position] != rune('d') {
							goto l797
						}
						position++
						goto l798
					l797:
						position, tokenIndex = position797, tokenIndex797
					}
				l798:
				}
			l766:
				{
					position799, tokenIndex799 := position, tokenIndex
					if !_rules[rule_]() {
						goto l764
					}
					position, tokenIndex = position799, tokenIndex799
				}
				add(ruleAuthorPrefix1, position765)
			}
			return true
		l764:
			position, tokenIndex = position764, tokenIndex764
			return false
		},
		/* 106 AuthorUpperChar <- <(UpperASCII / MiscodedChar / ('À' / 'Á' / 'Â' / 'Ã' / 'Ä' / 'Å' / 'Æ' / 'Ç' / 'È' / 'É' / 'Ê' / 'Ë' / 'Ì' / 'Í' / 'Î' / 'Ï' / 'Ð' / 'Ñ' / 'Ò' / 'Ó' / 'Ô' / 'Õ' / 'Ö' / 'Ø' / 'Ù' / 'Ú' / 'Û' / 'Ü' / 'Ý' / 'Ć' / 'Č' / 'Ď' / 'İ' / 'Ķ' / 'Ĺ' / 'ĺ' / 'Ľ' / 'ľ' / 'Ł' / 'ł' / 'Ņ' / 'Ō' / 'Ő' / 'Œ' / 'Ř' / 'Ś' / 'Ŝ' / 'Ş' / 'Š' / 'Ÿ' / 'Ź' / 'Ż' / 'Ž' / 'ƒ' / 'Ǿ' / 'Ș' / 'Ț'))> */
		func() bool {
			position800, tokenIndex800 := position, tokenIndex
			{
				position801 := position
				{
					position802, tokenIndex802 := position, tokenIndex
					if !_rules[ruleUpperASCII]() {
						goto l803
					}
					goto l802
				l803:
					position, tokenIndex = position802, tokenIndex802
					if !_rules[ruleMiscodedChar]() {
						goto l804
					}
					goto l802
				l804:
					position, tokenIndex = position802, tokenIndex802
					{
						position805, tokenIndex805 := position, tokenIndex
						if buffer[position] != rune('À') {
							goto l806
						}
						position++
						goto l805
					l806:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Á') {
							goto l807
						}
						position++
						goto l805
					l807:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Â') {
							goto l808
						}
						position++
						goto l805
					l808:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ã') {
							goto l809
						}
						position++
						goto l805
					l809:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ä') {
							goto l810
						}
						position++
						goto l805
					l810:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Å') {
							goto l811
						}
						position++
						goto l805
					l811:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Æ') {
							goto l812
						}
						position++
						goto l805
					l812:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ç') {
							goto l813
						}
						position++
						goto l805
					l813:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('È') {
							goto l814
						}
						position++
						goto l805
					l814:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('É') {
							goto l815
						}
						position++
						goto l805
					l815:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ê') {
							goto l816
						}
						position++
						goto l805
					l816:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ë') {
							goto l817
						}
						position++
						goto l805
					l817:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ì') {
							goto l818
						}
						position++
						goto l805
					l818:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Í') {
							goto l819
						}
						position++
						goto l805
					l819:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Î') {
							goto l820
						}
						position++
						goto l805
					l820:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ï') {
							goto l821
						}
						position++
						goto l805
					l821:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ð') {
							goto l822
						}
						position++
						goto l805
					l822:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ñ') {
							goto l823
						}
						position++
						goto l805
					l823:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ò') {
							goto l824
						}
						position++
						goto l805
					l824:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ó') {
							goto l825
						}
						position++
						goto l805
					l825:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ô') {
							goto l826
						}
						position++
						goto l805
					l826:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Õ') {
							goto l827
						}
						position++
						goto l805
					l827:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ö') {
							goto l828
						}
						position++
						goto l805
					l828:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ø') {
							goto l829
						}
						position++
						goto l805
					l829:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ù') {
							goto l830
						}
						position++
						goto l805
					l830:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ú') {
							goto l831
						}
						position++
						goto l805
					l831:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Û') {
							goto l832
						}
						position++
						goto l805
					l832:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ü') {
							goto l833
						}
						position++
						goto l805
					l833:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ý') {
							goto l834
						}
						position++
						goto l805
					l834:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ć') {
							goto l835
						}
						position++
						goto l805
					l835:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Č') {
							goto l836
						}
						position++
						goto l805
					l836:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ď') {
							goto l837
						}
						position++
						goto l805
					l837:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('İ') {
							goto l838
						}
						position++
						goto l805
					l838:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ķ') {
							goto l839
						}
						position++
						goto l805
					l839:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ĺ') {
							goto l840
						}
						position++
						goto l805
					l840:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('ĺ') {
							goto l841
						}
						position++
						goto l805
					l841:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ľ') {
							goto l842
						}
						position++
						goto l805
					l842:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('ľ') {
							goto l843
						}
						position++
						goto l805
					l843:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ł') {
							goto l844
						}
						position++
						goto l805
					l844:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('ł') {
							goto l845
						}
						position++
						goto l805
					l845:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ņ') {
							goto l846
						}
						position++
						goto l805
					l846:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ō') {
							goto l847
						}
						position++
						goto l805
					l847:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ő') {
							goto l848
						}
						position++
						goto l805
					l848:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Œ') {
							goto l849
						}
						position++
						goto l805
					l849:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ř') {
							goto l850
						}
						position++
						goto l805
					l850:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ś') {
							goto l851
						}
						position++
						goto l805
					l851:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ŝ') {
							goto l852
						}
						position++
						goto l805
					l852:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ş') {
							goto l853
						}
						position++
						goto l805
					l853:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Š') {
							goto l854
						}
						position++
						goto l805
					l854:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ÿ') {
							goto l855
						}
						position++
						goto l805
					l855:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ź') {
							goto l856
						}
						position++
						goto l805
					l856:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ż') {
							goto l857
						}
						position++
						goto l805
					l857:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ž') {
							goto l858
						}
						position++
						goto l805
					l858:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('ƒ') {
							goto l859
						}
						position++
						goto l805
					l859:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ǿ') {
							goto l860
						}
						position++
						goto l805
					l860:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ș') {
							goto l861
						}
						position++
						goto l805
					l861:
						position, tokenIndex = position805, tokenIndex805
						if buffer[position] != rune('Ț') {
							goto l800
						}
						position++
					}
				l805:
				}
			l802:
				add(ruleAuthorUpperChar, position801)
			}
			return true
		l800:
			position, tokenIndex = position800, tokenIndex800
			return false
		},
		/* 107 AuthorLowerChar <- <(LowerASCII / MiscodedChar / Apostrophe / ('à' / 'á' / 'â' / 'ã' / 'ä' / 'å' / 'æ' / 'ç' / 'è' / 'é' / 'ê' / 'ë' / 'ì' / 'í' / 'î' / 'ï' / 'ð' / 'ñ' / 'ò' / 'ó' / 'ó' / 'ô' / 'õ' / 'ö' / 'ø' / 'ù' / 'ú' / 'û' / 'ü' / 'ý' / 'ÿ' / 'ā' / 'ă' / 'ą' / 'ć' / 'ĉ' / 'č' / 'ď' / 'đ' / 'ē' / 'ĕ' / 'ė' / 'ę' / 'ě' / 'ğ' / 'ī' / 'ĭ' / 'İ' / 'ı' / 'ĺ' / 'ľ' / 'ł' / 'ń' / 'ņ' / 'ň' / 'ŏ' / 'ő' / 'œ' / 'ŕ' / 'ř' / 'ś' / 'ş' / 'š' / 'ţ' / 'ť' / 'ũ' / 'ū' / 'ŭ' / 'ů' / 'ű' / 'ź' / 'ż' / 'ž' / 'ſ' / 'ǎ' / 'ǔ' / 'ǧ' / 'ș' / 'ț' / 'ȳ' / 'ß'))> */
		func() bool {
			position862, tokenIndex862 := position, tokenIndex
			{
				position863 := position
				{
					position864, tokenIndex864 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l865
					}
					goto l864
				l865:
					position, tokenIndex = position864, tokenIndex864
					if !_rules[ruleMiscodedChar]() {
						goto l866
					}
					goto l864
				l866:
					position, tokenIndex = position864, tokenIndex864
					if !_rules[ruleApostrophe]() {
						goto l867
					}
					goto l864
				l867:
					position, tokenIndex = position864, tokenIndex864
					{
						position868, tokenIndex868 := position, tokenIndex
						if buffer[position] != rune('à') {
							goto l869
						}
						position++
						goto l868
					l869:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('á') {
							goto l870
						}
						position++
						goto l868
					l870:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('â') {
							goto l871
						}
						position++
						goto l868
					l871:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ã') {
							goto l872
						}
						position++
						goto l868
					l872:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ä') {
							goto l873
						}
						position++
						goto l868
					l873:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('å') {
							goto l874
						}
						position++
						goto l868
					l874:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('æ') {
							goto l875
						}
						position++
						goto l868
					l875:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ç') {
							goto l876
						}
						position++
						goto l868
					l876:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('è') {
							goto l877
						}
						position++
						goto l868
					l877:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('é') {
							goto l878
						}
						position++
						goto l868
					l878:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ê') {
							goto l879
						}
						position++
						goto l868
					l879:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ë') {
							goto l880
						}
						position++
						goto l868
					l880:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ì') {
							goto l881
						}
						position++
						goto l868
					l881:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('í') {
							goto l882
						}
						position++
						goto l868
					l882:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('î') {
							goto l883
						}
						position++
						goto l868
					l883:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ï') {
							goto l884
						}
						position++
						goto l868
					l884:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ð') {
							goto l885
						}
						position++
						goto l868
					l885:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ñ') {
							goto l886
						}
						position++
						goto l868
					l886:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ò') {
							goto l887
						}
						position++
						goto l868
					l887:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ó') {
							goto l888
						}
						position++
						goto l868
					l888:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ó') {
							goto l889
						}
						position++
						goto l868
					l889:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ô') {
							goto l890
						}
						position++
						goto l868
					l890:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('õ') {
							goto l891
						}
						position++
						goto l868
					l891:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ö') {
							goto l892
						}
						position++
						goto l868
					l892:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ø') {
							goto l893
						}
						position++
						goto l868
					l893:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ù') {
							goto l894
						}
						position++
						goto l868
					l894:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ú') {
							goto l895
						}
						position++
						goto l868
					l895:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('û') {
							goto l896
						}
						position++
						goto l868
					l896:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ü') {
							goto l897
						}
						position++
						goto l868
					l897:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ý') {
							goto l898
						}
						position++
						goto l868
					l898:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ÿ') {
							goto l899
						}
						position++
						goto l868
					l899:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ā') {
							goto l900
						}
						position++
						goto l868
					l900:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ă') {
							goto l901
						}
						position++
						goto l868
					l901:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ą') {
							goto l902
						}
						position++
						goto l868
					l902:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ć') {
							goto l903
						}
						position++
						goto l868
					l903:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ĉ') {
							goto l904
						}
						position++
						goto l868
					l904:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('č') {
							goto l905
						}
						position++
						goto l868
					l905:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ď') {
							goto l906
						}
						position++
						goto l868
					l906:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('đ') {
							goto l907
						}
						position++
						goto l868
					l907:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ē') {
							goto l908
						}
						position++
						goto l868
					l908:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ĕ') {
							goto l909
						}
						position++
						goto l868
					l909:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ė') {
							goto l910
						}
						position++
						goto l868
					l910:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ę') {
							goto l911
						}
						position++
						goto l868
					l911:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ě') {
							goto l912
						}
						position++
						goto l868
					l912:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ğ') {
							goto l913
						}
						position++
						goto l868
					l913:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ī') {
							goto l914
						}
						position++
						goto l868
					l914:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ĭ') {
							goto l915
						}
						position++
						goto l868
					l915:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('İ') {
							goto l916
						}
						position++
						goto l868
					l916:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ı') {
							goto l917
						}
						position++
						goto l868
					l917:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ĺ') {
							goto l918
						}
						position++
						goto l868
					l918:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ľ') {
							goto l919
						}
						position++
						goto l868
					l919:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ł') {
							goto l920
						}
						position++
						goto l868
					l920:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ń') {
							goto l921
						}
						position++
						goto l868
					l921:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ņ') {
							goto l922
						}
						position++
						goto l868
					l922:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ň') {
							goto l923
						}
						position++
						goto l868
					l923:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ŏ') {
							goto l924
						}
						position++
						goto l868
					l924:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ő') {
							goto l925
						}
						position++
						goto l868
					l925:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('œ') {
							goto l926
						}
						position++
						goto l868
					l926:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ŕ') {
							goto l927
						}
						position++
						goto l868
					l927:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ř') {
							goto l928
						}
						position++
						goto l868
					l928:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ś') {
							goto l929
						}
						position++
						goto l868
					l929:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ş') {
							goto l930
						}
						position++
						goto l868
					l930:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('š') {
							goto l931
						}
						position++
						goto l868
					l931:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ţ') {
							goto l932
						}
						position++
						goto l868
					l932:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ť') {
							goto l933
						}
						position++
						goto l868
					l933:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ũ') {
							goto l934
						}
						position++
						goto l868
					l934:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ū') {
							goto l935
						}
						position++
						goto l868
					l935:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ŭ') {
							goto l936
						}
						position++
						goto l868
					l936:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ů') {
							goto l937
						}
						position++
						goto l868
					l937:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ű') {
							goto l938
						}
						position++
						goto l868
					l938:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ź') {
							goto l939
						}
						position++
						goto l868
					l939:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ż') {
							goto l940
						}
						position++
						goto l868
					l940:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ž') {
							goto l941
						}
						position++
						goto l868
					l941:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ſ') {
							goto l942
						}
						position++
						goto l868
					l942:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ǎ') {
							goto l943
						}
						position++
						goto l868
					l943:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ǔ') {
							goto l944
						}
						position++
						goto l868
					l944:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ǧ') {
							goto l945
						}
						position++
						goto l868
					l945:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ș') {
							goto l946
						}
						position++
						goto l868
					l946:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ț') {
							goto l947
						}
						position++
						goto l868
					l947:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ȳ') {
							goto l948
						}
						position++
						goto l868
					l948:
						position, tokenIndex = position868, tokenIndex868
						if buffer[position] != rune('ß') {
							goto l862
						}
						position++
					}
				l868:
				}
			l864:
				add(ruleAuthorLowerChar, position863)
			}
			return true
		l862:
			position, tokenIndex = position862, tokenIndex862
			return false
		},
		/* 108 Year <- <(YearRange / YearApprox / YearWithParens / YearWithPage / YearWithDot / YearWithChar / YearNum)> */
		func() bool {
			position949, tokenIndex949 := position, tokenIndex
			{
				position950 := position
				{
					position951, tokenIndex951 := position, tokenIndex
					if !_rules[ruleYearRange]() {
						goto l952
					}
					goto l951
				l952:
					position, tokenIndex = position951, tokenIndex951
					if !_rules[ruleYearApprox]() {
						goto l953
					}
					goto l951
				l953:
					position, tokenIndex = position951, tokenIndex951
					if !_rules[ruleYearWithParens]() {
						goto l954
					}
					goto l951
				l954:
					position, tokenIndex = position951, tokenIndex951
					if !_rules[ruleYearWithPage]() {
						goto l955
					}
					goto l951
				l955:
					position, tokenIndex = position951, tokenIndex951
					if !_rules[ruleYearWithDot]() {
						goto l956
					}
					goto l951
				l956:
					position, tokenIndex = position951, tokenIndex951
					if !_rules[ruleYearWithChar]() {
						goto l957
					}
					goto l951
				l957:
					position, tokenIndex = position951, tokenIndex951
					if !_rules[ruleYearNum]() {
						goto l949
					}
				}
			l951:
				add(ruleYear, position950)
			}
			return true
		l949:
			position, tokenIndex = position949, tokenIndex949
			return false
		},
		/* 109 YearRange <- <(YearNum (Dash / Slash) (Nums+ ('a' / 'b' / 'c' / 'd' / 'e' / 'f' / 'g' / 'h' / 'i' / 'j' / 'k' / 'l' / 'm' / 'n' / 'o' / 'p' / 'q' / 'r' / 's' / 't' / 'u' / 'v' / 'w' / 'x' / 'y' / 'z' / '?')*))> */
		func() bool {
			position958, tokenIndex958 := position, tokenIndex
			{
				position959 := position
				if !_rules[ruleYearNum]() {
					goto l958
				}
				{
					position960, tokenIndex960 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l961
					}
					goto l960
				l961:
					position, tokenIndex = position960, tokenIndex960
					if !_rules[ruleSlash]() {
						goto l958
					}
				}
			l960:
				if !_rules[ruleNums]() {
					goto l958
				}
			l962:
				{
					position963, tokenIndex963 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l963
					}
					goto l962
				l963:
					position, tokenIndex = position963, tokenIndex963
				}
			l964:
				{
					position965, tokenIndex965 := position, tokenIndex
					{
						position966, tokenIndex966 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l967
						}
						position++
						goto l966
					l967:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('b') {
							goto l968
						}
						position++
						goto l966
					l968:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('c') {
							goto l969
						}
						position++
						goto l966
					l969:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('d') {
							goto l970
						}
						position++
						goto l966
					l970:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('e') {
							goto l971
						}
						position++
						goto l966
					l971:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('f') {
							goto l972
						}
						position++
						goto l966
					l972:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('g') {
							goto l973
						}
						position++
						goto l966
					l973:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('h') {
							goto l974
						}
						position++
						goto l966
					l974:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('i') {
							goto l975
						}
						position++
						goto l966
					l975:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('j') {
							goto l976
						}
						position++
						goto l966
					l976:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('k') {
							goto l977
						}
						position++
						goto l966
					l977:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('l') {
							goto l978
						}
						position++
						goto l966
					l978:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('m') {
							goto l979
						}
						position++
						goto l966
					l979:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('n') {
							goto l980
						}
						position++
						goto l966
					l980:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('o') {
							goto l981
						}
						position++
						goto l966
					l981:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('p') {
							goto l982
						}
						position++
						goto l966
					l982:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('q') {
							goto l983
						}
						position++
						goto l966
					l983:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('r') {
							goto l984
						}
						position++
						goto l966
					l984:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('s') {
							goto l985
						}
						position++
						goto l966
					l985:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('t') {
							goto l986
						}
						position++
						goto l966
					l986:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('u') {
							goto l987
						}
						position++
						goto l966
					l987:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('v') {
							goto l988
						}
						position++
						goto l966
					l988:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('w') {
							goto l989
						}
						position++
						goto l966
					l989:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('x') {
							goto l990
						}
						position++
						goto l966
					l990:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('y') {
							goto l991
						}
						position++
						goto l966
					l991:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('z') {
							goto l992
						}
						position++
						goto l966
					l992:
						position, tokenIndex = position966, tokenIndex966
						if buffer[position] != rune('?') {
							goto l965
						}
						position++
					}
				l966:
					goto l964
				l965:
					position, tokenIndex = position965, tokenIndex965
				}
				add(ruleYearRange, position959)
			}
			return true
		l958:
			position, tokenIndex = position958, tokenIndex958
			return false
		},
		/* 110 YearWithDot <- <(YearNum '.')> */
		func() bool {
			position993, tokenIndex993 := position, tokenIndex
			{
				position994 := position
				if !_rules[ruleYearNum]() {
					goto l993
				}
				if buffer[position] != rune('.') {
					goto l993
				}
				position++
				add(ruleYearWithDot, position994)
			}
			return true
		l993:
			position, tokenIndex = position993, tokenIndex993
			return false
		},
		/* 111 YearApprox <- <('[' _? YearNum _? ']')> */
		func() bool {
			position995, tokenIndex995 := position, tokenIndex
			{
				position996 := position
				if buffer[position] != rune('[') {
					goto l995
				}
				position++
				{
					position997, tokenIndex997 := position, tokenIndex
					if !_rules[rule_]() {
						goto l997
					}
					goto l998
				l997:
					position, tokenIndex = position997, tokenIndex997
				}
			l998:
				if !_rules[ruleYearNum]() {
					goto l995
				}
				{
					position999, tokenIndex999 := position, tokenIndex
					if !_rules[rule_]() {
						goto l999
					}
					goto l1000
				l999:
					position, tokenIndex = position999, tokenIndex999
				}
			l1000:
				if buffer[position] != rune(']') {
					goto l995
				}
				position++
				add(ruleYearApprox, position996)
			}
			return true
		l995:
			position, tokenIndex = position995, tokenIndex995
			return false
		},
		/* 112 YearWithPage <- <((YearWithChar / YearNum) _? ':' _? Nums+)> */
		func() bool {
			position1001, tokenIndex1001 := position, tokenIndex
			{
				position1002 := position
				{
					position1003, tokenIndex1003 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l1004
					}
					goto l1003
				l1004:
					position, tokenIndex = position1003, tokenIndex1003
					if !_rules[ruleYearNum]() {
						goto l1001
					}
				}
			l1003:
				{
					position1005, tokenIndex1005 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1005
					}
					goto l1006
				l1005:
					position, tokenIndex = position1005, tokenIndex1005
				}
			l1006:
				if buffer[position] != rune(':') {
					goto l1001
				}
				position++
				{
					position1007, tokenIndex1007 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1007
					}
					goto l1008
				l1007:
					position, tokenIndex = position1007, tokenIndex1007
				}
			l1008:
				if !_rules[ruleNums]() {
					goto l1001
				}
			l1009:
				{
					position1010, tokenIndex1010 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l1010
					}
					goto l1009
				l1010:
					position, tokenIndex = position1010, tokenIndex1010
				}
				add(ruleYearWithPage, position1002)
			}
			return true
		l1001:
			position, tokenIndex = position1001, tokenIndex1001
			return false
		},
		/* 113 YearWithParens <- <('(' (YearWithChar / YearNum) ')')> */
		func() bool {
			position1011, tokenIndex1011 := position, tokenIndex
			{
				position1012 := position
				if buffer[position] != rune('(') {
					goto l1011
				}
				position++
				{
					position1013, tokenIndex1013 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l1014
					}
					goto l1013
				l1014:
					position, tokenIndex = position1013, tokenIndex1013
					if !_rules[ruleYearNum]() {
						goto l1011
					}
				}
			l1013:
				if buffer[position] != rune(')') {
					goto l1011
				}
				position++
				add(ruleYearWithParens, position1012)
			}
			return true
		l1011:
			position, tokenIndex = position1011, tokenIndex1011
			return false
		},
		/* 114 YearWithChar <- <(YearNum LowerASCII)> */
		func() bool {
			position1015, tokenIndex1015 := position, tokenIndex
			{
				position1016 := position
				if !_rules[ruleYearNum]() {
					goto l1015
				}
				if !_rules[ruleLowerASCII]() {
					goto l1015
				}
				add(ruleYearWithChar, position1016)
			}
			return true
		l1015:
			position, tokenIndex = position1015, tokenIndex1015
			return false
		},
		/* 115 YearNum <- <(('1' / '2') ('0' / '7' / '8' / '9') Nums (Nums / '?') '?'*)> */
		func() bool {
			position1017, tokenIndex1017 := position, tokenIndex
			{
				position1018 := position
				{
					position1019, tokenIndex1019 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l1020
					}
					position++
					goto l1019
				l1020:
					position, tokenIndex = position1019, tokenIndex1019
					if buffer[position] != rune('2') {
						goto l1017
					}
					position++
				}
			l1019:
				{
					position1021, tokenIndex1021 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l1022
					}
					position++
					goto l1021
				l1022:
					position, tokenIndex = position1021, tokenIndex1021
					if buffer[position] != rune('7') {
						goto l1023
					}
					position++
					goto l1021
				l1023:
					position, tokenIndex = position1021, tokenIndex1021
					if buffer[position] != rune('8') {
						goto l1024
					}
					position++
					goto l1021
				l1024:
					position, tokenIndex = position1021, tokenIndex1021
					if buffer[position] != rune('9') {
						goto l1017
					}
					position++
				}
			l1021:
				if !_rules[ruleNums]() {
					goto l1017
				}
				{
					position1025, tokenIndex1025 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l1026
					}
					goto l1025
				l1026:
					position, tokenIndex = position1025, tokenIndex1025
					if buffer[position] != rune('?') {
						goto l1017
					}
					position++
				}
			l1025:
			l1027:
				{
					position1028, tokenIndex1028 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l1028
					}
					position++
					goto l1027
				l1028:
					position, tokenIndex = position1028, tokenIndex1028
				}
				add(ruleYearNum, position1018)
			}
			return true
		l1017:
			position, tokenIndex = position1017, tokenIndex1017
			return false
		},
		/* 116 NameUpperChar <- <(UpperChar / UpperCharExtended)> */
		func() bool {
			position1029, tokenIndex1029 := position, tokenIndex
			{
				position1030 := position
				{
					position1031, tokenIndex1031 := position, tokenIndex
					if !_rules[ruleUpperChar]() {
						goto l1032
					}
					goto l1031
				l1032:
					position, tokenIndex = position1031, tokenIndex1031
					if !_rules[ruleUpperCharExtended]() {
						goto l1029
					}
				}
			l1031:
				add(ruleNameUpperChar, position1030)
			}
			return true
		l1029:
			position, tokenIndex = position1029, tokenIndex1029
			return false
		},
		/* 117 UpperCharExtended <- <('Æ' / 'Œ' / 'Ö')> */
		func() bool {
			position1033, tokenIndex1033 := position, tokenIndex
			{
				position1034 := position
				{
					position1035, tokenIndex1035 := position, tokenIndex
					if buffer[position] != rune('Æ') {
						goto l1036
					}
					position++
					goto l1035
				l1036:
					position, tokenIndex = position1035, tokenIndex1035
					if buffer[position] != rune('Œ') {
						goto l1037
					}
					position++
					goto l1035
				l1037:
					position, tokenIndex = position1035, tokenIndex1035
					if buffer[position] != rune('Ö') {
						goto l1033
					}
					position++
				}
			l1035:
				add(ruleUpperCharExtended, position1034)
			}
			return true
		l1033:
			position, tokenIndex = position1033, tokenIndex1033
			return false
		},
		/* 118 UpperChar <- <UpperASCII> */
		func() bool {
			position1038, tokenIndex1038 := position, tokenIndex
			{
				position1039 := position
				if !_rules[ruleUpperASCII]() {
					goto l1038
				}
				add(ruleUpperChar, position1039)
			}
			return true
		l1038:
			position, tokenIndex = position1038, tokenIndex1038
			return false
		},
		/* 119 NameLowerChar <- <(LowerChar / LowerCharExtended / MiscodedChar)> */
		func() bool {
			position1040, tokenIndex1040 := position, tokenIndex
			{
				position1041 := position
				{
					position1042, tokenIndex1042 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l1043
					}
					goto l1042
				l1043:
					position, tokenIndex = position1042, tokenIndex1042
					if !_rules[ruleLowerCharExtended]() {
						goto l1044
					}
					goto l1042
				l1044:
					position, tokenIndex = position1042, tokenIndex1042
					if !_rules[ruleMiscodedChar]() {
						goto l1040
					}
				}
			l1042:
				add(ruleNameLowerChar, position1041)
			}
			return true
		l1040:
			position, tokenIndex = position1040, tokenIndex1040
			return false
		},
		/* 120 MiscodedChar <- <'�'> */
		func() bool {
			position1045, tokenIndex1045 := position, tokenIndex
			{
				position1046 := position
				if buffer[position] != rune('�') {
					goto l1045
				}
				position++
				add(ruleMiscodedChar, position1046)
			}
			return true
		l1045:
			position, tokenIndex = position1045, tokenIndex1045
			return false
		},
		/* 121 LowerCharExtended <- <('æ' / 'œ' / 'à' / 'â' / 'å' / 'ã' / 'ä' / 'á' / 'ç' / 'č' / 'é' / 'è' / 'ë' / 'í' / 'ì' / 'ï' / 'ň' / 'ñ' / 'ñ' / 'ó' / 'ò' / 'ô' / 'ø' / 'õ' / 'ö' / 'ú' / 'ù' / 'ü' / 'ŕ' / 'ř' / 'ŗ' / 'ſ' / 'š' / 'š' / 'ş' / 'ß' / 'ž')> */
		func() bool {
			position1047, tokenIndex1047 := position, tokenIndex
			{
				position1048 := position
				{
					position1049, tokenIndex1049 := position, tokenIndex
					if buffer[position] != rune('æ') {
						goto l1050
					}
					position++
					goto l1049
				l1050:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('œ') {
						goto l1051
					}
					position++
					goto l1049
				l1051:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('à') {
						goto l1052
					}
					position++
					goto l1049
				l1052:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('â') {
						goto l1053
					}
					position++
					goto l1049
				l1053:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('å') {
						goto l1054
					}
					position++
					goto l1049
				l1054:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ã') {
						goto l1055
					}
					position++
					goto l1049
				l1055:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ä') {
						goto l1056
					}
					position++
					goto l1049
				l1056:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('á') {
						goto l1057
					}
					position++
					goto l1049
				l1057:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ç') {
						goto l1058
					}
					position++
					goto l1049
				l1058:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('č') {
						goto l1059
					}
					position++
					goto l1049
				l1059:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('é') {
						goto l1060
					}
					position++
					goto l1049
				l1060:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('è') {
						goto l1061
					}
					position++
					goto l1049
				l1061:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ë') {
						goto l1062
					}
					position++
					goto l1049
				l1062:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('í') {
						goto l1063
					}
					position++
					goto l1049
				l1063:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ì') {
						goto l1064
					}
					position++
					goto l1049
				l1064:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ï') {
						goto l1065
					}
					position++
					goto l1049
				l1065:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ň') {
						goto l1066
					}
					position++
					goto l1049
				l1066:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ñ') {
						goto l1067
					}
					position++
					goto l1049
				l1067:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ñ') {
						goto l1068
					}
					position++
					goto l1049
				l1068:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ó') {
						goto l1069
					}
					position++
					goto l1049
				l1069:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ò') {
						goto l1070
					}
					position++
					goto l1049
				l1070:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ô') {
						goto l1071
					}
					position++
					goto l1049
				l1071:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ø') {
						goto l1072
					}
					position++
					goto l1049
				l1072:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('õ') {
						goto l1073
					}
					position++
					goto l1049
				l1073:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ö') {
						goto l1074
					}
					position++
					goto l1049
				l1074:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ú') {
						goto l1075
					}
					position++
					goto l1049
				l1075:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ù') {
						goto l1076
					}
					position++
					goto l1049
				l1076:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ü') {
						goto l1077
					}
					position++
					goto l1049
				l1077:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ŕ') {
						goto l1078
					}
					position++
					goto l1049
				l1078:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ř') {
						goto l1079
					}
					position++
					goto l1049
				l1079:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ŗ') {
						goto l1080
					}
					position++
					goto l1049
				l1080:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ſ') {
						goto l1081
					}
					position++
					goto l1049
				l1081:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('š') {
						goto l1082
					}
					position++
					goto l1049
				l1082:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('š') {
						goto l1083
					}
					position++
					goto l1049
				l1083:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ş') {
						goto l1084
					}
					position++
					goto l1049
				l1084:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ß') {
						goto l1085
					}
					position++
					goto l1049
				l1085:
					position, tokenIndex = position1049, tokenIndex1049
					if buffer[position] != rune('ž') {
						goto l1047
					}
					position++
				}
			l1049:
				add(ruleLowerCharExtended, position1048)
			}
			return true
		l1047:
			position, tokenIndex = position1047, tokenIndex1047
			return false
		},
		/* 122 LowerChar <- <LowerASCII> */
		func() bool {
			position1086, tokenIndex1086 := position, tokenIndex
			{
				position1087 := position
				if !_rules[ruleLowerASCII]() {
					goto l1086
				}
				add(ruleLowerChar, position1087)
			}
			return true
		l1086:
			position, tokenIndex = position1086, tokenIndex1086
			return false
		},
		/* 123 SpaceCharEOI <- <(_ / !.)> */
		func() bool {
			position1088, tokenIndex1088 := position, tokenIndex
			{
				position1089 := position
				{
					position1090, tokenIndex1090 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1091
					}
					goto l1090
				l1091:
					position, tokenIndex = position1090, tokenIndex1090
					{
						position1092, tokenIndex1092 := position, tokenIndex
						if !matchDot() {
							goto l1092
						}
						goto l1088
					l1092:
						position, tokenIndex = position1092, tokenIndex1092
					}
				}
			l1090:
				add(ruleSpaceCharEOI, position1089)
			}
			return true
		l1088:
			position, tokenIndex = position1088, tokenIndex1088
			return false
		},
		/* 124 Nums <- <[0-9]> */
		func() bool {
			position1093, tokenIndex1093 := position, tokenIndex
			{
				position1094 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l1093
				}
				position++
				add(ruleNums, position1094)
			}
			return true
		l1093:
			position, tokenIndex = position1093, tokenIndex1093
			return false
		},
		/* 125 LowerGreek <- <[α-ω]> */
		func() bool {
			position1095, tokenIndex1095 := position, tokenIndex
			{
				position1096 := position
				if c := buffer[position]; c < rune('α') || c > rune('ω') {
					goto l1095
				}
				position++
				add(ruleLowerGreek, position1096)
			}
			return true
		l1095:
			position, tokenIndex = position1095, tokenIndex1095
			return false
		},
		/* 126 LowerASCII <- <[a-z]> */
		func() bool {
			position1097, tokenIndex1097 := position, tokenIndex
			{
				position1098 := position
				if c := buffer[position]; c < rune('a') || c > rune('z') {
					goto l1097
				}
				position++
				add(ruleLowerASCII, position1098)
			}
			return true
		l1097:
			position, tokenIndex = position1097, tokenIndex1097
			return false
		},
		/* 127 UpperASCII <- <[A-Z]> */
		func() bool {
			position1099, tokenIndex1099 := position, tokenIndex
			{
				position1100 := position
				if c := buffer[position]; c < rune('A') || c > rune('Z') {
					goto l1099
				}
				position++
				add(ruleUpperASCII, position1100)
			}
			return true
		l1099:
			position, tokenIndex = position1099, tokenIndex1099
			return false
		},
		/* 128 Apostrophe <- <(ApostrOther / ApostrASCII)> */
		func() bool {
			position1101, tokenIndex1101 := position, tokenIndex
			{
				position1102 := position
				{
					position1103, tokenIndex1103 := position, tokenIndex
					if !_rules[ruleApostrOther]() {
						goto l1104
					}
					goto l1103
				l1104:
					position, tokenIndex = position1103, tokenIndex1103
					if !_rules[ruleApostrASCII]() {
						goto l1101
					}
				}
			l1103:
				add(ruleApostrophe, position1102)
			}
			return true
		l1101:
			position, tokenIndex = position1101, tokenIndex1101
			return false
		},
		/* 129 ApostrASCII <- <'\''> */
		func() bool {
			position1105, tokenIndex1105 := position, tokenIndex
			{
				position1106 := position
				if buffer[position] != rune('\'') {
					goto l1105
				}
				position++
				add(ruleApostrASCII, position1106)
			}
			return true
		l1105:
			position, tokenIndex = position1105, tokenIndex1105
			return false
		},
		/* 130 ApostrOther <- <('‘' / '’' / '`' / '´')> */
		func() bool {
			position1107, tokenIndex1107 := position, tokenIndex
			{
				position1108 := position
				{
					position1109, tokenIndex1109 := position, tokenIndex
					if buffer[position] != rune('‘') {
						goto l1110
					}
					position++
					goto l1109
				l1110:
					position, tokenIndex = position1109, tokenIndex1109
					if buffer[position] != rune('’') {
						goto l1111
					}
					position++
					goto l1109
				l1111:
					position, tokenIndex = position1109, tokenIndex1109
					if buffer[position] != rune('`') {
						goto l1112
					}
					position++
					goto l1109
				l1112:
					position, tokenIndex = position1109, tokenIndex1109
					if buffer[position] != rune('´') {
						goto l1107
					}
					position++
				}
			l1109:
				add(ruleApostrOther, position1108)
			}
			return true
		l1107:
			position, tokenIndex = position1107, tokenIndex1107
			return false
		},
		/* 131 Dash <- <'-'> */
		func() bool {
			position1113, tokenIndex1113 := position, tokenIndex
			{
				position1114 := position
				if buffer[position] != rune('-') {
					goto l1113
				}
				position++
				add(ruleDash, position1114)
			}
			return true
		l1113:
			position, tokenIndex = position1113, tokenIndex1113
			return false
		},
		/* 132 Slash <- <'/'> */
		func() bool {
			position1115, tokenIndex1115 := position, tokenIndex
			{
				position1116 := position
				if buffer[position] != rune('/') {
					goto l1115
				}
				position++
				add(ruleSlash, position1116)
			}
			return true
		l1115:
			position, tokenIndex = position1115, tokenIndex1115
			return false
		},
		/* 133 _ <- <(MultipleSpace / SingleSpace)> */
		func() bool {
			position1117, tokenIndex1117 := position, tokenIndex
			{
				position1118 := position
				{
					position1119, tokenIndex1119 := position, tokenIndex
					if !_rules[ruleMultipleSpace]() {
						goto l1120
					}
					goto l1119
				l1120:
					position, tokenIndex = position1119, tokenIndex1119
					if !_rules[ruleSingleSpace]() {
						goto l1117
					}
				}
			l1119:
				add(rule_, position1118)
			}
			return true
		l1117:
			position, tokenIndex = position1117, tokenIndex1117
			return false
		},
		/* 134 MultipleSpace <- <(SingleSpace SingleSpace+)> */
		func() bool {
			position1121, tokenIndex1121 := position, tokenIndex
			{
				position1122 := position
				if !_rules[ruleSingleSpace]() {
					goto l1121
				}
				if !_rules[ruleSingleSpace]() {
					goto l1121
				}
			l1123:
				{
					position1124, tokenIndex1124 := position, tokenIndex
					if !_rules[ruleSingleSpace]() {
						goto l1124
					}
					goto l1123
				l1124:
					position, tokenIndex = position1124, tokenIndex1124
				}
				add(ruleMultipleSpace, position1122)
			}
			return true
		l1121:
			position, tokenIndex = position1121, tokenIndex1121
			return false
		},
		/* 135 SingleSpace <- <(' ' / OtherSpace)> */
		func() bool {
			position1125, tokenIndex1125 := position, tokenIndex
			{
				position1126 := position
				{
					position1127, tokenIndex1127 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l1128
					}
					position++
					goto l1127
				l1128:
					position, tokenIndex = position1127, tokenIndex1127
					if !_rules[ruleOtherSpace]() {
						goto l1125
					}
				}
			l1127:
				add(ruleSingleSpace, position1126)
			}
			return true
		l1125:
			position, tokenIndex = position1125, tokenIndex1125
			return false
		},
		/* 136 OtherSpace <- <('\u3000' / '\u00a0' / '\t' / '\r' / '\n' / '\f' / '\v')> */
		func() bool {
			position1129, tokenIndex1129 := position, tokenIndex
			{
				position1130 := position
				{
					position1131, tokenIndex1131 := position, tokenIndex
					if buffer[position] != rune('\u3000') {
						goto l1132
					}
					position++
					goto l1131
				l1132:
					position, tokenIndex = position1131, tokenIndex1131
					if buffer[position] != rune('\u00a0') {
						goto l1133
					}
					position++
					goto l1131
				l1133:
					position, tokenIndex = position1131, tokenIndex1131
					if buffer[position] != rune('\t') {
						goto l1134
					}
					position++
					goto l1131
				l1134:
					position, tokenIndex = position1131, tokenIndex1131
					if buffer[position] != rune('\r') {
						goto l1135
					}
					position++
					goto l1131
				l1135:
					position, tokenIndex = position1131, tokenIndex1131
					if buffer[position] != rune('\n') {
						goto l1136
					}
					position++
					goto l1131
				l1136:
					position, tokenIndex = position1131, tokenIndex1131
					if buffer[position] != rune('\f') {
						goto l1137
					}
					position++
					goto l1131
				l1137:
					position, tokenIndex = position1131, tokenIndex1131
					if buffer[position] != rune('\v') {
						goto l1129
					}
					position++
				}
			l1131:
				add(ruleOtherSpace, position1130)
			}
			return true
		l1129:
			position, tokenIndex = position1129, tokenIndex1129
			return false
		},
		/* 137 END <- <!.> */
		func() bool {
			position1138, tokenIndex1138 := position, tokenIndex
			{
				position1139 := position
				{
					position1140, tokenIndex1140 := position, tokenIndex
					if !matchDot() {
						goto l1140
					}
					goto l1138
				l1140:
					position, tokenIndex = position1140, tokenIndex1140
				}
				add(ruleEND, position1139)
			}
			return true
		l1138:
			position, tokenIndex = position1138, tokenIndex1138
			return false
		},
	}
	p.rules = _rules
	return nil
}
