package parser

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleSciName
	ruleTail
	ruleName
	ruleHybridFormula
	ruleHybridFormulaFull
	ruleHybridFormulaPart
	ruleNamedHybrid
	ruleNamedSpeciesHybrid
	ruleNamedGenusHybrid
	ruleCandidatusName
	ruleCandidatus
	ruleSingleName
	ruleNameUninomial
	ruleNameApprox
	ruleNameComp
	ruleNameSpecies
	ruleGenusWord
	ruleInfraspGroup
	ruleInfraspEpithet
	ruleCultivarWordGroup
	ruleCultivar
	ruleRankCultivar
	ruleNotHybridChar
	ruleCultivarRecursive
	ruleCultivarApostrophe
	ruleSpeciesEpithet
	ruleComparison
	ruleRank
	ruleRankNotho
	ruleRankOtherUncommon
	ruleRankOther
	ruleRankVar
	ruleRankForma
	ruleRankSsp
	ruleRankAgamo
	ruleSubgenusOrSuperspecies
	ruleSubgenus
	ruleSubgenus2
	ruleSubgenus1
	ruleUninomialCombo
	ruleUninomialCombo1
	ruleUninomialCombo2
	ruleRankUninomial
	ruleRankUninomialPlain
	ruleRankUninomialNotho
	ruleUninomial
	ruleUninomialWord
	ruleAbbrSubgenus
	ruleAbbrGenus
	ruleCapWord
	ruleCapWord1
	ruleCapWordWithDash
	ruleUpperAfterDash
	ruleLowerAfterDash
	ruleTwoLetterGenus
	ruleWord
	ruleWord1
	ruleWordStartsWithDigit
	ruleWord2
	ruleWordApostr
	ruleWord4
	ruleMultiDashedWord
	ruleHybridChar
	ruleApproxNameIgnored
	ruleApproximation
	ruleAuthorship
	ruleAuthorshipCombo
	ruleOriginalAuthorship
	ruleOriginalAuthorshipComb
	ruleCombinationAuthorship
	ruleBasionymAuthorshipMissingParens
	ruleMissingParensStart
	ruleMissingParensEnd
	ruleBasionymAuthorshipYearMisformed
	ruleBasionymAuthorship
	ruleBasionymAuthorship1
	ruleBasionymAuthorship2Parens
	ruleAuthorsGroup
	ruleAuthorsTeam
	ruleAuthorSep
	ruleAuthorSep1
	ruleAuthorSep2
	ruleAuthorSepSpanish
	ruleAuthorEx
	ruleAuthorEmend
	ruleAuthor
	ruleAuthor0
	ruleAuthor1
	ruleAuthor2
	ruleUnknownAuthor
	ruleAuthorWord
	ruleAuthorEtAl
	ruleAuthorWord2
	ruleAuthorWord3
	ruleAuthorDashInitials
	ruleAuthorWordSoft
	ruleCapAuthorWord
	ruleAllCapsAuthorWord
	ruleFilius
	ruleFiliusF
	ruleFiliusFNoSpace
	ruleAuthorSuffix
	ruleAuthorPrefixGlued
	ruleAuthorPrefix
	ruleAuthorPrefix2
	ruleAuthorPrefix1
	ruleAuthorUpperChar
	ruleAuthorLowerChar
	ruleYear
	ruleYearRange
	ruleYearWithDot
	ruleYearApprox
	ruleYearWithPage
	ruleYearWithParens
	ruleYearWithChar
	ruleYearNum
	ruleNameUpperChar
	ruleUpperCharExtended
	ruleUpperChar
	ruleNameLowerChar
	ruleMiscodedChar
	ruleLowerCharExtended
	ruleLowerChar
	ruleSpaceCharEOI
	ruleNums
	ruleLowerGreek
	ruleLowerASCII
	ruleUpperASCII
	ruleApostrophe
	ruleApostrASCII
	ruleApostrOther
	ruleDash
	ruleSlash
	rule_
	ruleMultipleSpace
	ruleSingleSpace
	ruleOtherSpace
	ruleEND
)

var rul3s = [...]string{
	"Unknown",
	"SciName",
	"Tail",
	"Name",
	"HybridFormula",
	"HybridFormulaFull",
	"HybridFormulaPart",
	"NamedHybrid",
	"NamedSpeciesHybrid",
	"NamedGenusHybrid",
	"CandidatusName",
	"Candidatus",
	"SingleName",
	"NameUninomial",
	"NameApprox",
	"NameComp",
	"NameSpecies",
	"GenusWord",
	"InfraspGroup",
	"InfraspEpithet",
	"CultivarWordGroup",
	"Cultivar",
	"RankCultivar",
	"NotHybridChar",
	"CultivarRecursive",
	"CultivarApostrophe",
	"SpeciesEpithet",
	"Comparison",
	"Rank",
	"RankNotho",
	"RankOtherUncommon",
	"RankOther",
	"RankVar",
	"RankForma",
	"RankSsp",
	"RankAgamo",
	"SubgenusOrSuperspecies",
	"Subgenus",
	"Subgenus2",
	"Subgenus1",
	"UninomialCombo",
	"UninomialCombo1",
	"UninomialCombo2",
	"RankUninomial",
	"RankUninomialPlain",
	"RankUninomialNotho",
	"Uninomial",
	"UninomialWord",
	"AbbrSubgenus",
	"AbbrGenus",
	"CapWord",
	"CapWord1",
	"CapWordWithDash",
	"UpperAfterDash",
	"LowerAfterDash",
	"TwoLetterGenus",
	"Word",
	"Word1",
	"WordStartsWithDigit",
	"Word2",
	"WordApostr",
	"Word4",
	"MultiDashedWord",
	"HybridChar",
	"ApproxNameIgnored",
	"Approximation",
	"Authorship",
	"AuthorshipCombo",
	"OriginalAuthorship",
	"OriginalAuthorshipComb",
	"CombinationAuthorship",
	"BasionymAuthorshipMissingParens",
	"MissingParensStart",
	"MissingParensEnd",
	"BasionymAuthorshipYearMisformed",
	"BasionymAuthorship",
	"BasionymAuthorship1",
	"BasionymAuthorship2Parens",
	"AuthorsGroup",
	"AuthorsTeam",
	"AuthorSep",
	"AuthorSep1",
	"AuthorSep2",
	"AuthorSepSpanish",
	"AuthorEx",
	"AuthorEmend",
	"Author",
	"Author0",
	"Author1",
	"Author2",
	"UnknownAuthor",
	"AuthorWord",
	"AuthorEtAl",
	"AuthorWord2",
	"AuthorWord3",
	"AuthorDashInitials",
	"AuthorWordSoft",
	"CapAuthorWord",
	"AllCapsAuthorWord",
	"Filius",
	"FiliusF",
	"FiliusFNoSpace",
	"AuthorSuffix",
	"AuthorPrefixGlued",
	"AuthorPrefix",
	"AuthorPrefix2",
	"AuthorPrefix1",
	"AuthorUpperChar",
	"AuthorLowerChar",
	"Year",
	"YearRange",
	"YearWithDot",
	"YearApprox",
	"YearWithPage",
	"YearWithParens",
	"YearWithChar",
	"YearNum",
	"NameUpperChar",
	"UpperCharExtended",
	"UpperChar",
	"NameLowerChar",
	"MiscodedChar",
	"LowerCharExtended",
	"LowerChar",
	"SpaceCharEOI",
	"Nums",
	"LowerGreek",
	"LowerASCII",
	"UpperASCII",
	"Apostrophe",
	"ApostrASCII",
	"ApostrOther",
	"Dash",
	"Slash",
	"_",
	"MultipleSpace",
	"SingleSpace",
	"OtherSpace",
	"END",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type Engine struct {
	baseEngine

	Buffer string
	buffer []rune
	rules  [139]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *Engine) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *Engine) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *Engine
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *Engine) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *Engine) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *Engine) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func Pretty(pretty bool) func(*Engine) error {
	return func(p *Engine) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*Engine) error {
	return func(p *Engine) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *Engine) Init(options ...func(*Engine) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 SciName <- <(_? Name Tail END)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				{
					position2, tokenIndex2 := position, tokenIndex
					if !_rules[rule_]() {
						goto l2
					}
					goto l3
				l2:
					position, tokenIndex = position2, tokenIndex2
				}
			l3:
				if !_rules[ruleName]() {
					goto l0
				}
				if !_rules[ruleTail]() {
					goto l0
				}
				if !_rules[ruleEND]() {
					goto l0
				}
				add(ruleSciName, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Tail <- <((_ / ';' / ',') .*)?> */
		func() bool {
			{
				position5 := position
				{
					position6, tokenIndex6 := position, tokenIndex
					{
						position8, tokenIndex8 := position, tokenIndex
						if !_rules[rule_]() {
							goto l9
						}
						goto l8
					l9:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(';') {
							goto l10
						}
						position++
						goto l8
					l10:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(',') {
							goto l6
						}
						position++
					}
				l8:
				l11:
					{
						position12, tokenIndex12 := position, tokenIndex
						if !matchDot() {
							goto l12
						}
						goto l11
					l12:
						position, tokenIndex = position12, tokenIndex12
					}
					goto l7
				l6:
					position, tokenIndex = position6, tokenIndex6
				}
			l7:
				add(ruleTail, position5)
			}
			return true
		},
		/* 2 Name <- <(NamedHybrid / HybridFormula / CandidatusName / SingleName)> */
		func() bool {
			position13, tokenIndex13 := position, tokenIndex
			{
				position14 := position
				{
					position15, tokenIndex15 := position, tokenIndex
					if !_rules[ruleNamedHybrid]() {
						goto l16
					}
					goto l15
				l16:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleHybridFormula]() {
						goto l17
					}
					goto l15
				l17:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleCandidatusName]() {
						goto l18
					}
					goto l15
				l18:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleSingleName]() {
						goto l13
					}
				}
			l15:
				add(ruleName, position14)
			}
			return true
		l13:
			position, tokenIndex = position13, tokenIndex13
			return false
		},
		/* 3 HybridFormula <- <(SingleName (_ (HybridFormulaPart / HybridFormulaFull))+)> */
		func() bool {
			position19, tokenIndex19 := position, tokenIndex
			{
				position20 := position
				if !_rules[ruleSingleName]() {
					goto l19
				}
				if !_rules[rule_]() {
					goto l19
				}
				{
					position23, tokenIndex23 := position, tokenIndex
					if !_rules[ruleHybridFormulaPart]() {
						goto l24
					}
					goto l23
				l24:
					position, tokenIndex = position23, tokenIndex23
					if !_rules[ruleHybridFormulaFull]() {
						goto l19
					}
				}
			l23:
			l21:
				{
					position22, tokenIndex22 := position, tokenIndex
					if !_rules[rule_]() {
						goto l22
					}
					{
						position25, tokenIndex25 := position, tokenIndex
						if !_rules[ruleHybridFormulaPart]() {
							goto l26
						}
						goto l25
					l26:
						position, tokenIndex = position25, tokenIndex25
						if !_rules[ruleHybridFormulaFull]() {
							goto l22
						}
					}
				l25:
					goto l21
				l22:
					position, tokenIndex = position22, tokenIndex22
				}
				add(ruleHybridFormula, position20)
			}
			return true
		l19:
			position, tokenIndex = position19, tokenIndex19
			return false
		},
		/* 4 HybridFormulaFull <- <(HybridChar (_ SingleName)?)> */
		func() bool {
			position27, tokenIndex27 := position, tokenIndex
			{
				position28 := position
				if !_rules[ruleHybridChar]() {
					goto l27
				}
				{
					position29, tokenIndex29 := position, tokenIndex
					if !_rules[rule_]() {
						goto l29
					}
					if !_rules[ruleSingleName]() {
						goto l29
					}
					goto l30
				l29:
					position, tokenIndex = position29, tokenIndex29
				}
			l30:
				add(ruleHybridFormulaFull, position28)
			}
			return true
		l27:
			position, tokenIndex = position27, tokenIndex27
			return false
		},
		/* 5 HybridFormulaPart <- <(HybridChar _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position31, tokenIndex31 := position, tokenIndex
			{
				position32 := position
				if !_rules[ruleHybridChar]() {
					goto l31
				}
				if !_rules[rule_]() {
					goto l31
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l31
				}
				{
					position33, tokenIndex33 := position, tokenIndex
					if !_rules[rule_]() {
						goto l33
					}
					if !_rules[ruleInfraspGroup]() {
						goto l33
					}
					goto l34
				l33:
					position, tokenIndex = position33, tokenIndex33
				}
			l34:
				add(ruleHybridFormulaPart, position32)
			}
			return true
		l31:
			position, tokenIndex = position31, tokenIndex31
			return false
		},
		/* 6 NamedHybrid <- <(NamedGenusHybrid / NamedSpeciesHybrid)> */
		func() bool {
			position35, tokenIndex35 := position, tokenIndex
			{
				position36 := position
				{
					position37, tokenIndex37 := position, tokenIndex
					if !_rules[ruleNamedGenusHybrid]() {
						goto l38
					}
					goto l37
				l38:
					position, tokenIndex = position37, tokenIndex37
					if !_rules[ruleNamedSpeciesHybrid]() {
						goto l35
					}
				}
			l37:
				add(ruleNamedHybrid, position36)
			}
			return true
		l35:
			position, tokenIndex = position35, tokenIndex35
			return false
		},
		/* 7 NamedSpeciesHybrid <- <(GenusWord (_ Subgenus)? (_ Comparison)? _ HybridChar _? SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position39, tokenIndex39 := position, tokenIndex
			{
				position40 := position
				if !_rules[ruleGenusWord]() {
					goto l39
				}
				{
					position41, tokenIndex41 := position, tokenIndex
					if !_rules[rule_]() {
						goto l41
					}
					if !_rules[ruleSubgenus]() {
						goto l41
					}
					goto l42
				l41:
					position, tokenIndex = position41, tokenIndex41
				}
			l42:
				{
					position43, tokenIndex43 := position, tokenIndex
					if !_rules[rule_]() {
						goto l43
					}
					if !_rules[ruleComparison]() {
						goto l43
					}
					goto l44
				l43:
					position, tokenIndex = position43, tokenIndex43
				}
			l44:
				if !_rules[rule_]() {
					goto l39
				}
				if !_rules[ruleHybridChar]() {
					goto l39
				}
				{
					position45, tokenIndex45 := position, tokenIndex
					if !_rules[rule_]() {
						goto l45
					}
					goto l46
				l45:
					position, tokenIndex = position45, tokenIndex45
				}
			l46:
				if !_rules[ruleSpeciesEpithet]() {
					goto l39
				}
				{
					position47, tokenIndex47 := position, tokenIndex
					if !_rules[rule_]() {
						goto l47
					}
					if !_rules[ruleInfraspGroup]() {
						goto l47
					}
					goto l48
				l47:
					position, tokenIndex = position47, tokenIndex47
				}
			l48:
				add(ruleNamedSpeciesHybrid, position40)
			}
			return true
		l39:
			position, tokenIndex = position39, tokenIndex39
			return false
		},
		/* 8 NamedGenusHybrid <- <(HybridChar _? SingleName)> */
		func() bool {
			position49, tokenIndex49 := position, tokenIndex
			{
				position50 := position
				if !_rules[ruleHybridChar]() {
					goto l49
				}
				{
					position51, tokenIndex51 := position, tokenIndex
					if !_rules[rule_]() {
						goto l51
					}
					goto l52
				l51:
					position, tokenIndex = position51, tokenIndex51
				}
			l52:
				if !_rules[ruleSingleName]() {
					goto l49
				}
				add(ruleNamedGenusHybrid, position50)
			}
			return true
		l49:
			position, tokenIndex = position49, tokenIndex49
			return false
		},
		/* 9 CandidatusName <- <(Candidatus _ SingleName)> */
		func() bool {
			position53, tokenIndex53 := position, tokenIndex
			{
				position54 := position
				if !_rules[ruleCandidatus]() {
					goto l53
				}
				if !_rules[rule_]() {
					goto l53
				}
				if !_rules[ruleSingleName]() {
					goto l53
				}
				add(ruleCandidatusName, position54)
			}
			return true
		l53:
			position, tokenIndex = position53, tokenIndex53
			return false
		},
		/* 10 Candidatus <- <('C' 'a' 'n' 'd' 'i' 'd' 'a' 't' 'u' 's')> */
		func() bool {
			position55, tokenIndex55 := position, tokenIndex
			{
				position56 := position
				if buffer[position] != rune('C') {
					goto l55
				}
				position++
				if buffer[position] != rune('a') {
					goto l55
				}
				position++
				if buffer[position] != rune('n') {
					goto l55
				}
				position++
				if buffer[position] != rune('d') {
					goto l55
				}
				position++
				if buffer[position] != rune('i') {
					goto l55
				}
				position++
				if buffer[position] != rune('d') {
					goto l55
				}
				position++
				if buffer[position] != rune('a') {
					goto l55
				}
				position++
				if buffer[position] != rune('t') {
					goto l55
				}
				position++
				if buffer[position] != rune('u') {
					goto l55
				}
				position++
				if buffer[position] != rune('s') {
					goto l55
				}
				position++
				add(ruleCandidatus, position56)
			}
			return true
		l55:
			position, tokenIndex = position55, tokenIndex55
			return false
		},
		/* 11 SingleName <- <(NameComp / NameApprox / NameSpecies / NameUninomial)> */
		func() bool {
			position57, tokenIndex57 := position, tokenIndex
			{
				position58 := position
				{
					position59, tokenIndex59 := position, tokenIndex
					if !_rules[ruleNameComp]() {
						goto l60
					}
					goto l59
				l60:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleNameApprox]() {
						goto l61
					}
					goto l59
				l61:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleNameSpecies]() {
						goto l62
					}
					goto l59
				l62:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleNameUninomial]() {
						goto l57
					}
				}
			l59:
				add(ruleSingleName, position58)
			}
			return true
		l57:
			position, tokenIndex = position57, tokenIndex57
			return false
		},
		/* 12 NameUninomial <- <((UninomialCombo / Uninomial) (_ CultivarWordGroup)?)> */
		func() bool {
			position63, tokenIndex63 := position, tokenIndex
			{
				position64 := position
				{
					position65, tokenIndex65 := position, tokenIndex
					if !_rules[ruleUninomialCombo]() {
						goto l66
					}
					goto l65
				l66:
					position, tokenIndex = position65, tokenIndex65
					if !_rules[ruleUninomial]() {
						goto l63
					}
				}
			l65:
				{
					position67, tokenIndex67 := position, tokenIndex
					if !_rules[rule_]() {
						goto l67
					}
					if !_rules[ruleCultivarWordGroup]() {
						goto l67
					}
					goto l68
				l67:
					position, tokenIndex = position67, tokenIndex67
				}
			l68:
				add(ruleNameUninomial, position64)
			}
			return true
		l63:
			position, tokenIndex = position63, tokenIndex63
			return false
		},
		/* 13 NameApprox <- <(GenusWord (_ SpeciesEpithet)? _ Approximation ApproxNameIgnored)> */
		func() bool {
			position69, tokenIndex69 := position, tokenIndex
			{
				position70 := position
				if !_rules[ruleGenusWord]() {
					goto l69
				}
				{
					position71, tokenIndex71 := position, tokenIndex
					if !_rules[rule_]() {
						goto l71
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l71
					}
					goto l72
				l71:
					position, tokenIndex = position71, tokenIndex71
				}
			l72:
				if !_rules[rule_]() {
					goto l69
				}
				if !_rules[ruleApproximation]() {
					goto l69
				}
				if !_rules[ruleApproxNameIgnored]() {
					goto l69
				}
				add(ruleNameApprox, position70)
			}
			return true
		l69:
			position, tokenIndex = position69, tokenIndex69
			return false
		},
		/* 14 NameComp <- <(GenusWord _ Comparison (_ SpeciesEpithet)?)> */
		func() bool {
			position73, tokenIndex73 := position, tokenIndex
			{
				position74 := position
				if !_rules[ruleGenusWord]() {
					goto l73
				}
				if !_rules[rule_]() {
					goto l73
				}
				if !_rules[ruleComparison]() {
					goto l73
				}
				{
					position75, tokenIndex75 := position, tokenIndex
					if !_rules[rule_]() {
						goto l75
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l75
					}
					goto l76
				l75:
					position, tokenIndex = position75, tokenIndex75
				}
			l76:
				add(ruleNameComp, position74)
			}
			return true
		l73:
			position, tokenIndex = position73, tokenIndex73
			return false
		},
		/* 15 NameSpecies <- <(GenusWord (_? (Subgenus / SubgenusOrSuperspecies))? _ SpeciesEpithet (_ InfraspGroup)? (_ CultivarWordGroup)?)> */
		func() bool {
			position77, tokenIndex77 := position, tokenIndex
			{
				position78 := position
				if !_rules[ruleGenusWord]() {
					goto l77
				}
				{
					position79, tokenIndex79 := position, tokenIndex
					{
						position81, tokenIndex81 := position, tokenIndex
						if !_rules[rule_]() {
							goto l81
						}
						goto l82
					l81:
						position, tokenIndex = position81, tokenIndex81
					}
				l82:
					{
						position83, tokenIndex83 := position, tokenIndex
						if !_rules[ruleSubgenus]() {
							goto l84
						}
						goto l83
					l84:
						position, tokenIndex = position83, tokenIndex83
						if !_rules[ruleSubgenusOrSuperspecies]() {
							goto l79
						}
					}
				l83:
					goto l80
				l79:
					position, tokenIndex = position79, tokenIndex79
				}
			l80:
				if !_rules[rule_]() {
					goto l77
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l77
				}
				{
					position85, tokenIndex85 := position, tokenIndex
					if !_rules[rule_]() {
						goto l85
					}
					if !_rules[ruleInfraspGroup]() {
						goto l85
					}
					goto l86
				l85:
					position, tokenIndex = position85, tokenIndex85
				}
			l86:
				{
					position87, tokenIndex87 := position, tokenIndex
					if !_rules[rule_]() {
						goto l87
					}
					if !_rules[ruleCultivarWordGroup]() {
						goto l87
					}
					goto l88
				l87:
					position, tokenIndex = position87, tokenIndex87
				}
			l88:
				add(ruleNameSpecies, position78)
			}
			return true
		l77:
			position, tokenIndex = position77, tokenIndex77
			return false
		},
		/* 16 GenusWord <- <((AbbrGenus / UninomialWord) !(_ AuthorWord))> */
		func() bool {
			position89, tokenIndex89 := position, tokenIndex
			{
				position90 := position
				{
					position91, tokenIndex91 := position, tokenIndex
					if !_rules[ruleAbbrGenus]() {
						goto l92
					}
					goto l91
				l92:
					position, tokenIndex = position91, tokenIndex91
					if !_rules[ruleUninomialWord]() {
						goto l89
					}
				}
			l91:
				{
					position93, tokenIndex93 := position, tokenIndex
					if !_rules[rule_]() {
						goto l93
					}
					if !_rules[ruleAuthorWord]() {
						goto l93
					}
					goto l89
				l93:
					position, tokenIndex = position93, tokenIndex93
				}
				add(ruleGenusWord, position90)
			}
			return true
		l89:
			position, tokenIndex = position89, tokenIndex89
			return false
		},
		/* 17 InfraspGroup <- <(InfraspEpithet (_ InfraspEpithet)? (_ InfraspEpithet)?)> */
		func() bool {
			position94, tokenIndex94 := position, tokenIndex
			{
				position95 := position
				if !_rules[ruleInfraspEpithet]() {
					goto l94
				}
				{
					position96, tokenIndex96 := position, tokenIndex
					if !_rules[rule_]() {
						goto l96
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l96
					}
					goto l97
				l96:
					position, tokenIndex = position96, tokenIndex96
				}
			l97:
				{
					position98, tokenIndex98 := position, tokenIndex
					if !_rules[rule_]() {
						goto l98
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l98
					}
					goto l99
				l98:
					position, tokenIndex = position98, tokenIndex98
				}
			l99:
				add(ruleInfraspGroup, position95)
			}
			return true
		l94:
			position, tokenIndex = position94, tokenIndex94
			return false
		},
		/* 18 InfraspEpithet <- <((Rank _?)? !AuthorEx Word (_? Authorship)?)> */
		func() bool {
			position100, tokenIndex100 := position, tokenIndex
			{
				position101 := position
				{
					position102, tokenIndex102 := position, tokenIndex
					if !_rules[ruleRank]() {
						goto l102
					}
					{
						position104, tokenIndex104 := position, tokenIndex
						if !_rules[rule_]() {
							goto l104
						}
						goto l105
					l104:
						position, tokenIndex = position104, tokenIndex104
					}
				l105:
					goto l103
				l102:
					position, tokenIndex = position102, tokenIndex102
				}
			l103:
				{
					position106, tokenIndex106 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l106
					}
					goto l100
				l106:
					position, tokenIndex = position106, tokenIndex106
				}
				if !_rules[ruleWord]() {
					goto l100
				}
				{
					position107, tokenIndex107 := position, tokenIndex
					{
						position109, tokenIndex109 := position, tokenIndex
						if !_rules[rule_]() {
							goto l109
						}
						goto l110
					l109:
						position, tokenIndex = position109, tokenIndex109
					}
				l110:
					if !_rules[ruleAuthorship]() {
						goto l107
					}
					goto l108
				l107:
					position, tokenIndex = position107, tokenIndex107
				}
			l108:
				add(ruleInfraspEpithet, position101)
			}
			return true
		l100:
			position, tokenIndex = position100, tokenIndex100
			return false
		},
		/* 19 CultivarWordGroup <- <(((RankCultivar _)? CultivarApostrophe CultivarRecursive CultivarApostrophe) / (RankCultivar _ Cultivar))> */
		func() bool {
			position111, tokenIndex111 := position, tokenIndex
			{
				position112 := position
				{
					position113, tokenIndex113 := position, tokenIndex
					{
						position115, tokenIndex115 := position, tokenIndex
						if !_rules[ruleRankCultivar]() {
							goto l115
						}
						if !_rules[rule_]() {
							goto l115
						}
						goto l116
					l115:
						position, tokenIndex = position115, tokenIndex115
					}
				l116:
					if !_rules[ruleCultivarApostrophe]() {
						goto l114
					}
					if !_rules[ruleCultivarRecursive]() {
						goto l114
					}
					if !_rules[ruleCultivarApostrophe]() {
						goto l114
					}
					goto l113
				l114:
					position, tokenIndex = position113, tokenIndex113
					if !_rules[ruleRankCultivar]() {
						goto l111
					}
					if !_rules[rule_]() {
						goto l111
					}
					if !_rules[ruleCultivar]() {
						goto l111
					}
				}
			l113:
				add(ruleCultivarWordGroup, position112)
			}
			return true
		l111:
			position, tokenIndex = position111, tokenIndex111
			return false
		},
		/* 20 Cultivar <- <NotHybridChar+> */
		func() bool {
			position117, tokenIndex117 := position, tokenIndex
			{
				position118 := position
				if !_rules[ruleNotHybridChar]() {
					goto l117
				}
			l119:
				{
					position120, tokenIndex120 := position, tokenIndex
					if !_rules[ruleNotHybridChar]() {
						goto l120
					}
					goto l119
				l120:
					position, tokenIndex = position120, tokenIndex120
				}
				add(ruleCultivar, position118)
			}
			return true
		l117:
			position, tokenIndex = position117, tokenIndex117
			return false
		},
		/* 21 RankCultivar <- <('c' 'v' '.'?)> */
		func() bool {
			position121, tokenIndex121 := position, tokenIndex
			{
				position122 := position
				if buffer[position] != rune('c') {
					goto l121
				}
				position++
				if buffer[position] != rune('v') {
					goto l121
				}
				position++
				{
					position123, tokenIndex123 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l123
					}
					position++
					goto l124
				l123:
					position, tokenIndex = position123, tokenIndex123
				}
			l124:
				add(ruleRankCultivar, position122)
			}
			return true
		l121:
			position, tokenIndex = position121, tokenIndex121
			return false
		},
		/* 22 NotHybridChar <- <(!(_ HybridChar) .)> */
		func() bool {
			position125, tokenIndex125 := position, tokenIndex
			{
				position126 := position
				{
					position127, tokenIndex127 := position, tokenIndex
					if !_rules[rule_]() {
						goto l127
					}
					if !_rules[ruleHybridChar]() {
						goto l127
					}
					goto l125
				l127:
					position, tokenIndex = position127, tokenIndex127
				}
				if !matchDot() {
					goto l125
				}
				add(ruleNotHybridChar, position126)
			}
			return true
		l125:
			position, tokenIndex = position125, tokenIndex125
			return false
		},
		/* 23 CultivarRecursive <- <((NotHybridChar CultivarRecursive) / &CultivarApostrophe)> */
		func() bool {
			position128, tokenIndex128 := position, tokenIndex
			{
				position129 := position
				{
					position130, tokenIndex130 := position, tokenIndex
					if !_rules[ruleNotHybridChar]() {
						goto l131
					}
					if !_rules[ruleCultivarRecursive]() {
						goto l131
					}
					goto l130
				l131:
					position, tokenIndex = position130, tokenIndex130
					{
						position132, tokenIndex132 := position, tokenIndex
						if !_rules[ruleCultivarApostrophe]() {
							goto l128
						}
						position, tokenIndex = position132, tokenIndex132
					}
				}
			l130:
				add(ruleCultivarRecursive, position129)
			}
			return true
		l128:
			position, tokenIndex = position128, tokenIndex128
			return false
		},
		/* 24 CultivarApostrophe <- <('\'' / '‘' / '’' / '"' / '“' / '”')> */
		func() bool {
			position133, tokenIndex133 := position, tokenIndex
			{
				position134 := position
				{
					position135, tokenIndex135 := position, tokenIndex
					if buffer[position] != rune('\'') {
						goto l136
					}
					position++
					goto l135
				l136:
					position, tokenIndex = position135, tokenIndex135
					if buffer[position] != rune('‘') {
						goto l137
					}
					position++
					goto l135
				l137:
					position, tokenIndex = position135, tokenIndex135
					if buffer[position] != rune('’') {
						goto l138
					}
					position++
					goto l135
				l138:
					position, tokenIndex = position135, tokenIndex135
					if buffer[position] != rune('"') {
						goto l139
					}
					position++
					goto l135
				l139:
					position, tokenIndex = position135, tokenIndex135
					if buffer[position] != rune('“') {
						goto l140
					}
					position++
					goto l135
				l140:
					position, tokenIndex = position135, tokenIndex135
					if buffer[position] != rune('”') {
						goto l133
					}
					position++
				}
			l135:
				add(ruleCultivarApostrophe, position134)
			}
			return true
		l133:
			position, tokenIndex = position133, tokenIndex133
			return false
		},
		/* 25 SpeciesEpithet <- <(!AuthorEx Word (_? Authorship)?)> */
		func() bool {
			position141, tokenIndex141 := position, tokenIndex
			{
				position142 := position
				{
					position143, tokenIndex143 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l143
					}
					goto l141
				l143:
					position, tokenIndex = position143, tokenIndex143
				}
				if !_rules[ruleWord]() {
					goto l141
				}
				{
					position144, tokenIndex144 := position, tokenIndex
					{
						position146, tokenIndex146 := position, tokenIndex
						if !_rules[rule_]() {
							goto l146
						}
						goto l147
					l146:
						position, tokenIndex = position146, tokenIndex146
					}
				l147:
					if !_rules[ruleAuthorship]() {
						goto l144
					}
					goto l145
				l144:
					position, tokenIndex = position144, tokenIndex144
				}
			l145:
				add(ruleSpeciesEpithet, position142)
			}
			return true
		l141:
			position, tokenIndex = position141, tokenIndex141
			return false
		},
		/* 26 Comparison <- <('c' 'f' '.'? &SpaceCharEOI)> */
		func() bool {
			position148, tokenIndex148 := position, tokenIndex
			{
				position149 := position
				if buffer[position] != rune('c') {
					goto l148
				}
				position++
				if buffer[position] != rune('f') {
					goto l148
				}
				position++
				{
					position150, tokenIndex150 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l150
					}
					position++
					goto l151
				l150:
					position, tokenIndex = position150, tokenIndex150
				}
			l151:
				{
					position152, tokenIndex152 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l148
					}
					position, tokenIndex = position152, tokenIndex152
				}
				add(ruleComparison, position149)
			}
			return true
		l148:
			position, tokenIndex = position148, tokenIndex148
			return false
		},
		/* 27 Rank <- <((RankForma / RankVar / RankSsp / RankOther / RankOtherUncommon / RankAgamo / RankNotho) (_? LowerGreek ('.' / &SpaceCharEOI))?)> */
		func() bool {
			position153, tokenIndex153 := position, tokenIndex
			{
				position154 := position
				{
					position155, tokenIndex155 := position, tokenIndex
					if !_rules[ruleRankForma]() {
						goto l156
					}
					goto l155
				l156:
					position, tokenIndex = position155, tokenIndex155
					if !_rules[ruleRankVar]() {
						goto l157
					}
					goto l155
				l157:
					position, tokenIndex = position155, tokenIndex155
					if !_rules[ruleRankSsp]() {
						goto l158
					}
					goto l155
				l158:
					position, tokenIndex = position155, tokenIndex155
					if !_rules[ruleRankOther]() {
						goto l159
					}
					goto l155
				l159:
					position, tokenIndex = position155, tokenIndex155
					if !_rules[ruleRankOtherUncommon]() {
						goto l160
					}
					goto l155
				l160:
					position, tokenIndex = position155, tokenIndex155
					if !_rules[ruleRankAgamo]() {
						goto l161
					}
					goto l155
				l161:
					position, tokenIndex = position155, tokenIndex155
					if !_rules[ruleRankNotho]() {
						goto l153
					}
				}
			l155:
				{
					position162, tokenIndex162 := position, tokenIndex
					{
						position164, tokenIndex164 := position, tokenIndex
						if !_rules[rule_]() {
							goto l164
						}
						goto l165
					l164:
						position, tokenIndex = position164, tokenIndex164
					}
				l165:
					if !_rules[ruleLowerGreek]() {
						goto l162
					}
					{
						position166, tokenIndex166 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l167
						}
						position++
						goto l166
					l167:
						position, tokenIndex = position166, tokenIndex166
						{
							position168, tokenIndex168 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l162
							}
							position, tokenIndex = position168, tokenIndex168
						}
					}
				l166:
					goto l163
				l162:
					position, tokenIndex = position162, tokenIndex162
				}
			l163:
				add(ruleRank, position154)
			}
			return true
		l153:
			position, tokenIndex = position153, tokenIndex153
			return false
		},
		/* 28 RankNotho <- <((('n' 'o' 't' 'h' 'o' (('v' 'a' 'r') / ('f' 'o') / 'f' / ('s' 'u' 'b' 's' 'p') / ('s' 's' 'p') / ('s' 'p') / ('m' 'o' 'r' 't' 'h') / ('s' 'u' 'p' 's' 'p') / ('s' 'u'))) / ('n' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position169, tokenIndex169 := position, tokenIndex
			{
				position170 := position
				{
					position171, tokenIndex171 := position, tokenIndex
					if buffer[position] != rune('n') {
						goto l172
					}
					position++
					if buffer[position] != rune('o') {
						goto l172
					}
					position++
					if buffer[position] != rune('t') {
						goto l172
					}
					position++
					if buffer[position] != rune('h') {
						goto l172
					}
					position++
					if buffer[position] != rune('o') {
						goto l172
					}
					position++
					{
						position173, tokenIndex173 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l174
						}
						position++
						if buffer[position] != rune('a') {
							goto l174
						}
						position++
						if buffer[position] != rune('r') {
							goto l174
						}
						position++
						goto l173
					l174:
						position, tokenIndex = position173, tokenIndex173
						if buffer[position] != rune('f') {
							goto l175
						}
						position++
						if buffer[position] != rune('o') {
							goto l175
						}
						position++
						goto l173
					l175:
						position, tokenIndex = position173, tokenIndex173
						if buffer[position] != rune('f') {
							goto l176
						}
						position++
						goto l173
					l176:
						position, tokenIndex = position173, tokenIndex173
						if buffer[position] != rune('s') {
							goto l177
						}
						position++
						if buffer[position] != rune('u') {
							goto l177
						}
						position++
						if buffer[position] != rune('b') {
							goto l177
						}
						position++
						if buffer[position] != rune('s') {
							goto l177
						}
						position++
						if buffer[position] != rune('p') {
							goto l177
						}
						position++
						goto l173
					l177:
						position, tokenIndex = position173, tokenIndex173
						if buffer[position] != rune('s') {
							goto l178
						}
						position++
						if buffer[position] != rune('s') {
							goto l178
						}
						position++
						if buffer[position] != rune('p') {
							goto l178
						}
						position++
						goto l173
					l178:
						position, tokenIndex = position173, tokenIndex173
						if buffer[position] != rune('s') {
							goto l179
						}
						position++
						if buffer[position] != rune('p') {
							goto l179
						}
						position++
						goto l173
					l179:
						position, tokenIndex = position173, tokenIndex173
						if buffer[position] != rune('m') {
							goto l180
						}
						position++
						if buffer[position] != rune('o') {
							goto l180
						}
						position++
						if buffer[position] != rune('r') {
							goto l180
						}
						position++
						if buffer[position] != rune('t') {
							goto l180
						}
						position++
						if buffer[position] != rune('h') {
							goto l180
						}
						position++
						goto l173
					l180:
						position, tokenIndex = position173, tokenIndex173
						if buffer[position] != rune('s') {
							goto l181
						}
						position++
						if buffer[position] != rune('u') {
							goto l181
						}
						position++
						if buffer[position] != rune('p') {
							goto l181
						}
						position++
						if buffer[position] != rune('s') {
							goto l181
						}
						position++
						if buffer[position] != rune('p') {
							goto l181
						}
						position++
						goto l173
					l181:
						position, tokenIndex = position173, tokenIndex173
						if buffer[position] != rune('s') {
							goto l172
						}
						position++
						if buffer[position] != rune('u') {
							goto l172
						}
						position++
					}
				l173:
					goto l171
				l172:
					position, tokenIndex = position171, tokenIndex171
					if buffer[position] != rune('n') {
						goto l169
					}
					position++
					if buffer[position] != rune('v') {
						goto l169
					}
					position++
					if buffer[position] != rune('a') {
						goto l169
					}
					position++
					if buffer[position] != rune('r') {
						goto l169
					}
					position++
				}
			l171:
				{
					position182, tokenIndex182 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l183
					}
					position++
					goto l182
				l183:
					position, tokenIndex = position182, tokenIndex182
					{
						position184, tokenIndex184 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l169
						}
						position, tokenIndex = position184, tokenIndex184
					}
				}
			l182:
				add(ruleRankNotho, position170)
			}
			return true
		l169:
			position, tokenIndex = position169, tokenIndex169
			return false
		},
		/* 29 RankOtherUncommon <- <(('*' / ('n' 'a' 't' 'i' 'o') / ('n' 'a' 't' '.') / ('n' 'a' 't') / ('f' '.' 's' 'p') / 'α' / ('β' 'β') / 'β' / 'γ' / 'δ' / 'ε' / 'φ' / 'θ' / 'μ' / ('a' '.') / ('b' '.') / ('c' '.') / ('d' '.') / ('e' '.') / ('g' '.') / ('k' '.') / ('m' 'u' 't' '.')) &SpaceCharEOI)> */
		func() bool {
			position185, tokenIndex185 := position, tokenIndex
			{
				position186 := position
				{
					position187, tokenIndex187 := position, tokenIndex
					if buffer[position] != rune('*') {
						goto l188
					}
					position++
					goto l187
				l188:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('n') {
						goto l189
					}
					position++
					if buffer[position] != rune('a') {
						goto l189
					}
					position++
					if buffer[position] != rune('t') {
						goto l189
					}
					position++
					if buffer[position] != rune('i') {
						goto l189
					}
					position++
					if buffer[position] != rune('o') {
						goto l189
					}
					position++
					goto l187
				l189:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('n') {
						goto l190
					}
					position++
					if buffer[position] != rune('a') {
						goto l190
					}
					position++
					if buffer[position] != rune('t') {
						goto l190
					}
					position++
					if buffer[position] != rune('.') {
						goto l190
					}
					position++
					goto l187
				l190:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('n') {
						goto l191
					}
					position++
					if buffer[position] != rune('a') {
						goto l191
					}
					position++
					if buffer[position] != rune('t') {
						goto l191
					}
					position++
					goto l187
				l191:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('f') {
						goto l192
					}
					position++
					if buffer[position] != rune('.') {
						goto l192
					}
					position++
					if buffer[position] != rune('s') {
						goto l192
					}
					position++
					if buffer[position] != rune('p') {
						goto l192
					}
					position++
					goto l187
				l192:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('α') {
						goto l193
					}
					position++
					goto l187
				l193:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('β') {
						goto l194
					}
					position++
					if buffer[position] != rune('β') {
						goto l194
					}
					position++
					goto l187
				l194:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('β') {
						goto l195
					}
					position++
					goto l187
				l195:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('γ') {
						goto l196
					}
					position++
					goto l187
				l196:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('δ') {
						goto l197
					}
					position++
					goto l187
				l197:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('ε') {
						goto l198
					}
					position++
					goto l187
				l198:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('φ') {
						goto l199
					}
					position++
					goto l187
				l199:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('θ') {
						goto l200
					}
					position++
					goto l187
				l200:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('μ') {
						goto l201
					}
					position++
					goto l187
				l201:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('a') {
						goto l202
					}
					position++
					if buffer[position] != rune('.') {
						goto l202
					}
					position++
					goto l187
				l202:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('b') {
						goto l203
					}
					position++
					if buffer[position] != rune('.') {
						goto l203
					}
					position++
					goto l187
				l203:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('c') {
						goto l204
					}
					position++
					if buffer[position] != rune('.') {
						goto l204
					}
					position++
					goto l187
				l204:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('d') {
						goto l205
					}
					position++
					if buffer[position] != rune('.') {
						goto l205
					}
					position++
					goto l187
				l205:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('e') {
						goto l206
					}
					position++
					if buffer[position] != rune('.') {
						goto l206
					}
					position++
					goto l187
				l206:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('g') {
						goto l207
					}
					position++
					if buffer[position] != rune('.') {
						goto l207
					}
					position++
					goto l187
				l207:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('k') {
						goto l208
					}
					position++
					if buffer[position] != rune('.') {
						goto l208
					}
					position++
					goto l187
				l208:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('m') {
						goto l185
					}
					position++
					if buffer[position] != rune('u') {
						goto l185
					}
					position++
					if buffer[position] != rune('t') {
						goto l185
					}
					position++
					if buffer[position] != rune('.') {
						goto l185
					}
					position++
				}
			l187:
				{
					position209, tokenIndex209 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l185
					}
					position, tokenIndex = position209, tokenIndex209
				}
				add(ruleRankOtherUncommon, position186)
			}
			return true
		l185:
			position, tokenIndex = position185, tokenIndex185
			return false
		},
		/* 30 RankOther <- <((('m' 'o' 'r' 'p' 'h') / ('c' 'o' 'n' 'v' 'a' 'r') / ('p' 's' 'e' 'u' 'd' 'o' 'v' 'a' 'r') / ('s' 'e' 'c' 't') / ('s' 'e' 'r') / ('s' 'u' 'b' 'v' 'a' 'r') / ('s' 'u' 'b' 'f') / ('r' 'a' 'c' 'e') / ('p' 'v') / ('p' 'a' 't' 'h' 'o' 'v' 'a' 'r') / ('a' 'b' '.' (_? ('n' '.'))?) / ('s' 't')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position210, tokenIndex210 := position, tokenIndex
			{
				position211 := position
				{
					position212, tokenIndex212 := position, tokenIndex
					if buffer[position] != rune('m') {
						goto l213
					}
					position++
					if buffer[position] != rune('o') {
						goto l213
					}
					position++
					if buffer[position] != rune('r') {
						goto l213
					}
					position++
					if buffer[position] != rune('p') {
						goto l213
					}
					position++
					if buffer[position] != rune('h') {
						goto l213
					}
					position++
					goto l212
				l213:
					position, tokenIndex = position212, tokenIndex212
					if buffer[position] != rune('c') {
						goto l214
					}
					position++
					if buffer[position] != rune('o') {
						goto l214
					}
					position++
					if buffer[position] != rune('n') {
						goto l214
					}
					position++
					if buffer[position] != rune('v') {
						goto l214
					}
					position++
					if buffer[position] != rune('a') {
						goto l214
					}
					position++
					if buffer[position] != rune('r') {
						goto l214
					}
					position++
					goto l212
				l214:
					position, tokenIndex = position212, tokenIndex212
					if buffer[position] != rune('p') {
						goto l215
					}
					position++
					if buffer[position] != rune('s') {
						goto l215
					}
					position++
					if buffer[position] != rune('e') {
						goto l215
					}
					position++
					if buffer[position] != rune('u') {
						goto l215
					}
					position++
					if buffer[position] != rune('d') {
						goto l215
					}
					position++
					if buffer[position] != rune('o') {
						goto l215
					}
					position++
					if buffer[position] != rune('v') {
						goto l215
					}
					position++
					if buffer[position] != rune('a') {
						goto l215
					}
					position++
					if buffer[position] != rune('r') {
						goto l215
					}
					position++
					goto l212
				l215:
					position, tokenIndex = position212, tokenIndex212
					if buffer[position] != rune('s') {
						goto l216
					}
					position++
					if buffer[position] != rune('e') {
						goto l216
					}
					position++
					if buffer[position] != rune('c') {
						goto l216
					}
					position++
					if buffer[position] != rune('t') {
						goto l216
					}
					position++
					goto l212
				l216:
					position, tokenIndex = position212, tokenIndex212
					if buffer[position] != rune('s') {
						goto l217
					}
					position++
					if buffer[position] != rune('e') {
						goto l217
					}
					position++
					if buffer[position] != rune('r') {
						goto l217
					}
					position++
					goto l212
				l217:
					position, tokenIndex = position212, tokenIndex212
					if buffer[position] != rune('s') {
						goto l218
					}
					position++
					if buffer[position] != rune('u') {
						goto l218
					}
					position++
					if buffer[position] != rune('b') {
						goto l218
					}
					position++
					if buffer[position] != rune('v') {
						goto l218
					}
					position++
					if buffer[position] != rune('a') {
						goto l218
					}
					position++
					if buffer[position] != rune('r') {
						goto l218
					}
					position++
					goto l212
				l218:
					position, tokenIndex = position212, tokenIndex212
					if buffer[position] != rune('s') {
						goto l219
					}
					position++
					if buffer[position] != rune('u') {
						goto l219
					}
					position++
					if buffer[position] != rune('b') {
						goto l219
					}
					position++
					if buffer[position] != rune('f') {
						goto l219
					}
					position++
					goto l212
				l219:
					position, tokenIndex = position212, tokenIndex212
					if buffer[position] != rune('r') {
						goto l220
					}
					position++
					if buffer[position] != rune('a') {
						goto l220
					}
					position++
					if buffer[position] != rune('c') {
						goto l220
					}
					position++
					if buffer[position] != rune('e') {
						goto l220
					}
					position++
					goto l212
				l220:
					position, tokenIndex = position212, tokenIndex212
					if buffer[position] != rune('p') {
						goto l221
					}
					position++
					if buffer[position] != rune('v') {
						goto l221
					}
					position++
					goto l212
				l221:
					position, tokenIndex = position212, tokenIndex212
					if buffer[position] != rune('p') {
						goto l222
					}
					position++
					if buffer[position] != rune('a') {
						goto l222
					}
					position++
					if buffer[position] != rune('t') {
						goto l222
					}
					position++
					if buffer[position] != rune('h') {
						goto l222
					}
					position++
					if buffer[position] != rune('o') {
						goto l222
					}
					position++
					if buffer[position] != rune('v') {
						goto l222
					}
					position++
					if buffer[position] != rune('a') {
						goto l222
					}
					position++
					if buffer[position] != rune('r') {
						goto l222
					}
					position++
					goto l212
				l222:
					position, tokenIndex = position212, tokenIndex212
					if buffer[position] != rune('a') {
						goto l223
					}
					position++
					if buffer[position] != rune('b') {
						goto l223
					}
					position++
					if buffer[position] != rune('.') {
						goto l223
					}
					position++
					{
						position224, tokenIndex224 := position, tokenIndex
						{
							position226, tokenIndex226 := position, tokenIndex
							if !_rules[rule_]() {
								goto l226
							}
							goto l227
						l226:
							position, tokenIndex = position226, tokenIndex226
						}
					l227:
						if buffer[position] != rune('n') {
							goto l224
						}
						position++
						if buffer[position] != rune('.') {
							goto l224
						}
						position++
						goto l225
					l224:
						position, tokenIndex = position224, tokenIndex224
					}
				l225:
					goto l212
				l223:
					position, tokenIndex = position212, tokenIndex212
					if buffer[position] != rune('s') {
						goto l210
					}
					position++
					if buffer[position] != rune('t') {
						goto l210
					}
					position++
				}
			l212:
				{
					position228, tokenIndex228 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l229
					}
					position++
					goto l228
				l229:
					position, tokenIndex = position228, tokenIndex228
					{
						position230, tokenIndex230 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l210
						}
						position, tokenIndex = position230, tokenIndex230
					}
				}
			l228:
				add(ruleRankOther, position211)
			}
			return true
		l210:
			position, tokenIndex = position210, tokenIndex210
			return false
		},
		/* 31 RankVar <- <((('v' 'a' 'r' 'i' 'e' 't' 'y') / ('[' 'v' 'a' 'r' '.' ']') / ('v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position231, tokenIndex231 := position, tokenIndex
			{
				position232 := position
				{
					position233, tokenIndex233 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l234
					}
					position++
					if buffer[position] != rune('a') {
						goto l234
					}
					position++
					if buffer[position] != rune('r') {
						goto l234
					}
					position++
					if buffer[position] != rune('i') {
						goto l234
					}
					position++
					if buffer[position] != rune('e') {
						goto l234
					}
					position++
					if buffer[position] != rune('t') {
						goto l234
					}
					position++
					if buffer[position] != rune('y') {
						goto l234
					}
					position++
					goto l233
				l234:
					position, tokenIndex = position233, tokenIndex233
					if buffer[position] != rune('[') {
						goto l235
					}
					position++
					if buffer[position] != rune('v') {
						goto l235
					}
					position++
					if buffer[position] != rune('a') {
						goto l235
					}
					position++
					if buffer[position] != rune('r') {
						goto l235
					}
					position++
					if buffer[position] != rune('.') {
						goto l235
					}
					position++
					if buffer[position] != rune(']') {
						goto l235
					}
					position++
					goto l233
				l235:
					position, tokenIndex = position233, tokenIndex233
					if buffer[position] != rune('v') {
						goto l231
					}
					position++
					if buffer[position] != rune('a') {
						goto l231
					}
					position++
					if buffer[position] != rune('r') {
						goto l231
					}
					position++
				}
			l233:
				{
					position236, tokenIndex236 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l237
					}
					position++
					goto l236
				l237:
					position, tokenIndex = position236, tokenIndex236
					{
						position238, tokenIndex238 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l231
						}
						position, tokenIndex = position238, tokenIndex238
					}
				}
			l236:
				add(ruleRankVar, position232)
			}
			return true
		l231:
			position, tokenIndex = position231, tokenIndex231
			return false
		},
		/* 32 RankForma <- <((('f' 'o' 'r' 'm' 'a') / ('f' 'm' 'a') / ('f' 'm') / ('f' 'o' 'r' 'm') / ('f' 'o') / 'f') ('.' / &SpaceCharEOI))> */
		func() bool {
			position239, tokenIndex239 := position, tokenIndex
			{
				position240 := position
				{
					position241, tokenIndex241 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l242
					}
					position++
					if buffer[position] != rune('o') {
						goto l242
					}
					position++
					if buffer[position] != rune('r') {
						goto l242
					}
					position++
					if buffer[position] != rune('m') {
						goto l242
					}
					position++
					if buffer[position] != rune('a') {
						goto l242
					}
					position++
					goto l241
				l242:
					position, tokenIndex = position241, tokenIndex241
					if buffer[position] != rune('f') {
						goto l243
					}
					position++
					if buffer[position] != rune('m') {
						goto l243
					}
					position++
					if buffer[position] != rune('a') {
						goto l243
					}
					position++
					goto l241
				l243:
					position, tokenIndex = position241, tokenIndex241
					if buffer[position] != rune('f') {
						goto l244
					}
					position++
					if buffer[position] != rune('m') {
						goto l244
					}
					position++
					goto l241
				l244:
					position, tokenIndex = position241, tokenIndex241
					if buffer[position] != rune('f') {
						goto l245
					}
					position++
					if buffer[position] != rune('o') {
						goto l245
					}
					position++
					if buffer[position] != rune('r') {
						goto l245
					}
					position++
					if buffer[position] != rune('m') {
						goto l245
					}
					position++
					goto l241
				l245:
					position, tokenIndex = position241, tokenIndex241
					if buffer[position] != rune('f') {
						goto l246
					}
					position++
					if buffer[position] != rune('o') {
						goto l246
					}
					position++
					goto l241
				l246:
					position, tokenIndex = position241, tokenIndex241
					if buffer[position] != rune('f') {
						goto l239
					}
					position++
				}
			l241:
				{
					position247, tokenIndex247 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l248
					}
					position++
					goto l247
				l248:
					position, tokenIndex = position247, tokenIndex247
					{
						position249, tokenIndex249 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l239
						}
						position, tokenIndex = position249, tokenIndex249
					}
				}
			l247:
				add(ruleRankForma, position240)
			}
			return true
		l239:
			position, tokenIndex = position239, tokenIndex239
			return false
		},
		/* 33 RankSsp <- <((('s' 's' 'p') / ('s' 'u' 'b' 's' 'p' 'e' 'c') / ('s' 'u' 'b' 's' 'p')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position250, tokenIndex250 := position, tokenIndex
			{
				position251 := position
				{
					position252, tokenIndex252 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l253
					}
					position++
					if buffer[position] != rune('s') {
						goto l253
					}
					position++
					if buffer[position] != rune('p') {
						goto l253
					}
					position++
					goto l252
				l253:
					position, tokenIndex = position252, tokenIndex252
					if buffer[position] != rune('s') {
						goto l254
					}
					position++
					if buffer[position] != rune('u') {
						goto l254
					}
					position++
					if buffer[position] != rune('b') {
						goto l254
					}
					position++
					if buffer[position] != rune('s') {
						goto l254
					}
					position++
					if buffer[position] != rune('p') {
						goto l254
					}
					position++
					if buffer[position] != rune('e') {
						goto l254
					}
					position++
					if buffer[position] != rune('c') {
						goto l254
					}
					position++
					goto l252
				l254:
					position, tokenIndex = position252, tokenIndex252
					if buffer[position] != rune('s') {
						goto l250
					}
					position++
					if buffer[position] != rune('u') {
						goto l250
					}
					position++
					if buffer[position] != rune('b') {
						goto l250
					}
					position++
					if buffer[position] != rune('s') {
						goto l250
					}
					position++
					if buffer[position] != rune('p') {
						goto l250
					}
					position++
				}
			l252:
				{
					position255, tokenIndex255 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l256
					}
					position++
					goto l255
				l256:
					position, tokenIndex = position255, tokenIndex255
					{
						position257, tokenIndex257 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l250
						}
						position, tokenIndex = position257, tokenIndex257
					}
				}
			l255:
				add(ruleRankSsp, position251)
			}
			return true
		l250:
			position, tokenIndex = position250, tokenIndex250
			return false
		},
		/* 34 RankAgamo <- <((('a' 'g' 'a' 'm' 'o' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 's' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position258, tokenIndex258 := position, tokenIndex
			{
				position259 := position
				{
					position260, tokenIndex260 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l261
					}
					position++
					if buffer[position] != rune('g') {
						goto l261
					}
					position++
					if buffer[position] != rune('a') {
						goto l261
					}
					position++
					if buffer[position] != rune('m') {
						goto l261
					}
					position++
					if buffer[position] != rune('o') {
						goto l261
					}
					position++
					if buffer[position] != rune('s') {
						goto l261
					}
					position++
					if buffer[position] != rune('p') {
						goto l261
					}
					position++
					goto l260
				l261:
					position, tokenIndex = position260, tokenIndex260
					if buffer[position] != rune('a') {
						goto l262
					}
					position++
					if buffer[position] != rune('g') {
						goto l262
					}
					position++
					if buffer[position] != rune('a') {
						goto l262
					}
					position++
					if buffer[position] != rune('m') {
						goto l262
					}
					position++
					if buffer[position] != rune('o') {
						goto l262
					}
					position++
					if buffer[position] != rune('s') {
						goto l262
					}
					position++
					if buffer[position] != rune('s') {
						goto l262
					}
					position++
					if buffer[position] != rune('p') {
						goto l262
					}
					position++
					goto l260
				l262:
					position, tokenIndex = position260, tokenIndex260
					if buffer[position] != rune('a') {
						goto l258
					}
					position++
					if buffer[position] != rune('g') {
						goto l258
					}
					position++
					if buffer[position] != rune('a') {
						goto l258
					}
					position++
					if buffer[position] != rune('m') {
						goto l258
					}
					position++
					if buffer[position] != rune('o') {
						goto l258
					}
					position++
					if buffer[position] != rune('v') {
						goto l258
					}
					position++
					if buffer[position] != rune('a') {
						goto l258
					}
					position++
					if buffer[position] != rune('r') {
						goto l258
					}
					position++
				}
			l260:
				{
					position263, tokenIndex263 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l264
					}
					position++
					goto l263
				l264:
					position, tokenIndex = position263, tokenIndex263
					{
						position265, tokenIndex265 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l258
						}
						position, tokenIndex = position265, tokenIndex265
					}
				}
			l263:
				add(ruleRankAgamo, position259)
			}
			return true
		l258:
			position, tokenIndex = position258, tokenIndex258
			return false
		},
		/* 35 SubgenusOrSuperspecies <- <('(' _? NameLowerChar+ _? ')')> */
		func() bool {
			position266, tokenIndex266 := position, tokenIndex
			{
				position267 := position
				if buffer[position] != rune('(') {
					goto l266
				}
				position++
				{
					position268, tokenIndex268 := position, tokenIndex
					if !_rules[rule_]() {
						goto l268
					}
					goto l269
				l268:
					position, tokenIndex = position268, tokenIndex268
				}
			l269:
				if !_rules[ruleNameLowerChar]() {
					goto l266
				}
			l270:
				{
					position271, tokenIndex271 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l271
					}
					goto l270
				l271:
					position, tokenIndex = position271, tokenIndex271
				}
				{
					position272, tokenIndex272 := position, tokenIndex
					if !_rules[rule_]() {
						goto l272
					}
					goto l273
				l272:
					position, tokenIndex = position272, tokenIndex272
				}
			l273:
				if buffer[position] != rune(')') {
					goto l266
				}
				position++
				add(ruleSubgenusOrSuperspecies, position267)
			}
			return true
		l266:
			position, tokenIndex = position266, tokenIndex266
			return false
		},
		/* 36 Subgenus <- <(Subgenus2 / Subgenus1)> */
		func() bool {
			position274, tokenIndex274 := position, tokenIndex
			{
				position275 := position
				{
					position276, tokenIndex276 := position, tokenIndex
					if !_rules[ruleSubgenus2]() {
						goto l277
					}
					goto l276
				l277:
					position, tokenIndex = position276, tokenIndex276
					if !_rules[ruleSubgenus1]() {
						goto l274
					}
				}
			l276:
				add(ruleSubgenus, position275)
			}
			return true
		l274:
			position, tokenIndex = position274, tokenIndex274
			return false
		},
		/* 37 Subgenus2 <- <('(' _? AbbrSubgenus _? ')' !(_? NameUpperChar))> */
		func() bool {
			position278, tokenIndex278 := position, tokenIndex
			{
				position279 := position
				if buffer[position] != rune('(') {
					goto l278
				}
				position++
				{
					position280, tokenIndex280 := position, tokenIndex
					if !_rules[rule_]() {
						goto l280
					}
					goto l281
				l280:
					position, tokenIndex = position280, tokenIndex280
				}
			l281:
				if !_rules[ruleAbbrSubgenus]() {
					goto l278
				}
				{
					position282, tokenIndex282 := position, tokenIndex
					if !_rules[rule_]() {
						goto l282
					}
					goto l283
				l282:
					position, tokenIndex = position282, tokenIndex282
				}
			l283:
				if buffer[position] != rune(')') {
					goto l278
				}
				position++
				{
					position284, tokenIndex284 := position, tokenIndex
					{
						position285, tokenIndex285 := position, tokenIndex
						if !_rules[rule_]() {
							goto l285
						}
						goto l286
					l285:
						position, tokenIndex = position285, tokenIndex285
					}
				l286:
					if !_rules[ruleNameUpperChar]() {
						goto l284
					}
					goto l278
				l284:
					position, tokenIndex = position284, tokenIndex284
				}
				add(ruleSubgenus2, position279)
			}
			return true
		l278:
			position, tokenIndex = position278, tokenIndex278
			return false
		},
		/* 38 Subgenus1 <- <('(' _? UninomialWord _? ')')> */
		func() bool {
			position287, tokenIndex287 := position, tokenIndex
			{
				position288 := position
				if buffer[position] != rune('(') {
					goto l287
				}
				position++
				{
					position289, tokenIndex289 := position, tokenIndex
					if !_rules[rule_]() {
						goto l289
					}
					goto l290
				l289:
					position, tokenIndex = position289, tokenIndex289
				}
			l290:
				if !_rules[ruleUninomialWord]() {
					goto l287
				}
				{
					position291, tokenIndex291 := position, tokenIndex
					if !_rules[rule_]() {
						goto l291
					}
					goto l292
				l291:
					position, tokenIndex = position291, tokenIndex291
				}
			l292:
				if buffer[position] != rune(')') {
					goto l287
				}
				position++
				add(ruleSubgenus1, position288)
			}
			return true
		l287:
			position, tokenIndex = position287, tokenIndex287
			return false
		},
		/* 39 UninomialCombo <- <(UninomialCombo1 / UninomialCombo2)> */
		func() bool {
			position293, tokenIndex293 := position, tokenIndex
			{
				position294 := position
				{
					position295, tokenIndex295 := position, tokenIndex
					if !_rules[ruleUninomialCombo1]() {
						goto l296
					}
					goto l295
				l296:
					position, tokenIndex = position295, tokenIndex295
					if !_rules[ruleUninomialCombo2]() {
						goto l293
					}
				}
			l295:
				add(ruleUninomialCombo, position294)
			}
			return true
		l293:
			position, tokenIndex = position293, tokenIndex293
			return false
		},
		/* 40 UninomialCombo1 <- <(UninomialWord _? Subgenus (_? Authorship)?)> */
		func() bool {
			position297, tokenIndex297 := position, tokenIndex
			{
				position298 := position
				if !_rules[ruleUninomialWord]() {
					goto l297
				}
				{
					position299, tokenIndex299 := position, tokenIndex
					if !_rules[rule_]() {
						goto l299
					}
					goto l300
				l299:
					position, tokenIndex = position299, tokenIndex299
				}
			l300:
				if !_rules[ruleSubgenus]() {
					goto l297
				}
				{
					position301, tokenIndex301 := position, tokenIndex
					{
						position303, tokenIndex303 := position, tokenIndex
						if !_rules[rule_]() {
							goto l303
						}
						goto l304
					l303:
						position, tokenIndex = position303, tokenIndex303
					}
				l304:
					if !_rules[ruleAuthorship]() {
						goto l301
					}
					goto l302
				l301:
					position, tokenIndex = position301, tokenIndex301
				}
			l302:
				add(ruleUninomialCombo1, position298)
			}
			return true
		l297:
			position, tokenIndex = position297, tokenIndex297
			return false
		},
		/* 41 UninomialCombo2 <- <(Uninomial _ RankUninomial _ Uninomial)> */
		func() bool {
			position305, tokenIndex305 := position, tokenIndex
			{
				position306 := position
				if !_rules[ruleUninomial]() {
					goto l305
				}
				if !_rules[rule_]() {
					goto l305
				}
				if !_rules[ruleRankUninomial]() {
					goto l305
				}
				if !_rules[rule_]() {
					goto l305
				}
				if !_rules[ruleUninomial]() {
					goto l305
				}
				add(ruleUninomialCombo2, position306)
			}
			return true
		l305:
			position, tokenIndex = position305, tokenIndex305
			return false
		},
		/* 42 RankUninomial <- <(RankUninomialPlain / RankUninomialNotho)> */
		func() bool {
			position307, tokenIndex307 := position, tokenIndex
			{
				position308 := position
				{
					position309, tokenIndex309 := position, tokenIndex
					if !_rules[ruleRankUninomialPlain]() {
						goto l310
					}
					goto l309
				l310:
					position, tokenIndex = position309, tokenIndex309
					if !_rules[ruleRankUninomialNotho]() {
						goto l307
					}
				}
			l309:
				add(ruleRankUninomial, position308)
			}
			return true
		l307:
			position, tokenIndex = position307, tokenIndex307
			return false
		},
		/* 43 RankUninomialPlain <- <((('s' 'e' 'c' 't') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('t' 'r' 'i' 'b') / ('s' 'u' 'b' 't' 'r' 'i' 'b') / ('s' 'u' 'b' 's' 'e' 'r') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('f' 'a' 'm') / ('s' 'u' 'b' 'f' 'a' 'm') / ('s' 'u' 'p' 'e' 'r' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position311, tokenIndex311 := position, tokenIndex
			{
				position312 := position
				{
					position313, tokenIndex313 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l314
					}
					position++
					if buffer[position] != rune('e') {
						goto l314
					}
					position++
					if buffer[position] != rune('c') {
						goto l314
					}
					position++
					if buffer[position] != rune('t') {
						goto l314
					}
					position++
					goto l313
				l314:
					position, tokenIndex = position313, tokenIndex313
					if buffer[position] != rune('s') {
						goto l315
					}
					position++
					if buffer[position] != rune('u') {
						goto l315
					}
					position++
					if buffer[position] != rune('b') {
						goto l315
					}
					position++
					if buffer[position] != rune('s') {
						goto l315
					}
					position++
					if buffer[position] != rune('e') {
						goto l315
					}
					position++
					if buffer[position] != rune('c') {
						goto l315
					}
					position++
					if buffer[position] != rune('t') {
						goto l315
					}
					position++
					goto l313
				l315:
					position, tokenIndex = position313, tokenIndex313
					if buffer[position] != rune('t') {
						goto l316
					}
					position++
					if buffer[position] != rune('r') {
						goto l316
					}
					position++
					if buffer[position] != rune('i') {
						goto l316
					}
					position++
					if buffer[position] != rune('b') {
						goto l316
					}
					position++
					goto l313
				l316:
					position, tokenIndex = position313, tokenIndex313
					if buffer[position] != rune('s') {
						goto l317
					}
					position++
					if buffer[position] != rune('u') {
						goto l317
					}
					position++
					if buffer[position] != rune('b') {
						goto l317
					}
					position++
					if buffer[position] != rune('t') {
						goto l317
					}
					position++
					if buffer[position] != rune('r') {
						goto l317
					}
					position++
					if buffer[position] != rune('i') {
						goto l317
					}
					position++
					if buffer[position] != rune('b') {
						goto l317
					}
					position++
					goto l313
				l317:
					position, tokenIndex = position313, tokenIndex313
					if buffer[position] != rune('s') {
						goto l318
					}
					position++
					if buffer[position] != rune('u') {
						goto l318
					}
					position++
					if buffer[position] != rune('b') {
						goto l318
					}
					position++
					if buffer[position] != rune('s') {
						goto l318
					}
					position++
					if buffer[position] != rune('e') {
						goto l318
					}
					position++
					if buffer[position] != rune('r') {
						goto l318
					}
					position++
					goto l313
				l318:
					position, tokenIndex = position313, tokenIndex313
					if buffer[position] != rune('s') {
						goto l319
					}
					position++
					if buffer[position] != rune('e') {
						goto l319
					}
					position++
					if buffer[position] != rune('r') {
						goto l319
					}
					position++
					goto l313
				l319:
					position, tokenIndex = position313, tokenIndex313
					if buffer[position] != rune('s') {
						goto l320
					}
					position++
					if buffer[position] != rune('u') {
						goto l320
					}
					position++
					if buffer[position] != rune('b') {
						goto l320
					}
					position++
					if buffer[position] != rune('g') {
						goto l320
					}
					position++
					if buffer[position] != rune('e') {
						goto l320
					}
					position++
					if buffer[position] != rune('n') {
						goto l320
					}
					position++
					goto l313
				l320:
					position, tokenIndex = position313, tokenIndex313
					if buffer[position] != rune('s') {
						goto l321
					}
					position++
					if buffer[position] != rune('u') {
						goto l321
					}
					position++
					if buffer[position] != rune('b') {
						goto l321
					}
					position++
					if buffer[position] != rune('g') {
						goto l321
					}
					position++
					goto l313
				l321:
					position, tokenIndex = position313, tokenIndex313
					if buffer[position] != rune('f') {
						goto l322
					}
					position++
					if buffer[position] != rune('a') {
						goto l322
					}
					position++
					if buffer[position] != rune('m') {
						goto l322
					}
					position++
					goto l313
				l322:
					position, tokenIndex = position313, tokenIndex313
					if buffer[position] != rune('s') {
						goto l323
					}
					position++
					if buffer[position] != rune('u') {
						goto l323
					}
					position++
					if buffer[position] != rune('b') {
						goto l323
					}
					position++
					if buffer[position] != rune('f') {
						goto l323
					}
					position++
					if buffer[position] != rune('a') {
						goto l323
					}
					position++
					if buffer[position] != rune('m') {
						goto l323
					}
					position++
					goto l313
				l323:
					position, tokenIndex = position313, tokenIndex313
					if buffer[position] != rune('s') {
						goto l311
					}
					position++
					if buffer[position] != rune('u') {
						goto l311
					}
					position++
					if buffer[position] != rune('p') {
						goto l311
					}
					position++
					if buffer[position] != rune('e') {
						goto l311
					}
					position++
					if buffer[position] != rune('r') {
						goto l311
					}
					position++
					if buffer[position] != rune('t') {
						goto l311
					}
					position++
					if buffer[position] != rune('r') {
						goto l311
					}
					position++
					if buffer[position] != rune('i') {
						goto l311
					}
					position++
					if buffer[position] != rune('b') {
						goto l311
					}
					position++
				}
			l313:
				{
					position324, tokenIndex324 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l325
					}
					position++
					goto l324
				l325:
					position, tokenIndex = position324, tokenIndex324
					{
						position326, tokenIndex326 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l311
						}
						position, tokenIndex = position326, tokenIndex326
					}
				}
			l324:
				add(ruleRankUninomialPlain, position312)
			}
			return true
		l311:
			position, tokenIndex = position311, tokenIndex311
			return false
		},
		/* 44 RankUninomialNotho <- <('n' 'o' 't' 'h' 'o' _? (('s' 'e' 'c' 't') / ('g' 'e' 'n') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'e' 'n') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('s' 'u' 'b' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position327, tokenIndex327 := position, tokenIndex
			{
				position328 := position
				if buffer[position] != rune('n') {
					goto l327
				}
				position++
				if buffer[position] != rune('o') {
					goto l327
				}
				position++
				if buffer[position] != rune('t') {
					goto l327
				}
				position++
				if buffer[position] != rune('h') {
					goto l327
				}
				position++
				if buffer[position] != rune('o') {
					goto l327
				}
				position++
				{
					position329, tokenIndex329 := position, tokenIndex
					if !_rules[rule_]() {
						goto l329
					}
					goto l330
				l329:
					position, tokenIndex = position329, tokenIndex329
				}
			l330:
				{
					position331, tokenIndex331 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l332
					}
					position++
					if buffer[position] != rune('e') {
						goto l332
					}
					position++
					if buffer[position] != rune('c') {
						goto l332
					}
					position++
					if buffer[position] != rune('t') {
						goto l332
					}
					position++
					goto l331
				l332:
					position, tokenIndex = position331, tokenIndex331
					if buffer[position] != rune('g') {
						goto l333
					}
					position++
					if buffer[position] != rune('e') {
						goto l333
					}
					position++
					if buffer[position] != rune('n') {
						goto l333
					}
					position++
					goto l331
				l333:
					position, tokenIndex = position331, tokenIndex331
					if buffer[position] != rune('s') {
						goto l334
					}
					position++
					if buffer[position] != rune('e') {
						goto l334
					}
					position++
					if buffer[position] != rune('r') {
						goto l334
					}
					position++
					goto l331
				l334:
					position, tokenIndex = position331, tokenIndex331
					if buffer[position] != rune('s') {
						goto l335
					}
					position++
					if buffer[position] != rune('u') {
						goto l335
					}
					position++
					if buffer[position] != rune('b') {
						goto l335
					}
					position++
					if buffer[position] != rune('g') {
						goto l335
					}
					position++
					if buffer[position] != rune('e') {
						goto l335
					}
					position++
					if buffer[position] != rune('e') {
						goto l335
					}
					position++
					if buffer[position] != rune('n') {
						goto l335
					}
					position++
					goto l331
				l335:
					position, tokenIndex = position331, tokenIndex331
					if buffer[position] != rune('s') {
						goto l336
					}
					position++
					if buffer[position] != rune('u') {
						goto l336
					}
					position++
					if buffer[position] != rune('b') {
						goto l336
					}
					position++
					if buffer[position] != rune('g') {
						goto l336
					}
					position++
					if buffer[position] != rune('e') {
						goto l336
					}
					position++
					if buffer[position] != rune('n') {
						goto l336
					}
					position++
					goto l331
				l336:
					position, tokenIndex = position331, tokenIndex331
					if buffer[position] != rune('s') {
						goto l337
					}
					position++
					if buffer[position] != rune('u') {
						goto l337
					}
					position++
					if buffer[position] != rune('b') {
						goto l337
					}
					position++
					if buffer[position] != rune('g') {
						goto l337
					}
					position++
					goto l331
				l337:
					position, tokenIndex = position331, tokenIndex331
					if buffer[position] != rune('s') {
						goto l338
					}
					position++
					if buffer[position] != rune('u') {
						goto l338
					}
					position++
					if buffer[position] != rune('b') {
						goto l338
					}
					position++
					if buffer[position] != rune('s') {
						goto l338
					}
					position++
					if buffer[position] != rune('e') {
						goto l338
					}
					position++
					if buffer[position] != rune('c') {
						goto l338
					}
					position++
					if buffer[position] != rune('t') {
						goto l338
					}
					position++
					goto l331
				l338:
					position, tokenIndex = position331, tokenIndex331
					if buffer[position] != rune('s') {
						goto l327
					}
					position++
					if buffer[position] != rune('u') {
						goto l327
					}
					position++
					if buffer[position] != rune('b') {
						goto l327
					}
					position++
					if buffer[position] != rune('t') {
						goto l327
					}
					position++
					if buffer[position] != rune('r') {
						goto l327
					}
					position++
					if buffer[position] != rune('i') {
						goto l327
					}
					position++
					if buffer[position] != rune('b') {
						goto l327
					}
					position++
				}
			l331:
				{
					position339, tokenIndex339 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l340
					}
					position++
					goto l339
				l340:
					position, tokenIndex = position339, tokenIndex339
					{
						position341, tokenIndex341 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l327
						}
						position, tokenIndex = position341, tokenIndex341
					}
				}
			l339:
				add(ruleRankUninomialNotho, position328)
			}
			return true
		l327:
			position, tokenIndex = position327, tokenIndex327
			return false
		},
		/* 45 Uninomial <- <(UninomialWord (_ Authorship !(_ LowerCharExtended LowerCharExtended LowerCharExtended))?)> */
		func() bool {
			position342, tokenIndex342 := position, tokenIndex
			{
				position343 := position
				if !_rules[ruleUninomialWord]() {
					goto l342
				}
				{
					position344, tokenIndex344 := position, tokenIndex
					if !_rules[rule_]() {
						goto l344
					}
					if !_rules[ruleAuthorship]() {
						goto l344
					}
					{
						position346, tokenIndex346 := position, tokenIndex
						if !_rules[rule_]() {
							goto l346
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l346
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l346
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l346
						}
						goto l344
					l346:
						position, tokenIndex = position346, tokenIndex346
					}
					goto l345
				l344:
					position, tokenIndex = position344, tokenIndex344
				}
			l345:
				add(ruleUninomial, position343)
			}
			return true
		l342:
			position, tokenIndex = position342, tokenIndex342
			return false
		},
		/* 46 UninomialWord <- <(CapWord / TwoLetterGenus)> */
		func() bool {
			position347, tokenIndex347 := position, tokenIndex
			{
				position348 := position
				{
					position349, tokenIndex349 := position, tokenIndex
					if !_rules[ruleCapWord]() {
						goto l350
					}
					goto l349
				l350:
					position, tokenIndex = position349, tokenIndex349
					if !_rules[ruleTwoLetterGenus]() {
						goto l347
					}
				}
			l349:
				add(ruleUninomialWord, position348)
			}
			return true
		l347:
			position, tokenIndex = position347, tokenIndex347
			return false
		},
		/* 47 AbbrSubgenus <- <(UpperChar LowerChar* '.')> */
		func() bool {
			position351, tokenIndex351 := position, tokenIndex
			{
				position352 := position
				if !_rules[ruleUpperChar]() {
					goto l351
				}
			l353:
				{
					position354, tokenIndex354 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l354
					}
					goto l353
				l354:
					position, tokenIndex = position354, tokenIndex354
				}
				if buffer[position] != rune('.') {
					goto l351
				}
				position++
				add(ruleAbbrSubgenus, position352)
			}
			return true
		l351:
			position, tokenIndex = position351, tokenIndex351
			return false
		},
		/* 48 AbbrGenus <- <(UpperChar LowerChar? '.')> */
		func() bool {
			position355, tokenIndex355 := position, tokenIndex
			{
				position356 := position
				if !_rules[ruleUpperChar]() {
					goto l355
				}
				{
					position357, tokenIndex357 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l357
					}
					goto l358
				l357:
					position, tokenIndex = position357, tokenIndex357
				}
			l358:
				if buffer[position] != rune('.') {
					goto l355
				}
				position++
				add(ruleAbbrGenus, position356)
			}
			return true
		l355:
			position, tokenIndex = position355, tokenIndex355
			return false
		},
		/* 49 CapWord <- <(CapWordWithDash / CapWord1)> */
		func() bool {
			position359, tokenIndex359 := position, tokenIndex
			{
				position360 := position
				{
					position361, tokenIndex361 := position, tokenIndex
					if !_rules[ruleCapWordWithDash]() {
						goto l362
					}
					goto l361
				l362:
					position, tokenIndex = position361, tokenIndex361
					if !_rules[ruleCapWord1]() {
						goto l359
					}
				}
			l361:
				add(ruleCapWord, position360)
			}
			return true
		l359:
			position, tokenIndex = position359, tokenIndex359
			return false
		},
		/* 50 CapWord1 <- <(NameUpperChar NameLowerChar NameLowerChar+ '?'?)> */
		func() bool {
			position363, tokenIndex363 := position, tokenIndex
			{
				position364 := position
				if !_rules[ruleNameUpperChar]() {
					goto l363
				}
				if !_rules[ruleNameLowerChar]() {
					goto l363
				}
				if !_rules[ruleNameLowerChar]() {
					goto l363
				}
			l365:
				{
					position366, tokenIndex366 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l366
					}
					goto l365
				l366:
					position, tokenIndex = position366, tokenIndex366
				}
				{
					position367, tokenIndex367 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l367
					}
					position++
					goto l368
				l367:
					position, tokenIndex = position367, tokenIndex367
				}
			l368:
				add(ruleCapWord1, position364)
			}
			return true
		l363:
			position, tokenIndex = position363, tokenIndex363
			return false
		},
		/* 51 CapWordWithDash <- <(CapWord1 Dash (UpperAfterDash / LowerAfterDash))> */
		func() bool {
			position369, tokenIndex369 := position, tokenIndex
			{
				position370 := position
				if !_rules[ruleCapWord1]() {
					goto l369
				}
				if !_rules[ruleDash]() {
					goto l369
				}
				{
					position371, tokenIndex371 := position, tokenIndex
					if !_rules[ruleUpperAfterDash]() {
						goto l372
					}
					goto l371
				l372:
					position, tokenIndex = position371, tokenIndex371
					if !_rules[ruleLowerAfterDash]() {
						goto l369
					}
				}
			l371:
				add(ruleCapWordWithDash, position370)
			}
			return true
		l369:
			position, tokenIndex = position369, tokenIndex369
			return false
		},
		/* 52 UpperAfterDash <- <CapWord1> */
		func() bool {
			position373, tokenIndex373 := position, tokenIndex
			{
				position374 := position
				if !_rules[ruleCapWord1]() {
					goto l373
				}
				add(ruleUpperAfterDash, position374)
			}
			return true
		l373:
			position, tokenIndex = position373, tokenIndex373
			return false
		},
		/* 53 LowerAfterDash <- <Word1> */
		func() bool {
			position375, tokenIndex375 := position, tokenIndex
			{
				position376 := position
				if !_rules[ruleWord1]() {
					goto l375
				}
				add(ruleLowerAfterDash, position376)
			}
			return true
		l375:
			position, tokenIndex = position375, tokenIndex375
			return false
		},
		/* 54 TwoLetterGenus <- <(('C' 'a') / ('D' 'o') / ('E' 'a') / ('G' 'e') / ('I' 'a') / ('I' 'o') / ('I' 'x') / ('L' 'o') / ('O' 'a') / ('O' 'o') / ('N' 'u') / ('R' 'a') / ('T' 'y') / ('U' 'a') / ('A' 'a') / ('J' 'a') / ('Z' 'u') / ('L' 'a') / ('Q' 'u') / ('A' 's') / ('B' 'a'))> */
		func() bool {
			position377, tokenIndex377 := position, tokenIndex
			{
				position378 := position
				{
					position379, tokenIndex379 := position, tokenIndex
					if buffer[position] != rune('C') {
						goto l380
					}
					position++
					if buffer[position] != rune('a') {
						goto l380
					}
					position++
					goto l379
				l380:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('D') {
						goto l381
					}
					position++
					if buffer[position] != rune('o') {
						goto l381
					}
					position++
					goto l379
				l381:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('E') {
						goto l382
					}
					position++
					if buffer[position] != rune('a') {
						goto l382
					}
					position++
					goto l379
				l382:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('G') {
						goto l383
					}
					position++
					if buffer[position] != rune('e') {
						goto l383
					}
					position++
					goto l379
				l383:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('I') {
						goto l384
					}
					position++
					if buffer[position] != rune('a') {
						goto l384
					}
					position++
					goto l379
				l384:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('I') {
						goto l385
					}
					position++
					if buffer[position] != rune('o') {
						goto l385
					}
					position++
					goto l379
				l385:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('I') {
						goto l386
					}
					position++
					if buffer[position] != rune('x') {
						goto l386
					}
					position++
					goto l379
				l386:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('L') {
						goto l387
					}
					position++
					if buffer[position] != rune('o') {
						goto l387
					}
					position++
					goto l379
				l387:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('O') {
						goto l388
					}
					position++
					if buffer[position] != rune('a') {
						goto l388
					}
					position++
					goto l379
				l388:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('O') {
						goto l389
					}
					position++
					if buffer[position] != rune('o') {
						goto l389
					}
					position++
					goto l379
				l389:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('N') {
						goto l390
					}
					position++
					if buffer[position] != rune('u') {
						goto l390
					}
					position++
					goto l379
				l390:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('R') {
						goto l391
					}
					position++
					if buffer[position] != rune('a') {
						goto l391
					}
					position++
					goto l379
				l391:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('T') {
						goto l392
					}
					position++
					if buffer[position] != rune('y') {
						goto l392
					}
					position++
					goto l379
				l392:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('U') {
						goto l393
					}
					position++
					if buffer[position] != rune('a') {
						goto l393
					}
					position++
					goto l379
				l393:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('A') {
						goto l394
					}
					position++
					if buffer[position] != rune('a') {
						goto l394
					}
					position++
					goto l379
				l394:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('J') {
						goto l395
					}
					position++
					if buffer[position] != rune('a') {
						goto l395
					}
					position++
					goto l379
				l395:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('Z') {
						goto l396
					}
					position++
					if buffer[position] != rune('u') {
						goto l396
					}
					position++
					goto l379
				l396:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('L') {
						goto l397
					}
					position++
					if buffer[position] != rune('a') {
						goto l397
					}
					position++
					goto l379
				l397:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('Q') {
						goto l398
					}
					position++
					if buffer[position] != rune('u') {
						goto l398
					}
					position++
					goto l379
				l398:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('A') {
						goto l399
					}
					position++
					if buffer[position] != rune('s') {
						goto l399
					}
					position++
					goto l379
				l399:
					position, tokenIndex = position379, tokenIndex379
					if buffer[position] != rune('B') {
						goto l377
					}
					position++
					if buffer[position] != rune('a') {
						goto l377
					}
					position++
				}
			l379:
				add(ruleTwoLetterGenus, position378)
			}
			return true
		l377:
			position, tokenIndex = position377, tokenIndex377
			return false
		},
		/* 55 Word <- <(!((('e' 'x') / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd') / ('p' 'r' 'o') / ('c' 'v') / ('c' 'u' 'l' 't' 'i' 'v' 'a' 'r') / AuthorPrefix / RankUninomial / Approximation / Word4) SpaceCharEOI) (WordApostr / WordStartsWithDigit / MultiDashedWord / Word2 / Word1) &(SpaceCharEOI / '('))> */
		func() bool {
			position400, tokenIndex400 := position, tokenIndex
			{
				position401 := position
				{
					position402, tokenIndex402 := position, tokenIndex
					{
						position403, tokenIndex403 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l404
						}
						position++
						if buffer[position] != rune('x') {
							goto l404
						}
						position++
						goto l403
					l404:
						position, tokenIndex = position403, tokenIndex403
						if buffer[position] != rune('e') {
							goto l405
						}
						position++
						if buffer[position] != rune('t') {
							goto l405
						}
						position++
						goto l403
					l405:
						position, tokenIndex = position403, tokenIndex403
						if buffer[position] != rune('a') {
							goto l406
						}
						position++
						if buffer[position] != rune('n') {
							goto l406
						}
						position++
						if buffer[position] != rune('d') {
							goto l406
						}
						position++
						goto l403
					l406:
						position, tokenIndex = position403, tokenIndex403
						if buffer[position] != rune('a') {
							goto l407
						}
						position++
						if buffer[position] != rune('p') {
							goto l407
						}
						position++
						if buffer[position] != rune('u') {
							goto l407
						}
						position++
						if buffer[position] != rune('d') {
							goto l407
						}
						position++
						goto l403
					l407:
						position, tokenIndex = position403, tokenIndex403
						if buffer[position] != rune('p') {
							goto l408
						}
						position++
						if buffer[position] != rune('r') {
							goto l408
						}
						position++
						if buffer[position] != rune('o') {
							goto l408
						}
						position++
						goto l403
					l408:
						position, tokenIndex = position403, tokenIndex403
						if buffer[position] != rune('c') {
							goto l409
						}
						position++
						if buffer[position] != rune('v') {
							goto l409
						}
						position++
						goto l403
					l409:
						position, tokenIndex = position403, tokenIndex403
						if buffer[position] != rune('c') {
							goto l410
						}
						position++
						if buffer[position] != rune('u') {
							goto l410
						}
						position++
						if buffer[position] != rune('l') {
							goto l410
						}
						position++
						if buffer[position] != rune('t') {
							goto l410
						}
						position++
						if buffer[position] != rune('i') {
							goto l410
						}
						position++
						if buffer[position] != rune('v') {
							goto l410
						}
						position++
						if buffer[position] != rune('a') {
							goto l410
						}
						position++
						if buffer[position] != rune('r') {
							goto l410
						}
						position++
						goto l403
					l410:
						position, tokenIndex = position403, tokenIndex403
						if !_rules[ruleAuthorPrefix]() {
							goto l411
						}
						goto l403
					l411:
						position, tokenIndex = position403, tokenIndex403
						if !_rules[ruleRankUninomial]() {
							goto l412
						}
						goto l403
					l412:
						position, tokenIndex = position403, tokenIndex403
						if !_rules[ruleApproximation]() {
							goto l413
						}
						goto l403
					l413:
						position, tokenIndex = position403, tokenIndex403
						if !_rules[ruleWord4]() {
							goto l402
						}
					}
				l403:
					if !_rules[ruleSpaceCharEOI]() {
						goto l402
					}
					goto l400
				l402:
					position, tokenIndex = position402, tokenIndex402
				}
				{
					position414, tokenIndex414 := position, tokenIndex
					if !_rules[ruleWordApostr]() {
						goto l415
					}
					goto l414
				l415:
					position, tokenIndex = position414, tokenIndex414
					if !_rules[ruleWordStartsWithDigit]() {
						goto l416
					}
					goto l414
				l416:
					position, tokenIndex = position414, tokenIndex414
					if !_rules[ruleMultiDashedWord]() {
						goto l417
					}
					goto l414
				l417:
					position, tokenIndex = position414, tokenIndex414
					if !_rules[ruleWord2]() {
						goto l418
					}
					goto l414
				l418:
					position, tokenIndex = position414, tokenIndex414
					if !_rules[ruleWord1]() {
						goto l400
					}
				}
			l414:
				{
					position419, tokenIndex419 := position, tokenIndex
					{
						position420, tokenIndex420 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l421
						}
						goto l420
					l421:
						position, tokenIndex = position420, tokenIndex420
						if buffer[position] != rune('(') {
							goto l400
						}
						position++
					}
				l420:
					position, tokenIndex = position419, tokenIndex419
				}
				add(ruleWord, position401)
			}
			return true
		l400:
			position, tokenIndex = position400, tokenIndex400
			return false
		},
		/* 56 Word1 <- <((LowerASCII Dash)? NameLowerChar NameLowerChar+)> */
		func() bool {
			position422, tokenIndex422 := position, tokenIndex
			{
				position423 := position
				{
					position424, tokenIndex424 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l424
					}
					if !_rules[ruleDash]() {
						goto l424
					}
					goto l425
				l424:
					position, tokenIndex = position424, tokenIndex424
				}
			l425:
				if !_rules[ruleNameLowerChar]() {
					goto l422
				}
				if !_rules[ruleNameLowerChar]() {
					goto l422
				}
			l426:
				{
					position427, tokenIndex427 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l427
					}
					goto l426
				l427:
					position, tokenIndex = position427, tokenIndex427
				}
				add(ruleWord1, position423)
			}
			return true
		l422:
			position, tokenIndex = position422, tokenIndex422
			return false
		},
		/* 57 WordStartsWithDigit <- <(('1' / '2' / '3' / '4' / '5' / '6' / '7' / '8' / '9') Nums? ('.' / Dash)? NameLowerChar NameLowerChar NameLowerChar NameLowerChar+)> */
		func() bool {
			position428, tokenIndex428 := position, tokenIndex
			{
				position429 := position
				{
					position430, tokenIndex430 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l431
					}
					position++
					goto l430
				l431:
					position, tokenIndex = position430, tokenIndex430
					if buffer[position] != rune('2') {
						goto l432
					}
					position++
					goto l430
				l432:
					position, tokenIndex = position430, tokenIndex430
					if buffer[position] != rune('3') {
						goto l433
					}
					position++
					goto l430
				l433:
					position, tokenIndex = position430, tokenIndex430
					if buffer[position] != rune('4') {
						goto l434
					}
					position++
					goto l430
				l434:
					position, tokenIndex = position430, tokenIndex430
					if buffer[position] != rune('5') {
						goto l435
					}
					position++
					goto l430
				l435:
					position, tokenIndex = position430, tokenIndex430
					if buffer[position] != rune('6') {
						goto l436
					}
					position++
					goto l430
				l436:
					position, tokenIndex = position430, tokenIndex430
					if buffer[position] != rune('7') {
						goto l437
					}
					position++
					goto l430
				l437:
					position, tokenIndex = position430, tokenIndex430
					if buffer[position] != rune('8') {
						goto l438
					}
					position++
					goto l430
				l438:
					position, tokenIndex = position430, tokenIndex430
					if buffer[position] != rune('9') {
						goto l428
					}
					position++
				}
			l430:
				{
					position439, tokenIndex439 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l439
					}
					goto l440
				l439:
					position, tokenIndex = position439, tokenIndex439
				}
			l440:
				{
					position441, tokenIndex441 := position, tokenIndex
					{
						position443, tokenIndex443 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l444
						}
						position++
						goto l443
					l444:
						position, tokenIndex = position443, tokenIndex443
						if !_rules[ruleDash]() {
							goto l441
						}
					}
				l443:
					goto l442
				l441:
					position, tokenIndex = position441, tokenIndex441
				}
			l442:
				if !_rules[ruleNameLowerChar]() {
					goto l428
				}
				if !_rules[ruleNameLowerChar]() {
					goto l428
				}
				if !_rules[ruleNameLowerChar]() {
					goto l428
				}
				if !_rules[ruleNameLowerChar]() {
					goto l428
				}
			l445:
				{
					position446, tokenIndex446 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l446
					}
					goto l445
				l446:
					position, tokenIndex = position446, tokenIndex446
				}
				add(ruleWordStartsWithDigit, position429)
			}
			return true
		l428:
			position, tokenIndex = position428, tokenIndex428
			return false
		},
		/* 58 Word2 <- <(NameLowerChar+ Dash? NameLowerChar+)> */
		func() bool {
			position447, tokenIndex447 := position, tokenIndex
			{
				position448 := position
				if !_rules[ruleNameLowerChar]() {
					goto l447
				}
			l449:
				{
					position450, tokenIndex450 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l450
					}
					goto l449
				l450:
					position, tokenIndex = position450, tokenIndex450
				}
				{
					position451, tokenIndex451 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l451
					}
					goto l452
				l451:
					position, tokenIndex = position451, tokenIndex451
				}
			l452:
				if !_rules[ruleNameLowerChar]() {
					goto l447
				}
			l453:
				{
					position454, tokenIndex454 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l454
					}
					goto l453
				l454:
					position, tokenIndex = position454, tokenIndex454
				}
				add(ruleWord2, position448)
			}
			return true
		l447:
			position, tokenIndex = position447, tokenIndex447
			return false
		},
		/* 59 WordApostr <- <(NameLowerChar NameLowerChar* Apostrophe Word1)> */
		func() bool {
			position455, tokenIndex455 := position, tokenIndex
			{
				position456 := position
				if !_rules[ruleNameLowerChar]() {
					goto l455
				}
			l457:
				{
					position458, tokenIndex458 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l458
					}
					goto l457
				l458:
					position, tokenIndex = position458, tokenIndex458
				}
				if !_rules[ruleApostrophe]() {
					goto l455
				}
				if !_rules[ruleWord1]() {
					goto l455
				}
				add(ruleWordApostr, position456)
			}
			return true
		l455:
			position, tokenIndex = position455, tokenIndex455
			return false
		},
		/* 60 Word4 <- <(NameLowerChar+ '.' NameLowerChar)> */
		func() bool {
			position459, tokenIndex459 := position, tokenIndex
			{
				position460 := position
				if !_rules[ruleNameLowerChar]() {
					goto l459
				}
			l461:
				{
					position462, tokenIndex462 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l462
					}
					goto l461
				l462:
					position, tokenIndex = position462, tokenIndex462
				}
				if buffer[position] != rune('.') {
					goto l459
				}
				position++
				if !_rules[ruleNameLowerChar]() {
					goto l459
				}
				add(ruleWord4, position460)
			}
			return true
		l459:
			position, tokenIndex = position459, tokenIndex459
			return false
		},
		/* 61 MultiDashedWord <- <(NameLowerChar+ Dash NameLowerChar+ Dash NameLowerChar+ (Dash NameLowerChar+)?)> */
		func() bool {
			position463, tokenIndex463 := position, tokenIndex
			{
				position464 := position
				if !_rules[ruleNameLowerChar]() {
					goto l463
				}
			l465:
				{
					position466, tokenIndex466 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l466
					}
					goto l465
				l466:
					position, tokenIndex = position466, tokenIndex466
				}
				if !_rules[ruleDash]() {
					goto l463
				}
				if !_rules[ruleNameLowerChar]() {
					goto l463
				}
			l467:
				{
					position468, tokenIndex468 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l468
					}
					goto l467
				l468:
					position, tokenIndex = position468, tokenIndex468
				}
				if !_rules[ruleDash]() {
					goto l463
				}
				if !_rules[ruleNameLowerChar]() {
					goto l463
				}
			l469:
				{
					position470, tokenIndex470 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l470
					}
					goto l469
				l470:
					position, tokenIndex = position470, tokenIndex470
				}
				{
					position471, tokenIndex471 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l471
					}
					if !_rules[ruleNameLowerChar]() {
						goto l471
					}
				l473:
					{
						position474, tokenIndex474 := position, tokenIndex
						if !_rules[ruleNameLowerChar]() {
							goto l474
						}
						goto l473
					l474:
						position, tokenIndex = position474, tokenIndex474
					}
					goto l472
				l471:
					position, tokenIndex = position471, tokenIndex471
				}
			l472:
				add(ruleMultiDashedWord, position464)
			}
			return true
		l463:
			position, tokenIndex = position463, tokenIndex463
			return false
		},
		/* 62 HybridChar <- <('×' / (('x' / 'X') &_) / (('x' / 'X') &UninomialWord) / (('x' / 'X') &END))> */
		func() bool {
			position475, tokenIndex475 := position, tokenIndex
			{
				position476 := position
				{
					position477, tokenIndex477 := position, tokenIndex
					if buffer[position] != rune('×') {
						goto l478
					}
					position++
					goto l477
				l478:
					position, tokenIndex = position477, tokenIndex477
					{
						position480, tokenIndex480 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l481
						}
						position++
						goto l480
					l481:
						position, tokenIndex = position480, tokenIndex480
						if buffer[position] != rune('X') {
							goto l479
						}
						position++
					}
				l480:
					{
						position482, tokenIndex482 := position, tokenIndex
						if !_rules[rule_]() {
							goto l479
						}
						position, tokenIndex = position482, tokenIndex482
					}
					goto l477
				l479:
					position, tokenIndex = position477, tokenIndex477
					{
						position484, tokenIndex484 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l485
						}
						position++
						goto l484
					l485:
						position, tokenIndex = position484, tokenIndex484
						if buffer[position] != rune('X') {
							goto l483
						}
						position++
					}
				l484:
					{
						position486, tokenIndex486 := position, tokenIndex
						if !_rules[ruleUninomialWord]() {
							goto l483
						}
						position, tokenIndex = position486, tokenIndex486
					}
					goto l477
				l483:
					position, tokenIndex = position477, tokenIndex477
					{
						position487, tokenIndex487 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l488
						}
						position++
						goto l487
					l488:
						position, tokenIndex = position487, tokenIndex487
						if buffer[position] != rune('X') {
							goto l475
						}
						position++
					}
				l487:
					{
						position489, tokenIndex489 := position, tokenIndex
						if !_rules[ruleEND]() {
							goto l475
						}
						position, tokenIndex = position489, tokenIndex489
					}
				}
			l477:
				add(ruleHybridChar, position476)
			}
			return true
		l475:
			position, tokenIndex = position475, tokenIndex475
			return false
		},
		/* 63 ApproxNameIgnored <- <.*> */
		func() bool {
			{
				position491 := position
			l492:
				{
					position493, tokenIndex493 := position, tokenIndex
					if !matchDot() {
						goto l493
					}
					goto l492
				l493:
					position, tokenIndex = position493, tokenIndex493
				}
				add(ruleApproxNameIgnored, position491)
			}
			return true
		},
		/* 64 Approximation <- <(('s' 'p' '.' _? ('n' 'r' '.')) / ('s' 'p' '.' _? ('a' 'f' 'f' '.')) / ('m' 'o' 'n' 's' 't' '.') / '?' / ((('s' 'p' 'p') / ('n' 'r') / ('s' 'p') / ('a' 'f' 'f') / ('s' 'p' 'e' 'c' 'i' 'e' 's')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position494, tokenIndex494 := position, tokenIndex
			{
				position495 := position
				{
					position496, tokenIndex496 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l497
					}
					position++
					if buffer[position] != rune('p') {
						goto l497
					}
					position++
					if buffer[position] != rune('.') {
						goto l497
					}
					position++
					{
						position498, tokenIndex498 := position, tokenIndex
						if !_rules[rule_]() {
							goto l498
						}
						goto l499
					l498:
						position, tokenIndex = position498, tokenIndex498
					}
				l499:
					if buffer[position] != rune('n') {
						goto l497
					}
					position++
					if buffer[position] != rune('r') {
						goto l497
					}
					position++
					if buffer[position] != rune('.') {
						goto l497
					}
					position++
					goto l496
				l497:
					position, tokenIndex = position496, tokenIndex496
					if buffer[position] != rune('s') {
						goto l500
					}
					position++
					if buffer[position] != rune('p') {
						goto l500
					}
					position++
					if buffer[position] != rune('.') {
						goto l500
					}
					position++
					{
						position501, tokenIndex501 := position, tokenIndex
						if !_rules[rule_]() {
							goto l501
						}
						goto l502
					l501:
						position, tokenIndex = position501, tokenIndex501
					}
				l502:
					if buffer[position] != rune('a') {
						goto l500
					}
					position++
					if buffer[position] != rune('f') {
						goto l500
					}
					position++
					if buffer[position] != rune('f') {
						goto l500
					}
					position++
					if buffer[position] != rune('.') {
						goto l500
					}
					position++
					goto l496
				l500:
					position, tokenIndex = position496, tokenIndex496
					if buffer[position] != rune('m') {
						goto l503
					}
					position++
					if buffer[position] != rune('o') {
						goto l503
					}
					position++
					if buffer[position] != rune('n') {
						goto l503
					}
					position++
					if buffer[position] != rune('s') {
						goto l503
					}
					position++
					if buffer[position] != rune('t') {
						goto l503
					}
					position++
					if buffer[position] != rune('.') {
						goto l503
					}
					position++
					goto l496
				l503:
					position, tokenIndex = position496, tokenIndex496
					if buffer[position] != rune('?') {
						goto l504
					}
					position++
					goto l496
				l504:
					position, tokenIndex = position496, tokenIndex496
					{
						position505, tokenIndex505 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l506
						}
						position++
						if buffer[position] != rune('p') {
							goto l506
						}
						position++
						if buffer[position] != rune('p') {
							goto l506
						}
						position++
						goto l505
					l506:
						position, tokenIndex = position505, tokenIndex505
						if buffer[position] != rune('n') {
							goto l507
						}
						position++
						if buffer[position] != rune('r') {
							goto l507
						}
						position++
						goto l505
					l507:
						position, tokenIndex = position505, tokenIndex505
						if buffer[position] != rune('s') {
							goto l508
						}
						position++
						if buffer[position] != rune('p') {
							goto l508
						}
						position++
						goto l505
					l508:
						position, tokenIndex = position505, tokenIndex505
						if buffer[position] != rune('a') {
							goto l509
						}
						position++
						if buffer[position] != rune('f') {
							goto l509
						}
						position++
						if buffer[position] != rune('f') {
							goto l509
						}
						position++
						goto l505
					l509:
						position, tokenIndex = position505, tokenIndex505
						if buffer[position] != rune('s') {
							goto l494
						}
						position++
						if buffer[position] != rune('p') {
							goto l494
						}
						position++
						if buffer[position] != rune('e') {
							goto l494
						}
						position++
						if buffer[position] != rune('c') {
							goto l494
						}
						position++
						if buffer[position] != rune('i') {
							goto l494
						}
						position++
						if buffer[position] != rune('e') {
							goto l494
						}
						position++
						if buffer[position] != rune('s') {
							goto l494
						}
						position++
					}
				l505:
					{
						position510, tokenIndex510 := position, tokenIndex
						{
							position512, tokenIndex512 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l511
							}
							position, tokenIndex = position512, tokenIndex512
						}
						goto l510
					l511:
						position, tokenIndex = position510, tokenIndex510
						if buffer[position] != rune('.') {
							goto l494
						}
						position++
					}
				l510:
				}
			l496:
				add(ruleApproximation, position495)
			}
			return true
		l494:
			position, tokenIndex = position494, tokenIndex494
			return false
		},
		/* 65 Authorship <- <((AuthorshipCombo / OriginalAuthorship) &(SpaceCharEOI / ';' / ','))> */
		func() bool {
			position513, tokenIndex513 := position, tokenIndex
			{
				position514 := position
				{
					position515, tokenIndex515 := position, tokenIndex
					if !_rules[ruleAuthorshipCombo]() {
						goto l516
					}
					goto l515
				l516:
					position, tokenIndex = position515, tokenIndex515
					if !_rules[ruleOriginalAuthorship]() {
						goto l513
					}
				}
			l515:
				{
					position517, tokenIndex517 := position, tokenIndex
					{
						position518, tokenIndex518 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l519
						}
						goto l518
					l519:
						position, tokenIndex = position518, tokenIndex518
						if buffer[position] != rune(';') {
							goto l520
						}
						position++
						goto l518
					l520:
						position, tokenIndex = position518, tokenIndex518
						if buffer[position] != rune(',') {
							goto l513
						}
						position++
					}
				l518:
					position, tokenIndex = position517, tokenIndex517
				}
				add(ruleAuthorship, position514)
			}
			return true
		l513:
			position, tokenIndex = position513, tokenIndex513
			return false
		},
		/* 66 AuthorshipCombo <- <(OriginalAuthorshipComb (_? CombinationAuthorship)?)> */
		func() bool {
			position521, tokenIndex521 := position, tokenIndex
			{
				position522 := position
				if !_rules[ruleOriginalAuthorshipComb]() {
					goto l521
				}
				{
					position523, tokenIndex523 := position, tokenIndex
					{
						position525, tokenIndex525 := position, tokenIndex
						if !_rules[rule_]() {
							goto l525
						}
						goto l526
					l525:
						position, tokenIndex = position525, tokenIndex525
					}
				l526:
					if !_rules[ruleCombinationAuthorship]() {
						goto l523
					}
					goto l524
				l523:
					position, tokenIndex = position523, tokenIndex523
				}
			l524:
				add(ruleAuthorshipCombo, position522)
			}
			return true
		l521:
			position, tokenIndex = position521, tokenIndex521
			return false
		},
		/* 67 OriginalAuthorship <- <AuthorsGroup> */
		func() bool {
			position527, tokenIndex527 := position, tokenIndex
			{
				position528 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l527
				}
				add(ruleOriginalAuthorship, position528)
			}
			return true
		l527:
			position, tokenIndex = position527, tokenIndex527
			return false
		},
		/* 68 OriginalAuthorshipComb <- <(BasionymAuthorshipYearMisformed / BasionymAuthorship / BasionymAuthorshipMissingParens)> */
		func() bool {
			position529, tokenIndex529 := position, tokenIndex
			{
				position530 := position
				{
					position531, tokenIndex531 := position, tokenIndex
					if !_rules[ruleBasionymAuthorshipYearMisformed]() {
						goto l532
					}
					goto l531
				l532:
					position, tokenIndex = position531, tokenIndex531
					if !_rules[ruleBasionymAuthorship]() {
						goto l533
					}
					goto l531
				l533:
					position, tokenIndex = position531, tokenIndex531
					if !_rules[ruleBasionymAuthorshipMissingParens]() {
						goto l529
					}
				}
			l531:
				add(ruleOriginalAuthorshipComb, position530)
			}
			return true
		l529:
			position, tokenIndex = position529, tokenIndex529
			return false
		},
		/* 69 CombinationAuthorship <- <AuthorsGroup> */
		func() bool {
			position534, tokenIndex534 := position, tokenIndex
			{
				position535 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l534
				}
				add(ruleCombinationAuthorship, position535)
			}
			return true
		l534:
			position, tokenIndex = position534, tokenIndex534
			return false
		},
		/* 70 BasionymAuthorshipMissingParens <- <(MissingParensStart / MissingParensEnd)> */
		func() bool {
			position536, tokenIndex536 := position, tokenIndex
			{
				position537 := position
				{
					position538, tokenIndex538 := position, tokenIndex
					if !_rules[ruleMissingParensStart]() {
						goto l539
					}
					goto l538
				l539:
					position, tokenIndex = position538, tokenIndex538
					if !_rules[ruleMissingParensEnd]() {
						goto l536
					}
				}
			l538:
				add(ruleBasionymAuthorshipMissingParens, position537)
			}
			return true
		l536:
			position, tokenIndex = position536, tokenIndex536
			return false
		},
		/* 71 MissingParensStart <- <('(' _? AuthorsGroup)> */
		func() bool {
			position540, tokenIndex540 := position, tokenIndex
			{
				position541 := position
				if buffer[position] != rune('(') {
					goto l540
				}
				position++
				{
					position542, tokenIndex542 := position, tokenIndex
					if !_rules[rule_]() {
						goto l542
					}
					goto l543
				l542:
					position, tokenIndex = position542, tokenIndex542
				}
			l543:
				if !_rules[ruleAuthorsGroup]() {
					goto l540
				}
				add(ruleMissingParensStart, position541)
			}
			return true
		l540:
			position, tokenIndex = position540, tokenIndex540
			return false
		},
		/* 72 MissingParensEnd <- <(AuthorsGroup _? ')')> */
		func() bool {
			position544, tokenIndex544 := position, tokenIndex
			{
				position545 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l544
				}
				{
					position546, tokenIndex546 := position, tokenIndex
					if !_rules[rule_]() {
						goto l546
					}
					goto l547
				l546:
					position, tokenIndex = position546, tokenIndex546
				}
			l547:
				if buffer[position] != rune(')') {
					goto l544
				}
				position++
				add(ruleMissingParensEnd, position545)
			}
			return true
		l544:
			position, tokenIndex = position544, tokenIndex544
			return false
		},
		/* 73 BasionymAuthorshipYearMisformed <- <('(' _? AuthorsGroup _? ')' (_? ',')? _? Year)> */
		func() bool {
			position548, tokenIndex548 := position, tokenIndex
			{
				position549 := position
				if buffer[position] != rune('(') {
					goto l548
				}
				position++
				{
					position550, tokenIndex550 := position, tokenIndex
					if !_rules[rule_]() {
						goto l550
					}
					goto l551
				l550:
					position, tokenIndex = position550, tokenIndex550
				}
			l551:
				if !_rules[ruleAuthorsGroup]() {
					goto l548
				}
				{
					position552, tokenIndex552 := position, tokenIndex
					if !_rules[rule_]() {
						goto l552
					}
					goto l553
				l552:
					position, tokenIndex = position552, tokenIndex552
				}
			l553:
				if buffer[position] != rune(')') {
					goto l548
				}
				position++
				{
					position554, tokenIndex554 := position, tokenIndex
					{
						position556, tokenIndex556 := position, tokenIndex
						if !_rules[rule_]() {
							goto l556
						}
						goto l557
					l556:
						position, tokenIndex = position556, tokenIndex556
					}
				l557:
					if buffer[position] != rune(',') {
						goto l554
					}
					position++
					goto l555
				l554:
					position, tokenIndex = position554, tokenIndex554
				}
			l555:
				{
					position558, tokenIndex558 := position, tokenIndex
					if !_rules[rule_]() {
						goto l558
					}
					goto l559
				l558:
					position, tokenIndex = position558, tokenIndex558
				}
			l559:
				if !_rules[ruleYear]() {
					goto l548
				}
				add(ruleBasionymAuthorshipYearMisformed, position549)
			}
			return true
		l548:
			position, tokenIndex = position548, tokenIndex548
			return false
		},
		/* 74 BasionymAuthorship <- <(BasionymAuthorship1 / BasionymAuthorship2Parens)> */
		func() bool {
			position560, tokenIndex560 := position, tokenIndex
			{
				position561 := position
				{
					position562, tokenIndex562 := position, tokenIndex
					if !_rules[ruleBasionymAuthorship1]() {
						goto l563
					}
					goto l562
				l563:
					position, tokenIndex = position562, tokenIndex562
					if !_rules[ruleBasionymAuthorship2Parens]() {
						goto l560
					}
				}
			l562:
				add(ruleBasionymAuthorship, position561)
			}
			return true
		l560:
			position, tokenIndex = position560, tokenIndex560
			return false
		},
		/* 75 BasionymAuthorship1 <- <('(' _? AuthorsGroup _? ')')> */
		func() bool {
			position564, tokenIndex564 := position, tokenIndex
			{
				position565 := position
				if buffer[position] != rune('(') {
					goto l564
				}
				position++
				{
					position566, tokenIndex566 := position, tokenIndex
					if !_rules[rule_]() {
						goto l566
					}
					goto l567
				l566:
					position, tokenIndex = position566, tokenIndex566
				}
			l567:
				if !_rules[ruleAuthorsGroup]() {
					goto l564
				}
				{
					position568, tokenIndex568 := position, tokenIndex
					if !_rules[rule_]() {
						goto l568
					}
					goto l569
				l568:
					position, tokenIndex = position568, tokenIndex568
				}
			l569:
				if buffer[position] != rune(')') {
					goto l564
				}
				position++
				add(ruleBasionymAuthorship1, position565)
			}
			return true
		l564:
			position, tokenIndex = position564, tokenIndex564
			return false
		},
		/* 76 BasionymAuthorship2Parens <- <('(' _? '(' _? AuthorsGroup _? ')' _? ')')> */
		func() bool {
			position570, tokenIndex570 := position, tokenIndex
			{
				position571 := position
				if buffer[position] != rune('(') {
					goto l570
				}
				position++
				{
					position572, tokenIndex572 := position, tokenIndex
					if !_rules[rule_]() {
						goto l572
					}
					goto l573
				l572:
					position, tokenIndex = position572, tokenIndex572
				}
			l573:
				if buffer[position] != rune('(') {
					goto l570
				}
				position++
				{
					position574, tokenIndex574 := position, tokenIndex
					if !_rules[rule_]() {
						goto l574
					}
					goto l575
				l574:
					position, tokenIndex = position574, tokenIndex574
				}
			l575:
				if !_rules[ruleAuthorsGroup]() {
					goto l570
				}
				{
					position576, tokenIndex576 := position, tokenIndex
					if !_rules[rule_]() {
						goto l576
					}
					goto l577
				l576:
					position, tokenIndex = position576, tokenIndex576
				}
			l577:
				if buffer[position] != rune(')') {
					goto l570
				}
				position++
				{
					position578, tokenIndex578 := position, tokenIndex
					if !_rules[rule_]() {
						goto l578
					}
					goto l579
				l578:
					position, tokenIndex = position578, tokenIndex578
				}
			l579:
				if buffer[position] != rune(')') {
					goto l570
				}
				position++
				add(ruleBasionymAuthorship2Parens, position571)
			}
			return true
		l570:
			position, tokenIndex = position570, tokenIndex570
			return false
		},
		/* 77 AuthorsGroup <- <(AuthorsTeam (_ (AuthorEmend / AuthorEx) AuthorsTeam)?)> */
		func() bool {
			position580, tokenIndex580 := position, tokenIndex
			{
				position581 := position
				if !_rules[ruleAuthorsTeam]() {
					goto l580
				}
				{
					position582, tokenIndex582 := position, tokenIndex
					if !_rules[rule_]() {
						goto l582
					}
					{
						position584, tokenIndex584 := position, tokenIndex
						if !_rules[ruleAuthorEmend]() {
							goto l585
						}
						goto l584
					l585:
						position, tokenIndex = position584, tokenIndex584
						if !_rules[ruleAuthorEx]() {
							goto l582
						}
					}
				l584:
					if !_rules[ruleAuthorsTeam]() {
						goto l582
					}
					goto l583
				l582:
					position, tokenIndex = position582, tokenIndex582
				}
			l583:
				add(ruleAuthorsGroup, position581)
			}
			return true
		l580:
			position, tokenIndex = position580, tokenIndex580
			return false
		},
		/* 78 AuthorsTeam <- <(Author (AuthorSep Author)* (_? ','? _? Year)?)> */
		func() bool {
			position586, tokenIndex586 := position, tokenIndex
			{
				position587 := position
				if !_rules[ruleAuthor]() {
					goto l586
				}
			l588:
				{
					position589, tokenIndex589 := position, tokenIndex
					if !_rules[ruleAuthorSep]() {
						goto l589
					}
					if !_rules[ruleAuthor]() {
						goto l589
					}
					goto l588
				l589:
					position, tokenIndex = position589, tokenIndex589
				}
				{
					position590, tokenIndex590 := position, tokenIndex
					{
						position592, tokenIndex592 := position, tokenIndex
						if !_rules[rule_]() {
							goto l592
						}
						goto l593
					l592:
						position, tokenIndex = position592, tokenIndex592
					}
				l593:
					{
						position594, tokenIndex594 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l594
						}
						position++
						goto l595
					l594:
						position, tokenIndex = position594, tokenIndex594
					}
				l595:
					{
						position596, tokenIndex596 := position, tokenIndex
						if !_rules[rule_]() {
							goto l596
						}
						goto l597
					l596:
						position, tokenIndex = position596, tokenIndex596
					}
				l597:
					if !_rules[ruleYear]() {
						goto l590
					}
					goto l591
				l590:
					position, tokenIndex = position590, tokenIndex590
				}
			l591:
				add(ruleAuthorsTeam, position587)
			}
			return true
		l586:
			position, tokenIndex = position586, tokenIndex586
			return false
		},
		/* 79 AuthorSep <- <(AuthorSep1 / AuthorSep2)> */
		func() bool {
			position598, tokenIndex598 := position, tokenIndex
			{
				position599 := position
				{
					position600, tokenIndex600 := position, tokenIndex
					if !_rules[ruleAuthorSep1]() {
						goto l601
					}
					goto l600
				l601:
					position, tokenIndex = position600, tokenIndex600
					if !_rules[ruleAuthorSep2]() {
						goto l598
					}
				}
			l600:
				add(ruleAuthorSep, position599)
			}
			return true
		l598:
			position, tokenIndex = position598, tokenIndex598
			return false
		},
		/* 80 AuthorSep1 <- <(_? (',' _)? ('&' / AuthorSepSpanish / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd')) _?)> */
		func() bool {
			position602, tokenIndex602 := position, tokenIndex
			{
				position603 := position
				{
					position604, tokenIndex604 := position, tokenIndex
					if !_rules[rule_]() {
						goto l604
					}
					goto l605
				l604:
					position, tokenIndex = position604, tokenIndex604
				}
			l605:
				{
					position606, tokenIndex606 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l606
					}
					position++
					if !_rules[rule_]() {
						goto l606
					}
					goto l607
				l606:
					position, tokenIndex = position606, tokenIndex606
				}
			l607:
				{
					position608, tokenIndex608 := position, tokenIndex
					if buffer[position] != rune('&') {
						goto l609
					}
					position++
					goto l608
				l609:
					position, tokenIndex = position608, tokenIndex608
					if !_rules[ruleAuthorSepSpanish]() {
						goto l610
					}
					goto l608
				l610:
					position, tokenIndex = position608, tokenIndex608
					if buffer[position] != rune('e') {
						goto l611
					}
					position++
					if buffer[position] != rune('t') {
						goto l611
					}
					position++
					goto l608
				l611:
					position, tokenIndex = position608, tokenIndex608
					if buffer[position] != rune('a') {
						goto l612
					}
					position++
					if buffer[position] != rune('n') {
						goto l612
					}
					position++
					if buffer[position] != rune('d') {
						goto l612
					}
					position++
					goto l608
				l612:
					position, tokenIndex = position608, tokenIndex608
					if buffer[position] != rune('a') {
						goto l602
					}
					position++
					if buffer[position] != rune('p') {
						goto l602
					}
					position++
					if buffer[position] != rune('u') {
						goto l602
					}
					position++
					if buffer[position] != rune('d') {
						goto l602
					}
					position++
				}
			l608:
				{
					position613, tokenIndex613 := position, tokenIndex
					if !_rules[rule_]() {
						goto l613
					}
					goto l614
				l613:
					position, tokenIndex = position613, tokenIndex613
				}
			l614:
				add(ruleAuthorSep1, position603)
			}
			return true
		l602:
			position, tokenIndex = position602, tokenIndex602
			return false
		},
		/* 81 AuthorSep2 <- <(_? ',' _?)> */
		func() bool {
			position615, tokenIndex615 := position, tokenIndex
			{
				position616 := position
				{
					position617, tokenIndex617 := position, tokenIndex
					if !_rules[rule_]() {
						goto l617
					}
					goto l618
				l617:
					position, tokenIndex = position617, tokenIndex617
				}
			l618:
				if buffer[position] != rune(',') {
					goto l615
				}
				position++
				{
					position619, tokenIndex619 := position, tokenIndex
					if !_rules[rule_]() {
						goto l619
					}
					goto l620
				l619:
					position, tokenIndex = position619, tokenIndex619
				}
			l620:
				add(ruleAuthorSep2, position616)
			}
			return true
		l615:
			position, tokenIndex = position615, tokenIndex615
			return false
		},
		/* 82 AuthorSepSpanish <- <(_? 'y' _?)> */
		func() bool {
			position621, tokenIndex621 := position, tokenIndex
			{
				position622 := position
				{
					position623, tokenIndex623 := position, tokenIndex
					if !_rules[rule_]() {
						goto l623
					}
					goto l624
				l623:
					position, tokenIndex = position623, tokenIndex623
				}
			l624:
				if buffer[position] != rune('y') {
					goto l621
				}
				position++
				{
					position625, tokenIndex625 := position, tokenIndex
					if !_rules[rule_]() {
						goto l625
					}
					goto l626
				l625:
					position, tokenIndex = position625, tokenIndex625
				}
			l626:
				add(ruleAuthorSepSpanish, position622)
			}
			return true
		l621:
			position, tokenIndex = position621, tokenIndex621
			return false
		},
		/* 83 AuthorEx <- <((('e' 'x' '.'?) / ('m' 's' _ ('i' 'n')) / ('i' 'n')) _)> */
		func() bool {
			position627, tokenIndex627 := position, tokenIndex
			{
				position628 := position
				{
					position629, tokenIndex629 := position, tokenIndex
					if buffer[position] != rune('e') {
						goto l630
					}
					position++
					if buffer[position] != rune('x') {
						goto l630
					}
					position++
					{
						position631, tokenIndex631 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l631
						}
						position++
						goto l632
					l631:
						position, tokenIndex = position631, tokenIndex631
					}
				l632:
					goto l629
				l630:
					position, tokenIndex = position629, tokenIndex629
					if buffer[position] != rune('m') {
						goto l633
					}
					position++
					if buffer[position] != rune('s') {
						goto l633
					}
					position++
					if !_rules[rule_]() {
						goto l633
					}
					if buffer[position] != rune('i') {
						goto l633
					}
					position++
					if buffer[position] != rune('n') {
						goto l633
					}
					position++
					goto l629
				l633:
					position, tokenIndex = position629, tokenIndex629
					if buffer[position] != rune('i') {
						goto l627
					}
					position++
					if buffer[position] != rune('n') {
						goto l627
					}
					position++
				}
			l629:
				if !_rules[rule_]() {
					goto l627
				}
				add(ruleAuthorEx, position628)
			}
			return true
		l627:
			position, tokenIndex = position627, tokenIndex627
			return false
		},
		/* 84 AuthorEmend <- <('e' 'm' 'e' 'n' 'd' '.'? _)> */
		func() bool {
			position634, tokenIndex634 := position, tokenIndex
			{
				position635 := position
				if buffer[position] != rune('e') {
					goto l634
				}
				position++
				if buffer[position] != rune('m') {
					goto l634
				}
				position++
				if buffer[position] != rune('e') {
					goto l634
				}
				position++
				if buffer[position] != rune('n') {
					goto l634
				}
				position++
				if buffer[position] != rune('d') {
					goto l634
				}
				position++
				{
					position636, tokenIndex636 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l636
					}
					position++
					goto l637
				l636:
					position, tokenIndex = position636, tokenIndex636
				}
			l637:
				if !_rules[rule_]() {
					goto l634
				}
				add(ruleAuthorEmend, position635)
			}
			return true
		l634:
			position, tokenIndex = position634, tokenIndex634
			return false
		},
		/* 85 Author <- <((Author0 / Author1 / Author2 / UnknownAuthor) (_ AuthorEtAl)?)> */
		func() bool {
			position638, tokenIndex638 := position, tokenIndex
			{
				position639 := position
				{
					position640, tokenIndex640 := position, tokenIndex
					if !_rules[ruleAuthor0]() {
						goto l641
					}
					goto l640
				l641:
					position, tokenIndex = position640, tokenIndex640
					if !_rules[ruleAuthor1]() {
						goto l642
					}
					goto l640
				l642:
					position, tokenIndex = position640, tokenIndex640
					if !_rules[ruleAuthor2]() {
						goto l643
					}
					goto l640
				l643:
					position, tokenIndex = position640, tokenIndex640
					if !_rules[ruleUnknownAuthor]() {
						goto l638
					}
				}
			l640:
				{
					position644, tokenIndex644 := position, tokenIndex
					if !_rules[rule_]() {
						goto l644
					}
					if !_rules[ruleAuthorEtAl]() {
						goto l644
					}
					goto l645
				l644:
					position, tokenIndex = position644, tokenIndex644
				}
			l645:
				add(ruleAuthor, position639)
			}
			return true
		l638:
			position, tokenIndex = position638, tokenIndex638
			return false
		},
		/* 86 Author0 <- <(Author2 FiliusFNoSpace)> */
		func() bool {
			position646, tokenIndex646 := position, tokenIndex
			{
				position647 := position
				if !_rules[ruleAuthor2]() {
					goto l646
				}
				if !_rules[ruleFiliusFNoSpace]() {
					goto l646
				}
				add(ruleAuthor0, position647)
			}
			return true
		l646:
			position, tokenIndex = position646, tokenIndex646
			return false
		},
		/* 87 Author1 <- <(Author2 _? (Filius / AuthorSuffix))> */
		func() bool {
			position648, tokenIndex648 := position, tokenIndex
			{
				position649 := position
				if !_rules[ruleAuthor2]() {
					goto l648
				}
				{
					position650, tokenIndex650 := position, tokenIndex
					if !_rules[rule_]() {
						goto l650
					}
					goto l651
				l650:
					position, tokenIndex = position650, tokenIndex650
				}
			l651:
				{
					position652, tokenIndex652 := position, tokenIndex
					if !_rules[ruleFilius]() {
						goto l653
					}
					goto l652
				l653:
					position, tokenIndex = position652, tokenIndex652
					if !_rules[ruleAuthorSuffix]() {
						goto l648
					}
				}
			l652:
				add(ruleAuthor1, position649)
			}
			return true
		l648:
			position, tokenIndex = position648, tokenIndex648
			return false
		},
		/* 88 Author2 <- <(AuthorWord (_? AuthorWord)*)> */
		func() bool {
			position654, tokenIndex654 := position, tokenIndex
			{
				position655 := position
				if !_rules[ruleAuthorWord]() {
					goto l654
				}
			l656:
				{
					position657, tokenIndex657 := position, tokenIndex
					{
						position658, tokenIndex658 := position, tokenIndex
						if !_rules[rule_]() {
							goto l658
						}
						goto l659
					l658:
						position, tokenIndex = position658, tokenIndex658
					}
				l659:
					if !_rules[ruleAuthorWord]() {
						goto l657
					}
					goto l656
				l657:
					position, tokenIndex = position657, tokenIndex657
				}
				add(ruleAuthor2, position655)
			}
			return true
		l654:
			position, tokenIndex = position654, tokenIndex654
			return false
		},
		/* 89 UnknownAuthor <- <('?' / ((('a' 'u' 'c' 't') / ('a' 'n' 'o' 'n')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position660, tokenIndex660 := position, tokenIndex
			{
				position661 := position
				{
					position662, tokenIndex662 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l663
					}
					position++
					goto l662
				l663:
					position, tokenIndex = position662, tokenIndex662
					{
						position664, tokenIndex664 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l665
						}
						position++
						if buffer[position] != rune('u') {
							goto l665
						}
						position++
						if buffer[position] != rune('c') {
							goto l665
						}
						position++
						if buffer[position] != rune('t') {
							goto l665
						}
						position++
						goto l664
					l665:
						position, tokenIndex = position664, tokenIndex664
						if buffer[position] != rune('a') {
							goto l660
						}
						position++
						if buffer[position] != rune('n') {
							goto l660
						}
						position++
						if buffer[position] != rune('o') {
							goto l660
						}
						position++
						if buffer[position] != rune('n') {
							goto l660
						}
						position++
					}
				l664:
					{
						position666, tokenIndex666 := position, tokenIndex
						{
							position668, tokenIndex668 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l667
							}
							position, tokenIndex = position668, tokenIndex668
						}
						goto l666
					l667:
						position, tokenIndex = position666, tokenIndex666
						if buffer[position] != rune('.') {
							goto l660
						}
						position++
					}
				l666:
				}
			l662:
				add(ruleUnknownAuthor, position661)
			}
			return true
		l660:
			position, tokenIndex = position660, tokenIndex660
			return false
		},
		/* 90 AuthorWord <- <(!(HybridChar / (('b' / 'B') ('o' / 'O') ('l' / 'L') ('d' / 'D') ':')) (AuthorDashInitials / AuthorWord2 / AuthorWord3 / AuthorPrefix))> */
		func() bool {
			position669, tokenIndex669 := position, tokenIndex
			{
				position670 := position
				{
					position671, tokenIndex671 := position, tokenIndex
					{
						position672, tokenIndex672 := position, tokenIndex
						if !_rules[ruleHybridChar]() {
							goto l673
						}
						goto l672
					l673:
						position, tokenIndex = position672, tokenIndex672
						{
							position674, tokenIndex674 := position, tokenIndex
							if buffer[position] != rune('b') {
								goto l675
							}
							position++
							goto l674
						l675:
							position, tokenIndex = position674, tokenIndex674
							if buffer[position] != rune('B') {
								goto l671
							}
							position++
						}
					l674:
						{
							position676, tokenIndex676 := position, tokenIndex
							if buffer[position] != rune('o') {
								goto l677
							}
							position++
							goto l676
						l677:
							position, tokenIndex = position676, tokenIndex676
							if buffer[position] != rune('O') {
								goto l671
							}
							position++
						}
					l676:
						{
							position678, tokenIndex678 := position, tokenIndex
							if buffer[position] != rune('l') {
								goto l679
							}
							position++
							goto l678
						l679:
							position, tokenIndex = position678, tokenIndex678
							if buffer[position] != rune('L') {
								goto l671
							}
							position++
						}
					l678:
						{
							position680, tokenIndex680 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l681
							}
							position++
							goto l680
						l681:
							position, tokenIndex = position680, tokenIndex680
							if buffer[position] != rune('D') {
								goto l671
							}
							position++
						}
					l680:
						if buffer[position] != rune(':') {
							goto l671
						}
						position++
					}
				l672:
					goto l669
				l671:
					position, tokenIndex = position671, tokenIndex671
				}
				{
					position682, tokenIndex682 := position, tokenIndex
					if !_rules[ruleAuthorDashInitials]() {
						goto l683
					}
					goto l682
				l683:
					position, tokenIndex = position682, tokenIndex682
					if !_rules[ruleAuthorWord2]() {
						goto l684
					}
					goto l682
				l684:
					position, tokenIndex = position682, tokenIndex682
					if !_rules[ruleAuthorWord3]() {
						goto l685
					}
					goto l682
				l685:
					position, tokenIndex = position682, tokenIndex682
					if !_rules[ruleAuthorPrefix]() {
						goto l669
					}
				}
			l682:
				add(ruleAuthorWord, position670)
			}
			return true
		l669:
			position, tokenIndex = position669, tokenIndex669
			return false
		},
		/* 91 AuthorEtAl <- <(('a' 'r' 'g' '.') / ('e' 't' ' ' 'a' 'l' '.' '{' '?' '}') / ((('e' 't') / '&') (' ' 'a' 'l') '.'?))> */
		func() bool {
			position686, tokenIndex686 := position, tokenIndex
			{
				position687 := position
				{
					position688, tokenIndex688 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l689
					}
					position++
					if buffer[position] != rune('r') {
						goto l689
					}
					position++
					if buffer[position] != rune('g') {
						goto l689
					}
					position++
					if buffer[position] != rune('.') {
						goto l689
					}
					position++
					goto l688
				l689:
					position, tokenIndex = position688, tokenIndex688
					if buffer[position] != rune('e') {
						goto l690
					}
					position++
					if buffer[position] != rune('t') {
						goto l690
					}
					position++
					if buffer[position] != rune(' ') {
						goto l690
					}
					position++
					if buffer[position] != rune('a') {
						goto l690
					}
					position++
					if buffer[position] != rune('l') {
						goto l690
					}
					position++
					if buffer[position] != rune('.') {
						goto l690
					}
					position++
					if buffer[position] != rune('{') {
						goto l690
					}
					position++
					if buffer[position] != rune('?') {
						goto l690
					}
					position++
					if buffer[position] != rune('}') {
						goto l690
					}
					position++
					goto l688
				l690:
					position, tokenIndex = position688, tokenIndex688
					{
						position691, tokenIndex691 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l692
						}
						position++
						if buffer[position] != rune('t') {
							goto l692
						}
						position++
						goto l691
					l692:
						position, tokenIndex = position691, tokenIndex691
						if buffer[position] != rune('&') {
							goto l686
						}
						position++
					}
				l691:
					if buffer[position] != rune(' ') {
						goto l686
					}
					position++
					if buffer[position] != rune('a') {
						goto l686
					}
					position++
					if buffer[position] != rune('l') {
						goto l686
					}
					position++
					{
						position693, tokenIndex693 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l693
						}
						position++
						goto l694
					l693:
						position, tokenIndex = position693, tokenIndex693
					}
				l694:
				}
			l688:
				add(ruleAuthorEtAl, position687)
			}
			return true
		l686:
			position, tokenIndex = position686, tokenIndex686
			return false
		},
		/* 92 AuthorWord2 <- <(AuthorWord3 Dash AuthorWordSoft)> */
		func() bool {
			position695, tokenIndex695 := position, tokenIndex
			{
				position696 := position
				if !_rules[ruleAuthorWord3]() {
					goto l695
				}
				if !_rules[ruleDash]() {
					goto l695
				}
				if !_rules[ruleAuthorWordSoft]() {
					goto l695
				}
				add(ruleAuthorWord2, position696)
			}
			return true
		l695:
			position, tokenIndex = position695, tokenIndex695
			return false
		},
		/* 93 AuthorWord3 <- <(AuthorPrefixGlued? (AllCapsAuthorWord / CapAuthorWord) '.'?)> */
		func() bool {
			position697, tokenIndex697 := position, tokenIndex
			{
				position698 := position
				{
					position699, tokenIndex699 := position, tokenIndex
					if !_rules[ruleAuthorPrefixGlued]() {
						goto l699
					}
					goto l700
				l699:
					position, tokenIndex = position699, tokenIndex699
				}
			l700:
				{
					position701, tokenIndex701 := position, tokenIndex
					if !_rules[ruleAllCapsAuthorWord]() {
						goto l702
					}
					goto l701
				l702:
					position, tokenIndex = position701, tokenIndex701
					if !_rules[ruleCapAuthorWord]() {
						goto l697
					}
				}
			l701:
				{
					position703, tokenIndex703 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l703
					}
					position++
					goto l704
				l703:
					position, tokenIndex = position703, tokenIndex703
				}
			l704:
				add(ruleAuthorWord3, position698)
			}
			return true
		l697:
			position, tokenIndex = position697, tokenIndex697
			return false
		},
		/* 94 AuthorDashInitials <- <(AuthorUpperChar '.'? Dash AuthorUpperChar '.'?)> */
		func() bool {
			position705, tokenIndex705 := position, tokenIndex
			{
				position706 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l705
				}
				{
					position707, tokenIndex707 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l707
					}
					position++
					goto l708
				l707:
					position, tokenIndex = position707, tokenIndex707
				}
			l708:
				if !_rules[ruleDash]() {
					goto l705
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l705
				}
				{
					position709, tokenIndex709 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l709
					}
					position++
					goto l710
				l709:
					position, tokenIndex = position709, tokenIndex709
				}
			l710:
				add(ruleAuthorDashInitials, position706)
			}
			return true
		l705:
			position, tokenIndex = position705, tokenIndex705
			return false
		},
		/* 95 AuthorWordSoft <- <(((AuthorUpperChar (AuthorUpperChar+ / AuthorLowerChar+)) / AuthorLowerChar+) '.'?)> */
		func() bool {
			position711, tokenIndex711 := position, tokenIndex
			{
				position712 := position
				{
					position713, tokenIndex713 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l714
					}
					{
						position715, tokenIndex715 := position, tokenIndex
						if !_rules[ruleAuthorUpperChar]() {
							goto l716
						}
					l717:
						{
							position718, tokenIndex718 := position, tokenIndex
							if !_rules[ruleAuthorUpperChar]() {
								goto l718
							}
							goto l717
						l718:
							position, tokenIndex = position718, tokenIndex718
						}
						goto l715
					l716:
						position, tokenIndex = position715, tokenIndex715
						if !_rules[ruleAuthorLowerChar]() {
							goto l714
						}
					l719:
						{
							position720, tokenIndex720 := position, tokenIndex
							if !_rules[ruleAuthorLowerChar]() {
								goto l720
							}
							goto l719
						l720:
							position, tokenIndex = position720, tokenIndex720
						}
					}
				l715:
					goto l713
				l714:
					position, tokenIndex = position713, tokenIndex713
					if !_rules[ruleAuthorLowerChar]() {
						goto l711
					}
				l721:
					{
						position722, tokenIndex722 := position, tokenIndex
						if !_rules[ruleAuthorLowerChar]() {
							goto l722
						}
						goto l721
					l722:
						position, tokenIndex = position722, tokenIndex722
					}
				}
			l713:
				{
					position723, tokenIndex723 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l723
					}
					position++
					goto l724
				l723:
					position, tokenIndex = position723, tokenIndex723
				}
			l724:
				add(ruleAuthorWordSoft, position712)
			}
			return true
		l711:
			position, tokenIndex = position711, tokenIndex711
			return false
		},
		/* 96 CapAuthorWord <- <(AuthorUpperChar AuthorLowerChar*)> */
		func() bool {
			position725, tokenIndex725 := position, tokenIndex
			{
				position726 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l725
				}
			l727:
				{
					position728, tokenIndex728 := position, tokenIndex
					if !_rules[ruleAuthorLowerChar]() {
						goto l728
					}
					goto l727
				l728:
					position, tokenIndex = position728, tokenIndex728
				}
				add(ruleCapAuthorWord, position726)
			}
			return true
		l725:
			position, tokenIndex = position725, tokenIndex725
			return false
		},
		/* 97 AllCapsAuthorWord <- <(AuthorUpperChar AuthorUpperChar+)> */
		func() bool {
			position729, tokenIndex729 := position, tokenIndex
			{
				position730 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l729
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l729
				}
			l731:
				{
					position732, tokenIndex732 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l732
					}
					goto l731
				l732:
					position, tokenIndex = position732, tokenIndex732
				}
				add(ruleAllCapsAuthorWord, position730)
			}
			return true
		l729:
			position, tokenIndex = position729, tokenIndex729
			return false
		},
		/* 98 Filius <- <(FiliusF / ('f' 'i' 'l' '.') / ('f' 'i' 'l' 'i' 'u' 's'))> */
		func() bool {
			position733, tokenIndex733 := position, tokenIndex
			{
				position734 := position
				{
					position735, tokenIndex735 := position, tokenIndex
					if !_rules[ruleFiliusF]() {
						goto l736
					}
					goto l735
				l736:
					position, tokenIndex = position735, tokenIndex735
					if buffer[position] != rune('f') {
						goto l737
					}
					position++
					if buffer[position] != rune('i') {
						goto l737
					}
					position++
					if buffer[position] != rune('l') {
						goto l737
					}
					position++
					if buffer[position] != rune('.') {
						goto l737
					}
					position++
					goto l735
				l737:
					position, tokenIndex = position735, tokenIndex735
					if buffer[position] != rune('f') {
						goto l733
					}
					position++
					if buffer[position] != rune('i') {
						goto l733
					}
					position++
					if buffer[position] != rune('l') {
						goto l733
					}
					position++
					if buffer[position] != rune('i') {
						goto l733
					}
					position++
					if buffer[position] != rune('u') {
						goto l733
					}
					position++
					if buffer[position] != rune('s') {
						goto l733
					}
					position++
				}
			l735:
				add(ruleFilius, position734)
			}
			return true
		l733:
			position, tokenIndex = position733, tokenIndex733
			return false
		},
		/* 99 FiliusF <- <('f' '.' !(_ Word))> */
		func() bool {
			position738, tokenIndex738 := position, tokenIndex
			{
				position739 := position
				if buffer[position] != rune('f') {
					goto l738
				}
				position++
				if buffer[position] != rune('.') {
					goto l738
				}
				position++
				{
					position740, tokenIndex740 := position, tokenIndex
					if !_rules[rule_]() {
						goto l740
					}
					if !_rules[ruleWord]() {
						goto l740
					}
					goto l738
				l740:
					position, tokenIndex = position740, tokenIndex740
				}
				add(ruleFiliusF, position739)
			}
			return true
		l738:
			position, tokenIndex = position738, tokenIndex738
			return false
		},
		/* 100 FiliusFNoSpace <- <('f' '.')> */
		func() bool {
			position741, tokenIndex741 := position, tokenIndex
			{
				position742 := position
				if buffer[position] != rune('f') {
					goto l741
				}
				position++
				if buffer[position] != rune('.') {
					goto l741
				}
				position++
				add(ruleFiliusFNoSpace, position742)
			}
			return true
		l741:
			position, tokenIndex = position741, tokenIndex741
			return false
		},
		/* 101 AuthorSuffix <- <(('b' 'i' 's') / ('t' 'e' 'r'))> */
		func() bool {
			position743, tokenIndex743 := position, tokenIndex
			{
				position744 := position
				{
					position745, tokenIndex745 := position, tokenIndex
					if buffer[position] != rune('b') {
						goto l746
					}
					position++
					if buffer[position] != rune('i') {
						goto l746
					}
					position++
					if buffer[position] != rune('s') {
						goto l746
					}
					position++
					goto l745
				l746:
					position, tokenIndex = position745, tokenIndex745
					if buffer[position] != rune('t') {
						goto l743
					}
					position++
					if buffer[position] != rune('e') {
						goto l743
					}
					position++
					if buffer[position] != rune('r') {
						goto l743
					}
					position++
				}
			l745:
				add(ruleAuthorSuffix, position744)
			}
			return true
		l743:
			position, tokenIndex = position743, tokenIndex743
			return false
		},
		/* 102 AuthorPrefixGlued <- <(('d' / 'O' / 'L' / ('M' 'c') / 'M') Apostrophe)> */
		func() bool {
			position747, tokenIndex747 := position, tokenIndex
			{
				position748 := position
				{
					position749, tokenIndex749 := position, tokenIndex
					if buffer[position] != rune('d') {
						goto l750
					}
					position++
					goto l749
				l750:
					position, tokenIndex = position749, tokenIndex749
					if buffer[position] != rune('O') {
						goto l751
					}
					position++
					goto l749
				l751:
					position, tokenIndex = position749, tokenIndex749
					if buffer[position] != rune('L') {
						goto l752
					}
					position++
					goto l749
				l752:
					position, tokenIndex = position749, tokenIndex749
					if buffer[position] != rune('M') {
						goto l753
					}
					position++
					if buffer[position] != rune('c') {
						goto l753
					}
					position++
					goto l749
				l753:
					position, tokenIndex = position749, tokenIndex749
					if buffer[position] != rune('M') {
						goto l747
					}
					position++
				}
			l749:
				if !_rules[ruleApostrophe]() {
					goto l747
				}
				add(ruleAuthorPrefixGlued, position748)
			}
			return true
		l747:
			position, tokenIndex = position747, tokenIndex747
			return false
		},
		/* 103 AuthorPrefix <- <(AuthorPrefix1 / AuthorPrefix2)> */
		func() bool {
			position754, tokenIndex754 := position, tokenIndex
			{
				position755 := position
				{
					position756, tokenIndex756 := position, tokenIndex
					if !_rules[ruleAuthorPrefix1]() {
						goto l757
					}
					goto l756
				l757:
					position, tokenIndex = position756, tokenIndex756
					if !_rules[ruleAuthorPrefix2]() {
						goto l754
					}
				}
			l756:
				add(ruleAuthorPrefix, position755)
			}
			return true
		l754:
			position, tokenIndex = position754, tokenIndex754
			return false
		},
		/* 104 AuthorPrefix2 <- <(('v' '.' (_? ('d' '.'))?) / (Apostrophe 't'))> */
		func() bool {
			position758, tokenIndex758 := position, tokenIndex
			{
				position759 := position
				{
					position760, tokenIndex760 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l761
					}
					position++
					if buffer[position] != rune('.') {
						goto l761
					}
					position++
					{
						position762, tokenIndex762 := position, tokenIndex
						{
							position764, tokenIndex764 := position, tokenIndex
							if !_rules[rule_]() {
								goto l764
							}
							goto l765
						l764:
							position, tokenIndex = position764, tokenIndex764
						}
					l765:
						if buffer[position] != rune('d') {
							goto l762
						}
						position++
						if buffer[position] != rune('.') {
							goto l762
						}
						position++
						goto l763
					l762:
						position, tokenIndex = position762, tokenIndex762
					}
				l763:
					goto l760
				l761:
					position, tokenIndex = position760, tokenIndex760
					if !_rules[ruleApostrophe]() {
						goto l758
					}
					if buffer[position] != rune('t') {
						goto l758
					}
					position++
				}
			l760:
				add(ruleAuthorPrefix2, position759)
			}
			return true
		l758:
			position, tokenIndex = position758, tokenIndex758
			return false
		},
		/* 105 AuthorPrefix1 <- <((('a' 'b') / ('a' 'f') / ('b' 'i' 's') / ('d' 'a') / ('d' 'e' 'r') / ('d' 'e' 's') / ('d' 'e' 'n') / ('d' 'e' 'l' 'l' 'a') / ('d' 'e' 'l' 'a') / ('d' 'e' 'l' 'l' 'e') / ('d' 'e' 'l') / ('d' 'e' ' ' 'l' 'o' 's') / ('d' 'e') / ('d' 'i') / ('d' 'o' 's') / ('d' 'u') / ('d' 'o') / ('e' 'l') / ('l' 'a') / ('l' 'e') / ('t' 'e' 'n') / ('t' 'e' 'r') / ('v' 'a' 'n') / ('d' Apostrophe) / ('i' 'n' Apostrophe 't') / ('z' 'u' 'r') / ('z' 'u') / ('v' 'o' 'n' (_ (('d' '.') / ('d' 'e' 'm')))?) / ('v' (_ 'd')?)) &_)> */
		func() bool {
			position766, tokenIndex766 := position, tokenIndex
			{
				position767 := position
				{
					position768, tokenIndex768 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l769
					}
					position++
					if buffer[position] != rune('b') {
						goto l769
					}
					position++
					goto l768
				l769:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('a') {
						goto l770
					}
					position++
					if buffer[position] != rune('f') {
						goto l770
					}
					position++
					goto l768
				l770:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('b') {
						goto l771
					}
					position++
					if buffer[position] != rune('i') {
						goto l771
					}
					position++
					if buffer[position] != rune('s') {
						goto l771
					}
					position++
					goto l768
				l771:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('d') {
						goto l772
					}
					position++
					if buffer[position] != rune('a') {
						goto l772
					}
					position++
					goto l768
				l772:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('d') {
						goto l773
					}
					position++
					if buffer[position] != rune('e') {
						goto l773
					}
					position++
					if buffer[position] != rune('r') {
						goto l773
					}
					position++
					goto l768
				l773:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('d') {
						goto l774
					}
					position++
					if buffer[position] != rune('e') {
						goto l774
					}
					position++
					if buffer[position] != rune('s') {
						goto l774
					}
					position++
					goto l768
				l774:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('d') {
						goto l775
					}
					position++
					if buffer[position] != rune('e') {
						goto l775
					}
					position++
					if buffer[position] != rune('n') {
						goto l775
					}
					position++
					goto l768
				l775:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('d') {
						goto l776
					}
					position++
					if buffer[position] != rune('e') {
						goto l776
					}
					position++
					if buffer[position] != rune('l') {
						goto l776
					}
					position++
					if buffer[position] != rune('l') {
						goto l776
					}
					position++
					if buffer[position] != rune('a') {
						goto l776
					}
					position++
					goto l768
				l776:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('d') {
						goto l777
					}
					position++
					if buffer[position] != rune('e') {
						goto l777
					}
					position++
					if buffer[position] != rune('l') {
						goto l777
					}
					position++
					if buffer[position] != rune('a') {
						goto l777
					}
					position++
					goto l768
				l777:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('d') {
						goto l778
					}
					position++
					if buffer[position] != rune('e') {
						goto l778
					}
					position++
					if buffer[position] != rune('l') {
						goto l778
					}
					position++
					if buffer[position] != rune('l') {
						goto l778
					}
					position++
					if buffer[position] != rune('e') {
						goto l778
					}
					position++
					goto l768
				l778:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('d') {
						goto l779
					}
					position++
					if buffer[position] != rune('e') {
						goto l779
					}
					position++
					if buffer[position] != rune('l') {
						goto l779
					}
					position++
					goto l768
				l779:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('d') {
						goto l780
					}
					position++
					if buffer[position] != rune('e') {
						goto l780
					}
					position++
					if buffer[position] != rune(' ') {
						goto l780
					}
					position++
					if buffer[position] != rune('l') {
						goto l780
					}
					position++
					if buffer[position] != rune('o') {
						goto l780
					}
					position++
					if buffer[position] != rune('s') {
						goto l780
					}
					position++
					goto l768
				l780:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('d') {
						goto l781
					}
					position++
					if buffer[position] != rune('e') {
						goto l781
					}
					position++
					goto l768
				l781:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('d') {
						goto l782
					}
					position++
					if buffer[position] != rune('i') {
						goto l782
					}
					position++
					goto l768
				l782:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('d') {
						goto l783
					}
					position++
					if buffer[position] != rune('o') {
						goto l783
					}
					position++
					if buffer[position] != rune('s') {
						goto l783
					}
					position++
					goto l768
				l783:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('d') {
						goto l784
					}
					position++
					if buffer[position] != rune('u') {
						goto l784
					}
					position++
					goto l768
				l784:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('d') {
						goto l785
					}
					position++
					if buffer[position] != rune('o') {
						goto l785
					}
					position++
					goto l768
				l785:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('e') {
						goto l786
					}
					position++
					if buffer[position] != rune('l') {
						goto l786
					}
					position++
					goto l768
				l786:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('l') {
						goto l787
					}
					position++
					if buffer[position] != rune('a') {
						goto l787
					}
					position++
					goto l768
				l787:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('l') {
						goto l788
					}
					position++
					if buffer[position] != rune('e') {
						goto l788
					}
					position++
					goto l768
				l788:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('t') {
						goto l789
					}
					position++
					if buffer[position] != rune('e') {
						goto l789
					}
					position++
					if buffer[position] != rune('n') {
						goto l789
					}
					position++
					goto l768
				l789:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('t') {
						goto l790
					}
					position++
					if buffer[position] != rune('e') {
						goto l790
					}
					position++
					if buffer[position] != rune('r') {
						goto l790
					}
					position++
					goto l768
				l790:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('v') {
						goto l791
					}
					position++
					if buffer[position] != rune('a') {
						goto l791
					}
					position++
					if buffer[position] != rune('n') {
						goto l791
					}
					position++
					goto l768
				l791:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('d') {
						goto l792
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l792
					}
					goto l768
				l792:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('i') {
						goto l793
					}
					position++
					if buffer[position] != rune('n') {
						goto l793
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l793
					}
					if buffer[position] != rune('t') {
						goto l793
					}
					position++
					goto l768
				l793:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('z') {
						goto l794
					}
					position++
					if buffer[position] != rune('u') {
						goto l794
					}
					position++
					if buffer[position] != rune('r') {
						goto l794
					}
					position++
					goto l768
				l794:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('z') {
						goto l795
					}
					position++
					if buffer[position] != rune('u') {
						goto l795
					}
					position++
					goto l768
				l795:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('v') {
						goto l796
					}
					position++
					if buffer[position] != rune('o') {
						goto l796
					}
					position++
					if buffer[position] != rune('n') {
						goto l796
					}
					position++
					{
						position797, tokenIndex797 := position, tokenIndex
						if !_rules[rule_]() {
							goto l797
						}
						{
							position799, tokenIndex799 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l800
							}
							position++
							if buffer[position] != rune('.') {
								goto l800
							}
							position++
							goto l799
						l800:
							position, tokenIndex = position799, tokenIndex799
							if buffer[position] != rune('d') {
								goto l797
							}
							position++
							if buffer[position] != rune('e') {
								goto l797
							}
							position++
							if buffer[position] != rune('m') {
								goto l797
							}
							position++
						}
					l799:
						goto l798
					l797:
						position, tokenIndex = position797, tokenIndex797
					}
				l798:
					goto l768
				l796:
					position, tokenIndex = position768, tokenIndex768
					if buffer[position] != rune('v') {
						goto l766
					}
					position++
					{
						position801, tokenIndex801 := position, tokenIndex
						if !_rules[rule_]() {
							goto l801
						}
						if buffer[position] != rune('d') {
							goto l801
						}
						position++
						goto l802
					l801:
						position, tokenIndex = position801, tokenIndex801
					}
				l802:
				}
			l768:
				{
					position803, tokenIndex803 := position, tokenIndex
					if !_rules[rule_]() {
						goto l766
					}
					position, tokenIndex = position803, tokenIndex803
				}
				add(ruleAuthorPrefix1, position767)
			}
			return true
		l766:
			position, tokenIndex = position766, tokenIndex766
			return false
		},
		/* 106 AuthorUpperChar <- <(UpperASCII / MiscodedChar / ('À' / 'Á' / 'Â' / 'Ã' / 'Ä' / 'Å' / 'Æ' / 'Ç' / 'È' / 'É' / 'Ê' / 'Ë' / 'Ì' / 'Í' / 'Î' / 'Ï' / 'Ð' / 'Ñ' / 'Ò' / 'Ó' / 'Ô' / 'Õ' / 'Ö' / 'Ø' / 'Ù' / 'Ú' / 'Û' / 'Ü' / 'Ý' / 'Ć' / 'Č' / 'Ď' / 'İ' / 'Ķ' / 'Ĺ' / 'ĺ' / 'Ľ' / 'ľ' / 'Ł' / 'ł' / 'Ņ' / 'Ō' / 'Ő' / 'Œ' / 'Ř' / 'Ś' / 'Ŝ' / 'Ş' / 'Š' / 'Ÿ' / 'Ź' / 'Ż' / 'Ž' / 'ƒ' / 'Ǿ' / 'Ș' / 'Ț'))> */
		func() bool {
			position804, tokenIndex804 := position, tokenIndex
			{
				position805 := position
				{
					position806, tokenIndex806 := position, tokenIndex
					if !_rules[ruleUpperASCII]() {
						goto l807
					}
					goto l806
				l807:
					position, tokenIndex = position806, tokenIndex806
					if !_rules[ruleMiscodedChar]() {
						goto l808
					}
					goto l806
				l808:
					position, tokenIndex = position806, tokenIndex806
					{
						position809, tokenIndex809 := position, tokenIndex
						if buffer[position] != rune('À') {
							goto l810
						}
						position++
						goto l809
					l810:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Á') {
							goto l811
						}
						position++
						goto l809
					l811:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Â') {
							goto l812
						}
						position++
						goto l809
					l812:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ã') {
							goto l813
						}
						position++
						goto l809
					l813:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ä') {
							goto l814
						}
						position++
						goto l809
					l814:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Å') {
							goto l815
						}
						position++
						goto l809
					l815:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Æ') {
							goto l816
						}
						position++
						goto l809
					l816:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ç') {
							goto l817
						}
						position++
						goto l809
					l817:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('È') {
							goto l818
						}
						position++
						goto l809
					l818:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('É') {
							goto l819
						}
						position++
						goto l809
					l819:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ê') {
							goto l820
						}
						position++
						goto l809
					l820:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ë') {
							goto l821
						}
						position++
						goto l809
					l821:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ì') {
							goto l822
						}
						position++
						goto l809
					l822:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Í') {
							goto l823
						}
						position++
						goto l809
					l823:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Î') {
							goto l824
						}
						position++
						goto l809
					l824:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ï') {
							goto l825
						}
						position++
						goto l809
					l825:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ð') {
							goto l826
						}
						position++
						goto l809
					l826:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ñ') {
							goto l827
						}
						position++
						goto l809
					l827:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ò') {
							goto l828
						}
						position++
						goto l809
					l828:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ó') {
							goto l829
						}
						position++
						goto l809
					l829:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ô') {
							goto l830
						}
						position++
						goto l809
					l830:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Õ') {
							goto l831
						}
						position++
						goto l809
					l831:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ö') {
							goto l832
						}
						position++
						goto l809
					l832:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ø') {
							goto l833
						}
						position++
						goto l809
					l833:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ù') {
							goto l834
						}
						position++
						goto l809
					l834:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ú') {
							goto l835
						}
						position++
						goto l809
					l835:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Û') {
							goto l836
						}
						position++
						goto l809
					l836:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ü') {
							goto l837
						}
						position++
						goto l809
					l837:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ý') {
							goto l838
						}
						position++
						goto l809
					l838:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ć') {
							goto l839
						}
						position++
						goto l809
					l839:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Č') {
							goto l840
						}
						position++
						goto l809
					l840:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ď') {
							goto l841
						}
						position++
						goto l809
					l841:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('İ') {
							goto l842
						}
						position++
						goto l809
					l842:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ķ') {
							goto l843
						}
						position++
						goto l809
					l843:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ĺ') {
							goto l844
						}
						position++
						goto l809
					l844:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('ĺ') {
							goto l845
						}
						position++
						goto l809
					l845:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ľ') {
							goto l846
						}
						position++
						goto l809
					l846:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('ľ') {
							goto l847
						}
						position++
						goto l809
					l847:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ł') {
							goto l848
						}
						position++
						goto l809
					l848:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('ł') {
							goto l849
						}
						position++
						goto l809
					l849:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ņ') {
							goto l850
						}
						position++
						goto l809
					l850:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ō') {
							goto l851
						}
						position++
						goto l809
					l851:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ő') {
							goto l852
						}
						position++
						goto l809
					l852:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Œ') {
							goto l853
						}
						position++
						goto l809
					l853:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ř') {
							goto l854
						}
						position++
						goto l809
					l854:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ś') {
							goto l855
						}
						position++
						goto l809
					l855:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ŝ') {
							goto l856
						}
						position++
						goto l809
					l856:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ş') {
							goto l857
						}
						position++
						goto l809
					l857:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Š') {
							goto l858
						}
						position++
						goto l809
					l858:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ÿ') {
							goto l859
						}
						position++
						goto l809
					l859:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ź') {
							goto l860
						}
						position++
						goto l809
					l860:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ż') {
							goto l861
						}
						position++
						goto l809
					l861:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ž') {
							goto l862
						}
						position++
						goto l809
					l862:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('ƒ') {
							goto l863
						}
						position++
						goto l809
					l863:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ǿ') {
							goto l864
						}
						position++
						goto l809
					l864:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ș') {
							goto l865
						}
						position++
						goto l809
					l865:
						position, tokenIndex = position809, tokenIndex809
						if buffer[position] != rune('Ț') {
							goto l804
						}
						position++
					}
				l809:
				}
			l806:
				add(ruleAuthorUpperChar, position805)
			}
			return true
		l804:
			position, tokenIndex = position804, tokenIndex804
			return false
		},
		/* 107 AuthorLowerChar <- <(LowerASCII / MiscodedChar / Apostrophe / ('à' / 'á' / 'â' / 'ã' / 'ä' / 'å' / 'æ' / 'ç' / 'è' / 'é' / 'ê' / 'ë' / 'ì' / 'í' / 'î' / 'ï' / 'ð' / 'ñ' / 'ò' / 'ó' / 'ó' / 'ô' / 'õ' / 'ö' / 'ø' / 'ù' / 'ú' / 'û' / 'ü' / 'ý' / 'ÿ' / 'ā' / 'ă' / 'ą' / 'ć' / 'ĉ' / 'č' / 'ď' / 'đ' / 'ē' / 'ĕ' / 'ė' / 'ę' / 'ě' / 'ğ' / 'ī' / 'ĭ' / 'İ' / 'ı' / 'ĺ' / 'ľ' / 'ł' / 'ń' / 'ņ' / 'ň' / 'ŏ' / 'ő' / 'œ' / 'ŕ' / 'ř' / 'ś' / 'ş' / 'š' / 'ţ' / 'ť' / 'ũ' / 'ū' / 'ŭ' / 'ů' / 'ű' / 'ź' / 'ż' / 'ž' / 'ſ' / 'ǎ' / 'ǔ' / 'ǧ' / 'ș' / 'ț' / 'ȳ' / 'ß'))> */
		func() bool {
			position866, tokenIndex866 := position, tokenIndex
			{
				position867 := position
				{
					position868, tokenIndex868 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l869
					}
					goto l868
				l869:
					position, tokenIndex = position868, tokenIndex868
					if !_rules[ruleMiscodedChar]() {
						goto l870
					}
					goto l868
				l870:
					position, tokenIndex = position868, tokenIndex868
					if !_rules[ruleApostrophe]() {
						goto l871
					}
					goto l868
				l871:
					position, tokenIndex = position868, tokenIndex868
					{
						position872, tokenIndex872 := position, tokenIndex
						if buffer[position] != rune('à') {
							goto l873
						}
						position++
						goto l872
					l873:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('á') {
							goto l874
						}
						position++
						goto l872
					l874:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('â') {
							goto l875
						}
						position++
						goto l872
					l875:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ã') {
							goto l876
						}
						position++
						goto l872
					l876:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ä') {
							goto l877
						}
						position++
						goto l872
					l877:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('å') {
							goto l878
						}
						position++
						goto l872
					l878:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('æ') {
							goto l879
						}
						position++
						goto l872
					l879:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ç') {
							goto l880
						}
						position++
						goto l872
					l880:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('è') {
							goto l881
						}
						position++
						goto l872
					l881:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('é') {
							goto l882
						}
						position++
						goto l872
					l882:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ê') {
							goto l883
						}
						position++
						goto l872
					l883:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ë') {
							goto l884
						}
						position++
						goto l872
					l884:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ì') {
							goto l885
						}
						position++
						goto l872
					l885:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('í') {
							goto l886
						}
						position++
						goto l872
					l886:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('î') {
							goto l887
						}
						position++
						goto l872
					l887:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ï') {
							goto l888
						}
						position++
						goto l872
					l888:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ð') {
							goto l889
						}
						position++
						goto l872
					l889:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ñ') {
							goto l890
						}
						position++
						goto l872
					l890:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ò') {
							goto l891
						}
						position++
						goto l872
					l891:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ó') {
							goto l892
						}
						position++
						goto l872
					l892:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ó') {
							goto l893
						}
						position++
						goto l872
					l893:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ô') {
							goto l894
						}
						position++
						goto l872
					l894:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('õ') {
							goto l895
						}
						position++
						goto l872
					l895:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ö') {
							goto l896
						}
						position++
						goto l872
					l896:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ø') {
							goto l897
						}
						position++
						goto l872
					l897:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ù') {
							goto l898
						}
						position++
						goto l872
					l898:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ú') {
							goto l899
						}
						position++
						goto l872
					l899:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('û') {
							goto l900
						}
						position++
						goto l872
					l900:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ü') {
							goto l901
						}
						position++
						goto l872
					l901:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ý') {
							goto l902
						}
						position++
						goto l872
					l902:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ÿ') {
							goto l903
						}
						position++
						goto l872
					l903:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ā') {
							goto l904
						}
						position++
						goto l872
					l904:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ă') {
							goto l905
						}
						position++
						goto l872
					l905:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ą') {
							goto l906
						}
						position++
						goto l872
					l906:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ć') {
							goto l907
						}
						position++
						goto l872
					l907:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ĉ') {
							goto l908
						}
						position++
						goto l872
					l908:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('č') {
							goto l909
						}
						position++
						goto l872
					l909:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ď') {
							goto l910
						}
						position++
						goto l872
					l910:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('đ') {
							goto l911
						}
						position++
						goto l872
					l911:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ē') {
							goto l912
						}
						position++
						goto l872
					l912:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ĕ') {
							goto l913
						}
						position++
						goto l872
					l913:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ė') {
							goto l914
						}
						position++
						goto l872
					l914:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ę') {
							goto l915
						}
						position++
						goto l872
					l915:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ě') {
							goto l916
						}
						position++
						goto l872
					l916:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ğ') {
							goto l917
						}
						position++
						goto l872
					l917:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ī') {
							goto l918
						}
						position++
						goto l872
					l918:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ĭ') {
							goto l919
						}
						position++
						goto l872
					l919:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('İ') {
							goto l920
						}
						position++
						goto l872
					l920:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ı') {
							goto l921
						}
						position++
						goto l872
					l921:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ĺ') {
							goto l922
						}
						position++
						goto l872
					l922:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ľ') {
							goto l923
						}
						position++
						goto l872
					l923:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ł') {
							goto l924
						}
						position++
						goto l872
					l924:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ń') {
							goto l925
						}
						position++
						goto l872
					l925:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ņ') {
							goto l926
						}
						position++
						goto l872
					l926:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ň') {
							goto l927
						}
						position++
						goto l872
					l927:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ŏ') {
							goto l928
						}
						position++
						goto l872
					l928:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ő') {
							goto l929
						}
						position++
						goto l872
					l929:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('œ') {
							goto l930
						}
						position++
						goto l872
					l930:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ŕ') {
							goto l931
						}
						position++
						goto l872
					l931:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ř') {
							goto l932
						}
						position++
						goto l872
					l932:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ś') {
							goto l933
						}
						position++
						goto l872
					l933:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ş') {
							goto l934
						}
						position++
						goto l872
					l934:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('š') {
							goto l935
						}
						position++
						goto l872
					l935:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ţ') {
							goto l936
						}
						position++
						goto l872
					l936:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ť') {
							goto l937
						}
						position++
						goto l872
					l937:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ũ') {
							goto l938
						}
						position++
						goto l872
					l938:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ū') {
							goto l939
						}
						position++
						goto l872
					l939:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ŭ') {
							goto l940
						}
						position++
						goto l872
					l940:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ů') {
							goto l941
						}
						position++
						goto l872
					l941:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ű') {
							goto l942
						}
						position++
						goto l872
					l942:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ź') {
							goto l943
						}
						position++
						goto l872
					l943:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ż') {
							goto l944
						}
						position++
						goto l872
					l944:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ž') {
							goto l945
						}
						position++
						goto l872
					l945:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ſ') {
							goto l946
						}
						position++
						goto l872
					l946:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ǎ') {
							goto l947
						}
						position++
						goto l872
					l947:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ǔ') {
							goto l948
						}
						position++
						goto l872
					l948:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ǧ') {
							goto l949
						}
						position++
						goto l872
					l949:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ș') {
							goto l950
						}
						position++
						goto l872
					l950:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ț') {
							goto l951
						}
						position++
						goto l872
					l951:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ȳ') {
							goto l952
						}
						position++
						goto l872
					l952:
						position, tokenIndex = position872, tokenIndex872
						if buffer[position] != rune('ß') {
							goto l866
						}
						position++
					}
				l872:
				}
			l868:
				add(ruleAuthorLowerChar, position867)
			}
			return true
		l866:
			position, tokenIndex = position866, tokenIndex866
			return false
		},
		/* 108 Year <- <(YearRange / YearApprox / YearWithParens / YearWithPage / YearWithDot / YearWithChar / YearNum)> */
		func() bool {
			position953, tokenIndex953 := position, tokenIndex
			{
				position954 := position
				{
					position955, tokenIndex955 := position, tokenIndex
					if !_rules[ruleYearRange]() {
						goto l956
					}
					goto l955
				l956:
					position, tokenIndex = position955, tokenIndex955
					if !_rules[ruleYearApprox]() {
						goto l957
					}
					goto l955
				l957:
					position, tokenIndex = position955, tokenIndex955
					if !_rules[ruleYearWithParens]() {
						goto l958
					}
					goto l955
				l958:
					position, tokenIndex = position955, tokenIndex955
					if !_rules[ruleYearWithPage]() {
						goto l959
					}
					goto l955
				l959:
					position, tokenIndex = position955, tokenIndex955
					if !_rules[ruleYearWithDot]() {
						goto l960
					}
					goto l955
				l960:
					position, tokenIndex = position955, tokenIndex955
					if !_rules[ruleYearWithChar]() {
						goto l961
					}
					goto l955
				l961:
					position, tokenIndex = position955, tokenIndex955
					if !_rules[ruleYearNum]() {
						goto l953
					}
				}
			l955:
				add(ruleYear, position954)
			}
			return true
		l953:
			position, tokenIndex = position953, tokenIndex953
			return false
		},
		/* 109 YearRange <- <(YearNum (Dash / Slash) (Nums+ ('a' / 'b' / 'c' / 'd' / 'e' / 'f' / 'g' / 'h' / 'i' / 'j' / 'k' / 'l' / 'm' / 'n' / 'o' / 'p' / 'q' / 'r' / 's' / 't' / 'u' / 'v' / 'w' / 'x' / 'y' / 'z' / '?')*))> */
		func() bool {
			position962, tokenIndex962 := position, tokenIndex
			{
				position963 := position
				if !_rules[ruleYearNum]() {
					goto l962
				}
				{
					position964, tokenIndex964 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l965
					}
					goto l964
				l965:
					position, tokenIndex = position964, tokenIndex964
					if !_rules[ruleSlash]() {
						goto l962
					}
				}
			l964:
				if !_rules[ruleNums]() {
					goto l962
				}
			l966:
				{
					position967, tokenIndex967 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l967
					}
					goto l966
				l967:
					position, tokenIndex = position967, tokenIndex967
				}
			l968:
				{
					position969, tokenIndex969 := position, tokenIndex
					{
						position970, tokenIndex970 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l971
						}
						position++
						goto l970
					l971:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('b') {
							goto l972
						}
						position++
						goto l970
					l972:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('c') {
							goto l973
						}
						position++
						goto l970
					l973:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('d') {
							goto l974
						}
						position++
						goto l970
					l974:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('e') {
							goto l975
						}
						position++
						goto l970
					l975:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('f') {
							goto l976
						}
						position++
						goto l970
					l976:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('g') {
							goto l977
						}
						position++
						goto l970
					l977:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('h') {
							goto l978
						}
						position++
						goto l970
					l978:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('i') {
							goto l979
						}
						position++
						goto l970
					l979:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('j') {
							goto l980
						}
						position++
						goto l970
					l980:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('k') {
							goto l981
						}
						position++
						goto l970
					l981:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('l') {
							goto l982
						}
						position++
						goto l970
					l982:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('m') {
							goto l983
						}
						position++
						goto l970
					l983:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('n') {
							goto l984
						}
						position++
						goto l970
					l984:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('o') {
							goto l985
						}
						position++
						goto l970
					l985:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('p') {
							goto l986
						}
						position++
						goto l970
					l986:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('q') {
							goto l987
						}
						position++
						goto l970
					l987:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('r') {
							goto l988
						}
						position++
						goto l970
					l988:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('s') {
							goto l989
						}
						position++
						goto l970
					l989:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('t') {
							goto l990
						}
						position++
						goto l970
					l990:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('u') {
							goto l991
						}
						position++
						goto l970
					l991:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('v') {
							goto l992
						}
						position++
						goto l970
					l992:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('w') {
							goto l993
						}
						position++
						goto l970
					l993:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('x') {
							goto l994
						}
						position++
						goto l970
					l994:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('y') {
							goto l995
						}
						position++
						goto l970
					l995:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('z') {
							goto l996
						}
						position++
						goto l970
					l996:
						position, tokenIndex = position970, tokenIndex970
						if buffer[position] != rune('?') {
							goto l969
						}
						position++
					}
				l970:
					goto l968
				l969:
					position, tokenIndex = position969, tokenIndex969
				}
				add(ruleYearRange, position963)
			}
			return true
		l962:
			position, tokenIndex = position962, tokenIndex962
			return false
		},
		/* 110 YearWithDot <- <(YearNum '.')> */
		func() bool {
			position997, tokenIndex997 := position, tokenIndex
			{
				position998 := position
				if !_rules[ruleYearNum]() {
					goto l997
				}
				if buffer[position] != rune('.') {
					goto l997
				}
				position++
				add(ruleYearWithDot, position998)
			}
			return true
		l997:
			position, tokenIndex = position997, tokenIndex997
			return false
		},
		/* 111 YearApprox <- <('[' _? YearNum _? ']')> */
		func() bool {
			position999, tokenIndex999 := position, tokenIndex
			{
				position1000 := position
				if buffer[position] != rune('[') {
					goto l999
				}
				position++
				{
					position1001, tokenIndex1001 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1001
					}
					goto l1002
				l1001:
					position, tokenIndex = position1001, tokenIndex1001
				}
			l1002:
				if !_rules[ruleYearNum]() {
					goto l999
				}
				{
					position1003, tokenIndex1003 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1003
					}
					goto l1004
				l1003:
					position, tokenIndex = position1003, tokenIndex1003
				}
			l1004:
				if buffer[position] != rune(']') {
					goto l999
				}
				position++
				add(ruleYearApprox, position1000)
			}
			return true
		l999:
			position, tokenIndex = position999, tokenIndex999
			return false
		},
		/* 112 YearWithPage <- <((YearWithChar / YearNum) _? ':' _? Nums+)> */
		func() bool {
			position1005, tokenIndex1005 := position, tokenIndex
			{
				position1006 := position
				{
					position1007, tokenIndex1007 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l1008
					}
					goto l1007
				l1008:
					position, tokenIndex = position1007, tokenIndex1007
					if !_rules[ruleYearNum]() {
						goto l1005
					}
				}
			l1007:
				{
					position1009, tokenIndex1009 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1009
					}
					goto l1010
				l1009:
					position, tokenIndex = position1009, tokenIndex1009
				}
			l1010:
				if buffer[position] != rune(':') {
					goto l1005
				}
				position++
				{
					position1011, tokenIndex1011 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1011
					}
					goto l1012
				l1011:
					position, tokenIndex = position1011, tokenIndex1011
				}
			l1012:
				if !_rules[ruleNums]() {
					goto l1005
				}
			l1013:
				{
					position1014, tokenIndex1014 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l1014
					}
					goto l1013
				l1014:
					position, tokenIndex = position1014, tokenIndex1014
				}
				add(ruleYearWithPage, position1006)
			}
			return true
		l1005:
			position, tokenIndex = position1005, tokenIndex1005
			return false
		},
		/* 113 YearWithParens <- <('(' (YearWithChar / YearNum) ')')> */
		func() bool {
			position1015, tokenIndex1015 := position, tokenIndex
			{
				position1016 := position
				if buffer[position] != rune('(') {
					goto l1015
				}
				position++
				{
					position1017, tokenIndex1017 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l1018
					}
					goto l1017
				l1018:
					position, tokenIndex = position1017, tokenIndex1017
					if !_rules[ruleYearNum]() {
						goto l1015
					}
				}
			l1017:
				if buffer[position] != rune(')') {
					goto l1015
				}
				position++
				add(ruleYearWithParens, position1016)
			}
			return true
		l1015:
			position, tokenIndex = position1015, tokenIndex1015
			return false
		},
		/* 114 YearWithChar <- <(YearNum LowerASCII)> */
		func() bool {
			position1019, tokenIndex1019 := position, tokenIndex
			{
				position1020 := position
				if !_rules[ruleYearNum]() {
					goto l1019
				}
				if !_rules[ruleLowerASCII]() {
					goto l1019
				}
				add(ruleYearWithChar, position1020)
			}
			return true
		l1019:
			position, tokenIndex = position1019, tokenIndex1019
			return false
		},
		/* 115 YearNum <- <(('1' / '2') ('0' / '7' / '8' / '9') Nums (Nums / '?') '?'*)> */
		func() bool {
			position1021, tokenIndex1021 := position, tokenIndex
			{
				position1022 := position
				{
					position1023, tokenIndex1023 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l1024
					}
					position++
					goto l1023
				l1024:
					position, tokenIndex = position1023, tokenIndex1023
					if buffer[position] != rune('2') {
						goto l1021
					}
					position++
				}
			l1023:
				{
					position1025, tokenIndex1025 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l1026
					}
					position++
					goto l1025
				l1026:
					position, tokenIndex = position1025, tokenIndex1025
					if buffer[position] != rune('7') {
						goto l1027
					}
					position++
					goto l1025
				l1027:
					position, tokenIndex = position1025, tokenIndex1025
					if buffer[position] != rune('8') {
						goto l1028
					}
					position++
					goto l1025
				l1028:
					position, tokenIndex = position1025, tokenIndex1025
					if buffer[position] != rune('9') {
						goto l1021
					}
					position++
				}
			l1025:
				if !_rules[ruleNums]() {
					goto l1021
				}
				{
					position1029, tokenIndex1029 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l1030
					}
					goto l1029
				l1030:
					position, tokenIndex = position1029, tokenIndex1029
					if buffer[position] != rune('?') {
						goto l1021
					}
					position++
				}
			l1029:
			l1031:
				{
					position1032, tokenIndex1032 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l1032
					}
					position++
					goto l1031
				l1032:
					position, tokenIndex = position1032, tokenIndex1032
				}
				add(ruleYearNum, position1022)
			}
			return true
		l1021:
			position, tokenIndex = position1021, tokenIndex1021
			return false
		},
		/* 116 NameUpperChar <- <(UpperChar / UpperCharExtended)> */
		func() bool {
			position1033, tokenIndex1033 := position, tokenIndex
			{
				position1034 := position
				{
					position1035, tokenIndex1035 := position, tokenIndex
					if !_rules[ruleUpperChar]() {
						goto l1036
					}
					goto l1035
				l1036:
					position, tokenIndex = position1035, tokenIndex1035
					if !_rules[ruleUpperCharExtended]() {
						goto l1033
					}
				}
			l1035:
				add(ruleNameUpperChar, position1034)
			}
			return true
		l1033:
			position, tokenIndex = position1033, tokenIndex1033
			return false
		},
		/* 117 UpperCharExtended <- <('Æ' / 'Œ' / 'Ö')> */
		func() bool {
			position1037, tokenIndex1037 := position, tokenIndex
			{
				position1038 := position
				{
					position1039, tokenIndex1039 := position, tokenIndex
					if buffer[position] != rune('Æ') {
						goto l1040
					}
					position++
					goto l1039
				l1040:
					position, tokenIndex = position1039, tokenIndex1039
					if buffer[position] != rune('Œ') {
						goto l1041
					}
					position++
					goto l1039
				l1041:
					position, tokenIndex = position1039, tokenIndex1039
					if buffer[position] != rune('Ö') {
						goto l1037
					}
					position++
				}
			l1039:
				add(ruleUpperCharExtended, position1038)
			}
			return true
		l1037:
			position, tokenIndex = position1037, tokenIndex1037
			return false
		},
		/* 118 UpperChar <- <UpperASCII> */
		func() bool {
			position1042, tokenIndex1042 := position, tokenIndex
			{
				position1043 := position
				if !_rules[ruleUpperASCII]() {
					goto l1042
				}
				add(ruleUpperChar, position1043)
			}
			return true
		l1042:
			position, tokenIndex = position1042, tokenIndex1042
			return false
		},
		/* 119 NameLowerChar <- <(LowerChar / LowerCharExtended / MiscodedChar)> */
		func() bool {
			position1044, tokenIndex1044 := position, tokenIndex
			{
				position1045 := position
				{
					position1046, tokenIndex1046 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l1047
					}
					goto l1046
				l1047:
					position, tokenIndex = position1046, tokenIndex1046
					if !_rules[ruleLowerCharExtended]() {
						goto l1048
					}
					goto l1046
				l1048:
					position, tokenIndex = position1046, tokenIndex1046
					if !_rules[ruleMiscodedChar]() {
						goto l1044
					}
				}
			l1046:
				add(ruleNameLowerChar, position1045)
			}
			return true
		l1044:
			position, tokenIndex = position1044, tokenIndex1044
			return false
		},
		/* 120 MiscodedChar <- <'�'> */
		func() bool {
			position1049, tokenIndex1049 := position, tokenIndex
			{
				position1050 := position
				if buffer[position] != rune('�') {
					goto l1049
				}
				position++
				add(ruleMiscodedChar, position1050)
			}
			return true
		l1049:
			position, tokenIndex = position1049, tokenIndex1049
			return false
		},
		/* 121 LowerCharExtended <- <('æ' / 'œ' / 'à' / 'â' / 'å' / 'ã' / 'ä' / 'á' / 'ç' / 'č' / 'é' / 'è' / 'ë' / 'í' / 'ì' / 'ï' / 'ň' / 'ñ' / 'ñ' / 'ó' / 'ò' / 'ô' / 'ø' / 'õ' / 'ö' / 'ú' / 'ù' / 'ü' / 'ŕ' / 'ř' / 'ŗ' / 'ſ' / 'š' / 'š' / 'ş' / 'ß' / 'ž')> */
		func() bool {
			position1051, tokenIndex1051 := position, tokenIndex
			{
				position1052 := position
				{
					position1053, tokenIndex1053 := position, tokenIndex
					if buffer[position] != rune('æ') {
						goto l1054
					}
					position++
					goto l1053
				l1054:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('œ') {
						goto l1055
					}
					position++
					goto l1053
				l1055:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('à') {
						goto l1056
					}
					position++
					goto l1053
				l1056:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('â') {
						goto l1057
					}
					position++
					goto l1053
				l1057:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('å') {
						goto l1058
					}
					position++
					goto l1053
				l1058:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ã') {
						goto l1059
					}
					position++
					goto l1053
				l1059:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ä') {
						goto l1060
					}
					position++
					goto l1053
				l1060:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('á') {
						goto l1061
					}
					position++
					goto l1053
				l1061:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ç') {
						goto l1062
					}
					position++
					goto l1053
				l1062:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('č') {
						goto l1063
					}
					position++
					goto l1053
				l1063:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('é') {
						goto l1064
					}
					position++
					goto l1053
				l1064:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('è') {
						goto l1065
					}
					position++
					goto l1053
				l1065:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ë') {
						goto l1066
					}
					position++
					goto l1053
				l1066:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('í') {
						goto l1067
					}
					position++
					goto l1053
				l1067:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ì') {
						goto l1068
					}
					position++
					goto l1053
				l1068:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ï') {
						goto l1069
					}
					position++
					goto l1053
				l1069:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ň') {
						goto l1070
					}
					position++
					goto l1053
				l1070:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ñ') {
						goto l1071
					}
					position++
					goto l1053
				l1071:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ñ') {
						goto l1072
					}
					position++
					goto l1053
				l1072:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ó') {
						goto l1073
					}
					position++
					goto l1053
				l1073:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ò') {
						goto l1074
					}
					position++
					goto l1053
				l1074:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ô') {
						goto l1075
					}
					position++
					goto l1053
				l1075:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ø') {
						goto l1076
					}
					position++
					goto l1053
				l1076:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('õ') {
						goto l1077
					}
					position++
					goto l1053
				l1077:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ö') {
						goto l1078
					}
					position++
					goto l1053
				l1078:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ú') {
						goto l1079
					}
					position++
					goto l1053
				l1079:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ù') {
						goto l1080
					}
					position++
					goto l1053
				l1080:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ü') {
						goto l1081
					}
					position++
					goto l1053
				l1081:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ŕ') {
						goto l1082
					}
					position++
					goto l1053
				l1082:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ř') {
						goto l1083
					}
					position++
					goto l1053
				l1083:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ŗ') {
						goto l1084
					}
					position++
					goto l1053
				l1084:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ſ') {
						goto l1085
					}
					position++
					goto l1053
				l1085:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('š') {
						goto l1086
					}
					position++
					goto l1053
				l1086:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('š') {
						goto l1087
					}
					position++
					goto l1053
				l1087:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ş') {
						goto l1088
					}
					position++
					goto l1053
				l1088:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ß') {
						goto l1089
					}
					position++
					goto l1053
				l1089:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('ž') {
						goto l1051
					}
					position++
				}
			l1053:
				add(ruleLowerCharExtended, position1052)
			}
			return true
		l1051:
			position, tokenIndex = position1051, tokenIndex1051
			return false
		},
		/* 122 LowerChar <- <LowerASCII> */
		func() bool {
			position1090, tokenIndex1090 := position, tokenIndex
			{
				position1091 := position
				if !_rules[ruleLowerASCII]() {
					goto l1090
				}
				add(ruleLowerChar, position1091)
			}
			return true
		l1090:
			position, tokenIndex = position1090, tokenIndex1090
			return false
		},
		/* 123 SpaceCharEOI <- <(_ / !.)> */
		func() bool {
			position1092, tokenIndex1092 := position, tokenIndex
			{
				position1093 := position
				{
					position1094, tokenIndex1094 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1095
					}
					goto l1094
				l1095:
					position, tokenIndex = position1094, tokenIndex1094
					{
						position1096, tokenIndex1096 := position, tokenIndex
						if !matchDot() {
							goto l1096
						}
						goto l1092
					l1096:
						position, tokenIndex = position1096, tokenIndex1096
					}
				}
			l1094:
				add(ruleSpaceCharEOI, position1093)
			}
			return true
		l1092:
			position, tokenIndex = position1092, tokenIndex1092
			return false
		},
		/* 124 Nums <- <[0-9]> */
		func() bool {
			position1097, tokenIndex1097 := position, tokenIndex
			{
				position1098 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l1097
				}
				position++
				add(ruleNums, position1098)
			}
			return true
		l1097:
			position, tokenIndex = position1097, tokenIndex1097
			return false
		},
		/* 125 LowerGreek <- <[α-ω]> */
		func() bool {
			position1099, tokenIndex1099 := position, tokenIndex
			{
				position1100 := position
				if c := buffer[position]; c < rune('α') || c > rune('ω') {
					goto l1099
				}
				position++
				add(ruleLowerGreek, position1100)
			}
			return true
		l1099:
			position, tokenIndex = position1099, tokenIndex1099
			return false
		},
		/* 126 LowerASCII <- <[a-z]> */
		func() bool {
			position1101, tokenIndex1101 := position, tokenIndex
			{
				position1102 := position
				if c := buffer[position]; c < rune('a') || c > rune('z') {
					goto l1101
				}
				position++
				add(ruleLowerASCII, position1102)
			}
			return true
		l1101:
			position, tokenIndex = position1101, tokenIndex1101
			return false
		},
		/* 127 UpperASCII <- <[A-Z]> */
		func() bool {
			position1103, tokenIndex1103 := position, tokenIndex
			{
				position1104 := position
				if c := buffer[position]; c < rune('A') || c > rune('Z') {
					goto l1103
				}
				position++
				add(ruleUpperASCII, position1104)
			}
			return true
		l1103:
			position, tokenIndex = position1103, tokenIndex1103
			return false
		},
		/* 128 Apostrophe <- <(ApostrOther / ApostrASCII)> */
		func() bool {
			position1105, tokenIndex1105 := position, tokenIndex
			{
				position1106 := position
				{
					position1107, tokenIndex1107 := position, tokenIndex
					if !_rules[ruleApostrOther]() {
						goto l1108
					}
					goto l1107
				l1108:
					position, tokenIndex = position1107, tokenIndex1107
					if !_rules[ruleApostrASCII]() {
						goto l1105
					}
				}
			l1107:
				add(ruleApostrophe, position1106)
			}
			return true
		l1105:
			position, tokenIndex = position1105, tokenIndex1105
			return false
		},
		/* 129 ApostrASCII <- <'\''> */
		func() bool {
			position1109, tokenIndex1109 := position, tokenIndex
			{
				position1110 := position
				if buffer[position] != rune('\'') {
					goto l1109
				}
				position++
				add(ruleApostrASCII, position1110)
			}
			return true
		l1109:
			position, tokenIndex = position1109, tokenIndex1109
			return false
		},
		/* 130 ApostrOther <- <('‘' / '’' / '`' / '´')> */
		func() bool {
			position1111, tokenIndex1111 := position, tokenIndex
			{
				position1112 := position
				{
					position1113, tokenIndex1113 := position, tokenIndex
					if buffer[position] != rune('‘') {
						goto l1114
					}
					position++
					goto l1113
				l1114:
					position, tokenIndex = position1113, tokenIndex1113
					if buffer[position] != rune('’') {
						goto l1115
					}
					position++
					goto l1113
				l1115:
					position, tokenIndex = position1113, tokenIndex1113
					if buffer[position] != rune('`') {
						goto l1116
					}
					position++
					goto l1113
				l1116:
					position, tokenIndex = position1113, tokenIndex1113
					if buffer[position] != rune('´') {
						goto l1111
					}
					position++
				}
			l1113:
				add(ruleApostrOther, position1112)
			}
			return true
		l1111:
			position, tokenIndex = position1111, tokenIndex1111
			return false
		},
		/* 131 Dash <- <'-'> */
		func() bool {
			position1117, tokenIndex1117 := position, tokenIndex
			{
				position1118 := position
				if buffer[position] != rune('-') {
					goto l1117
				}
				position++
				add(ruleDash, position1118)
			}
			return true
		l1117:
			position, tokenIndex = position1117, tokenIndex1117
			return false
		},
		/* 132 Slash <- <'/'> */
		func() bool {
			position1119, tokenIndex1119 := position, tokenIndex
			{
				position1120 := position
				if buffer[position] != rune('/') {
					goto l1119
				}
				position++
				add(ruleSlash, position1120)
			}
			return true
		l1119:
			position, tokenIndex = position1119, tokenIndex1119
			return false
		},
		/* 133 _ <- <(MultipleSpace / SingleSpace)> */
		func() bool {
			position1121, tokenIndex1121 := position, tokenIndex
			{
				position1122 := position
				{
					position1123, tokenIndex1123 := position, tokenIndex
					if !_rules[ruleMultipleSpace]() {
						goto l1124
					}
					goto l1123
				l1124:
					position, tokenIndex = position1123, tokenIndex1123
					if !_rules[ruleSingleSpace]() {
						goto l1121
					}
				}
			l1123:
				add(rule_, position1122)
			}
			return true
		l1121:
			position, tokenIndex = position1121, tokenIndex1121
			return false
		},
		/* 134 MultipleSpace <- <(SingleSpace SingleSpace+)> */
		func() bool {
			position1125, tokenIndex1125 := position, tokenIndex
			{
				position1126 := position
				if !_rules[ruleSingleSpace]() {
					goto l1125
				}
				if !_rules[ruleSingleSpace]() {
					goto l1125
				}
			l1127:
				{
					position1128, tokenIndex1128 := position, tokenIndex
					if !_rules[ruleSingleSpace]() {
						goto l1128
					}
					goto l1127
				l1128:
					position, tokenIndex = position1128, tokenIndex1128
				}
				add(ruleMultipleSpace, position1126)
			}
			return true
		l1125:
			position, tokenIndex = position1125, tokenIndex1125
			return false
		},
		/* 135 SingleSpace <- <(' ' / OtherSpace)> */
		func() bool {
			position1129, tokenIndex1129 := position, tokenIndex
			{
				position1130 := position
				{
					position1131, tokenIndex1131 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l1132
					}
					position++
					goto l1131
				l1132:
					position, tokenIndex = position1131, tokenIndex1131
					if !_rules[ruleOtherSpace]() {
						goto l1129
					}
				}
			l1131:
				add(ruleSingleSpace, position1130)
			}
			return true
		l1129:
			position, tokenIndex = position1129, tokenIndex1129
			return false
		},
		/* 136 OtherSpace <- <('\u3000' / '\u00a0' / '\t' / '\r' / '\n' / '\f' / '\v')> */
		func() bool {
			position1133, tokenIndex1133 := position, tokenIndex
			{
				position1134 := position
				{
					position1135, tokenIndex1135 := position, tokenIndex
					if buffer[position] != rune('\u3000') {
						goto l1136
					}
					position++
					goto l1135
				l1136:
					position, tokenIndex = position1135, tokenIndex1135
					if buffer[position] != rune('\u00a0') {
						goto l1137
					}
					position++
					goto l1135
				l1137:
					position, tokenIndex = position1135, tokenIndex1135
					if buffer[position] != rune('\t') {
						goto l1138
					}
					position++
					goto l1135
				l1138:
					position, tokenIndex = position1135, tokenIndex1135
					if buffer[position] != rune('\r') {
						goto l1139
					}
					position++
					goto l1135
				l1139:
					position, tokenIndex = position1135, tokenIndex1135
					if buffer[position] != rune('\n') {
						goto l1140
					}
					position++
					goto l1135
				l1140:
					position, tokenIndex = position1135, tokenIndex1135
					if buffer[position] != rune('\f') {
						goto l1141
					}
					position++
					goto l1135
				l1141:
					position, tokenIndex = position1135, tokenIndex1135
					if buffer[position] != rune('\v') {
						goto l1133
					}
					position++
				}
			l1135:
				add(ruleOtherSpace, position1134)
			}
			return true
		l1133:
			position, tokenIndex = position1133, tokenIndex1133
			return false
		},
		/* 137 END <- <!.> */
		func() bool {
			position1142, tokenIndex1142 := position, tokenIndex
			{
				position1143 := position
				{
					position1144, tokenIndex1144 := position, tokenIndex
					if !matchDot() {
						goto l1144
					}
					goto l1142
				l1144:
					position, tokenIndex = position1144, tokenIndex1144
				}
				add(ruleEND, position1143)
			}
			return true
		l1142:
			position, tokenIndex = position1142, tokenIndex1142
			return false
		},
	}
	p.rules = _rules
	return nil
}
