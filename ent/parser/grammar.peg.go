package parser

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleSciName
	ruleTail
	ruleName
	ruleHybridFormula
	ruleHybridFormulaFull
	ruleHybridFormulaPart
	ruleNamedHybrid
	ruleNamedSpeciesHybrid
	ruleNamedGenusHybrid
	ruleCandidatusName
	ruleCandidatus
	ruleSingleName
	ruleNameUninomial
	ruleNameApprox
	ruleNameComp
	ruleNameSpecies
	ruleGenusWord
	ruleInfraspGroup
	ruleInfraspEpithet
	ruleSpeciesEpithet
	ruleComparison
	ruleRank
	ruleRankNotho
	ruleRankOtherUncommon
	ruleRankOther
	ruleRankVar
	ruleRankForma
	ruleRankSsp
	ruleRankAgamo
	ruleSubgenusOrSuperspecies
	ruleSubgenus
	ruleSubgenus2
	ruleSubgenus1
	ruleUninomialCombo
	ruleUninomialCombo1
	ruleUninomialCombo2
	ruleRankUninomial
	ruleRankUninomialPlain
	ruleRankUninomialNotho
	ruleUninomial
	ruleUninomialWord
	ruleAbbrSubgenus
	ruleAbbrGenus
	ruleCapWord
	ruleCapWord1
	ruleCapWordWithDash
	ruleUpperAfterDash
	ruleLowerAfterDash
	ruleTwoLetterGenus
	ruleWord
	ruleWord1
	ruleWordStartsWithDigit
	ruleWord2
	ruleWordApostr
	ruleWord4
	ruleMultiDashedWord
	ruleHybridChar
	ruleApproxNameIgnored
	ruleApproximation
	ruleAuthorship
	ruleAuthorshipCombo
	ruleOriginalAuthorship
	ruleOriginalAuthorshipComb
	ruleCombinationAuthorship
	ruleBasionymAuthorshipMissingParens
	ruleMissingParensStart
	ruleMissingParensEnd
	ruleBasionymAuthorshipYearMisformed
	ruleBasionymAuthorship
	ruleBasionymAuthorship1
	ruleBasionymAuthorship2Parens
	ruleAuthorsGroup
	ruleAuthorsTeam
	ruleAuthorSep
	ruleAuthorSep1
	ruleAuthorSep2
	ruleAuthorSepSpanish
	ruleAuthorEx
	ruleAuthorEmend
	ruleAuthor
	ruleAuthor0
	ruleAuthor1
	ruleAuthor2
	ruleUnknownAuthor
	ruleAuthorWord
	ruleAuthorEtAl
	ruleAuthorWord2
	ruleAuthorWord3
	ruleAuthorWordSoft
	ruleCapAuthorWord
	ruleAllCapsAuthorWord
	ruleFilius
	ruleFiliusF
	ruleFiliusFNoSpace
	ruleAuthorSuffix
	ruleAuthorPrefixGlued
	ruleAuthorPrefix
	ruleAuthorPrefix2
	ruleAuthorPrefix1
	ruleAuthorUpperChar
	ruleAuthorLowerChar
	ruleYear
	ruleYearRange
	ruleYearWithDot
	ruleYearApprox
	ruleYearWithPage
	ruleYearWithParens
	ruleYearWithChar
	ruleYearNum
	ruleNameUpperChar
	ruleUpperCharExtended
	ruleUpperChar
	ruleNameLowerChar
	ruleMiscodedChar
	ruleLowerCharExtended
	ruleLowerChar
	ruleSpaceCharEOI
	ruleNums
	ruleLowerGreek
	ruleLowerASCII
	ruleUpperASCII
	ruleApostrophe
	ruleApostrASCII
	ruleApostrOther
	ruleDash
	ruleSlash
	rule_
	ruleMultipleSpace
	ruleSingleSpace
	ruleOtherSpace
	ruleEND
)

var rul3s = [...]string{
	"Unknown",
	"SciName",
	"Tail",
	"Name",
	"HybridFormula",
	"HybridFormulaFull",
	"HybridFormulaPart",
	"NamedHybrid",
	"NamedSpeciesHybrid",
	"NamedGenusHybrid",
	"CandidatusName",
	"Candidatus",
	"SingleName",
	"NameUninomial",
	"NameApprox",
	"NameComp",
	"NameSpecies",
	"GenusWord",
	"InfraspGroup",
	"InfraspEpithet",
	"SpeciesEpithet",
	"Comparison",
	"Rank",
	"RankNotho",
	"RankOtherUncommon",
	"RankOther",
	"RankVar",
	"RankForma",
	"RankSsp",
	"RankAgamo",
	"SubgenusOrSuperspecies",
	"Subgenus",
	"Subgenus2",
	"Subgenus1",
	"UninomialCombo",
	"UninomialCombo1",
	"UninomialCombo2",
	"RankUninomial",
	"RankUninomialPlain",
	"RankUninomialNotho",
	"Uninomial",
	"UninomialWord",
	"AbbrSubgenus",
	"AbbrGenus",
	"CapWord",
	"CapWord1",
	"CapWordWithDash",
	"UpperAfterDash",
	"LowerAfterDash",
	"TwoLetterGenus",
	"Word",
	"Word1",
	"WordStartsWithDigit",
	"Word2",
	"WordApostr",
	"Word4",
	"MultiDashedWord",
	"HybridChar",
	"ApproxNameIgnored",
	"Approximation",
	"Authorship",
	"AuthorshipCombo",
	"OriginalAuthorship",
	"OriginalAuthorshipComb",
	"CombinationAuthorship",
	"BasionymAuthorshipMissingParens",
	"MissingParensStart",
	"MissingParensEnd",
	"BasionymAuthorshipYearMisformed",
	"BasionymAuthorship",
	"BasionymAuthorship1",
	"BasionymAuthorship2Parens",
	"AuthorsGroup",
	"AuthorsTeam",
	"AuthorSep",
	"AuthorSep1",
	"AuthorSep2",
	"AuthorSepSpanish",
	"AuthorEx",
	"AuthorEmend",
	"Author",
	"Author0",
	"Author1",
	"Author2",
	"UnknownAuthor",
	"AuthorWord",
	"AuthorEtAl",
	"AuthorWord2",
	"AuthorWord3",
	"AuthorWordSoft",
	"CapAuthorWord",
	"AllCapsAuthorWord",
	"Filius",
	"FiliusF",
	"FiliusFNoSpace",
	"AuthorSuffix",
	"AuthorPrefixGlued",
	"AuthorPrefix",
	"AuthorPrefix2",
	"AuthorPrefix1",
	"AuthorUpperChar",
	"AuthorLowerChar",
	"Year",
	"YearRange",
	"YearWithDot",
	"YearApprox",
	"YearWithPage",
	"YearWithParens",
	"YearWithChar",
	"YearNum",
	"NameUpperChar",
	"UpperCharExtended",
	"UpperChar",
	"NameLowerChar",
	"MiscodedChar",
	"LowerCharExtended",
	"LowerChar",
	"SpaceCharEOI",
	"Nums",
	"LowerGreek",
	"LowerASCII",
	"UpperASCII",
	"Apostrophe",
	"ApostrASCII",
	"ApostrOther",
	"Dash",
	"Slash",
	"_",
	"MultipleSpace",
	"SingleSpace",
	"OtherSpace",
	"END",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type Engine struct {
	baseEngine

	Buffer string
	buffer []rune
	rules  [132]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *Engine) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *Engine) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *Engine
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *Engine) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *Engine) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *Engine) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func Pretty(pretty bool) func(*Engine) error {
	return func(p *Engine) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*Engine) error {
	return func(p *Engine) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *Engine) Init(options ...func(*Engine) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 SciName <- <(_? Name Tail END)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				{
					position2, tokenIndex2 := position, tokenIndex
					if !_rules[rule_]() {
						goto l2
					}
					goto l3
				l2:
					position, tokenIndex = position2, tokenIndex2
				}
			l3:
				if !_rules[ruleName]() {
					goto l0
				}
				if !_rules[ruleTail]() {
					goto l0
				}
				if !_rules[ruleEND]() {
					goto l0
				}
				add(ruleSciName, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Tail <- <((_ / ';' / ',') .*)?> */
		func() bool {
			{
				position5 := position
				{
					position6, tokenIndex6 := position, tokenIndex
					{
						position8, tokenIndex8 := position, tokenIndex
						if !_rules[rule_]() {
							goto l9
						}
						goto l8
					l9:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(';') {
							goto l10
						}
						position++
						goto l8
					l10:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(',') {
							goto l6
						}
						position++
					}
				l8:
				l11:
					{
						position12, tokenIndex12 := position, tokenIndex
						if !matchDot() {
							goto l12
						}
						goto l11
					l12:
						position, tokenIndex = position12, tokenIndex12
					}
					goto l7
				l6:
					position, tokenIndex = position6, tokenIndex6
				}
			l7:
				add(ruleTail, position5)
			}
			return true
		},
		/* 2 Name <- <(NamedHybrid / HybridFormula / CandidatusName / SingleName)> */
		func() bool {
			position13, tokenIndex13 := position, tokenIndex
			{
				position14 := position
				{
					position15, tokenIndex15 := position, tokenIndex
					if !_rules[ruleNamedHybrid]() {
						goto l16
					}
					goto l15
				l16:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleHybridFormula]() {
						goto l17
					}
					goto l15
				l17:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleCandidatusName]() {
						goto l18
					}
					goto l15
				l18:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleSingleName]() {
						goto l13
					}
				}
			l15:
				add(ruleName, position14)
			}
			return true
		l13:
			position, tokenIndex = position13, tokenIndex13
			return false
		},
		/* 3 HybridFormula <- <(SingleName (_ (HybridFormulaPart / HybridFormulaFull))+)> */
		func() bool {
			position19, tokenIndex19 := position, tokenIndex
			{
				position20 := position
				if !_rules[ruleSingleName]() {
					goto l19
				}
				if !_rules[rule_]() {
					goto l19
				}
				{
					position23, tokenIndex23 := position, tokenIndex
					if !_rules[ruleHybridFormulaPart]() {
						goto l24
					}
					goto l23
				l24:
					position, tokenIndex = position23, tokenIndex23
					if !_rules[ruleHybridFormulaFull]() {
						goto l19
					}
				}
			l23:
			l21:
				{
					position22, tokenIndex22 := position, tokenIndex
					if !_rules[rule_]() {
						goto l22
					}
					{
						position25, tokenIndex25 := position, tokenIndex
						if !_rules[ruleHybridFormulaPart]() {
							goto l26
						}
						goto l25
					l26:
						position, tokenIndex = position25, tokenIndex25
						if !_rules[ruleHybridFormulaFull]() {
							goto l22
						}
					}
				l25:
					goto l21
				l22:
					position, tokenIndex = position22, tokenIndex22
				}
				add(ruleHybridFormula, position20)
			}
			return true
		l19:
			position, tokenIndex = position19, tokenIndex19
			return false
		},
		/* 4 HybridFormulaFull <- <(HybridChar (_ SingleName)?)> */
		func() bool {
			position27, tokenIndex27 := position, tokenIndex
			{
				position28 := position
				if !_rules[ruleHybridChar]() {
					goto l27
				}
				{
					position29, tokenIndex29 := position, tokenIndex
					if !_rules[rule_]() {
						goto l29
					}
					if !_rules[ruleSingleName]() {
						goto l29
					}
					goto l30
				l29:
					position, tokenIndex = position29, tokenIndex29
				}
			l30:
				add(ruleHybridFormulaFull, position28)
			}
			return true
		l27:
			position, tokenIndex = position27, tokenIndex27
			return false
		},
		/* 5 HybridFormulaPart <- <(HybridChar _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position31, tokenIndex31 := position, tokenIndex
			{
				position32 := position
				if !_rules[ruleHybridChar]() {
					goto l31
				}
				if !_rules[rule_]() {
					goto l31
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l31
				}
				{
					position33, tokenIndex33 := position, tokenIndex
					if !_rules[rule_]() {
						goto l33
					}
					if !_rules[ruleInfraspGroup]() {
						goto l33
					}
					goto l34
				l33:
					position, tokenIndex = position33, tokenIndex33
				}
			l34:
				add(ruleHybridFormulaPart, position32)
			}
			return true
		l31:
			position, tokenIndex = position31, tokenIndex31
			return false
		},
		/* 6 NamedHybrid <- <(NamedGenusHybrid / NamedSpeciesHybrid)> */
		func() bool {
			position35, tokenIndex35 := position, tokenIndex
			{
				position36 := position
				{
					position37, tokenIndex37 := position, tokenIndex
					if !_rules[ruleNamedGenusHybrid]() {
						goto l38
					}
					goto l37
				l38:
					position, tokenIndex = position37, tokenIndex37
					if !_rules[ruleNamedSpeciesHybrid]() {
						goto l35
					}
				}
			l37:
				add(ruleNamedHybrid, position36)
			}
			return true
		l35:
			position, tokenIndex = position35, tokenIndex35
			return false
		},
		/* 7 NamedSpeciesHybrid <- <(GenusWord (_ Subgenus)? (_ Comparison)? _ HybridChar _? SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position39, tokenIndex39 := position, tokenIndex
			{
				position40 := position
				if !_rules[ruleGenusWord]() {
					goto l39
				}
				{
					position41, tokenIndex41 := position, tokenIndex
					if !_rules[rule_]() {
						goto l41
					}
					if !_rules[ruleSubgenus]() {
						goto l41
					}
					goto l42
				l41:
					position, tokenIndex = position41, tokenIndex41
				}
			l42:
				{
					position43, tokenIndex43 := position, tokenIndex
					if !_rules[rule_]() {
						goto l43
					}
					if !_rules[ruleComparison]() {
						goto l43
					}
					goto l44
				l43:
					position, tokenIndex = position43, tokenIndex43
				}
			l44:
				if !_rules[rule_]() {
					goto l39
				}
				if !_rules[ruleHybridChar]() {
					goto l39
				}
				{
					position45, tokenIndex45 := position, tokenIndex
					if !_rules[rule_]() {
						goto l45
					}
					goto l46
				l45:
					position, tokenIndex = position45, tokenIndex45
				}
			l46:
				if !_rules[ruleSpeciesEpithet]() {
					goto l39
				}
				{
					position47, tokenIndex47 := position, tokenIndex
					if !_rules[rule_]() {
						goto l47
					}
					if !_rules[ruleInfraspGroup]() {
						goto l47
					}
					goto l48
				l47:
					position, tokenIndex = position47, tokenIndex47
				}
			l48:
				add(ruleNamedSpeciesHybrid, position40)
			}
			return true
		l39:
			position, tokenIndex = position39, tokenIndex39
			return false
		},
		/* 8 NamedGenusHybrid <- <(HybridChar _? SingleName)> */
		func() bool {
			position49, tokenIndex49 := position, tokenIndex
			{
				position50 := position
				if !_rules[ruleHybridChar]() {
					goto l49
				}
				{
					position51, tokenIndex51 := position, tokenIndex
					if !_rules[rule_]() {
						goto l51
					}
					goto l52
				l51:
					position, tokenIndex = position51, tokenIndex51
				}
			l52:
				if !_rules[ruleSingleName]() {
					goto l49
				}
				add(ruleNamedGenusHybrid, position50)
			}
			return true
		l49:
			position, tokenIndex = position49, tokenIndex49
			return false
		},
		/* 9 CandidatusName <- <(Candidatus _ SingleName)> */
		func() bool {
			position53, tokenIndex53 := position, tokenIndex
			{
				position54 := position
				if !_rules[ruleCandidatus]() {
					goto l53
				}
				if !_rules[rule_]() {
					goto l53
				}
				if !_rules[ruleSingleName]() {
					goto l53
				}
				add(ruleCandidatusName, position54)
			}
			return true
		l53:
			position, tokenIndex = position53, tokenIndex53
			return false
		},
		/* 10 Candidatus <- <('C' 'a' 'n' 'd' 'i' 'd' 'a' 't' 'u' 's')> */
		func() bool {
			position55, tokenIndex55 := position, tokenIndex
			{
				position56 := position
				if buffer[position] != rune('C') {
					goto l55
				}
				position++
				if buffer[position] != rune('a') {
					goto l55
				}
				position++
				if buffer[position] != rune('n') {
					goto l55
				}
				position++
				if buffer[position] != rune('d') {
					goto l55
				}
				position++
				if buffer[position] != rune('i') {
					goto l55
				}
				position++
				if buffer[position] != rune('d') {
					goto l55
				}
				position++
				if buffer[position] != rune('a') {
					goto l55
				}
				position++
				if buffer[position] != rune('t') {
					goto l55
				}
				position++
				if buffer[position] != rune('u') {
					goto l55
				}
				position++
				if buffer[position] != rune('s') {
					goto l55
				}
				position++
				add(ruleCandidatus, position56)
			}
			return true
		l55:
			position, tokenIndex = position55, tokenIndex55
			return false
		},
		/* 11 SingleName <- <(NameComp / NameApprox / NameSpecies / NameUninomial)> */
		func() bool {
			position57, tokenIndex57 := position, tokenIndex
			{
				position58 := position
				{
					position59, tokenIndex59 := position, tokenIndex
					if !_rules[ruleNameComp]() {
						goto l60
					}
					goto l59
				l60:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleNameApprox]() {
						goto l61
					}
					goto l59
				l61:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleNameSpecies]() {
						goto l62
					}
					goto l59
				l62:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleNameUninomial]() {
						goto l57
					}
				}
			l59:
				add(ruleSingleName, position58)
			}
			return true
		l57:
			position, tokenIndex = position57, tokenIndex57
			return false
		},
		/* 12 NameUninomial <- <(UninomialCombo / Uninomial)> */
		func() bool {
			position63, tokenIndex63 := position, tokenIndex
			{
				position64 := position
				{
					position65, tokenIndex65 := position, tokenIndex
					if !_rules[ruleUninomialCombo]() {
						goto l66
					}
					goto l65
				l66:
					position, tokenIndex = position65, tokenIndex65
					if !_rules[ruleUninomial]() {
						goto l63
					}
				}
			l65:
				add(ruleNameUninomial, position64)
			}
			return true
		l63:
			position, tokenIndex = position63, tokenIndex63
			return false
		},
		/* 13 NameApprox <- <(GenusWord (_ SpeciesEpithet)? _ Approximation ApproxNameIgnored)> */
		func() bool {
			position67, tokenIndex67 := position, tokenIndex
			{
				position68 := position
				if !_rules[ruleGenusWord]() {
					goto l67
				}
				{
					position69, tokenIndex69 := position, tokenIndex
					if !_rules[rule_]() {
						goto l69
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l69
					}
					goto l70
				l69:
					position, tokenIndex = position69, tokenIndex69
				}
			l70:
				if !_rules[rule_]() {
					goto l67
				}
				if !_rules[ruleApproximation]() {
					goto l67
				}
				if !_rules[ruleApproxNameIgnored]() {
					goto l67
				}
				add(ruleNameApprox, position68)
			}
			return true
		l67:
			position, tokenIndex = position67, tokenIndex67
			return false
		},
		/* 14 NameComp <- <(GenusWord _ Comparison (_ SpeciesEpithet)?)> */
		func() bool {
			position71, tokenIndex71 := position, tokenIndex
			{
				position72 := position
				if !_rules[ruleGenusWord]() {
					goto l71
				}
				if !_rules[rule_]() {
					goto l71
				}
				if !_rules[ruleComparison]() {
					goto l71
				}
				{
					position73, tokenIndex73 := position, tokenIndex
					if !_rules[rule_]() {
						goto l73
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l73
					}
					goto l74
				l73:
					position, tokenIndex = position73, tokenIndex73
				}
			l74:
				add(ruleNameComp, position72)
			}
			return true
		l71:
			position, tokenIndex = position71, tokenIndex71
			return false
		},
		/* 15 NameSpecies <- <(GenusWord (_? (Subgenus / SubgenusOrSuperspecies))? _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position75, tokenIndex75 := position, tokenIndex
			{
				position76 := position
				if !_rules[ruleGenusWord]() {
					goto l75
				}
				{
					position77, tokenIndex77 := position, tokenIndex
					{
						position79, tokenIndex79 := position, tokenIndex
						if !_rules[rule_]() {
							goto l79
						}
						goto l80
					l79:
						position, tokenIndex = position79, tokenIndex79
					}
				l80:
					{
						position81, tokenIndex81 := position, tokenIndex
						if !_rules[ruleSubgenus]() {
							goto l82
						}
						goto l81
					l82:
						position, tokenIndex = position81, tokenIndex81
						if !_rules[ruleSubgenusOrSuperspecies]() {
							goto l77
						}
					}
				l81:
					goto l78
				l77:
					position, tokenIndex = position77, tokenIndex77
				}
			l78:
				if !_rules[rule_]() {
					goto l75
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l75
				}
				{
					position83, tokenIndex83 := position, tokenIndex
					if !_rules[rule_]() {
						goto l83
					}
					if !_rules[ruleInfraspGroup]() {
						goto l83
					}
					goto l84
				l83:
					position, tokenIndex = position83, tokenIndex83
				}
			l84:
				add(ruleNameSpecies, position76)
			}
			return true
		l75:
			position, tokenIndex = position75, tokenIndex75
			return false
		},
		/* 16 GenusWord <- <((AbbrGenus / UninomialWord) !(_ AuthorWord))> */
		func() bool {
			position85, tokenIndex85 := position, tokenIndex
			{
				position86 := position
				{
					position87, tokenIndex87 := position, tokenIndex
					if !_rules[ruleAbbrGenus]() {
						goto l88
					}
					goto l87
				l88:
					position, tokenIndex = position87, tokenIndex87
					if !_rules[ruleUninomialWord]() {
						goto l85
					}
				}
			l87:
				{
					position89, tokenIndex89 := position, tokenIndex
					if !_rules[rule_]() {
						goto l89
					}
					if !_rules[ruleAuthorWord]() {
						goto l89
					}
					goto l85
				l89:
					position, tokenIndex = position89, tokenIndex89
				}
				add(ruleGenusWord, position86)
			}
			return true
		l85:
			position, tokenIndex = position85, tokenIndex85
			return false
		},
		/* 17 InfraspGroup <- <(InfraspEpithet (_ InfraspEpithet)? (_ InfraspEpithet)?)> */
		func() bool {
			position90, tokenIndex90 := position, tokenIndex
			{
				position91 := position
				if !_rules[ruleInfraspEpithet]() {
					goto l90
				}
				{
					position92, tokenIndex92 := position, tokenIndex
					if !_rules[rule_]() {
						goto l92
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l92
					}
					goto l93
				l92:
					position, tokenIndex = position92, tokenIndex92
				}
			l93:
				{
					position94, tokenIndex94 := position, tokenIndex
					if !_rules[rule_]() {
						goto l94
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l94
					}
					goto l95
				l94:
					position, tokenIndex = position94, tokenIndex94
				}
			l95:
				add(ruleInfraspGroup, position91)
			}
			return true
		l90:
			position, tokenIndex = position90, tokenIndex90
			return false
		},
		/* 18 InfraspEpithet <- <((Rank _?)? !AuthorEx Word (_ Authorship)?)> */
		func() bool {
			position96, tokenIndex96 := position, tokenIndex
			{
				position97 := position
				{
					position98, tokenIndex98 := position, tokenIndex
					if !_rules[ruleRank]() {
						goto l98
					}
					{
						position100, tokenIndex100 := position, tokenIndex
						if !_rules[rule_]() {
							goto l100
						}
						goto l101
					l100:
						position, tokenIndex = position100, tokenIndex100
					}
				l101:
					goto l99
				l98:
					position, tokenIndex = position98, tokenIndex98
				}
			l99:
				{
					position102, tokenIndex102 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l102
					}
					goto l96
				l102:
					position, tokenIndex = position102, tokenIndex102
				}
				if !_rules[ruleWord]() {
					goto l96
				}
				{
					position103, tokenIndex103 := position, tokenIndex
					if !_rules[rule_]() {
						goto l103
					}
					if !_rules[ruleAuthorship]() {
						goto l103
					}
					goto l104
				l103:
					position, tokenIndex = position103, tokenIndex103
				}
			l104:
				add(ruleInfraspEpithet, position97)
			}
			return true
		l96:
			position, tokenIndex = position96, tokenIndex96
			return false
		},
		/* 19 SpeciesEpithet <- <(!AuthorEx Word (_? Authorship)?)> */
		func() bool {
			position105, tokenIndex105 := position, tokenIndex
			{
				position106 := position
				{
					position107, tokenIndex107 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l107
					}
					goto l105
				l107:
					position, tokenIndex = position107, tokenIndex107
				}
				if !_rules[ruleWord]() {
					goto l105
				}
				{
					position108, tokenIndex108 := position, tokenIndex
					{
						position110, tokenIndex110 := position, tokenIndex
						if !_rules[rule_]() {
							goto l110
						}
						goto l111
					l110:
						position, tokenIndex = position110, tokenIndex110
					}
				l111:
					if !_rules[ruleAuthorship]() {
						goto l108
					}
					goto l109
				l108:
					position, tokenIndex = position108, tokenIndex108
				}
			l109:
				add(ruleSpeciesEpithet, position106)
			}
			return true
		l105:
			position, tokenIndex = position105, tokenIndex105
			return false
		},
		/* 20 Comparison <- <('c' 'f' '.'?)> */
		func() bool {
			position112, tokenIndex112 := position, tokenIndex
			{
				position113 := position
				if buffer[position] != rune('c') {
					goto l112
				}
				position++
				if buffer[position] != rune('f') {
					goto l112
				}
				position++
				{
					position114, tokenIndex114 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l114
					}
					position++
					goto l115
				l114:
					position, tokenIndex = position114, tokenIndex114
				}
			l115:
				add(ruleComparison, position113)
			}
			return true
		l112:
			position, tokenIndex = position112, tokenIndex112
			return false
		},
		/* 21 Rank <- <((RankForma / RankVar / RankSsp / RankOther / RankOtherUncommon / RankAgamo / RankNotho) (_? LowerGreek ('.' / &SpaceCharEOI))?)> */
		func() bool {
			position116, tokenIndex116 := position, tokenIndex
			{
				position117 := position
				{
					position118, tokenIndex118 := position, tokenIndex
					if !_rules[ruleRankForma]() {
						goto l119
					}
					goto l118
				l119:
					position, tokenIndex = position118, tokenIndex118
					if !_rules[ruleRankVar]() {
						goto l120
					}
					goto l118
				l120:
					position, tokenIndex = position118, tokenIndex118
					if !_rules[ruleRankSsp]() {
						goto l121
					}
					goto l118
				l121:
					position, tokenIndex = position118, tokenIndex118
					if !_rules[ruleRankOther]() {
						goto l122
					}
					goto l118
				l122:
					position, tokenIndex = position118, tokenIndex118
					if !_rules[ruleRankOtherUncommon]() {
						goto l123
					}
					goto l118
				l123:
					position, tokenIndex = position118, tokenIndex118
					if !_rules[ruleRankAgamo]() {
						goto l124
					}
					goto l118
				l124:
					position, tokenIndex = position118, tokenIndex118
					if !_rules[ruleRankNotho]() {
						goto l116
					}
				}
			l118:
				{
					position125, tokenIndex125 := position, tokenIndex
					{
						position127, tokenIndex127 := position, tokenIndex
						if !_rules[rule_]() {
							goto l127
						}
						goto l128
					l127:
						position, tokenIndex = position127, tokenIndex127
					}
				l128:
					if !_rules[ruleLowerGreek]() {
						goto l125
					}
					{
						position129, tokenIndex129 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l130
						}
						position++
						goto l129
					l130:
						position, tokenIndex = position129, tokenIndex129
						{
							position131, tokenIndex131 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l125
							}
							position, tokenIndex = position131, tokenIndex131
						}
					}
				l129:
					goto l126
				l125:
					position, tokenIndex = position125, tokenIndex125
				}
			l126:
				add(ruleRank, position117)
			}
			return true
		l116:
			position, tokenIndex = position116, tokenIndex116
			return false
		},
		/* 22 RankNotho <- <((('n' 'o' 't' 'h' 'o' (('v' 'a' 'r') / ('f' 'o') / 'f' / ('s' 'u' 'b' 's' 'p') / ('s' 's' 'p') / ('s' 'p') / ('m' 'o' 'r' 't' 'h') / ('s' 'u' 'p' 's' 'p') / ('s' 'u'))) / ('n' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position132, tokenIndex132 := position, tokenIndex
			{
				position133 := position
				{
					position134, tokenIndex134 := position, tokenIndex
					if buffer[position] != rune('n') {
						goto l135
					}
					position++
					if buffer[position] != rune('o') {
						goto l135
					}
					position++
					if buffer[position] != rune('t') {
						goto l135
					}
					position++
					if buffer[position] != rune('h') {
						goto l135
					}
					position++
					if buffer[position] != rune('o') {
						goto l135
					}
					position++
					{
						position136, tokenIndex136 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l137
						}
						position++
						if buffer[position] != rune('a') {
							goto l137
						}
						position++
						if buffer[position] != rune('r') {
							goto l137
						}
						position++
						goto l136
					l137:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('f') {
							goto l138
						}
						position++
						if buffer[position] != rune('o') {
							goto l138
						}
						position++
						goto l136
					l138:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('f') {
							goto l139
						}
						position++
						goto l136
					l139:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('s') {
							goto l140
						}
						position++
						if buffer[position] != rune('u') {
							goto l140
						}
						position++
						if buffer[position] != rune('b') {
							goto l140
						}
						position++
						if buffer[position] != rune('s') {
							goto l140
						}
						position++
						if buffer[position] != rune('p') {
							goto l140
						}
						position++
						goto l136
					l140:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('s') {
							goto l141
						}
						position++
						if buffer[position] != rune('s') {
							goto l141
						}
						position++
						if buffer[position] != rune('p') {
							goto l141
						}
						position++
						goto l136
					l141:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('s') {
							goto l142
						}
						position++
						if buffer[position] != rune('p') {
							goto l142
						}
						position++
						goto l136
					l142:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('m') {
							goto l143
						}
						position++
						if buffer[position] != rune('o') {
							goto l143
						}
						position++
						if buffer[position] != rune('r') {
							goto l143
						}
						position++
						if buffer[position] != rune('t') {
							goto l143
						}
						position++
						if buffer[position] != rune('h') {
							goto l143
						}
						position++
						goto l136
					l143:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('s') {
							goto l144
						}
						position++
						if buffer[position] != rune('u') {
							goto l144
						}
						position++
						if buffer[position] != rune('p') {
							goto l144
						}
						position++
						if buffer[position] != rune('s') {
							goto l144
						}
						position++
						if buffer[position] != rune('p') {
							goto l144
						}
						position++
						goto l136
					l144:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('s') {
							goto l135
						}
						position++
						if buffer[position] != rune('u') {
							goto l135
						}
						position++
					}
				l136:
					goto l134
				l135:
					position, tokenIndex = position134, tokenIndex134
					if buffer[position] != rune('n') {
						goto l132
					}
					position++
					if buffer[position] != rune('v') {
						goto l132
					}
					position++
					if buffer[position] != rune('a') {
						goto l132
					}
					position++
					if buffer[position] != rune('r') {
						goto l132
					}
					position++
				}
			l134:
				{
					position145, tokenIndex145 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l146
					}
					position++
					goto l145
				l146:
					position, tokenIndex = position145, tokenIndex145
					{
						position147, tokenIndex147 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l132
						}
						position, tokenIndex = position147, tokenIndex147
					}
				}
			l145:
				add(ruleRankNotho, position133)
			}
			return true
		l132:
			position, tokenIndex = position132, tokenIndex132
			return false
		},
		/* 23 RankOtherUncommon <- <(('*' / ('n' 'a' 't' 'i' 'o') / ('n' 'a' 't' '.') / ('n' 'a' 't') / ('f' '.' 's' 'p') / 'α' / ('β' 'β') / 'β' / 'γ' / 'δ' / 'ε' / 'φ' / 'θ' / 'μ' / ('a' '.') / ('b' '.') / ('c' '.') / ('d' '.') / ('e' '.') / ('g' '.') / ('k' '.') / ('m' 'u' 't' '.')) &SpaceCharEOI)> */
		func() bool {
			position148, tokenIndex148 := position, tokenIndex
			{
				position149 := position
				{
					position150, tokenIndex150 := position, tokenIndex
					if buffer[position] != rune('*') {
						goto l151
					}
					position++
					goto l150
				l151:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('n') {
						goto l152
					}
					position++
					if buffer[position] != rune('a') {
						goto l152
					}
					position++
					if buffer[position] != rune('t') {
						goto l152
					}
					position++
					if buffer[position] != rune('i') {
						goto l152
					}
					position++
					if buffer[position] != rune('o') {
						goto l152
					}
					position++
					goto l150
				l152:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('n') {
						goto l153
					}
					position++
					if buffer[position] != rune('a') {
						goto l153
					}
					position++
					if buffer[position] != rune('t') {
						goto l153
					}
					position++
					if buffer[position] != rune('.') {
						goto l153
					}
					position++
					goto l150
				l153:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('n') {
						goto l154
					}
					position++
					if buffer[position] != rune('a') {
						goto l154
					}
					position++
					if buffer[position] != rune('t') {
						goto l154
					}
					position++
					goto l150
				l154:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('f') {
						goto l155
					}
					position++
					if buffer[position] != rune('.') {
						goto l155
					}
					position++
					if buffer[position] != rune('s') {
						goto l155
					}
					position++
					if buffer[position] != rune('p') {
						goto l155
					}
					position++
					goto l150
				l155:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('α') {
						goto l156
					}
					position++
					goto l150
				l156:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('β') {
						goto l157
					}
					position++
					if buffer[position] != rune('β') {
						goto l157
					}
					position++
					goto l150
				l157:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('β') {
						goto l158
					}
					position++
					goto l150
				l158:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('γ') {
						goto l159
					}
					position++
					goto l150
				l159:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('δ') {
						goto l160
					}
					position++
					goto l150
				l160:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('ε') {
						goto l161
					}
					position++
					goto l150
				l161:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('φ') {
						goto l162
					}
					position++
					goto l150
				l162:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('θ') {
						goto l163
					}
					position++
					goto l150
				l163:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('μ') {
						goto l164
					}
					position++
					goto l150
				l164:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('a') {
						goto l165
					}
					position++
					if buffer[position] != rune('.') {
						goto l165
					}
					position++
					goto l150
				l165:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('b') {
						goto l166
					}
					position++
					if buffer[position] != rune('.') {
						goto l166
					}
					position++
					goto l150
				l166:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('c') {
						goto l167
					}
					position++
					if buffer[position] != rune('.') {
						goto l167
					}
					position++
					goto l150
				l167:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('d') {
						goto l168
					}
					position++
					if buffer[position] != rune('.') {
						goto l168
					}
					position++
					goto l150
				l168:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('e') {
						goto l169
					}
					position++
					if buffer[position] != rune('.') {
						goto l169
					}
					position++
					goto l150
				l169:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('g') {
						goto l170
					}
					position++
					if buffer[position] != rune('.') {
						goto l170
					}
					position++
					goto l150
				l170:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('k') {
						goto l171
					}
					position++
					if buffer[position] != rune('.') {
						goto l171
					}
					position++
					goto l150
				l171:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('m') {
						goto l148
					}
					position++
					if buffer[position] != rune('u') {
						goto l148
					}
					position++
					if buffer[position] != rune('t') {
						goto l148
					}
					position++
					if buffer[position] != rune('.') {
						goto l148
					}
					position++
				}
			l150:
				{
					position172, tokenIndex172 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l148
					}
					position, tokenIndex = position172, tokenIndex172
				}
				add(ruleRankOtherUncommon, position149)
			}
			return true
		l148:
			position, tokenIndex = position148, tokenIndex148
			return false
		},
		/* 24 RankOther <- <((('m' 'o' 'r' 'p' 'h') / ('c' 'o' 'n' 'v' 'a' 'r') / ('p' 's' 'e' 'u' 'd' 'o' 'v' 'a' 'r') / ('s' 'e' 'c' 't') / ('s' 'e' 'r') / ('s' 'u' 'b' 'v' 'a' 'r') / ('s' 'u' 'b' 'f') / ('r' 'a' 'c' 'e') / ('p' 'v') / ('p' 'a' 't' 'h' 'o' 'v' 'a' 'r') / ('a' 'b' '.' (_? ('n' '.'))?) / ('s' 't')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position173, tokenIndex173 := position, tokenIndex
			{
				position174 := position
				{
					position175, tokenIndex175 := position, tokenIndex
					if buffer[position] != rune('m') {
						goto l176
					}
					position++
					if buffer[position] != rune('o') {
						goto l176
					}
					position++
					if buffer[position] != rune('r') {
						goto l176
					}
					position++
					if buffer[position] != rune('p') {
						goto l176
					}
					position++
					if buffer[position] != rune('h') {
						goto l176
					}
					position++
					goto l175
				l176:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('c') {
						goto l177
					}
					position++
					if buffer[position] != rune('o') {
						goto l177
					}
					position++
					if buffer[position] != rune('n') {
						goto l177
					}
					position++
					if buffer[position] != rune('v') {
						goto l177
					}
					position++
					if buffer[position] != rune('a') {
						goto l177
					}
					position++
					if buffer[position] != rune('r') {
						goto l177
					}
					position++
					goto l175
				l177:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('p') {
						goto l178
					}
					position++
					if buffer[position] != rune('s') {
						goto l178
					}
					position++
					if buffer[position] != rune('e') {
						goto l178
					}
					position++
					if buffer[position] != rune('u') {
						goto l178
					}
					position++
					if buffer[position] != rune('d') {
						goto l178
					}
					position++
					if buffer[position] != rune('o') {
						goto l178
					}
					position++
					if buffer[position] != rune('v') {
						goto l178
					}
					position++
					if buffer[position] != rune('a') {
						goto l178
					}
					position++
					if buffer[position] != rune('r') {
						goto l178
					}
					position++
					goto l175
				l178:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('s') {
						goto l179
					}
					position++
					if buffer[position] != rune('e') {
						goto l179
					}
					position++
					if buffer[position] != rune('c') {
						goto l179
					}
					position++
					if buffer[position] != rune('t') {
						goto l179
					}
					position++
					goto l175
				l179:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('s') {
						goto l180
					}
					position++
					if buffer[position] != rune('e') {
						goto l180
					}
					position++
					if buffer[position] != rune('r') {
						goto l180
					}
					position++
					goto l175
				l180:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('s') {
						goto l181
					}
					position++
					if buffer[position] != rune('u') {
						goto l181
					}
					position++
					if buffer[position] != rune('b') {
						goto l181
					}
					position++
					if buffer[position] != rune('v') {
						goto l181
					}
					position++
					if buffer[position] != rune('a') {
						goto l181
					}
					position++
					if buffer[position] != rune('r') {
						goto l181
					}
					position++
					goto l175
				l181:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('s') {
						goto l182
					}
					position++
					if buffer[position] != rune('u') {
						goto l182
					}
					position++
					if buffer[position] != rune('b') {
						goto l182
					}
					position++
					if buffer[position] != rune('f') {
						goto l182
					}
					position++
					goto l175
				l182:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('r') {
						goto l183
					}
					position++
					if buffer[position] != rune('a') {
						goto l183
					}
					position++
					if buffer[position] != rune('c') {
						goto l183
					}
					position++
					if buffer[position] != rune('e') {
						goto l183
					}
					position++
					goto l175
				l183:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('p') {
						goto l184
					}
					position++
					if buffer[position] != rune('v') {
						goto l184
					}
					position++
					goto l175
				l184:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('p') {
						goto l185
					}
					position++
					if buffer[position] != rune('a') {
						goto l185
					}
					position++
					if buffer[position] != rune('t') {
						goto l185
					}
					position++
					if buffer[position] != rune('h') {
						goto l185
					}
					position++
					if buffer[position] != rune('o') {
						goto l185
					}
					position++
					if buffer[position] != rune('v') {
						goto l185
					}
					position++
					if buffer[position] != rune('a') {
						goto l185
					}
					position++
					if buffer[position] != rune('r') {
						goto l185
					}
					position++
					goto l175
				l185:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('a') {
						goto l186
					}
					position++
					if buffer[position] != rune('b') {
						goto l186
					}
					position++
					if buffer[position] != rune('.') {
						goto l186
					}
					position++
					{
						position187, tokenIndex187 := position, tokenIndex
						{
							position189, tokenIndex189 := position, tokenIndex
							if !_rules[rule_]() {
								goto l189
							}
							goto l190
						l189:
							position, tokenIndex = position189, tokenIndex189
						}
					l190:
						if buffer[position] != rune('n') {
							goto l187
						}
						position++
						if buffer[position] != rune('.') {
							goto l187
						}
						position++
						goto l188
					l187:
						position, tokenIndex = position187, tokenIndex187
					}
				l188:
					goto l175
				l186:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('s') {
						goto l173
					}
					position++
					if buffer[position] != rune('t') {
						goto l173
					}
					position++
				}
			l175:
				{
					position191, tokenIndex191 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l192
					}
					position++
					goto l191
				l192:
					position, tokenIndex = position191, tokenIndex191
					{
						position193, tokenIndex193 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l173
						}
						position, tokenIndex = position193, tokenIndex193
					}
				}
			l191:
				add(ruleRankOther, position174)
			}
			return true
		l173:
			position, tokenIndex = position173, tokenIndex173
			return false
		},
		/* 25 RankVar <- <((('v' 'a' 'r' 'i' 'e' 't' 'y') / ('[' 'v' 'a' 'r' '.' ']') / ('v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position194, tokenIndex194 := position, tokenIndex
			{
				position195 := position
				{
					position196, tokenIndex196 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l197
					}
					position++
					if buffer[position] != rune('a') {
						goto l197
					}
					position++
					if buffer[position] != rune('r') {
						goto l197
					}
					position++
					if buffer[position] != rune('i') {
						goto l197
					}
					position++
					if buffer[position] != rune('e') {
						goto l197
					}
					position++
					if buffer[position] != rune('t') {
						goto l197
					}
					position++
					if buffer[position] != rune('y') {
						goto l197
					}
					position++
					goto l196
				l197:
					position, tokenIndex = position196, tokenIndex196
					if buffer[position] != rune('[') {
						goto l198
					}
					position++
					if buffer[position] != rune('v') {
						goto l198
					}
					position++
					if buffer[position] != rune('a') {
						goto l198
					}
					position++
					if buffer[position] != rune('r') {
						goto l198
					}
					position++
					if buffer[position] != rune('.') {
						goto l198
					}
					position++
					if buffer[position] != rune(']') {
						goto l198
					}
					position++
					goto l196
				l198:
					position, tokenIndex = position196, tokenIndex196
					if buffer[position] != rune('v') {
						goto l194
					}
					position++
					if buffer[position] != rune('a') {
						goto l194
					}
					position++
					if buffer[position] != rune('r') {
						goto l194
					}
					position++
				}
			l196:
				{
					position199, tokenIndex199 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l200
					}
					position++
					goto l199
				l200:
					position, tokenIndex = position199, tokenIndex199
					{
						position201, tokenIndex201 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l194
						}
						position, tokenIndex = position201, tokenIndex201
					}
				}
			l199:
				add(ruleRankVar, position195)
			}
			return true
		l194:
			position, tokenIndex = position194, tokenIndex194
			return false
		},
		/* 26 RankForma <- <((('f' 'o' 'r' 'm' 'a') / ('f' 'm' 'a') / ('f' 'o' 'r' 'm') / ('f' 'o') / 'f') ('.' / &SpaceCharEOI))> */
		func() bool {
			position202, tokenIndex202 := position, tokenIndex
			{
				position203 := position
				{
					position204, tokenIndex204 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l205
					}
					position++
					if buffer[position] != rune('o') {
						goto l205
					}
					position++
					if buffer[position] != rune('r') {
						goto l205
					}
					position++
					if buffer[position] != rune('m') {
						goto l205
					}
					position++
					if buffer[position] != rune('a') {
						goto l205
					}
					position++
					goto l204
				l205:
					position, tokenIndex = position204, tokenIndex204
					if buffer[position] != rune('f') {
						goto l206
					}
					position++
					if buffer[position] != rune('m') {
						goto l206
					}
					position++
					if buffer[position] != rune('a') {
						goto l206
					}
					position++
					goto l204
				l206:
					position, tokenIndex = position204, tokenIndex204
					if buffer[position] != rune('f') {
						goto l207
					}
					position++
					if buffer[position] != rune('o') {
						goto l207
					}
					position++
					if buffer[position] != rune('r') {
						goto l207
					}
					position++
					if buffer[position] != rune('m') {
						goto l207
					}
					position++
					goto l204
				l207:
					position, tokenIndex = position204, tokenIndex204
					if buffer[position] != rune('f') {
						goto l208
					}
					position++
					if buffer[position] != rune('o') {
						goto l208
					}
					position++
					goto l204
				l208:
					position, tokenIndex = position204, tokenIndex204
					if buffer[position] != rune('f') {
						goto l202
					}
					position++
				}
			l204:
				{
					position209, tokenIndex209 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l210
					}
					position++
					goto l209
				l210:
					position, tokenIndex = position209, tokenIndex209
					{
						position211, tokenIndex211 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l202
						}
						position, tokenIndex = position211, tokenIndex211
					}
				}
			l209:
				add(ruleRankForma, position203)
			}
			return true
		l202:
			position, tokenIndex = position202, tokenIndex202
			return false
		},
		/* 27 RankSsp <- <((('s' 's' 'p') / ('s' 'u' 'b' 's' 'p' 'e' 'c') / ('s' 'u' 'b' 's' 'p')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position212, tokenIndex212 := position, tokenIndex
			{
				position213 := position
				{
					position214, tokenIndex214 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l215
					}
					position++
					if buffer[position] != rune('s') {
						goto l215
					}
					position++
					if buffer[position] != rune('p') {
						goto l215
					}
					position++
					goto l214
				l215:
					position, tokenIndex = position214, tokenIndex214
					if buffer[position] != rune('s') {
						goto l216
					}
					position++
					if buffer[position] != rune('u') {
						goto l216
					}
					position++
					if buffer[position] != rune('b') {
						goto l216
					}
					position++
					if buffer[position] != rune('s') {
						goto l216
					}
					position++
					if buffer[position] != rune('p') {
						goto l216
					}
					position++
					if buffer[position] != rune('e') {
						goto l216
					}
					position++
					if buffer[position] != rune('c') {
						goto l216
					}
					position++
					goto l214
				l216:
					position, tokenIndex = position214, tokenIndex214
					if buffer[position] != rune('s') {
						goto l212
					}
					position++
					if buffer[position] != rune('u') {
						goto l212
					}
					position++
					if buffer[position] != rune('b') {
						goto l212
					}
					position++
					if buffer[position] != rune('s') {
						goto l212
					}
					position++
					if buffer[position] != rune('p') {
						goto l212
					}
					position++
				}
			l214:
				{
					position217, tokenIndex217 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l218
					}
					position++
					goto l217
				l218:
					position, tokenIndex = position217, tokenIndex217
					{
						position219, tokenIndex219 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l212
						}
						position, tokenIndex = position219, tokenIndex219
					}
				}
			l217:
				add(ruleRankSsp, position213)
			}
			return true
		l212:
			position, tokenIndex = position212, tokenIndex212
			return false
		},
		/* 28 RankAgamo <- <((('a' 'g' 'a' 'm' 'o' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 's' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position220, tokenIndex220 := position, tokenIndex
			{
				position221 := position
				{
					position222, tokenIndex222 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l223
					}
					position++
					if buffer[position] != rune('g') {
						goto l223
					}
					position++
					if buffer[position] != rune('a') {
						goto l223
					}
					position++
					if buffer[position] != rune('m') {
						goto l223
					}
					position++
					if buffer[position] != rune('o') {
						goto l223
					}
					position++
					if buffer[position] != rune('s') {
						goto l223
					}
					position++
					if buffer[position] != rune('p') {
						goto l223
					}
					position++
					goto l222
				l223:
					position, tokenIndex = position222, tokenIndex222
					if buffer[position] != rune('a') {
						goto l224
					}
					position++
					if buffer[position] != rune('g') {
						goto l224
					}
					position++
					if buffer[position] != rune('a') {
						goto l224
					}
					position++
					if buffer[position] != rune('m') {
						goto l224
					}
					position++
					if buffer[position] != rune('o') {
						goto l224
					}
					position++
					if buffer[position] != rune('s') {
						goto l224
					}
					position++
					if buffer[position] != rune('s') {
						goto l224
					}
					position++
					if buffer[position] != rune('p') {
						goto l224
					}
					position++
					goto l222
				l224:
					position, tokenIndex = position222, tokenIndex222
					if buffer[position] != rune('a') {
						goto l220
					}
					position++
					if buffer[position] != rune('g') {
						goto l220
					}
					position++
					if buffer[position] != rune('a') {
						goto l220
					}
					position++
					if buffer[position] != rune('m') {
						goto l220
					}
					position++
					if buffer[position] != rune('o') {
						goto l220
					}
					position++
					if buffer[position] != rune('v') {
						goto l220
					}
					position++
					if buffer[position] != rune('a') {
						goto l220
					}
					position++
					if buffer[position] != rune('r') {
						goto l220
					}
					position++
				}
			l222:
				{
					position225, tokenIndex225 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l226
					}
					position++
					goto l225
				l226:
					position, tokenIndex = position225, tokenIndex225
					{
						position227, tokenIndex227 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l220
						}
						position, tokenIndex = position227, tokenIndex227
					}
				}
			l225:
				add(ruleRankAgamo, position221)
			}
			return true
		l220:
			position, tokenIndex = position220, tokenIndex220
			return false
		},
		/* 29 SubgenusOrSuperspecies <- <('(' _? NameLowerChar+ _? ')')> */
		func() bool {
			position228, tokenIndex228 := position, tokenIndex
			{
				position229 := position
				if buffer[position] != rune('(') {
					goto l228
				}
				position++
				{
					position230, tokenIndex230 := position, tokenIndex
					if !_rules[rule_]() {
						goto l230
					}
					goto l231
				l230:
					position, tokenIndex = position230, tokenIndex230
				}
			l231:
				if !_rules[ruleNameLowerChar]() {
					goto l228
				}
			l232:
				{
					position233, tokenIndex233 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l233
					}
					goto l232
				l233:
					position, tokenIndex = position233, tokenIndex233
				}
				{
					position234, tokenIndex234 := position, tokenIndex
					if !_rules[rule_]() {
						goto l234
					}
					goto l235
				l234:
					position, tokenIndex = position234, tokenIndex234
				}
			l235:
				if buffer[position] != rune(')') {
					goto l228
				}
				position++
				add(ruleSubgenusOrSuperspecies, position229)
			}
			return true
		l228:
			position, tokenIndex = position228, tokenIndex228
			return false
		},
		/* 30 Subgenus <- <(Subgenus2 / Subgenus1)> */
		func() bool {
			position236, tokenIndex236 := position, tokenIndex
			{
				position237 := position
				{
					position238, tokenIndex238 := position, tokenIndex
					if !_rules[ruleSubgenus2]() {
						goto l239
					}
					goto l238
				l239:
					position, tokenIndex = position238, tokenIndex238
					if !_rules[ruleSubgenus1]() {
						goto l236
					}
				}
			l238:
				add(ruleSubgenus, position237)
			}
			return true
		l236:
			position, tokenIndex = position236, tokenIndex236
			return false
		},
		/* 31 Subgenus2 <- <('(' _? AbbrSubgenus _? ')' !(_? NameUpperChar))> */
		func() bool {
			position240, tokenIndex240 := position, tokenIndex
			{
				position241 := position
				if buffer[position] != rune('(') {
					goto l240
				}
				position++
				{
					position242, tokenIndex242 := position, tokenIndex
					if !_rules[rule_]() {
						goto l242
					}
					goto l243
				l242:
					position, tokenIndex = position242, tokenIndex242
				}
			l243:
				if !_rules[ruleAbbrSubgenus]() {
					goto l240
				}
				{
					position244, tokenIndex244 := position, tokenIndex
					if !_rules[rule_]() {
						goto l244
					}
					goto l245
				l244:
					position, tokenIndex = position244, tokenIndex244
				}
			l245:
				if buffer[position] != rune(')') {
					goto l240
				}
				position++
				{
					position246, tokenIndex246 := position, tokenIndex
					{
						position247, tokenIndex247 := position, tokenIndex
						if !_rules[rule_]() {
							goto l247
						}
						goto l248
					l247:
						position, tokenIndex = position247, tokenIndex247
					}
				l248:
					if !_rules[ruleNameUpperChar]() {
						goto l246
					}
					goto l240
				l246:
					position, tokenIndex = position246, tokenIndex246
				}
				add(ruleSubgenus2, position241)
			}
			return true
		l240:
			position, tokenIndex = position240, tokenIndex240
			return false
		},
		/* 32 Subgenus1 <- <('(' _? UninomialWord _? ')')> */
		func() bool {
			position249, tokenIndex249 := position, tokenIndex
			{
				position250 := position
				if buffer[position] != rune('(') {
					goto l249
				}
				position++
				{
					position251, tokenIndex251 := position, tokenIndex
					if !_rules[rule_]() {
						goto l251
					}
					goto l252
				l251:
					position, tokenIndex = position251, tokenIndex251
				}
			l252:
				if !_rules[ruleUninomialWord]() {
					goto l249
				}
				{
					position253, tokenIndex253 := position, tokenIndex
					if !_rules[rule_]() {
						goto l253
					}
					goto l254
				l253:
					position, tokenIndex = position253, tokenIndex253
				}
			l254:
				if buffer[position] != rune(')') {
					goto l249
				}
				position++
				add(ruleSubgenus1, position250)
			}
			return true
		l249:
			position, tokenIndex = position249, tokenIndex249
			return false
		},
		/* 33 UninomialCombo <- <(UninomialCombo1 / UninomialCombo2)> */
		func() bool {
			position255, tokenIndex255 := position, tokenIndex
			{
				position256 := position
				{
					position257, tokenIndex257 := position, tokenIndex
					if !_rules[ruleUninomialCombo1]() {
						goto l258
					}
					goto l257
				l258:
					position, tokenIndex = position257, tokenIndex257
					if !_rules[ruleUninomialCombo2]() {
						goto l255
					}
				}
			l257:
				add(ruleUninomialCombo, position256)
			}
			return true
		l255:
			position, tokenIndex = position255, tokenIndex255
			return false
		},
		/* 34 UninomialCombo1 <- <(UninomialWord _? Subgenus (_? Authorship)?)> */
		func() bool {
			position259, tokenIndex259 := position, tokenIndex
			{
				position260 := position
				if !_rules[ruleUninomialWord]() {
					goto l259
				}
				{
					position261, tokenIndex261 := position, tokenIndex
					if !_rules[rule_]() {
						goto l261
					}
					goto l262
				l261:
					position, tokenIndex = position261, tokenIndex261
				}
			l262:
				if !_rules[ruleSubgenus]() {
					goto l259
				}
				{
					position263, tokenIndex263 := position, tokenIndex
					{
						position265, tokenIndex265 := position, tokenIndex
						if !_rules[rule_]() {
							goto l265
						}
						goto l266
					l265:
						position, tokenIndex = position265, tokenIndex265
					}
				l266:
					if !_rules[ruleAuthorship]() {
						goto l263
					}
					goto l264
				l263:
					position, tokenIndex = position263, tokenIndex263
				}
			l264:
				add(ruleUninomialCombo1, position260)
			}
			return true
		l259:
			position, tokenIndex = position259, tokenIndex259
			return false
		},
		/* 35 UninomialCombo2 <- <(Uninomial _ RankUninomial _ Uninomial)> */
		func() bool {
			position267, tokenIndex267 := position, tokenIndex
			{
				position268 := position
				if !_rules[ruleUninomial]() {
					goto l267
				}
				if !_rules[rule_]() {
					goto l267
				}
				if !_rules[ruleRankUninomial]() {
					goto l267
				}
				if !_rules[rule_]() {
					goto l267
				}
				if !_rules[ruleUninomial]() {
					goto l267
				}
				add(ruleUninomialCombo2, position268)
			}
			return true
		l267:
			position, tokenIndex = position267, tokenIndex267
			return false
		},
		/* 36 RankUninomial <- <(RankUninomialPlain / RankUninomialNotho)> */
		func() bool {
			position269, tokenIndex269 := position, tokenIndex
			{
				position270 := position
				{
					position271, tokenIndex271 := position, tokenIndex
					if !_rules[ruleRankUninomialPlain]() {
						goto l272
					}
					goto l271
				l272:
					position, tokenIndex = position271, tokenIndex271
					if !_rules[ruleRankUninomialNotho]() {
						goto l269
					}
				}
			l271:
				add(ruleRankUninomial, position270)
			}
			return true
		l269:
			position, tokenIndex = position269, tokenIndex269
			return false
		},
		/* 37 RankUninomialPlain <- <((('s' 'e' 'c' 't') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('t' 'r' 'i' 'b') / ('s' 'u' 'b' 't' 'r' 'i' 'b') / ('s' 'u' 'b' 's' 'e' 'r') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('f' 'a' 'm') / ('s' 'u' 'b' 'f' 'a' 'm') / ('s' 'u' 'p' 'e' 'r' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position273, tokenIndex273 := position, tokenIndex
			{
				position274 := position
				{
					position275, tokenIndex275 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l276
					}
					position++
					if buffer[position] != rune('e') {
						goto l276
					}
					position++
					if buffer[position] != rune('c') {
						goto l276
					}
					position++
					if buffer[position] != rune('t') {
						goto l276
					}
					position++
					goto l275
				l276:
					position, tokenIndex = position275, tokenIndex275
					if buffer[position] != rune('s') {
						goto l277
					}
					position++
					if buffer[position] != rune('u') {
						goto l277
					}
					position++
					if buffer[position] != rune('b') {
						goto l277
					}
					position++
					if buffer[position] != rune('s') {
						goto l277
					}
					position++
					if buffer[position] != rune('e') {
						goto l277
					}
					position++
					if buffer[position] != rune('c') {
						goto l277
					}
					position++
					if buffer[position] != rune('t') {
						goto l277
					}
					position++
					goto l275
				l277:
					position, tokenIndex = position275, tokenIndex275
					if buffer[position] != rune('t') {
						goto l278
					}
					position++
					if buffer[position] != rune('r') {
						goto l278
					}
					position++
					if buffer[position] != rune('i') {
						goto l278
					}
					position++
					if buffer[position] != rune('b') {
						goto l278
					}
					position++
					goto l275
				l278:
					position, tokenIndex = position275, tokenIndex275
					if buffer[position] != rune('s') {
						goto l279
					}
					position++
					if buffer[position] != rune('u') {
						goto l279
					}
					position++
					if buffer[position] != rune('b') {
						goto l279
					}
					position++
					if buffer[position] != rune('t') {
						goto l279
					}
					position++
					if buffer[position] != rune('r') {
						goto l279
					}
					position++
					if buffer[position] != rune('i') {
						goto l279
					}
					position++
					if buffer[position] != rune('b') {
						goto l279
					}
					position++
					goto l275
				l279:
					position, tokenIndex = position275, tokenIndex275
					if buffer[position] != rune('s') {
						goto l280
					}
					position++
					if buffer[position] != rune('u') {
						goto l280
					}
					position++
					if buffer[position] != rune('b') {
						goto l280
					}
					position++
					if buffer[position] != rune('s') {
						goto l280
					}
					position++
					if buffer[position] != rune('e') {
						goto l280
					}
					position++
					if buffer[position] != rune('r') {
						goto l280
					}
					position++
					goto l275
				l280:
					position, tokenIndex = position275, tokenIndex275
					if buffer[position] != rune('s') {
						goto l281
					}
					position++
					if buffer[position] != rune('e') {
						goto l281
					}
					position++
					if buffer[position] != rune('r') {
						goto l281
					}
					position++
					goto l275
				l281:
					position, tokenIndex = position275, tokenIndex275
					if buffer[position] != rune('s') {
						goto l282
					}
					position++
					if buffer[position] != rune('u') {
						goto l282
					}
					position++
					if buffer[position] != rune('b') {
						goto l282
					}
					position++
					if buffer[position] != rune('g') {
						goto l282
					}
					position++
					if buffer[position] != rune('e') {
						goto l282
					}
					position++
					if buffer[position] != rune('n') {
						goto l282
					}
					position++
					goto l275
				l282:
					position, tokenIndex = position275, tokenIndex275
					if buffer[position] != rune('s') {
						goto l283
					}
					position++
					if buffer[position] != rune('u') {
						goto l283
					}
					position++
					if buffer[position] != rune('b') {
						goto l283
					}
					position++
					if buffer[position] != rune('g') {
						goto l283
					}
					position++
					goto l275
				l283:
					position, tokenIndex = position275, tokenIndex275
					if buffer[position] != rune('f') {
						goto l284
					}
					position++
					if buffer[position] != rune('a') {
						goto l284
					}
					position++
					if buffer[position] != rune('m') {
						goto l284
					}
					position++
					goto l275
				l284:
					position, tokenIndex = position275, tokenIndex275
					if buffer[position] != rune('s') {
						goto l285
					}
					position++
					if buffer[position] != rune('u') {
						goto l285
					}
					position++
					if buffer[position] != rune('b') {
						goto l285
					}
					position++
					if buffer[position] != rune('f') {
						goto l285
					}
					position++
					if buffer[position] != rune('a') {
						goto l285
					}
					position++
					if buffer[position] != rune('m') {
						goto l285
					}
					position++
					goto l275
				l285:
					position, tokenIndex = position275, tokenIndex275
					if buffer[position] != rune('s') {
						goto l273
					}
					position++
					if buffer[position] != rune('u') {
						goto l273
					}
					position++
					if buffer[position] != rune('p') {
						goto l273
					}
					position++
					if buffer[position] != rune('e') {
						goto l273
					}
					position++
					if buffer[position] != rune('r') {
						goto l273
					}
					position++
					if buffer[position] != rune('t') {
						goto l273
					}
					position++
					if buffer[position] != rune('r') {
						goto l273
					}
					position++
					if buffer[position] != rune('i') {
						goto l273
					}
					position++
					if buffer[position] != rune('b') {
						goto l273
					}
					position++
				}
			l275:
				{
					position286, tokenIndex286 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l287
					}
					position++
					goto l286
				l287:
					position, tokenIndex = position286, tokenIndex286
					{
						position288, tokenIndex288 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l273
						}
						position, tokenIndex = position288, tokenIndex288
					}
				}
			l286:
				add(ruleRankUninomialPlain, position274)
			}
			return true
		l273:
			position, tokenIndex = position273, tokenIndex273
			return false
		},
		/* 38 RankUninomialNotho <- <('n' 'o' 't' 'h' 'o' _? (('s' 'e' 'c' 't') / ('g' 'e' 'n') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'e' 'n') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('s' 'u' 'b' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position289, tokenIndex289 := position, tokenIndex
			{
				position290 := position
				if buffer[position] != rune('n') {
					goto l289
				}
				position++
				if buffer[position] != rune('o') {
					goto l289
				}
				position++
				if buffer[position] != rune('t') {
					goto l289
				}
				position++
				if buffer[position] != rune('h') {
					goto l289
				}
				position++
				if buffer[position] != rune('o') {
					goto l289
				}
				position++
				{
					position291, tokenIndex291 := position, tokenIndex
					if !_rules[rule_]() {
						goto l291
					}
					goto l292
				l291:
					position, tokenIndex = position291, tokenIndex291
				}
			l292:
				{
					position293, tokenIndex293 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l294
					}
					position++
					if buffer[position] != rune('e') {
						goto l294
					}
					position++
					if buffer[position] != rune('c') {
						goto l294
					}
					position++
					if buffer[position] != rune('t') {
						goto l294
					}
					position++
					goto l293
				l294:
					position, tokenIndex = position293, tokenIndex293
					if buffer[position] != rune('g') {
						goto l295
					}
					position++
					if buffer[position] != rune('e') {
						goto l295
					}
					position++
					if buffer[position] != rune('n') {
						goto l295
					}
					position++
					goto l293
				l295:
					position, tokenIndex = position293, tokenIndex293
					if buffer[position] != rune('s') {
						goto l296
					}
					position++
					if buffer[position] != rune('e') {
						goto l296
					}
					position++
					if buffer[position] != rune('r') {
						goto l296
					}
					position++
					goto l293
				l296:
					position, tokenIndex = position293, tokenIndex293
					if buffer[position] != rune('s') {
						goto l297
					}
					position++
					if buffer[position] != rune('u') {
						goto l297
					}
					position++
					if buffer[position] != rune('b') {
						goto l297
					}
					position++
					if buffer[position] != rune('g') {
						goto l297
					}
					position++
					if buffer[position] != rune('e') {
						goto l297
					}
					position++
					if buffer[position] != rune('e') {
						goto l297
					}
					position++
					if buffer[position] != rune('n') {
						goto l297
					}
					position++
					goto l293
				l297:
					position, tokenIndex = position293, tokenIndex293
					if buffer[position] != rune('s') {
						goto l298
					}
					position++
					if buffer[position] != rune('u') {
						goto l298
					}
					position++
					if buffer[position] != rune('b') {
						goto l298
					}
					position++
					if buffer[position] != rune('g') {
						goto l298
					}
					position++
					if buffer[position] != rune('e') {
						goto l298
					}
					position++
					if buffer[position] != rune('n') {
						goto l298
					}
					position++
					goto l293
				l298:
					position, tokenIndex = position293, tokenIndex293
					if buffer[position] != rune('s') {
						goto l299
					}
					position++
					if buffer[position] != rune('u') {
						goto l299
					}
					position++
					if buffer[position] != rune('b') {
						goto l299
					}
					position++
					if buffer[position] != rune('g') {
						goto l299
					}
					position++
					goto l293
				l299:
					position, tokenIndex = position293, tokenIndex293
					if buffer[position] != rune('s') {
						goto l300
					}
					position++
					if buffer[position] != rune('u') {
						goto l300
					}
					position++
					if buffer[position] != rune('b') {
						goto l300
					}
					position++
					if buffer[position] != rune('s') {
						goto l300
					}
					position++
					if buffer[position] != rune('e') {
						goto l300
					}
					position++
					if buffer[position] != rune('c') {
						goto l300
					}
					position++
					if buffer[position] != rune('t') {
						goto l300
					}
					position++
					goto l293
				l300:
					position, tokenIndex = position293, tokenIndex293
					if buffer[position] != rune('s') {
						goto l289
					}
					position++
					if buffer[position] != rune('u') {
						goto l289
					}
					position++
					if buffer[position] != rune('b') {
						goto l289
					}
					position++
					if buffer[position] != rune('t') {
						goto l289
					}
					position++
					if buffer[position] != rune('r') {
						goto l289
					}
					position++
					if buffer[position] != rune('i') {
						goto l289
					}
					position++
					if buffer[position] != rune('b') {
						goto l289
					}
					position++
				}
			l293:
				{
					position301, tokenIndex301 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l302
					}
					position++
					goto l301
				l302:
					position, tokenIndex = position301, tokenIndex301
					{
						position303, tokenIndex303 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l289
						}
						position, tokenIndex = position303, tokenIndex303
					}
				}
			l301:
				add(ruleRankUninomialNotho, position290)
			}
			return true
		l289:
			position, tokenIndex = position289, tokenIndex289
			return false
		},
		/* 39 Uninomial <- <(UninomialWord (_ Authorship !(_ LowerCharExtended LowerCharExtended LowerCharExtended))?)> */
		func() bool {
			position304, tokenIndex304 := position, tokenIndex
			{
				position305 := position
				if !_rules[ruleUninomialWord]() {
					goto l304
				}
				{
					position306, tokenIndex306 := position, tokenIndex
					if !_rules[rule_]() {
						goto l306
					}
					if !_rules[ruleAuthorship]() {
						goto l306
					}
					{
						position308, tokenIndex308 := position, tokenIndex
						if !_rules[rule_]() {
							goto l308
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l308
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l308
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l308
						}
						goto l306
					l308:
						position, tokenIndex = position308, tokenIndex308
					}
					goto l307
				l306:
					position, tokenIndex = position306, tokenIndex306
				}
			l307:
				add(ruleUninomial, position305)
			}
			return true
		l304:
			position, tokenIndex = position304, tokenIndex304
			return false
		},
		/* 40 UninomialWord <- <(CapWord / TwoLetterGenus)> */
		func() bool {
			position309, tokenIndex309 := position, tokenIndex
			{
				position310 := position
				{
					position311, tokenIndex311 := position, tokenIndex
					if !_rules[ruleCapWord]() {
						goto l312
					}
					goto l311
				l312:
					position, tokenIndex = position311, tokenIndex311
					if !_rules[ruleTwoLetterGenus]() {
						goto l309
					}
				}
			l311:
				add(ruleUninomialWord, position310)
			}
			return true
		l309:
			position, tokenIndex = position309, tokenIndex309
			return false
		},
		/* 41 AbbrSubgenus <- <(UpperChar LowerChar* '.')> */
		func() bool {
			position313, tokenIndex313 := position, tokenIndex
			{
				position314 := position
				if !_rules[ruleUpperChar]() {
					goto l313
				}
			l315:
				{
					position316, tokenIndex316 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l316
					}
					goto l315
				l316:
					position, tokenIndex = position316, tokenIndex316
				}
				if buffer[position] != rune('.') {
					goto l313
				}
				position++
				add(ruleAbbrSubgenus, position314)
			}
			return true
		l313:
			position, tokenIndex = position313, tokenIndex313
			return false
		},
		/* 42 AbbrGenus <- <(UpperChar LowerChar? '.')> */
		func() bool {
			position317, tokenIndex317 := position, tokenIndex
			{
				position318 := position
				if !_rules[ruleUpperChar]() {
					goto l317
				}
				{
					position319, tokenIndex319 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l319
					}
					goto l320
				l319:
					position, tokenIndex = position319, tokenIndex319
				}
			l320:
				if buffer[position] != rune('.') {
					goto l317
				}
				position++
				add(ruleAbbrGenus, position318)
			}
			return true
		l317:
			position, tokenIndex = position317, tokenIndex317
			return false
		},
		/* 43 CapWord <- <(CapWordWithDash / CapWord1)> */
		func() bool {
			position321, tokenIndex321 := position, tokenIndex
			{
				position322 := position
				{
					position323, tokenIndex323 := position, tokenIndex
					if !_rules[ruleCapWordWithDash]() {
						goto l324
					}
					goto l323
				l324:
					position, tokenIndex = position323, tokenIndex323
					if !_rules[ruleCapWord1]() {
						goto l321
					}
				}
			l323:
				add(ruleCapWord, position322)
			}
			return true
		l321:
			position, tokenIndex = position321, tokenIndex321
			return false
		},
		/* 44 CapWord1 <- <(NameUpperChar NameLowerChar NameLowerChar+ '?'?)> */
		func() bool {
			position325, tokenIndex325 := position, tokenIndex
			{
				position326 := position
				if !_rules[ruleNameUpperChar]() {
					goto l325
				}
				if !_rules[ruleNameLowerChar]() {
					goto l325
				}
				if !_rules[ruleNameLowerChar]() {
					goto l325
				}
			l327:
				{
					position328, tokenIndex328 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l328
					}
					goto l327
				l328:
					position, tokenIndex = position328, tokenIndex328
				}
				{
					position329, tokenIndex329 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l329
					}
					position++
					goto l330
				l329:
					position, tokenIndex = position329, tokenIndex329
				}
			l330:
				add(ruleCapWord1, position326)
			}
			return true
		l325:
			position, tokenIndex = position325, tokenIndex325
			return false
		},
		/* 45 CapWordWithDash <- <(CapWord1 Dash (UpperAfterDash / LowerAfterDash))> */
		func() bool {
			position331, tokenIndex331 := position, tokenIndex
			{
				position332 := position
				if !_rules[ruleCapWord1]() {
					goto l331
				}
				if !_rules[ruleDash]() {
					goto l331
				}
				{
					position333, tokenIndex333 := position, tokenIndex
					if !_rules[ruleUpperAfterDash]() {
						goto l334
					}
					goto l333
				l334:
					position, tokenIndex = position333, tokenIndex333
					if !_rules[ruleLowerAfterDash]() {
						goto l331
					}
				}
			l333:
				add(ruleCapWordWithDash, position332)
			}
			return true
		l331:
			position, tokenIndex = position331, tokenIndex331
			return false
		},
		/* 46 UpperAfterDash <- <CapWord1> */
		func() bool {
			position335, tokenIndex335 := position, tokenIndex
			{
				position336 := position
				if !_rules[ruleCapWord1]() {
					goto l335
				}
				add(ruleUpperAfterDash, position336)
			}
			return true
		l335:
			position, tokenIndex = position335, tokenIndex335
			return false
		},
		/* 47 LowerAfterDash <- <Word1> */
		func() bool {
			position337, tokenIndex337 := position, tokenIndex
			{
				position338 := position
				if !_rules[ruleWord1]() {
					goto l337
				}
				add(ruleLowerAfterDash, position338)
			}
			return true
		l337:
			position, tokenIndex = position337, tokenIndex337
			return false
		},
		/* 48 TwoLetterGenus <- <(('C' 'a') / ('E' 'a') / ('G' 'e') / ('I' 'a') / ('I' 'o') / ('I' 'x') / ('L' 'o') / ('O' 'a') / ('R' 'a') / ('T' 'y') / ('U' 'a') / ('A' 'a') / ('J' 'a') / ('Z' 'u') / ('L' 'a') / ('Q' 'u') / ('A' 's') / ('B' 'a'))> */
		func() bool {
			position339, tokenIndex339 := position, tokenIndex
			{
				position340 := position
				{
					position341, tokenIndex341 := position, tokenIndex
					if buffer[position] != rune('C') {
						goto l342
					}
					position++
					if buffer[position] != rune('a') {
						goto l342
					}
					position++
					goto l341
				l342:
					position, tokenIndex = position341, tokenIndex341
					if buffer[position] != rune('E') {
						goto l343
					}
					position++
					if buffer[position] != rune('a') {
						goto l343
					}
					position++
					goto l341
				l343:
					position, tokenIndex = position341, tokenIndex341
					if buffer[position] != rune('G') {
						goto l344
					}
					position++
					if buffer[position] != rune('e') {
						goto l344
					}
					position++
					goto l341
				l344:
					position, tokenIndex = position341, tokenIndex341
					if buffer[position] != rune('I') {
						goto l345
					}
					position++
					if buffer[position] != rune('a') {
						goto l345
					}
					position++
					goto l341
				l345:
					position, tokenIndex = position341, tokenIndex341
					if buffer[position] != rune('I') {
						goto l346
					}
					position++
					if buffer[position] != rune('o') {
						goto l346
					}
					position++
					goto l341
				l346:
					position, tokenIndex = position341, tokenIndex341
					if buffer[position] != rune('I') {
						goto l347
					}
					position++
					if buffer[position] != rune('x') {
						goto l347
					}
					position++
					goto l341
				l347:
					position, tokenIndex = position341, tokenIndex341
					if buffer[position] != rune('L') {
						goto l348
					}
					position++
					if buffer[position] != rune('o') {
						goto l348
					}
					position++
					goto l341
				l348:
					position, tokenIndex = position341, tokenIndex341
					if buffer[position] != rune('O') {
						goto l349
					}
					position++
					if buffer[position] != rune('a') {
						goto l349
					}
					position++
					goto l341
				l349:
					position, tokenIndex = position341, tokenIndex341
					if buffer[position] != rune('R') {
						goto l350
					}
					position++
					if buffer[position] != rune('a') {
						goto l350
					}
					position++
					goto l341
				l350:
					position, tokenIndex = position341, tokenIndex341
					if buffer[position] != rune('T') {
						goto l351
					}
					position++
					if buffer[position] != rune('y') {
						goto l351
					}
					position++
					goto l341
				l351:
					position, tokenIndex = position341, tokenIndex341
					if buffer[position] != rune('U') {
						goto l352
					}
					position++
					if buffer[position] != rune('a') {
						goto l352
					}
					position++
					goto l341
				l352:
					position, tokenIndex = position341, tokenIndex341
					if buffer[position] != rune('A') {
						goto l353
					}
					position++
					if buffer[position] != rune('a') {
						goto l353
					}
					position++
					goto l341
				l353:
					position, tokenIndex = position341, tokenIndex341
					if buffer[position] != rune('J') {
						goto l354
					}
					position++
					if buffer[position] != rune('a') {
						goto l354
					}
					position++
					goto l341
				l354:
					position, tokenIndex = position341, tokenIndex341
					if buffer[position] != rune('Z') {
						goto l355
					}
					position++
					if buffer[position] != rune('u') {
						goto l355
					}
					position++
					goto l341
				l355:
					position, tokenIndex = position341, tokenIndex341
					if buffer[position] != rune('L') {
						goto l356
					}
					position++
					if buffer[position] != rune('a') {
						goto l356
					}
					position++
					goto l341
				l356:
					position, tokenIndex = position341, tokenIndex341
					if buffer[position] != rune('Q') {
						goto l357
					}
					position++
					if buffer[position] != rune('u') {
						goto l357
					}
					position++
					goto l341
				l357:
					position, tokenIndex = position341, tokenIndex341
					if buffer[position] != rune('A') {
						goto l358
					}
					position++
					if buffer[position] != rune('s') {
						goto l358
					}
					position++
					goto l341
				l358:
					position, tokenIndex = position341, tokenIndex341
					if buffer[position] != rune('B') {
						goto l339
					}
					position++
					if buffer[position] != rune('a') {
						goto l339
					}
					position++
				}
			l341:
				add(ruleTwoLetterGenus, position340)
			}
			return true
		l339:
			position, tokenIndex = position339, tokenIndex339
			return false
		},
		/* 49 Word <- <(!((('e' 'x') / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd') / ('p' 'r' 'o') / AuthorPrefix / RankUninomial / Approximation / Word4) SpaceCharEOI) (WordApostr / WordStartsWithDigit / MultiDashedWord / Word2 / Word1) &(SpaceCharEOI / '('))> */
		func() bool {
			position359, tokenIndex359 := position, tokenIndex
			{
				position360 := position
				{
					position361, tokenIndex361 := position, tokenIndex
					{
						position362, tokenIndex362 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l363
						}
						position++
						if buffer[position] != rune('x') {
							goto l363
						}
						position++
						goto l362
					l363:
						position, tokenIndex = position362, tokenIndex362
						if buffer[position] != rune('e') {
							goto l364
						}
						position++
						if buffer[position] != rune('t') {
							goto l364
						}
						position++
						goto l362
					l364:
						position, tokenIndex = position362, tokenIndex362
						if buffer[position] != rune('a') {
							goto l365
						}
						position++
						if buffer[position] != rune('n') {
							goto l365
						}
						position++
						if buffer[position] != rune('d') {
							goto l365
						}
						position++
						goto l362
					l365:
						position, tokenIndex = position362, tokenIndex362
						if buffer[position] != rune('a') {
							goto l366
						}
						position++
						if buffer[position] != rune('p') {
							goto l366
						}
						position++
						if buffer[position] != rune('u') {
							goto l366
						}
						position++
						if buffer[position] != rune('d') {
							goto l366
						}
						position++
						goto l362
					l366:
						position, tokenIndex = position362, tokenIndex362
						if buffer[position] != rune('p') {
							goto l367
						}
						position++
						if buffer[position] != rune('r') {
							goto l367
						}
						position++
						if buffer[position] != rune('o') {
							goto l367
						}
						position++
						goto l362
					l367:
						position, tokenIndex = position362, tokenIndex362
						if !_rules[ruleAuthorPrefix]() {
							goto l368
						}
						goto l362
					l368:
						position, tokenIndex = position362, tokenIndex362
						if !_rules[ruleRankUninomial]() {
							goto l369
						}
						goto l362
					l369:
						position, tokenIndex = position362, tokenIndex362
						if !_rules[ruleApproximation]() {
							goto l370
						}
						goto l362
					l370:
						position, tokenIndex = position362, tokenIndex362
						if !_rules[ruleWord4]() {
							goto l361
						}
					}
				l362:
					if !_rules[ruleSpaceCharEOI]() {
						goto l361
					}
					goto l359
				l361:
					position, tokenIndex = position361, tokenIndex361
				}
				{
					position371, tokenIndex371 := position, tokenIndex
					if !_rules[ruleWordApostr]() {
						goto l372
					}
					goto l371
				l372:
					position, tokenIndex = position371, tokenIndex371
					if !_rules[ruleWordStartsWithDigit]() {
						goto l373
					}
					goto l371
				l373:
					position, tokenIndex = position371, tokenIndex371
					if !_rules[ruleMultiDashedWord]() {
						goto l374
					}
					goto l371
				l374:
					position, tokenIndex = position371, tokenIndex371
					if !_rules[ruleWord2]() {
						goto l375
					}
					goto l371
				l375:
					position, tokenIndex = position371, tokenIndex371
					if !_rules[ruleWord1]() {
						goto l359
					}
				}
			l371:
				{
					position376, tokenIndex376 := position, tokenIndex
					{
						position377, tokenIndex377 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l378
						}
						goto l377
					l378:
						position, tokenIndex = position377, tokenIndex377
						if buffer[position] != rune('(') {
							goto l359
						}
						position++
					}
				l377:
					position, tokenIndex = position376, tokenIndex376
				}
				add(ruleWord, position360)
			}
			return true
		l359:
			position, tokenIndex = position359, tokenIndex359
			return false
		},
		/* 50 Word1 <- <((LowerASCII Dash)? NameLowerChar NameLowerChar+)> */
		func() bool {
			position379, tokenIndex379 := position, tokenIndex
			{
				position380 := position
				{
					position381, tokenIndex381 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l381
					}
					if !_rules[ruleDash]() {
						goto l381
					}
					goto l382
				l381:
					position, tokenIndex = position381, tokenIndex381
				}
			l382:
				if !_rules[ruleNameLowerChar]() {
					goto l379
				}
				if !_rules[ruleNameLowerChar]() {
					goto l379
				}
			l383:
				{
					position384, tokenIndex384 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l384
					}
					goto l383
				l384:
					position, tokenIndex = position384, tokenIndex384
				}
				add(ruleWord1, position380)
			}
			return true
		l379:
			position, tokenIndex = position379, tokenIndex379
			return false
		},
		/* 51 WordStartsWithDigit <- <(('1' / '2' / '3' / '4' / '5' / '6' / '7' / '8' / '9') Nums? ('.' / Dash)? NameLowerChar NameLowerChar NameLowerChar NameLowerChar+)> */
		func() bool {
			position385, tokenIndex385 := position, tokenIndex
			{
				position386 := position
				{
					position387, tokenIndex387 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l388
					}
					position++
					goto l387
				l388:
					position, tokenIndex = position387, tokenIndex387
					if buffer[position] != rune('2') {
						goto l389
					}
					position++
					goto l387
				l389:
					position, tokenIndex = position387, tokenIndex387
					if buffer[position] != rune('3') {
						goto l390
					}
					position++
					goto l387
				l390:
					position, tokenIndex = position387, tokenIndex387
					if buffer[position] != rune('4') {
						goto l391
					}
					position++
					goto l387
				l391:
					position, tokenIndex = position387, tokenIndex387
					if buffer[position] != rune('5') {
						goto l392
					}
					position++
					goto l387
				l392:
					position, tokenIndex = position387, tokenIndex387
					if buffer[position] != rune('6') {
						goto l393
					}
					position++
					goto l387
				l393:
					position, tokenIndex = position387, tokenIndex387
					if buffer[position] != rune('7') {
						goto l394
					}
					position++
					goto l387
				l394:
					position, tokenIndex = position387, tokenIndex387
					if buffer[position] != rune('8') {
						goto l395
					}
					position++
					goto l387
				l395:
					position, tokenIndex = position387, tokenIndex387
					if buffer[position] != rune('9') {
						goto l385
					}
					position++
				}
			l387:
				{
					position396, tokenIndex396 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l396
					}
					goto l397
				l396:
					position, tokenIndex = position396, tokenIndex396
				}
			l397:
				{
					position398, tokenIndex398 := position, tokenIndex
					{
						position400, tokenIndex400 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l401
						}
						position++
						goto l400
					l401:
						position, tokenIndex = position400, tokenIndex400
						if !_rules[ruleDash]() {
							goto l398
						}
					}
				l400:
					goto l399
				l398:
					position, tokenIndex = position398, tokenIndex398
				}
			l399:
				if !_rules[ruleNameLowerChar]() {
					goto l385
				}
				if !_rules[ruleNameLowerChar]() {
					goto l385
				}
				if !_rules[ruleNameLowerChar]() {
					goto l385
				}
				if !_rules[ruleNameLowerChar]() {
					goto l385
				}
			l402:
				{
					position403, tokenIndex403 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l403
					}
					goto l402
				l403:
					position, tokenIndex = position403, tokenIndex403
				}
				add(ruleWordStartsWithDigit, position386)
			}
			return true
		l385:
			position, tokenIndex = position385, tokenIndex385
			return false
		},
		/* 52 Word2 <- <(NameLowerChar+ Dash? NameLowerChar+)> */
		func() bool {
			position404, tokenIndex404 := position, tokenIndex
			{
				position405 := position
				if !_rules[ruleNameLowerChar]() {
					goto l404
				}
			l406:
				{
					position407, tokenIndex407 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l407
					}
					goto l406
				l407:
					position, tokenIndex = position407, tokenIndex407
				}
				{
					position408, tokenIndex408 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l408
					}
					goto l409
				l408:
					position, tokenIndex = position408, tokenIndex408
				}
			l409:
				if !_rules[ruleNameLowerChar]() {
					goto l404
				}
			l410:
				{
					position411, tokenIndex411 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l411
					}
					goto l410
				l411:
					position, tokenIndex = position411, tokenIndex411
				}
				add(ruleWord2, position405)
			}
			return true
		l404:
			position, tokenIndex = position404, tokenIndex404
			return false
		},
		/* 53 WordApostr <- <(NameLowerChar NameLowerChar* Apostrophe Word1)> */
		func() bool {
			position412, tokenIndex412 := position, tokenIndex
			{
				position413 := position
				if !_rules[ruleNameLowerChar]() {
					goto l412
				}
			l414:
				{
					position415, tokenIndex415 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l415
					}
					goto l414
				l415:
					position, tokenIndex = position415, tokenIndex415
				}
				if !_rules[ruleApostrophe]() {
					goto l412
				}
				if !_rules[ruleWord1]() {
					goto l412
				}
				add(ruleWordApostr, position413)
			}
			return true
		l412:
			position, tokenIndex = position412, tokenIndex412
			return false
		},
		/* 54 Word4 <- <(NameLowerChar+ '.' NameLowerChar)> */
		func() bool {
			position416, tokenIndex416 := position, tokenIndex
			{
				position417 := position
				if !_rules[ruleNameLowerChar]() {
					goto l416
				}
			l418:
				{
					position419, tokenIndex419 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l419
					}
					goto l418
				l419:
					position, tokenIndex = position419, tokenIndex419
				}
				if buffer[position] != rune('.') {
					goto l416
				}
				position++
				if !_rules[ruleNameLowerChar]() {
					goto l416
				}
				add(ruleWord4, position417)
			}
			return true
		l416:
			position, tokenIndex = position416, tokenIndex416
			return false
		},
		/* 55 MultiDashedWord <- <(NameLowerChar+ Dash NameLowerChar+ Dash NameLowerChar+ (Dash NameLowerChar+)?)> */
		func() bool {
			position420, tokenIndex420 := position, tokenIndex
			{
				position421 := position
				if !_rules[ruleNameLowerChar]() {
					goto l420
				}
			l422:
				{
					position423, tokenIndex423 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l423
					}
					goto l422
				l423:
					position, tokenIndex = position423, tokenIndex423
				}
				if !_rules[ruleDash]() {
					goto l420
				}
				if !_rules[ruleNameLowerChar]() {
					goto l420
				}
			l424:
				{
					position425, tokenIndex425 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l425
					}
					goto l424
				l425:
					position, tokenIndex = position425, tokenIndex425
				}
				if !_rules[ruleDash]() {
					goto l420
				}
				if !_rules[ruleNameLowerChar]() {
					goto l420
				}
			l426:
				{
					position427, tokenIndex427 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l427
					}
					goto l426
				l427:
					position, tokenIndex = position427, tokenIndex427
				}
				{
					position428, tokenIndex428 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l428
					}
					if !_rules[ruleNameLowerChar]() {
						goto l428
					}
				l430:
					{
						position431, tokenIndex431 := position, tokenIndex
						if !_rules[ruleNameLowerChar]() {
							goto l431
						}
						goto l430
					l431:
						position, tokenIndex = position431, tokenIndex431
					}
					goto l429
				l428:
					position, tokenIndex = position428, tokenIndex428
				}
			l429:
				add(ruleMultiDashedWord, position421)
			}
			return true
		l420:
			position, tokenIndex = position420, tokenIndex420
			return false
		},
		/* 56 HybridChar <- <'×'> */
		func() bool {
			position432, tokenIndex432 := position, tokenIndex
			{
				position433 := position
				if buffer[position] != rune('×') {
					goto l432
				}
				position++
				add(ruleHybridChar, position433)
			}
			return true
		l432:
			position, tokenIndex = position432, tokenIndex432
			return false
		},
		/* 57 ApproxNameIgnored <- <.*> */
		func() bool {
			{
				position435 := position
			l436:
				{
					position437, tokenIndex437 := position, tokenIndex
					if !matchDot() {
						goto l437
					}
					goto l436
				l437:
					position, tokenIndex = position437, tokenIndex437
				}
				add(ruleApproxNameIgnored, position435)
			}
			return true
		},
		/* 58 Approximation <- <(('s' 'p' '.' _? ('n' 'r' '.')) / ('s' 'p' '.' _? ('a' 'f' 'f' '.')) / ('m' 'o' 'n' 's' 't' '.') / '?' / ((('s' 'p' 'p') / ('n' 'r') / ('s' 'p') / ('a' 'f' 'f') / ('s' 'p' 'e' 'c' 'i' 'e' 's')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position438, tokenIndex438 := position, tokenIndex
			{
				position439 := position
				{
					position440, tokenIndex440 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l441
					}
					position++
					if buffer[position] != rune('p') {
						goto l441
					}
					position++
					if buffer[position] != rune('.') {
						goto l441
					}
					position++
					{
						position442, tokenIndex442 := position, tokenIndex
						if !_rules[rule_]() {
							goto l442
						}
						goto l443
					l442:
						position, tokenIndex = position442, tokenIndex442
					}
				l443:
					if buffer[position] != rune('n') {
						goto l441
					}
					position++
					if buffer[position] != rune('r') {
						goto l441
					}
					position++
					if buffer[position] != rune('.') {
						goto l441
					}
					position++
					goto l440
				l441:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('s') {
						goto l444
					}
					position++
					if buffer[position] != rune('p') {
						goto l444
					}
					position++
					if buffer[position] != rune('.') {
						goto l444
					}
					position++
					{
						position445, tokenIndex445 := position, tokenIndex
						if !_rules[rule_]() {
							goto l445
						}
						goto l446
					l445:
						position, tokenIndex = position445, tokenIndex445
					}
				l446:
					if buffer[position] != rune('a') {
						goto l444
					}
					position++
					if buffer[position] != rune('f') {
						goto l444
					}
					position++
					if buffer[position] != rune('f') {
						goto l444
					}
					position++
					if buffer[position] != rune('.') {
						goto l444
					}
					position++
					goto l440
				l444:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('m') {
						goto l447
					}
					position++
					if buffer[position] != rune('o') {
						goto l447
					}
					position++
					if buffer[position] != rune('n') {
						goto l447
					}
					position++
					if buffer[position] != rune('s') {
						goto l447
					}
					position++
					if buffer[position] != rune('t') {
						goto l447
					}
					position++
					if buffer[position] != rune('.') {
						goto l447
					}
					position++
					goto l440
				l447:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('?') {
						goto l448
					}
					position++
					goto l440
				l448:
					position, tokenIndex = position440, tokenIndex440
					{
						position449, tokenIndex449 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l450
						}
						position++
						if buffer[position] != rune('p') {
							goto l450
						}
						position++
						if buffer[position] != rune('p') {
							goto l450
						}
						position++
						goto l449
					l450:
						position, tokenIndex = position449, tokenIndex449
						if buffer[position] != rune('n') {
							goto l451
						}
						position++
						if buffer[position] != rune('r') {
							goto l451
						}
						position++
						goto l449
					l451:
						position, tokenIndex = position449, tokenIndex449
						if buffer[position] != rune('s') {
							goto l452
						}
						position++
						if buffer[position] != rune('p') {
							goto l452
						}
						position++
						goto l449
					l452:
						position, tokenIndex = position449, tokenIndex449
						if buffer[position] != rune('a') {
							goto l453
						}
						position++
						if buffer[position] != rune('f') {
							goto l453
						}
						position++
						if buffer[position] != rune('f') {
							goto l453
						}
						position++
						goto l449
					l453:
						position, tokenIndex = position449, tokenIndex449
						if buffer[position] != rune('s') {
							goto l438
						}
						position++
						if buffer[position] != rune('p') {
							goto l438
						}
						position++
						if buffer[position] != rune('e') {
							goto l438
						}
						position++
						if buffer[position] != rune('c') {
							goto l438
						}
						position++
						if buffer[position] != rune('i') {
							goto l438
						}
						position++
						if buffer[position] != rune('e') {
							goto l438
						}
						position++
						if buffer[position] != rune('s') {
							goto l438
						}
						position++
					}
				l449:
					{
						position454, tokenIndex454 := position, tokenIndex
						{
							position456, tokenIndex456 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l455
							}
							position, tokenIndex = position456, tokenIndex456
						}
						goto l454
					l455:
						position, tokenIndex = position454, tokenIndex454
						if buffer[position] != rune('.') {
							goto l438
						}
						position++
					}
				l454:
				}
			l440:
				add(ruleApproximation, position439)
			}
			return true
		l438:
			position, tokenIndex = position438, tokenIndex438
			return false
		},
		/* 59 Authorship <- <((AuthorshipCombo / OriginalAuthorship) &(SpaceCharEOI / ';' / ','))> */
		func() bool {
			position457, tokenIndex457 := position, tokenIndex
			{
				position458 := position
				{
					position459, tokenIndex459 := position, tokenIndex
					if !_rules[ruleAuthorshipCombo]() {
						goto l460
					}
					goto l459
				l460:
					position, tokenIndex = position459, tokenIndex459
					if !_rules[ruleOriginalAuthorship]() {
						goto l457
					}
				}
			l459:
				{
					position461, tokenIndex461 := position, tokenIndex
					{
						position462, tokenIndex462 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l463
						}
						goto l462
					l463:
						position, tokenIndex = position462, tokenIndex462
						if buffer[position] != rune(';') {
							goto l464
						}
						position++
						goto l462
					l464:
						position, tokenIndex = position462, tokenIndex462
						if buffer[position] != rune(',') {
							goto l457
						}
						position++
					}
				l462:
					position, tokenIndex = position461, tokenIndex461
				}
				add(ruleAuthorship, position458)
			}
			return true
		l457:
			position, tokenIndex = position457, tokenIndex457
			return false
		},
		/* 60 AuthorshipCombo <- <(OriginalAuthorshipComb (_? CombinationAuthorship)?)> */
		func() bool {
			position465, tokenIndex465 := position, tokenIndex
			{
				position466 := position
				if !_rules[ruleOriginalAuthorshipComb]() {
					goto l465
				}
				{
					position467, tokenIndex467 := position, tokenIndex
					{
						position469, tokenIndex469 := position, tokenIndex
						if !_rules[rule_]() {
							goto l469
						}
						goto l470
					l469:
						position, tokenIndex = position469, tokenIndex469
					}
				l470:
					if !_rules[ruleCombinationAuthorship]() {
						goto l467
					}
					goto l468
				l467:
					position, tokenIndex = position467, tokenIndex467
				}
			l468:
				add(ruleAuthorshipCombo, position466)
			}
			return true
		l465:
			position, tokenIndex = position465, tokenIndex465
			return false
		},
		/* 61 OriginalAuthorship <- <AuthorsGroup> */
		func() bool {
			position471, tokenIndex471 := position, tokenIndex
			{
				position472 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l471
				}
				add(ruleOriginalAuthorship, position472)
			}
			return true
		l471:
			position, tokenIndex = position471, tokenIndex471
			return false
		},
		/* 62 OriginalAuthorshipComb <- <(BasionymAuthorshipYearMisformed / BasionymAuthorship / BasionymAuthorshipMissingParens)> */
		func() bool {
			position473, tokenIndex473 := position, tokenIndex
			{
				position474 := position
				{
					position475, tokenIndex475 := position, tokenIndex
					if !_rules[ruleBasionymAuthorshipYearMisformed]() {
						goto l476
					}
					goto l475
				l476:
					position, tokenIndex = position475, tokenIndex475
					if !_rules[ruleBasionymAuthorship]() {
						goto l477
					}
					goto l475
				l477:
					position, tokenIndex = position475, tokenIndex475
					if !_rules[ruleBasionymAuthorshipMissingParens]() {
						goto l473
					}
				}
			l475:
				add(ruleOriginalAuthorshipComb, position474)
			}
			return true
		l473:
			position, tokenIndex = position473, tokenIndex473
			return false
		},
		/* 63 CombinationAuthorship <- <AuthorsGroup> */
		func() bool {
			position478, tokenIndex478 := position, tokenIndex
			{
				position479 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l478
				}
				add(ruleCombinationAuthorship, position479)
			}
			return true
		l478:
			position, tokenIndex = position478, tokenIndex478
			return false
		},
		/* 64 BasionymAuthorshipMissingParens <- <(MissingParensStart / MissingParensEnd)> */
		func() bool {
			position480, tokenIndex480 := position, tokenIndex
			{
				position481 := position
				{
					position482, tokenIndex482 := position, tokenIndex
					if !_rules[ruleMissingParensStart]() {
						goto l483
					}
					goto l482
				l483:
					position, tokenIndex = position482, tokenIndex482
					if !_rules[ruleMissingParensEnd]() {
						goto l480
					}
				}
			l482:
				add(ruleBasionymAuthorshipMissingParens, position481)
			}
			return true
		l480:
			position, tokenIndex = position480, tokenIndex480
			return false
		},
		/* 65 MissingParensStart <- <('(' _? AuthorsGroup)> */
		func() bool {
			position484, tokenIndex484 := position, tokenIndex
			{
				position485 := position
				if buffer[position] != rune('(') {
					goto l484
				}
				position++
				{
					position486, tokenIndex486 := position, tokenIndex
					if !_rules[rule_]() {
						goto l486
					}
					goto l487
				l486:
					position, tokenIndex = position486, tokenIndex486
				}
			l487:
				if !_rules[ruleAuthorsGroup]() {
					goto l484
				}
				add(ruleMissingParensStart, position485)
			}
			return true
		l484:
			position, tokenIndex = position484, tokenIndex484
			return false
		},
		/* 66 MissingParensEnd <- <(AuthorsGroup _? ')')> */
		func() bool {
			position488, tokenIndex488 := position, tokenIndex
			{
				position489 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l488
				}
				{
					position490, tokenIndex490 := position, tokenIndex
					if !_rules[rule_]() {
						goto l490
					}
					goto l491
				l490:
					position, tokenIndex = position490, tokenIndex490
				}
			l491:
				if buffer[position] != rune(')') {
					goto l488
				}
				position++
				add(ruleMissingParensEnd, position489)
			}
			return true
		l488:
			position, tokenIndex = position488, tokenIndex488
			return false
		},
		/* 67 BasionymAuthorshipYearMisformed <- <('(' _? AuthorsGroup _? ')' (_? ',')? _? Year)> */
		func() bool {
			position492, tokenIndex492 := position, tokenIndex
			{
				position493 := position
				if buffer[position] != rune('(') {
					goto l492
				}
				position++
				{
					position494, tokenIndex494 := position, tokenIndex
					if !_rules[rule_]() {
						goto l494
					}
					goto l495
				l494:
					position, tokenIndex = position494, tokenIndex494
				}
			l495:
				if !_rules[ruleAuthorsGroup]() {
					goto l492
				}
				{
					position496, tokenIndex496 := position, tokenIndex
					if !_rules[rule_]() {
						goto l496
					}
					goto l497
				l496:
					position, tokenIndex = position496, tokenIndex496
				}
			l497:
				if buffer[position] != rune(')') {
					goto l492
				}
				position++
				{
					position498, tokenIndex498 := position, tokenIndex
					{
						position500, tokenIndex500 := position, tokenIndex
						if !_rules[rule_]() {
							goto l500
						}
						goto l501
					l500:
						position, tokenIndex = position500, tokenIndex500
					}
				l501:
					if buffer[position] != rune(',') {
						goto l498
					}
					position++
					goto l499
				l498:
					position, tokenIndex = position498, tokenIndex498
				}
			l499:
				{
					position502, tokenIndex502 := position, tokenIndex
					if !_rules[rule_]() {
						goto l502
					}
					goto l503
				l502:
					position, tokenIndex = position502, tokenIndex502
				}
			l503:
				if !_rules[ruleYear]() {
					goto l492
				}
				add(ruleBasionymAuthorshipYearMisformed, position493)
			}
			return true
		l492:
			position, tokenIndex = position492, tokenIndex492
			return false
		},
		/* 68 BasionymAuthorship <- <(BasionymAuthorship1 / BasionymAuthorship2Parens)> */
		func() bool {
			position504, tokenIndex504 := position, tokenIndex
			{
				position505 := position
				{
					position506, tokenIndex506 := position, tokenIndex
					if !_rules[ruleBasionymAuthorship1]() {
						goto l507
					}
					goto l506
				l507:
					position, tokenIndex = position506, tokenIndex506
					if !_rules[ruleBasionymAuthorship2Parens]() {
						goto l504
					}
				}
			l506:
				add(ruleBasionymAuthorship, position505)
			}
			return true
		l504:
			position, tokenIndex = position504, tokenIndex504
			return false
		},
		/* 69 BasionymAuthorship1 <- <('(' _? AuthorsGroup _? ')')> */
		func() bool {
			position508, tokenIndex508 := position, tokenIndex
			{
				position509 := position
				if buffer[position] != rune('(') {
					goto l508
				}
				position++
				{
					position510, tokenIndex510 := position, tokenIndex
					if !_rules[rule_]() {
						goto l510
					}
					goto l511
				l510:
					position, tokenIndex = position510, tokenIndex510
				}
			l511:
				if !_rules[ruleAuthorsGroup]() {
					goto l508
				}
				{
					position512, tokenIndex512 := position, tokenIndex
					if !_rules[rule_]() {
						goto l512
					}
					goto l513
				l512:
					position, tokenIndex = position512, tokenIndex512
				}
			l513:
				if buffer[position] != rune(')') {
					goto l508
				}
				position++
				add(ruleBasionymAuthorship1, position509)
			}
			return true
		l508:
			position, tokenIndex = position508, tokenIndex508
			return false
		},
		/* 70 BasionymAuthorship2Parens <- <('(' _? '(' _? AuthorsGroup _? ')' _? ')')> */
		func() bool {
			position514, tokenIndex514 := position, tokenIndex
			{
				position515 := position
				if buffer[position] != rune('(') {
					goto l514
				}
				position++
				{
					position516, tokenIndex516 := position, tokenIndex
					if !_rules[rule_]() {
						goto l516
					}
					goto l517
				l516:
					position, tokenIndex = position516, tokenIndex516
				}
			l517:
				if buffer[position] != rune('(') {
					goto l514
				}
				position++
				{
					position518, tokenIndex518 := position, tokenIndex
					if !_rules[rule_]() {
						goto l518
					}
					goto l519
				l518:
					position, tokenIndex = position518, tokenIndex518
				}
			l519:
				if !_rules[ruleAuthorsGroup]() {
					goto l514
				}
				{
					position520, tokenIndex520 := position, tokenIndex
					if !_rules[rule_]() {
						goto l520
					}
					goto l521
				l520:
					position, tokenIndex = position520, tokenIndex520
				}
			l521:
				if buffer[position] != rune(')') {
					goto l514
				}
				position++
				{
					position522, tokenIndex522 := position, tokenIndex
					if !_rules[rule_]() {
						goto l522
					}
					goto l523
				l522:
					position, tokenIndex = position522, tokenIndex522
				}
			l523:
				if buffer[position] != rune(')') {
					goto l514
				}
				position++
				add(ruleBasionymAuthorship2Parens, position515)
			}
			return true
		l514:
			position, tokenIndex = position514, tokenIndex514
			return false
		},
		/* 71 AuthorsGroup <- <(AuthorsTeam (_ (AuthorEmend / AuthorEx) AuthorsTeam)?)> */
		func() bool {
			position524, tokenIndex524 := position, tokenIndex
			{
				position525 := position
				if !_rules[ruleAuthorsTeam]() {
					goto l524
				}
				{
					position526, tokenIndex526 := position, tokenIndex
					if !_rules[rule_]() {
						goto l526
					}
					{
						position528, tokenIndex528 := position, tokenIndex
						if !_rules[ruleAuthorEmend]() {
							goto l529
						}
						goto l528
					l529:
						position, tokenIndex = position528, tokenIndex528
						if !_rules[ruleAuthorEx]() {
							goto l526
						}
					}
				l528:
					if !_rules[ruleAuthorsTeam]() {
						goto l526
					}
					goto l527
				l526:
					position, tokenIndex = position526, tokenIndex526
				}
			l527:
				add(ruleAuthorsGroup, position525)
			}
			return true
		l524:
			position, tokenIndex = position524, tokenIndex524
			return false
		},
		/* 72 AuthorsTeam <- <(Author (AuthorSep Author)* (_? ','? _? Year)?)> */
		func() bool {
			position530, tokenIndex530 := position, tokenIndex
			{
				position531 := position
				if !_rules[ruleAuthor]() {
					goto l530
				}
			l532:
				{
					position533, tokenIndex533 := position, tokenIndex
					if !_rules[ruleAuthorSep]() {
						goto l533
					}
					if !_rules[ruleAuthor]() {
						goto l533
					}
					goto l532
				l533:
					position, tokenIndex = position533, tokenIndex533
				}
				{
					position534, tokenIndex534 := position, tokenIndex
					{
						position536, tokenIndex536 := position, tokenIndex
						if !_rules[rule_]() {
							goto l536
						}
						goto l537
					l536:
						position, tokenIndex = position536, tokenIndex536
					}
				l537:
					{
						position538, tokenIndex538 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l538
						}
						position++
						goto l539
					l538:
						position, tokenIndex = position538, tokenIndex538
					}
				l539:
					{
						position540, tokenIndex540 := position, tokenIndex
						if !_rules[rule_]() {
							goto l540
						}
						goto l541
					l540:
						position, tokenIndex = position540, tokenIndex540
					}
				l541:
					if !_rules[ruleYear]() {
						goto l534
					}
					goto l535
				l534:
					position, tokenIndex = position534, tokenIndex534
				}
			l535:
				add(ruleAuthorsTeam, position531)
			}
			return true
		l530:
			position, tokenIndex = position530, tokenIndex530
			return false
		},
		/* 73 AuthorSep <- <(AuthorSep1 / AuthorSep2)> */
		func() bool {
			position542, tokenIndex542 := position, tokenIndex
			{
				position543 := position
				{
					position544, tokenIndex544 := position, tokenIndex
					if !_rules[ruleAuthorSep1]() {
						goto l545
					}
					goto l544
				l545:
					position, tokenIndex = position544, tokenIndex544
					if !_rules[ruleAuthorSep2]() {
						goto l542
					}
				}
			l544:
				add(ruleAuthorSep, position543)
			}
			return true
		l542:
			position, tokenIndex = position542, tokenIndex542
			return false
		},
		/* 74 AuthorSep1 <- <(_? (',' _)? ('&' / AuthorSepSpanish / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd')) _?)> */
		func() bool {
			position546, tokenIndex546 := position, tokenIndex
			{
				position547 := position
				{
					position548, tokenIndex548 := position, tokenIndex
					if !_rules[rule_]() {
						goto l548
					}
					goto l549
				l548:
					position, tokenIndex = position548, tokenIndex548
				}
			l549:
				{
					position550, tokenIndex550 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l550
					}
					position++
					if !_rules[rule_]() {
						goto l550
					}
					goto l551
				l550:
					position, tokenIndex = position550, tokenIndex550
				}
			l551:
				{
					position552, tokenIndex552 := position, tokenIndex
					if buffer[position] != rune('&') {
						goto l553
					}
					position++
					goto l552
				l553:
					position, tokenIndex = position552, tokenIndex552
					if !_rules[ruleAuthorSepSpanish]() {
						goto l554
					}
					goto l552
				l554:
					position, tokenIndex = position552, tokenIndex552
					if buffer[position] != rune('e') {
						goto l555
					}
					position++
					if buffer[position] != rune('t') {
						goto l555
					}
					position++
					goto l552
				l555:
					position, tokenIndex = position552, tokenIndex552
					if buffer[position] != rune('a') {
						goto l556
					}
					position++
					if buffer[position] != rune('n') {
						goto l556
					}
					position++
					if buffer[position] != rune('d') {
						goto l556
					}
					position++
					goto l552
				l556:
					position, tokenIndex = position552, tokenIndex552
					if buffer[position] != rune('a') {
						goto l546
					}
					position++
					if buffer[position] != rune('p') {
						goto l546
					}
					position++
					if buffer[position] != rune('u') {
						goto l546
					}
					position++
					if buffer[position] != rune('d') {
						goto l546
					}
					position++
				}
			l552:
				{
					position557, tokenIndex557 := position, tokenIndex
					if !_rules[rule_]() {
						goto l557
					}
					goto l558
				l557:
					position, tokenIndex = position557, tokenIndex557
				}
			l558:
				add(ruleAuthorSep1, position547)
			}
			return true
		l546:
			position, tokenIndex = position546, tokenIndex546
			return false
		},
		/* 75 AuthorSep2 <- <(_? ',' _?)> */
		func() bool {
			position559, tokenIndex559 := position, tokenIndex
			{
				position560 := position
				{
					position561, tokenIndex561 := position, tokenIndex
					if !_rules[rule_]() {
						goto l561
					}
					goto l562
				l561:
					position, tokenIndex = position561, tokenIndex561
				}
			l562:
				if buffer[position] != rune(',') {
					goto l559
				}
				position++
				{
					position563, tokenIndex563 := position, tokenIndex
					if !_rules[rule_]() {
						goto l563
					}
					goto l564
				l563:
					position, tokenIndex = position563, tokenIndex563
				}
			l564:
				add(ruleAuthorSep2, position560)
			}
			return true
		l559:
			position, tokenIndex = position559, tokenIndex559
			return false
		},
		/* 76 AuthorSepSpanish <- <(_? 'y' _?)> */
		func() bool {
			position565, tokenIndex565 := position, tokenIndex
			{
				position566 := position
				{
					position567, tokenIndex567 := position, tokenIndex
					if !_rules[rule_]() {
						goto l567
					}
					goto l568
				l567:
					position, tokenIndex = position567, tokenIndex567
				}
			l568:
				if buffer[position] != rune('y') {
					goto l565
				}
				position++
				{
					position569, tokenIndex569 := position, tokenIndex
					if !_rules[rule_]() {
						goto l569
					}
					goto l570
				l569:
					position, tokenIndex = position569, tokenIndex569
				}
			l570:
				add(ruleAuthorSepSpanish, position566)
			}
			return true
		l565:
			position, tokenIndex = position565, tokenIndex565
			return false
		},
		/* 77 AuthorEx <- <((('e' 'x' '.'?) / ('i' 'n')) _)> */
		func() bool {
			position571, tokenIndex571 := position, tokenIndex
			{
				position572 := position
				{
					position573, tokenIndex573 := position, tokenIndex
					if buffer[position] != rune('e') {
						goto l574
					}
					position++
					if buffer[position] != rune('x') {
						goto l574
					}
					position++
					{
						position575, tokenIndex575 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l575
						}
						position++
						goto l576
					l575:
						position, tokenIndex = position575, tokenIndex575
					}
				l576:
					goto l573
				l574:
					position, tokenIndex = position573, tokenIndex573
					if buffer[position] != rune('i') {
						goto l571
					}
					position++
					if buffer[position] != rune('n') {
						goto l571
					}
					position++
				}
			l573:
				if !_rules[rule_]() {
					goto l571
				}
				add(ruleAuthorEx, position572)
			}
			return true
		l571:
			position, tokenIndex = position571, tokenIndex571
			return false
		},
		/* 78 AuthorEmend <- <('e' 'm' 'e' 'n' 'd' '.'? _)> */
		func() bool {
			position577, tokenIndex577 := position, tokenIndex
			{
				position578 := position
				if buffer[position] != rune('e') {
					goto l577
				}
				position++
				if buffer[position] != rune('m') {
					goto l577
				}
				position++
				if buffer[position] != rune('e') {
					goto l577
				}
				position++
				if buffer[position] != rune('n') {
					goto l577
				}
				position++
				if buffer[position] != rune('d') {
					goto l577
				}
				position++
				{
					position579, tokenIndex579 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l579
					}
					position++
					goto l580
				l579:
					position, tokenIndex = position579, tokenIndex579
				}
			l580:
				if !_rules[rule_]() {
					goto l577
				}
				add(ruleAuthorEmend, position578)
			}
			return true
		l577:
			position, tokenIndex = position577, tokenIndex577
			return false
		},
		/* 79 Author <- <((Author0 / Author1 / Author2 / UnknownAuthor) (_ AuthorEtAl)?)> */
		func() bool {
			position581, tokenIndex581 := position, tokenIndex
			{
				position582 := position
				{
					position583, tokenIndex583 := position, tokenIndex
					if !_rules[ruleAuthor0]() {
						goto l584
					}
					goto l583
				l584:
					position, tokenIndex = position583, tokenIndex583
					if !_rules[ruleAuthor1]() {
						goto l585
					}
					goto l583
				l585:
					position, tokenIndex = position583, tokenIndex583
					if !_rules[ruleAuthor2]() {
						goto l586
					}
					goto l583
				l586:
					position, tokenIndex = position583, tokenIndex583
					if !_rules[ruleUnknownAuthor]() {
						goto l581
					}
				}
			l583:
				{
					position587, tokenIndex587 := position, tokenIndex
					if !_rules[rule_]() {
						goto l587
					}
					if !_rules[ruleAuthorEtAl]() {
						goto l587
					}
					goto l588
				l587:
					position, tokenIndex = position587, tokenIndex587
				}
			l588:
				add(ruleAuthor, position582)
			}
			return true
		l581:
			position, tokenIndex = position581, tokenIndex581
			return false
		},
		/* 80 Author0 <- <(Author2 FiliusFNoSpace)> */
		func() bool {
			position589, tokenIndex589 := position, tokenIndex
			{
				position590 := position
				if !_rules[ruleAuthor2]() {
					goto l589
				}
				if !_rules[ruleFiliusFNoSpace]() {
					goto l589
				}
				add(ruleAuthor0, position590)
			}
			return true
		l589:
			position, tokenIndex = position589, tokenIndex589
			return false
		},
		/* 81 Author1 <- <(Author2 _? (Filius / AuthorSuffix))> */
		func() bool {
			position591, tokenIndex591 := position, tokenIndex
			{
				position592 := position
				if !_rules[ruleAuthor2]() {
					goto l591
				}
				{
					position593, tokenIndex593 := position, tokenIndex
					if !_rules[rule_]() {
						goto l593
					}
					goto l594
				l593:
					position, tokenIndex = position593, tokenIndex593
				}
			l594:
				{
					position595, tokenIndex595 := position, tokenIndex
					if !_rules[ruleFilius]() {
						goto l596
					}
					goto l595
				l596:
					position, tokenIndex = position595, tokenIndex595
					if !_rules[ruleAuthorSuffix]() {
						goto l591
					}
				}
			l595:
				add(ruleAuthor1, position592)
			}
			return true
		l591:
			position, tokenIndex = position591, tokenIndex591
			return false
		},
		/* 82 Author2 <- <(AuthorWord (_? AuthorWord)*)> */
		func() bool {
			position597, tokenIndex597 := position, tokenIndex
			{
				position598 := position
				if !_rules[ruleAuthorWord]() {
					goto l597
				}
			l599:
				{
					position600, tokenIndex600 := position, tokenIndex
					{
						position601, tokenIndex601 := position, tokenIndex
						if !_rules[rule_]() {
							goto l601
						}
						goto l602
					l601:
						position, tokenIndex = position601, tokenIndex601
					}
				l602:
					if !_rules[ruleAuthorWord]() {
						goto l600
					}
					goto l599
				l600:
					position, tokenIndex = position600, tokenIndex600
				}
				add(ruleAuthor2, position598)
			}
			return true
		l597:
			position, tokenIndex = position597, tokenIndex597
			return false
		},
		/* 83 UnknownAuthor <- <('?' / ((('a' 'u' 'c' 't') / ('a' 'n' 'o' 'n')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position603, tokenIndex603 := position, tokenIndex
			{
				position604 := position
				{
					position605, tokenIndex605 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l606
					}
					position++
					goto l605
				l606:
					position, tokenIndex = position605, tokenIndex605
					{
						position607, tokenIndex607 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l608
						}
						position++
						if buffer[position] != rune('u') {
							goto l608
						}
						position++
						if buffer[position] != rune('c') {
							goto l608
						}
						position++
						if buffer[position] != rune('t') {
							goto l608
						}
						position++
						goto l607
					l608:
						position, tokenIndex = position607, tokenIndex607
						if buffer[position] != rune('a') {
							goto l603
						}
						position++
						if buffer[position] != rune('n') {
							goto l603
						}
						position++
						if buffer[position] != rune('o') {
							goto l603
						}
						position++
						if buffer[position] != rune('n') {
							goto l603
						}
						position++
					}
				l607:
					{
						position609, tokenIndex609 := position, tokenIndex
						{
							position611, tokenIndex611 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l610
							}
							position, tokenIndex = position611, tokenIndex611
						}
						goto l609
					l610:
						position, tokenIndex = position609, tokenIndex609
						if buffer[position] != rune('.') {
							goto l603
						}
						position++
					}
				l609:
				}
			l605:
				add(ruleUnknownAuthor, position604)
			}
			return true
		l603:
			position, tokenIndex = position603, tokenIndex603
			return false
		},
		/* 84 AuthorWord <- <(!(('b' / 'B') ('o' / 'O') ('l' / 'L') ('d' / 'D') ':') (AuthorWord2 / AuthorWord3 / AuthorPrefix))> */
		func() bool {
			position612, tokenIndex612 := position, tokenIndex
			{
				position613 := position
				{
					position614, tokenIndex614 := position, tokenIndex
					{
						position615, tokenIndex615 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l616
						}
						position++
						goto l615
					l616:
						position, tokenIndex = position615, tokenIndex615
						if buffer[position] != rune('B') {
							goto l614
						}
						position++
					}
				l615:
					{
						position617, tokenIndex617 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l618
						}
						position++
						goto l617
					l618:
						position, tokenIndex = position617, tokenIndex617
						if buffer[position] != rune('O') {
							goto l614
						}
						position++
					}
				l617:
					{
						position619, tokenIndex619 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l620
						}
						position++
						goto l619
					l620:
						position, tokenIndex = position619, tokenIndex619
						if buffer[position] != rune('L') {
							goto l614
						}
						position++
					}
				l619:
					{
						position621, tokenIndex621 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l622
						}
						position++
						goto l621
					l622:
						position, tokenIndex = position621, tokenIndex621
						if buffer[position] != rune('D') {
							goto l614
						}
						position++
					}
				l621:
					if buffer[position] != rune(':') {
						goto l614
					}
					position++
					goto l612
				l614:
					position, tokenIndex = position614, tokenIndex614
				}
				{
					position623, tokenIndex623 := position, tokenIndex
					if !_rules[ruleAuthorWord2]() {
						goto l624
					}
					goto l623
				l624:
					position, tokenIndex = position623, tokenIndex623
					if !_rules[ruleAuthorWord3]() {
						goto l625
					}
					goto l623
				l625:
					position, tokenIndex = position623, tokenIndex623
					if !_rules[ruleAuthorPrefix]() {
						goto l612
					}
				}
			l623:
				add(ruleAuthorWord, position613)
			}
			return true
		l612:
			position, tokenIndex = position612, tokenIndex612
			return false
		},
		/* 85 AuthorEtAl <- <(('a' 'r' 'g' '.') / ('e' 't' ' ' 'a' 'l' '.' '{' '?' '}') / ((('e' 't') / '&') (' ' 'a' 'l') '.'?))> */
		func() bool {
			position626, tokenIndex626 := position, tokenIndex
			{
				position627 := position
				{
					position628, tokenIndex628 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l629
					}
					position++
					if buffer[position] != rune('r') {
						goto l629
					}
					position++
					if buffer[position] != rune('g') {
						goto l629
					}
					position++
					if buffer[position] != rune('.') {
						goto l629
					}
					position++
					goto l628
				l629:
					position, tokenIndex = position628, tokenIndex628
					if buffer[position] != rune('e') {
						goto l630
					}
					position++
					if buffer[position] != rune('t') {
						goto l630
					}
					position++
					if buffer[position] != rune(' ') {
						goto l630
					}
					position++
					if buffer[position] != rune('a') {
						goto l630
					}
					position++
					if buffer[position] != rune('l') {
						goto l630
					}
					position++
					if buffer[position] != rune('.') {
						goto l630
					}
					position++
					if buffer[position] != rune('{') {
						goto l630
					}
					position++
					if buffer[position] != rune('?') {
						goto l630
					}
					position++
					if buffer[position] != rune('}') {
						goto l630
					}
					position++
					goto l628
				l630:
					position, tokenIndex = position628, tokenIndex628
					{
						position631, tokenIndex631 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l632
						}
						position++
						if buffer[position] != rune('t') {
							goto l632
						}
						position++
						goto l631
					l632:
						position, tokenIndex = position631, tokenIndex631
						if buffer[position] != rune('&') {
							goto l626
						}
						position++
					}
				l631:
					if buffer[position] != rune(' ') {
						goto l626
					}
					position++
					if buffer[position] != rune('a') {
						goto l626
					}
					position++
					if buffer[position] != rune('l') {
						goto l626
					}
					position++
					{
						position633, tokenIndex633 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l633
						}
						position++
						goto l634
					l633:
						position, tokenIndex = position633, tokenIndex633
					}
				l634:
				}
			l628:
				add(ruleAuthorEtAl, position627)
			}
			return true
		l626:
			position, tokenIndex = position626, tokenIndex626
			return false
		},
		/* 86 AuthorWord2 <- <(AuthorWord3 Dash AuthorWordSoft)> */
		func() bool {
			position635, tokenIndex635 := position, tokenIndex
			{
				position636 := position
				if !_rules[ruleAuthorWord3]() {
					goto l635
				}
				if !_rules[ruleDash]() {
					goto l635
				}
				if !_rules[ruleAuthorWordSoft]() {
					goto l635
				}
				add(ruleAuthorWord2, position636)
			}
			return true
		l635:
			position, tokenIndex = position635, tokenIndex635
			return false
		},
		/* 87 AuthorWord3 <- <(AuthorPrefixGlued? (AllCapsAuthorWord / CapAuthorWord) '.'?)> */
		func() bool {
			position637, tokenIndex637 := position, tokenIndex
			{
				position638 := position
				{
					position639, tokenIndex639 := position, tokenIndex
					if !_rules[ruleAuthorPrefixGlued]() {
						goto l639
					}
					goto l640
				l639:
					position, tokenIndex = position639, tokenIndex639
				}
			l640:
				{
					position641, tokenIndex641 := position, tokenIndex
					if !_rules[ruleAllCapsAuthorWord]() {
						goto l642
					}
					goto l641
				l642:
					position, tokenIndex = position641, tokenIndex641
					if !_rules[ruleCapAuthorWord]() {
						goto l637
					}
				}
			l641:
				{
					position643, tokenIndex643 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l643
					}
					position++
					goto l644
				l643:
					position, tokenIndex = position643, tokenIndex643
				}
			l644:
				add(ruleAuthorWord3, position638)
			}
			return true
		l637:
			position, tokenIndex = position637, tokenIndex637
			return false
		},
		/* 88 AuthorWordSoft <- <(((AuthorUpperChar (AuthorUpperChar+ / AuthorLowerChar+)) / AuthorLowerChar+) '.'?)> */
		func() bool {
			position645, tokenIndex645 := position, tokenIndex
			{
				position646 := position
				{
					position647, tokenIndex647 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l648
					}
					{
						position649, tokenIndex649 := position, tokenIndex
						if !_rules[ruleAuthorUpperChar]() {
							goto l650
						}
					l651:
						{
							position652, tokenIndex652 := position, tokenIndex
							if !_rules[ruleAuthorUpperChar]() {
								goto l652
							}
							goto l651
						l652:
							position, tokenIndex = position652, tokenIndex652
						}
						goto l649
					l650:
						position, tokenIndex = position649, tokenIndex649
						if !_rules[ruleAuthorLowerChar]() {
							goto l648
						}
					l653:
						{
							position654, tokenIndex654 := position, tokenIndex
							if !_rules[ruleAuthorLowerChar]() {
								goto l654
							}
							goto l653
						l654:
							position, tokenIndex = position654, tokenIndex654
						}
					}
				l649:
					goto l647
				l648:
					position, tokenIndex = position647, tokenIndex647
					if !_rules[ruleAuthorLowerChar]() {
						goto l645
					}
				l655:
					{
						position656, tokenIndex656 := position, tokenIndex
						if !_rules[ruleAuthorLowerChar]() {
							goto l656
						}
						goto l655
					l656:
						position, tokenIndex = position656, tokenIndex656
					}
				}
			l647:
				{
					position657, tokenIndex657 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l657
					}
					position++
					goto l658
				l657:
					position, tokenIndex = position657, tokenIndex657
				}
			l658:
				add(ruleAuthorWordSoft, position646)
			}
			return true
		l645:
			position, tokenIndex = position645, tokenIndex645
			return false
		},
		/* 89 CapAuthorWord <- <(AuthorUpperChar AuthorLowerChar*)> */
		func() bool {
			position659, tokenIndex659 := position, tokenIndex
			{
				position660 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l659
				}
			l661:
				{
					position662, tokenIndex662 := position, tokenIndex
					if !_rules[ruleAuthorLowerChar]() {
						goto l662
					}
					goto l661
				l662:
					position, tokenIndex = position662, tokenIndex662
				}
				add(ruleCapAuthorWord, position660)
			}
			return true
		l659:
			position, tokenIndex = position659, tokenIndex659
			return false
		},
		/* 90 AllCapsAuthorWord <- <(AuthorUpperChar AuthorUpperChar+)> */
		func() bool {
			position663, tokenIndex663 := position, tokenIndex
			{
				position664 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l663
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l663
				}
			l665:
				{
					position666, tokenIndex666 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l666
					}
					goto l665
				l666:
					position, tokenIndex = position666, tokenIndex666
				}
				add(ruleAllCapsAuthorWord, position664)
			}
			return true
		l663:
			position, tokenIndex = position663, tokenIndex663
			return false
		},
		/* 91 Filius <- <(FiliusF / ('f' 'i' 'l' '.') / ('f' 'i' 'l' 'i' 'u' 's'))> */
		func() bool {
			position667, tokenIndex667 := position, tokenIndex
			{
				position668 := position
				{
					position669, tokenIndex669 := position, tokenIndex
					if !_rules[ruleFiliusF]() {
						goto l670
					}
					goto l669
				l670:
					position, tokenIndex = position669, tokenIndex669
					if buffer[position] != rune('f') {
						goto l671
					}
					position++
					if buffer[position] != rune('i') {
						goto l671
					}
					position++
					if buffer[position] != rune('l') {
						goto l671
					}
					position++
					if buffer[position] != rune('.') {
						goto l671
					}
					position++
					goto l669
				l671:
					position, tokenIndex = position669, tokenIndex669
					if buffer[position] != rune('f') {
						goto l667
					}
					position++
					if buffer[position] != rune('i') {
						goto l667
					}
					position++
					if buffer[position] != rune('l') {
						goto l667
					}
					position++
					if buffer[position] != rune('i') {
						goto l667
					}
					position++
					if buffer[position] != rune('u') {
						goto l667
					}
					position++
					if buffer[position] != rune('s') {
						goto l667
					}
					position++
				}
			l669:
				add(ruleFilius, position668)
			}
			return true
		l667:
			position, tokenIndex = position667, tokenIndex667
			return false
		},
		/* 92 FiliusF <- <('f' '.' !(_ Word))> */
		func() bool {
			position672, tokenIndex672 := position, tokenIndex
			{
				position673 := position
				if buffer[position] != rune('f') {
					goto l672
				}
				position++
				if buffer[position] != rune('.') {
					goto l672
				}
				position++
				{
					position674, tokenIndex674 := position, tokenIndex
					if !_rules[rule_]() {
						goto l674
					}
					if !_rules[ruleWord]() {
						goto l674
					}
					goto l672
				l674:
					position, tokenIndex = position674, tokenIndex674
				}
				add(ruleFiliusF, position673)
			}
			return true
		l672:
			position, tokenIndex = position672, tokenIndex672
			return false
		},
		/* 93 FiliusFNoSpace <- <('f' '.')> */
		func() bool {
			position675, tokenIndex675 := position, tokenIndex
			{
				position676 := position
				if buffer[position] != rune('f') {
					goto l675
				}
				position++
				if buffer[position] != rune('.') {
					goto l675
				}
				position++
				add(ruleFiliusFNoSpace, position676)
			}
			return true
		l675:
			position, tokenIndex = position675, tokenIndex675
			return false
		},
		/* 94 AuthorSuffix <- <('b' 'i' 's')> */
		func() bool {
			position677, tokenIndex677 := position, tokenIndex
			{
				position678 := position
				if buffer[position] != rune('b') {
					goto l677
				}
				position++
				if buffer[position] != rune('i') {
					goto l677
				}
				position++
				if buffer[position] != rune('s') {
					goto l677
				}
				position++
				add(ruleAuthorSuffix, position678)
			}
			return true
		l677:
			position, tokenIndex = position677, tokenIndex677
			return false
		},
		/* 95 AuthorPrefixGlued <- <(('d' / 'O' / 'L' / ('M' 'c') / 'M') Apostrophe)> */
		func() bool {
			position679, tokenIndex679 := position, tokenIndex
			{
				position680 := position
				{
					position681, tokenIndex681 := position, tokenIndex
					if buffer[position] != rune('d') {
						goto l682
					}
					position++
					goto l681
				l682:
					position, tokenIndex = position681, tokenIndex681
					if buffer[position] != rune('O') {
						goto l683
					}
					position++
					goto l681
				l683:
					position, tokenIndex = position681, tokenIndex681
					if buffer[position] != rune('L') {
						goto l684
					}
					position++
					goto l681
				l684:
					position, tokenIndex = position681, tokenIndex681
					if buffer[position] != rune('M') {
						goto l685
					}
					position++
					if buffer[position] != rune('c') {
						goto l685
					}
					position++
					goto l681
				l685:
					position, tokenIndex = position681, tokenIndex681
					if buffer[position] != rune('M') {
						goto l679
					}
					position++
				}
			l681:
				if !_rules[ruleApostrophe]() {
					goto l679
				}
				add(ruleAuthorPrefixGlued, position680)
			}
			return true
		l679:
			position, tokenIndex = position679, tokenIndex679
			return false
		},
		/* 96 AuthorPrefix <- <(AuthorPrefix1 / AuthorPrefix2)> */
		func() bool {
			position686, tokenIndex686 := position, tokenIndex
			{
				position687 := position
				{
					position688, tokenIndex688 := position, tokenIndex
					if !_rules[ruleAuthorPrefix1]() {
						goto l689
					}
					goto l688
				l689:
					position, tokenIndex = position688, tokenIndex688
					if !_rules[ruleAuthorPrefix2]() {
						goto l686
					}
				}
			l688:
				add(ruleAuthorPrefix, position687)
			}
			return true
		l686:
			position, tokenIndex = position686, tokenIndex686
			return false
		},
		/* 97 AuthorPrefix2 <- <(('v' '.' (_? ('d' '.'))?) / (Apostrophe 't'))> */
		func() bool {
			position690, tokenIndex690 := position, tokenIndex
			{
				position691 := position
				{
					position692, tokenIndex692 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l693
					}
					position++
					if buffer[position] != rune('.') {
						goto l693
					}
					position++
					{
						position694, tokenIndex694 := position, tokenIndex
						{
							position696, tokenIndex696 := position, tokenIndex
							if !_rules[rule_]() {
								goto l696
							}
							goto l697
						l696:
							position, tokenIndex = position696, tokenIndex696
						}
					l697:
						if buffer[position] != rune('d') {
							goto l694
						}
						position++
						if buffer[position] != rune('.') {
							goto l694
						}
						position++
						goto l695
					l694:
						position, tokenIndex = position694, tokenIndex694
					}
				l695:
					goto l692
				l693:
					position, tokenIndex = position692, tokenIndex692
					if !_rules[ruleApostrophe]() {
						goto l690
					}
					if buffer[position] != rune('t') {
						goto l690
					}
					position++
				}
			l692:
				add(ruleAuthorPrefix2, position691)
			}
			return true
		l690:
			position, tokenIndex = position690, tokenIndex690
			return false
		},
		/* 98 AuthorPrefix1 <- <((('a' 'b') / ('a' 'f') / ('b' 'i' 's') / ('d' 'a') / ('d' 'e' 'r') / ('d' 'e' 's') / ('d' 'e' 'n') / ('d' 'e' 'l') / ('d' 'e' 'l' 'l' 'a') / ('d' 'e' 'l' 'a') / ('d' 'e') / ('d' 'i') / ('d' 'u') / ('e' 'l') / ('l' 'a') / ('l' 'e') / ('t' 'e' 'r') / ('v' 'a' 'n') / ('d' Apostrophe) / ('i' 'n' Apostrophe 't') / ('z' 'u' 'r') / ('z' 'u') / ('v' 'o' 'n' (_ (('d' '.') / ('d' 'e' 'm')))?) / ('v' (_ 'd')?)) &_)> */
		func() bool {
			position698, tokenIndex698 := position, tokenIndex
			{
				position699 := position
				{
					position700, tokenIndex700 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l701
					}
					position++
					if buffer[position] != rune('b') {
						goto l701
					}
					position++
					goto l700
				l701:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('a') {
						goto l702
					}
					position++
					if buffer[position] != rune('f') {
						goto l702
					}
					position++
					goto l700
				l702:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('b') {
						goto l703
					}
					position++
					if buffer[position] != rune('i') {
						goto l703
					}
					position++
					if buffer[position] != rune('s') {
						goto l703
					}
					position++
					goto l700
				l703:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('d') {
						goto l704
					}
					position++
					if buffer[position] != rune('a') {
						goto l704
					}
					position++
					goto l700
				l704:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('d') {
						goto l705
					}
					position++
					if buffer[position] != rune('e') {
						goto l705
					}
					position++
					if buffer[position] != rune('r') {
						goto l705
					}
					position++
					goto l700
				l705:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('d') {
						goto l706
					}
					position++
					if buffer[position] != rune('e') {
						goto l706
					}
					position++
					if buffer[position] != rune('s') {
						goto l706
					}
					position++
					goto l700
				l706:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('d') {
						goto l707
					}
					position++
					if buffer[position] != rune('e') {
						goto l707
					}
					position++
					if buffer[position] != rune('n') {
						goto l707
					}
					position++
					goto l700
				l707:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('d') {
						goto l708
					}
					position++
					if buffer[position] != rune('e') {
						goto l708
					}
					position++
					if buffer[position] != rune('l') {
						goto l708
					}
					position++
					goto l700
				l708:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('d') {
						goto l709
					}
					position++
					if buffer[position] != rune('e') {
						goto l709
					}
					position++
					if buffer[position] != rune('l') {
						goto l709
					}
					position++
					if buffer[position] != rune('l') {
						goto l709
					}
					position++
					if buffer[position] != rune('a') {
						goto l709
					}
					position++
					goto l700
				l709:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('d') {
						goto l710
					}
					position++
					if buffer[position] != rune('e') {
						goto l710
					}
					position++
					if buffer[position] != rune('l') {
						goto l710
					}
					position++
					if buffer[position] != rune('a') {
						goto l710
					}
					position++
					goto l700
				l710:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('d') {
						goto l711
					}
					position++
					if buffer[position] != rune('e') {
						goto l711
					}
					position++
					goto l700
				l711:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('d') {
						goto l712
					}
					position++
					if buffer[position] != rune('i') {
						goto l712
					}
					position++
					goto l700
				l712:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('d') {
						goto l713
					}
					position++
					if buffer[position] != rune('u') {
						goto l713
					}
					position++
					goto l700
				l713:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('e') {
						goto l714
					}
					position++
					if buffer[position] != rune('l') {
						goto l714
					}
					position++
					goto l700
				l714:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('l') {
						goto l715
					}
					position++
					if buffer[position] != rune('a') {
						goto l715
					}
					position++
					goto l700
				l715:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('l') {
						goto l716
					}
					position++
					if buffer[position] != rune('e') {
						goto l716
					}
					position++
					goto l700
				l716:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('t') {
						goto l717
					}
					position++
					if buffer[position] != rune('e') {
						goto l717
					}
					position++
					if buffer[position] != rune('r') {
						goto l717
					}
					position++
					goto l700
				l717:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('v') {
						goto l718
					}
					position++
					if buffer[position] != rune('a') {
						goto l718
					}
					position++
					if buffer[position] != rune('n') {
						goto l718
					}
					position++
					goto l700
				l718:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('d') {
						goto l719
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l719
					}
					goto l700
				l719:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('i') {
						goto l720
					}
					position++
					if buffer[position] != rune('n') {
						goto l720
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l720
					}
					if buffer[position] != rune('t') {
						goto l720
					}
					position++
					goto l700
				l720:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('z') {
						goto l721
					}
					position++
					if buffer[position] != rune('u') {
						goto l721
					}
					position++
					if buffer[position] != rune('r') {
						goto l721
					}
					position++
					goto l700
				l721:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('z') {
						goto l722
					}
					position++
					if buffer[position] != rune('u') {
						goto l722
					}
					position++
					goto l700
				l722:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('v') {
						goto l723
					}
					position++
					if buffer[position] != rune('o') {
						goto l723
					}
					position++
					if buffer[position] != rune('n') {
						goto l723
					}
					position++
					{
						position724, tokenIndex724 := position, tokenIndex
						if !_rules[rule_]() {
							goto l724
						}
						{
							position726, tokenIndex726 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l727
							}
							position++
							if buffer[position] != rune('.') {
								goto l727
							}
							position++
							goto l726
						l727:
							position, tokenIndex = position726, tokenIndex726
							if buffer[position] != rune('d') {
								goto l724
							}
							position++
							if buffer[position] != rune('e') {
								goto l724
							}
							position++
							if buffer[position] != rune('m') {
								goto l724
							}
							position++
						}
					l726:
						goto l725
					l724:
						position, tokenIndex = position724, tokenIndex724
					}
				l725:
					goto l700
				l723:
					position, tokenIndex = position700, tokenIndex700
					if buffer[position] != rune('v') {
						goto l698
					}
					position++
					{
						position728, tokenIndex728 := position, tokenIndex
						if !_rules[rule_]() {
							goto l728
						}
						if buffer[position] != rune('d') {
							goto l728
						}
						position++
						goto l729
					l728:
						position, tokenIndex = position728, tokenIndex728
					}
				l729:
				}
			l700:
				{
					position730, tokenIndex730 := position, tokenIndex
					if !_rules[rule_]() {
						goto l698
					}
					position, tokenIndex = position730, tokenIndex730
				}
				add(ruleAuthorPrefix1, position699)
			}
			return true
		l698:
			position, tokenIndex = position698, tokenIndex698
			return false
		},
		/* 99 AuthorUpperChar <- <(UpperASCII / MiscodedChar / ('À' / 'Á' / 'Â' / 'Ã' / 'Ä' / 'Å' / 'Æ' / 'Ç' / 'È' / 'É' / 'Ê' / 'Ë' / 'Ì' / 'Í' / 'Î' / 'Ï' / 'Ð' / 'Ñ' / 'Ò' / 'Ó' / 'Ô' / 'Õ' / 'Ö' / 'Ø' / 'Ù' / 'Ú' / 'Û' / 'Ü' / 'Ý' / 'Ć' / 'Č' / 'Ď' / 'İ' / 'Ķ' / 'Ĺ' / 'ĺ' / 'Ľ' / 'ľ' / 'Ł' / 'ł' / 'Ņ' / 'Ō' / 'Ő' / 'Œ' / 'Ř' / 'Ś' / 'Ŝ' / 'Ş' / 'Š' / 'Ÿ' / 'Ź' / 'Ż' / 'Ž' / 'ƒ' / 'Ǿ' / 'Ș' / 'Ț'))> */
		func() bool {
			position731, tokenIndex731 := position, tokenIndex
			{
				position732 := position
				{
					position733, tokenIndex733 := position, tokenIndex
					if !_rules[ruleUpperASCII]() {
						goto l734
					}
					goto l733
				l734:
					position, tokenIndex = position733, tokenIndex733
					if !_rules[ruleMiscodedChar]() {
						goto l735
					}
					goto l733
				l735:
					position, tokenIndex = position733, tokenIndex733
					{
						position736, tokenIndex736 := position, tokenIndex
						if buffer[position] != rune('À') {
							goto l737
						}
						position++
						goto l736
					l737:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Á') {
							goto l738
						}
						position++
						goto l736
					l738:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Â') {
							goto l739
						}
						position++
						goto l736
					l739:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ã') {
							goto l740
						}
						position++
						goto l736
					l740:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ä') {
							goto l741
						}
						position++
						goto l736
					l741:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Å') {
							goto l742
						}
						position++
						goto l736
					l742:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Æ') {
							goto l743
						}
						position++
						goto l736
					l743:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ç') {
							goto l744
						}
						position++
						goto l736
					l744:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('È') {
							goto l745
						}
						position++
						goto l736
					l745:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('É') {
							goto l746
						}
						position++
						goto l736
					l746:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ê') {
							goto l747
						}
						position++
						goto l736
					l747:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ë') {
							goto l748
						}
						position++
						goto l736
					l748:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ì') {
							goto l749
						}
						position++
						goto l736
					l749:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Í') {
							goto l750
						}
						position++
						goto l736
					l750:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Î') {
							goto l751
						}
						position++
						goto l736
					l751:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ï') {
							goto l752
						}
						position++
						goto l736
					l752:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ð') {
							goto l753
						}
						position++
						goto l736
					l753:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ñ') {
							goto l754
						}
						position++
						goto l736
					l754:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ò') {
							goto l755
						}
						position++
						goto l736
					l755:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ó') {
							goto l756
						}
						position++
						goto l736
					l756:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ô') {
							goto l757
						}
						position++
						goto l736
					l757:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Õ') {
							goto l758
						}
						position++
						goto l736
					l758:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ö') {
							goto l759
						}
						position++
						goto l736
					l759:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ø') {
							goto l760
						}
						position++
						goto l736
					l760:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ù') {
							goto l761
						}
						position++
						goto l736
					l761:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ú') {
							goto l762
						}
						position++
						goto l736
					l762:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Û') {
							goto l763
						}
						position++
						goto l736
					l763:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ü') {
							goto l764
						}
						position++
						goto l736
					l764:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ý') {
							goto l765
						}
						position++
						goto l736
					l765:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ć') {
							goto l766
						}
						position++
						goto l736
					l766:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Č') {
							goto l767
						}
						position++
						goto l736
					l767:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ď') {
							goto l768
						}
						position++
						goto l736
					l768:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('İ') {
							goto l769
						}
						position++
						goto l736
					l769:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ķ') {
							goto l770
						}
						position++
						goto l736
					l770:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ĺ') {
							goto l771
						}
						position++
						goto l736
					l771:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('ĺ') {
							goto l772
						}
						position++
						goto l736
					l772:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ľ') {
							goto l773
						}
						position++
						goto l736
					l773:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('ľ') {
							goto l774
						}
						position++
						goto l736
					l774:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ł') {
							goto l775
						}
						position++
						goto l736
					l775:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('ł') {
							goto l776
						}
						position++
						goto l736
					l776:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ņ') {
							goto l777
						}
						position++
						goto l736
					l777:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ō') {
							goto l778
						}
						position++
						goto l736
					l778:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ő') {
							goto l779
						}
						position++
						goto l736
					l779:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Œ') {
							goto l780
						}
						position++
						goto l736
					l780:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ř') {
							goto l781
						}
						position++
						goto l736
					l781:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ś') {
							goto l782
						}
						position++
						goto l736
					l782:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ŝ') {
							goto l783
						}
						position++
						goto l736
					l783:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ş') {
							goto l784
						}
						position++
						goto l736
					l784:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Š') {
							goto l785
						}
						position++
						goto l736
					l785:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ÿ') {
							goto l786
						}
						position++
						goto l736
					l786:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ź') {
							goto l787
						}
						position++
						goto l736
					l787:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ż') {
							goto l788
						}
						position++
						goto l736
					l788:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ž') {
							goto l789
						}
						position++
						goto l736
					l789:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('ƒ') {
							goto l790
						}
						position++
						goto l736
					l790:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ǿ') {
							goto l791
						}
						position++
						goto l736
					l791:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ș') {
							goto l792
						}
						position++
						goto l736
					l792:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('Ț') {
							goto l731
						}
						position++
					}
				l736:
				}
			l733:
				add(ruleAuthorUpperChar, position732)
			}
			return true
		l731:
			position, tokenIndex = position731, tokenIndex731
			return false
		},
		/* 100 AuthorLowerChar <- <(LowerASCII / MiscodedChar / ('à' / 'á' / 'â' / 'ã' / 'ä' / 'å' / 'æ' / 'ç' / 'è' / 'é' / 'ê' / 'ë' / 'ì' / 'í' / 'î' / 'ï' / 'ð' / 'ñ' / 'ò' / 'ó' / 'ó' / 'ô' / 'õ' / 'ö' / 'ø' / 'ù' / 'ú' / 'û' / 'ü' / 'ý' / 'ÿ' / 'ā' / 'ă' / 'ą' / 'ć' / 'ĉ' / 'č' / 'ď' / 'đ' / '\'' / 'ē' / 'ĕ' / 'ė' / 'ę' / 'ě' / 'ğ' / 'ī' / 'ĭ' / 'İ' / 'ı' / 'ĺ' / 'ľ' / 'ł' / 'ń' / 'ņ' / 'ň' / 'ŏ' / 'ő' / 'œ' / 'ŕ' / 'ř' / 'ś' / 'ş' / 'š' / 'ţ' / 'ť' / 'ũ' / 'ū' / 'ŭ' / 'ů' / 'ű' / 'ź' / 'ż' / 'ž' / 'ſ' / 'ǎ' / 'ǔ' / 'ǧ' / 'ș' / 'ț' / 'ȳ' / 'ß'))> */
		func() bool {
			position793, tokenIndex793 := position, tokenIndex
			{
				position794 := position
				{
					position795, tokenIndex795 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l796
					}
					goto l795
				l796:
					position, tokenIndex = position795, tokenIndex795
					if !_rules[ruleMiscodedChar]() {
						goto l797
					}
					goto l795
				l797:
					position, tokenIndex = position795, tokenIndex795
					{
						position798, tokenIndex798 := position, tokenIndex
						if buffer[position] != rune('à') {
							goto l799
						}
						position++
						goto l798
					l799:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('á') {
							goto l800
						}
						position++
						goto l798
					l800:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('â') {
							goto l801
						}
						position++
						goto l798
					l801:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ã') {
							goto l802
						}
						position++
						goto l798
					l802:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ä') {
							goto l803
						}
						position++
						goto l798
					l803:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('å') {
							goto l804
						}
						position++
						goto l798
					l804:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('æ') {
							goto l805
						}
						position++
						goto l798
					l805:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ç') {
							goto l806
						}
						position++
						goto l798
					l806:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('è') {
							goto l807
						}
						position++
						goto l798
					l807:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('é') {
							goto l808
						}
						position++
						goto l798
					l808:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ê') {
							goto l809
						}
						position++
						goto l798
					l809:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ë') {
							goto l810
						}
						position++
						goto l798
					l810:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ì') {
							goto l811
						}
						position++
						goto l798
					l811:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('í') {
							goto l812
						}
						position++
						goto l798
					l812:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('î') {
							goto l813
						}
						position++
						goto l798
					l813:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ï') {
							goto l814
						}
						position++
						goto l798
					l814:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ð') {
							goto l815
						}
						position++
						goto l798
					l815:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ñ') {
							goto l816
						}
						position++
						goto l798
					l816:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ò') {
							goto l817
						}
						position++
						goto l798
					l817:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ó') {
							goto l818
						}
						position++
						goto l798
					l818:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ó') {
							goto l819
						}
						position++
						goto l798
					l819:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ô') {
							goto l820
						}
						position++
						goto l798
					l820:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('õ') {
							goto l821
						}
						position++
						goto l798
					l821:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ö') {
							goto l822
						}
						position++
						goto l798
					l822:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ø') {
							goto l823
						}
						position++
						goto l798
					l823:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ù') {
							goto l824
						}
						position++
						goto l798
					l824:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ú') {
							goto l825
						}
						position++
						goto l798
					l825:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('û') {
							goto l826
						}
						position++
						goto l798
					l826:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ü') {
							goto l827
						}
						position++
						goto l798
					l827:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ý') {
							goto l828
						}
						position++
						goto l798
					l828:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ÿ') {
							goto l829
						}
						position++
						goto l798
					l829:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ā') {
							goto l830
						}
						position++
						goto l798
					l830:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ă') {
							goto l831
						}
						position++
						goto l798
					l831:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ą') {
							goto l832
						}
						position++
						goto l798
					l832:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ć') {
							goto l833
						}
						position++
						goto l798
					l833:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ĉ') {
							goto l834
						}
						position++
						goto l798
					l834:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('č') {
							goto l835
						}
						position++
						goto l798
					l835:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ď') {
							goto l836
						}
						position++
						goto l798
					l836:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('đ') {
							goto l837
						}
						position++
						goto l798
					l837:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('\'') {
							goto l838
						}
						position++
						goto l798
					l838:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ē') {
							goto l839
						}
						position++
						goto l798
					l839:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ĕ') {
							goto l840
						}
						position++
						goto l798
					l840:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ė') {
							goto l841
						}
						position++
						goto l798
					l841:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ę') {
							goto l842
						}
						position++
						goto l798
					l842:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ě') {
							goto l843
						}
						position++
						goto l798
					l843:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ğ') {
							goto l844
						}
						position++
						goto l798
					l844:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ī') {
							goto l845
						}
						position++
						goto l798
					l845:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ĭ') {
							goto l846
						}
						position++
						goto l798
					l846:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('İ') {
							goto l847
						}
						position++
						goto l798
					l847:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ı') {
							goto l848
						}
						position++
						goto l798
					l848:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ĺ') {
							goto l849
						}
						position++
						goto l798
					l849:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ľ') {
							goto l850
						}
						position++
						goto l798
					l850:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ł') {
							goto l851
						}
						position++
						goto l798
					l851:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ń') {
							goto l852
						}
						position++
						goto l798
					l852:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ņ') {
							goto l853
						}
						position++
						goto l798
					l853:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ň') {
							goto l854
						}
						position++
						goto l798
					l854:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ŏ') {
							goto l855
						}
						position++
						goto l798
					l855:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ő') {
							goto l856
						}
						position++
						goto l798
					l856:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('œ') {
							goto l857
						}
						position++
						goto l798
					l857:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ŕ') {
							goto l858
						}
						position++
						goto l798
					l858:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ř') {
							goto l859
						}
						position++
						goto l798
					l859:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ś') {
							goto l860
						}
						position++
						goto l798
					l860:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ş') {
							goto l861
						}
						position++
						goto l798
					l861:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('š') {
							goto l862
						}
						position++
						goto l798
					l862:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ţ') {
							goto l863
						}
						position++
						goto l798
					l863:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ť') {
							goto l864
						}
						position++
						goto l798
					l864:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ũ') {
							goto l865
						}
						position++
						goto l798
					l865:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ū') {
							goto l866
						}
						position++
						goto l798
					l866:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ŭ') {
							goto l867
						}
						position++
						goto l798
					l867:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ů') {
							goto l868
						}
						position++
						goto l798
					l868:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ű') {
							goto l869
						}
						position++
						goto l798
					l869:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ź') {
							goto l870
						}
						position++
						goto l798
					l870:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ż') {
							goto l871
						}
						position++
						goto l798
					l871:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ž') {
							goto l872
						}
						position++
						goto l798
					l872:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ſ') {
							goto l873
						}
						position++
						goto l798
					l873:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ǎ') {
							goto l874
						}
						position++
						goto l798
					l874:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ǔ') {
							goto l875
						}
						position++
						goto l798
					l875:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ǧ') {
							goto l876
						}
						position++
						goto l798
					l876:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ș') {
							goto l877
						}
						position++
						goto l798
					l877:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ț') {
							goto l878
						}
						position++
						goto l798
					l878:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ȳ') {
							goto l879
						}
						position++
						goto l798
					l879:
						position, tokenIndex = position798, tokenIndex798
						if buffer[position] != rune('ß') {
							goto l793
						}
						position++
					}
				l798:
				}
			l795:
				add(ruleAuthorLowerChar, position794)
			}
			return true
		l793:
			position, tokenIndex = position793, tokenIndex793
			return false
		},
		/* 101 Year <- <(YearRange / YearApprox / YearWithParens / YearWithPage / YearWithDot / YearWithChar / YearNum)> */
		func() bool {
			position880, tokenIndex880 := position, tokenIndex
			{
				position881 := position
				{
					position882, tokenIndex882 := position, tokenIndex
					if !_rules[ruleYearRange]() {
						goto l883
					}
					goto l882
				l883:
					position, tokenIndex = position882, tokenIndex882
					if !_rules[ruleYearApprox]() {
						goto l884
					}
					goto l882
				l884:
					position, tokenIndex = position882, tokenIndex882
					if !_rules[ruleYearWithParens]() {
						goto l885
					}
					goto l882
				l885:
					position, tokenIndex = position882, tokenIndex882
					if !_rules[ruleYearWithPage]() {
						goto l886
					}
					goto l882
				l886:
					position, tokenIndex = position882, tokenIndex882
					if !_rules[ruleYearWithDot]() {
						goto l887
					}
					goto l882
				l887:
					position, tokenIndex = position882, tokenIndex882
					if !_rules[ruleYearWithChar]() {
						goto l888
					}
					goto l882
				l888:
					position, tokenIndex = position882, tokenIndex882
					if !_rules[ruleYearNum]() {
						goto l880
					}
				}
			l882:
				add(ruleYear, position881)
			}
			return true
		l880:
			position, tokenIndex = position880, tokenIndex880
			return false
		},
		/* 102 YearRange <- <(YearNum (Dash / Slash) (Nums+ ('a' / 'b' / 'c' / 'd' / 'e' / 'f' / 'g' / 'h' / 'i' / 'j' / 'k' / 'l' / 'm' / 'n' / 'o' / 'p' / 'q' / 'r' / 's' / 't' / 'u' / 'v' / 'w' / 'x' / 'y' / 'z' / '?')*))> */
		func() bool {
			position889, tokenIndex889 := position, tokenIndex
			{
				position890 := position
				if !_rules[ruleYearNum]() {
					goto l889
				}
				{
					position891, tokenIndex891 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l892
					}
					goto l891
				l892:
					position, tokenIndex = position891, tokenIndex891
					if !_rules[ruleSlash]() {
						goto l889
					}
				}
			l891:
				if !_rules[ruleNums]() {
					goto l889
				}
			l893:
				{
					position894, tokenIndex894 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l894
					}
					goto l893
				l894:
					position, tokenIndex = position894, tokenIndex894
				}
			l895:
				{
					position896, tokenIndex896 := position, tokenIndex
					{
						position897, tokenIndex897 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l898
						}
						position++
						goto l897
					l898:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('b') {
							goto l899
						}
						position++
						goto l897
					l899:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('c') {
							goto l900
						}
						position++
						goto l897
					l900:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('d') {
							goto l901
						}
						position++
						goto l897
					l901:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('e') {
							goto l902
						}
						position++
						goto l897
					l902:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('f') {
							goto l903
						}
						position++
						goto l897
					l903:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('g') {
							goto l904
						}
						position++
						goto l897
					l904:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('h') {
							goto l905
						}
						position++
						goto l897
					l905:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('i') {
							goto l906
						}
						position++
						goto l897
					l906:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('j') {
							goto l907
						}
						position++
						goto l897
					l907:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('k') {
							goto l908
						}
						position++
						goto l897
					l908:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('l') {
							goto l909
						}
						position++
						goto l897
					l909:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('m') {
							goto l910
						}
						position++
						goto l897
					l910:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('n') {
							goto l911
						}
						position++
						goto l897
					l911:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('o') {
							goto l912
						}
						position++
						goto l897
					l912:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('p') {
							goto l913
						}
						position++
						goto l897
					l913:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('q') {
							goto l914
						}
						position++
						goto l897
					l914:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('r') {
							goto l915
						}
						position++
						goto l897
					l915:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('s') {
							goto l916
						}
						position++
						goto l897
					l916:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('t') {
							goto l917
						}
						position++
						goto l897
					l917:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('u') {
							goto l918
						}
						position++
						goto l897
					l918:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('v') {
							goto l919
						}
						position++
						goto l897
					l919:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('w') {
							goto l920
						}
						position++
						goto l897
					l920:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('x') {
							goto l921
						}
						position++
						goto l897
					l921:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('y') {
							goto l922
						}
						position++
						goto l897
					l922:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('z') {
							goto l923
						}
						position++
						goto l897
					l923:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('?') {
							goto l896
						}
						position++
					}
				l897:
					goto l895
				l896:
					position, tokenIndex = position896, tokenIndex896
				}
				add(ruleYearRange, position890)
			}
			return true
		l889:
			position, tokenIndex = position889, tokenIndex889
			return false
		},
		/* 103 YearWithDot <- <(YearNum '.')> */
		func() bool {
			position924, tokenIndex924 := position, tokenIndex
			{
				position925 := position
				if !_rules[ruleYearNum]() {
					goto l924
				}
				if buffer[position] != rune('.') {
					goto l924
				}
				position++
				add(ruleYearWithDot, position925)
			}
			return true
		l924:
			position, tokenIndex = position924, tokenIndex924
			return false
		},
		/* 104 YearApprox <- <('[' _? YearNum _? ']')> */
		func() bool {
			position926, tokenIndex926 := position, tokenIndex
			{
				position927 := position
				if buffer[position] != rune('[') {
					goto l926
				}
				position++
				{
					position928, tokenIndex928 := position, tokenIndex
					if !_rules[rule_]() {
						goto l928
					}
					goto l929
				l928:
					position, tokenIndex = position928, tokenIndex928
				}
			l929:
				if !_rules[ruleYearNum]() {
					goto l926
				}
				{
					position930, tokenIndex930 := position, tokenIndex
					if !_rules[rule_]() {
						goto l930
					}
					goto l931
				l930:
					position, tokenIndex = position930, tokenIndex930
				}
			l931:
				if buffer[position] != rune(']') {
					goto l926
				}
				position++
				add(ruleYearApprox, position927)
			}
			return true
		l926:
			position, tokenIndex = position926, tokenIndex926
			return false
		},
		/* 105 YearWithPage <- <((YearWithChar / YearNum) _? ':' _? Nums+)> */
		func() bool {
			position932, tokenIndex932 := position, tokenIndex
			{
				position933 := position
				{
					position934, tokenIndex934 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l935
					}
					goto l934
				l935:
					position, tokenIndex = position934, tokenIndex934
					if !_rules[ruleYearNum]() {
						goto l932
					}
				}
			l934:
				{
					position936, tokenIndex936 := position, tokenIndex
					if !_rules[rule_]() {
						goto l936
					}
					goto l937
				l936:
					position, tokenIndex = position936, tokenIndex936
				}
			l937:
				if buffer[position] != rune(':') {
					goto l932
				}
				position++
				{
					position938, tokenIndex938 := position, tokenIndex
					if !_rules[rule_]() {
						goto l938
					}
					goto l939
				l938:
					position, tokenIndex = position938, tokenIndex938
				}
			l939:
				if !_rules[ruleNums]() {
					goto l932
				}
			l940:
				{
					position941, tokenIndex941 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l941
					}
					goto l940
				l941:
					position, tokenIndex = position941, tokenIndex941
				}
				add(ruleYearWithPage, position933)
			}
			return true
		l932:
			position, tokenIndex = position932, tokenIndex932
			return false
		},
		/* 106 YearWithParens <- <('(' (YearWithChar / YearNum) ')')> */
		func() bool {
			position942, tokenIndex942 := position, tokenIndex
			{
				position943 := position
				if buffer[position] != rune('(') {
					goto l942
				}
				position++
				{
					position944, tokenIndex944 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l945
					}
					goto l944
				l945:
					position, tokenIndex = position944, tokenIndex944
					if !_rules[ruleYearNum]() {
						goto l942
					}
				}
			l944:
				if buffer[position] != rune(')') {
					goto l942
				}
				position++
				add(ruleYearWithParens, position943)
			}
			return true
		l942:
			position, tokenIndex = position942, tokenIndex942
			return false
		},
		/* 107 YearWithChar <- <(YearNum LowerASCII)> */
		func() bool {
			position946, tokenIndex946 := position, tokenIndex
			{
				position947 := position
				if !_rules[ruleYearNum]() {
					goto l946
				}
				if !_rules[ruleLowerASCII]() {
					goto l946
				}
				add(ruleYearWithChar, position947)
			}
			return true
		l946:
			position, tokenIndex = position946, tokenIndex946
			return false
		},
		/* 108 YearNum <- <(('1' / '2') ('0' / '7' / '8' / '9') Nums (Nums / '?') '?'*)> */
		func() bool {
			position948, tokenIndex948 := position, tokenIndex
			{
				position949 := position
				{
					position950, tokenIndex950 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l951
					}
					position++
					goto l950
				l951:
					position, tokenIndex = position950, tokenIndex950
					if buffer[position] != rune('2') {
						goto l948
					}
					position++
				}
			l950:
				{
					position952, tokenIndex952 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l953
					}
					position++
					goto l952
				l953:
					position, tokenIndex = position952, tokenIndex952
					if buffer[position] != rune('7') {
						goto l954
					}
					position++
					goto l952
				l954:
					position, tokenIndex = position952, tokenIndex952
					if buffer[position] != rune('8') {
						goto l955
					}
					position++
					goto l952
				l955:
					position, tokenIndex = position952, tokenIndex952
					if buffer[position] != rune('9') {
						goto l948
					}
					position++
				}
			l952:
				if !_rules[ruleNums]() {
					goto l948
				}
				{
					position956, tokenIndex956 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l957
					}
					goto l956
				l957:
					position, tokenIndex = position956, tokenIndex956
					if buffer[position] != rune('?') {
						goto l948
					}
					position++
				}
			l956:
			l958:
				{
					position959, tokenIndex959 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l959
					}
					position++
					goto l958
				l959:
					position, tokenIndex = position959, tokenIndex959
				}
				add(ruleYearNum, position949)
			}
			return true
		l948:
			position, tokenIndex = position948, tokenIndex948
			return false
		},
		/* 109 NameUpperChar <- <(UpperChar / UpperCharExtended)> */
		func() bool {
			position960, tokenIndex960 := position, tokenIndex
			{
				position961 := position
				{
					position962, tokenIndex962 := position, tokenIndex
					if !_rules[ruleUpperChar]() {
						goto l963
					}
					goto l962
				l963:
					position, tokenIndex = position962, tokenIndex962
					if !_rules[ruleUpperCharExtended]() {
						goto l960
					}
				}
			l962:
				add(ruleNameUpperChar, position961)
			}
			return true
		l960:
			position, tokenIndex = position960, tokenIndex960
			return false
		},
		/* 110 UpperCharExtended <- <('Æ' / 'Œ' / 'Ö')> */
		func() bool {
			position964, tokenIndex964 := position, tokenIndex
			{
				position965 := position
				{
					position966, tokenIndex966 := position, tokenIndex
					if buffer[position] != rune('Æ') {
						goto l967
					}
					position++
					goto l966
				l967:
					position, tokenIndex = position966, tokenIndex966
					if buffer[position] != rune('Œ') {
						goto l968
					}
					position++
					goto l966
				l968:
					position, tokenIndex = position966, tokenIndex966
					if buffer[position] != rune('Ö') {
						goto l964
					}
					position++
				}
			l966:
				add(ruleUpperCharExtended, position965)
			}
			return true
		l964:
			position, tokenIndex = position964, tokenIndex964
			return false
		},
		/* 111 UpperChar <- <UpperASCII> */
		func() bool {
			position969, tokenIndex969 := position, tokenIndex
			{
				position970 := position
				if !_rules[ruleUpperASCII]() {
					goto l969
				}
				add(ruleUpperChar, position970)
			}
			return true
		l969:
			position, tokenIndex = position969, tokenIndex969
			return false
		},
		/* 112 NameLowerChar <- <(LowerChar / LowerCharExtended / MiscodedChar)> */
		func() bool {
			position971, tokenIndex971 := position, tokenIndex
			{
				position972 := position
				{
					position973, tokenIndex973 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l974
					}
					goto l973
				l974:
					position, tokenIndex = position973, tokenIndex973
					if !_rules[ruleLowerCharExtended]() {
						goto l975
					}
					goto l973
				l975:
					position, tokenIndex = position973, tokenIndex973
					if !_rules[ruleMiscodedChar]() {
						goto l971
					}
				}
			l973:
				add(ruleNameLowerChar, position972)
			}
			return true
		l971:
			position, tokenIndex = position971, tokenIndex971
			return false
		},
		/* 113 MiscodedChar <- <'�'> */
		func() bool {
			position976, tokenIndex976 := position, tokenIndex
			{
				position977 := position
				if buffer[position] != rune('�') {
					goto l976
				}
				position++
				add(ruleMiscodedChar, position977)
			}
			return true
		l976:
			position, tokenIndex = position976, tokenIndex976
			return false
		},
		/* 114 LowerCharExtended <- <('æ' / 'œ' / 'à' / 'â' / 'å' / 'ã' / 'ä' / 'á' / 'ç' / 'č' / 'é' / 'è' / 'ë' / 'í' / 'ì' / 'ï' / 'ň' / 'ñ' / 'ñ' / 'ó' / 'ò' / 'ô' / 'ø' / 'õ' / 'ö' / 'ú' / 'ù' / 'ü' / 'ŕ' / 'ř' / 'ŗ' / 'ſ' / 'š' / 'š' / 'ş' / 'ß' / 'ž')> */
		func() bool {
			position978, tokenIndex978 := position, tokenIndex
			{
				position979 := position
				{
					position980, tokenIndex980 := position, tokenIndex
					if buffer[position] != rune('æ') {
						goto l981
					}
					position++
					goto l980
				l981:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('œ') {
						goto l982
					}
					position++
					goto l980
				l982:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('à') {
						goto l983
					}
					position++
					goto l980
				l983:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('â') {
						goto l984
					}
					position++
					goto l980
				l984:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('å') {
						goto l985
					}
					position++
					goto l980
				l985:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ã') {
						goto l986
					}
					position++
					goto l980
				l986:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ä') {
						goto l987
					}
					position++
					goto l980
				l987:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('á') {
						goto l988
					}
					position++
					goto l980
				l988:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ç') {
						goto l989
					}
					position++
					goto l980
				l989:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('č') {
						goto l990
					}
					position++
					goto l980
				l990:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('é') {
						goto l991
					}
					position++
					goto l980
				l991:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('è') {
						goto l992
					}
					position++
					goto l980
				l992:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ë') {
						goto l993
					}
					position++
					goto l980
				l993:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('í') {
						goto l994
					}
					position++
					goto l980
				l994:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ì') {
						goto l995
					}
					position++
					goto l980
				l995:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ï') {
						goto l996
					}
					position++
					goto l980
				l996:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ň') {
						goto l997
					}
					position++
					goto l980
				l997:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ñ') {
						goto l998
					}
					position++
					goto l980
				l998:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ñ') {
						goto l999
					}
					position++
					goto l980
				l999:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ó') {
						goto l1000
					}
					position++
					goto l980
				l1000:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ò') {
						goto l1001
					}
					position++
					goto l980
				l1001:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ô') {
						goto l1002
					}
					position++
					goto l980
				l1002:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ø') {
						goto l1003
					}
					position++
					goto l980
				l1003:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('õ') {
						goto l1004
					}
					position++
					goto l980
				l1004:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ö') {
						goto l1005
					}
					position++
					goto l980
				l1005:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ú') {
						goto l1006
					}
					position++
					goto l980
				l1006:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ù') {
						goto l1007
					}
					position++
					goto l980
				l1007:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ü') {
						goto l1008
					}
					position++
					goto l980
				l1008:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ŕ') {
						goto l1009
					}
					position++
					goto l980
				l1009:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ř') {
						goto l1010
					}
					position++
					goto l980
				l1010:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ŗ') {
						goto l1011
					}
					position++
					goto l980
				l1011:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ſ') {
						goto l1012
					}
					position++
					goto l980
				l1012:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('š') {
						goto l1013
					}
					position++
					goto l980
				l1013:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('š') {
						goto l1014
					}
					position++
					goto l980
				l1014:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ş') {
						goto l1015
					}
					position++
					goto l980
				l1015:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ß') {
						goto l1016
					}
					position++
					goto l980
				l1016:
					position, tokenIndex = position980, tokenIndex980
					if buffer[position] != rune('ž') {
						goto l978
					}
					position++
				}
			l980:
				add(ruleLowerCharExtended, position979)
			}
			return true
		l978:
			position, tokenIndex = position978, tokenIndex978
			return false
		},
		/* 115 LowerChar <- <LowerASCII> */
		func() bool {
			position1017, tokenIndex1017 := position, tokenIndex
			{
				position1018 := position
				if !_rules[ruleLowerASCII]() {
					goto l1017
				}
				add(ruleLowerChar, position1018)
			}
			return true
		l1017:
			position, tokenIndex = position1017, tokenIndex1017
			return false
		},
		/* 116 SpaceCharEOI <- <(_ / !.)> */
		func() bool {
			position1019, tokenIndex1019 := position, tokenIndex
			{
				position1020 := position
				{
					position1021, tokenIndex1021 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1022
					}
					goto l1021
				l1022:
					position, tokenIndex = position1021, tokenIndex1021
					{
						position1023, tokenIndex1023 := position, tokenIndex
						if !matchDot() {
							goto l1023
						}
						goto l1019
					l1023:
						position, tokenIndex = position1023, tokenIndex1023
					}
				}
			l1021:
				add(ruleSpaceCharEOI, position1020)
			}
			return true
		l1019:
			position, tokenIndex = position1019, tokenIndex1019
			return false
		},
		/* 117 Nums <- <[0-9]> */
		func() bool {
			position1024, tokenIndex1024 := position, tokenIndex
			{
				position1025 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l1024
				}
				position++
				add(ruleNums, position1025)
			}
			return true
		l1024:
			position, tokenIndex = position1024, tokenIndex1024
			return false
		},
		/* 118 LowerGreek <- <[α-ω]> */
		func() bool {
			position1026, tokenIndex1026 := position, tokenIndex
			{
				position1027 := position
				if c := buffer[position]; c < rune('α') || c > rune('ω') {
					goto l1026
				}
				position++
				add(ruleLowerGreek, position1027)
			}
			return true
		l1026:
			position, tokenIndex = position1026, tokenIndex1026
			return false
		},
		/* 119 LowerASCII <- <[a-z]> */
		func() bool {
			position1028, tokenIndex1028 := position, tokenIndex
			{
				position1029 := position
				if c := buffer[position]; c < rune('a') || c > rune('z') {
					goto l1028
				}
				position++
				add(ruleLowerASCII, position1029)
			}
			return true
		l1028:
			position, tokenIndex = position1028, tokenIndex1028
			return false
		},
		/* 120 UpperASCII <- <[A-Z]> */
		func() bool {
			position1030, tokenIndex1030 := position, tokenIndex
			{
				position1031 := position
				if c := buffer[position]; c < rune('A') || c > rune('Z') {
					goto l1030
				}
				position++
				add(ruleUpperASCII, position1031)
			}
			return true
		l1030:
			position, tokenIndex = position1030, tokenIndex1030
			return false
		},
		/* 121 Apostrophe <- <(ApostrOther / ApostrASCII)> */
		func() bool {
			position1032, tokenIndex1032 := position, tokenIndex
			{
				position1033 := position
				{
					position1034, tokenIndex1034 := position, tokenIndex
					if !_rules[ruleApostrOther]() {
						goto l1035
					}
					goto l1034
				l1035:
					position, tokenIndex = position1034, tokenIndex1034
					if !_rules[ruleApostrASCII]() {
						goto l1032
					}
				}
			l1034:
				add(ruleApostrophe, position1033)
			}
			return true
		l1032:
			position, tokenIndex = position1032, tokenIndex1032
			return false
		},
		/* 122 ApostrASCII <- <'\''> */
		func() bool {
			position1036, tokenIndex1036 := position, tokenIndex
			{
				position1037 := position
				if buffer[position] != rune('\'') {
					goto l1036
				}
				position++
				add(ruleApostrASCII, position1037)
			}
			return true
		l1036:
			position, tokenIndex = position1036, tokenIndex1036
			return false
		},
		/* 123 ApostrOther <- <('‘' / '’')> */
		func() bool {
			position1038, tokenIndex1038 := position, tokenIndex
			{
				position1039 := position
				{
					position1040, tokenIndex1040 := position, tokenIndex
					if buffer[position] != rune('‘') {
						goto l1041
					}
					position++
					goto l1040
				l1041:
					position, tokenIndex = position1040, tokenIndex1040
					if buffer[position] != rune('’') {
						goto l1038
					}
					position++
				}
			l1040:
				add(ruleApostrOther, position1039)
			}
			return true
		l1038:
			position, tokenIndex = position1038, tokenIndex1038
			return false
		},
		/* 124 Dash <- <'-'> */
		func() bool {
			position1042, tokenIndex1042 := position, tokenIndex
			{
				position1043 := position
				if buffer[position] != rune('-') {
					goto l1042
				}
				position++
				add(ruleDash, position1043)
			}
			return true
		l1042:
			position, tokenIndex = position1042, tokenIndex1042
			return false
		},
		/* 125 Slash <- <'/'> */
		func() bool {
			position1044, tokenIndex1044 := position, tokenIndex
			{
				position1045 := position
				if buffer[position] != rune('/') {
					goto l1044
				}
				position++
				add(ruleSlash, position1045)
			}
			return true
		l1044:
			position, tokenIndex = position1044, tokenIndex1044
			return false
		},
		/* 126 _ <- <(MultipleSpace / SingleSpace)> */
		func() bool {
			position1046, tokenIndex1046 := position, tokenIndex
			{
				position1047 := position
				{
					position1048, tokenIndex1048 := position, tokenIndex
					if !_rules[ruleMultipleSpace]() {
						goto l1049
					}
					goto l1048
				l1049:
					position, tokenIndex = position1048, tokenIndex1048
					if !_rules[ruleSingleSpace]() {
						goto l1046
					}
				}
			l1048:
				add(rule_, position1047)
			}
			return true
		l1046:
			position, tokenIndex = position1046, tokenIndex1046
			return false
		},
		/* 127 MultipleSpace <- <(SingleSpace SingleSpace+)> */
		func() bool {
			position1050, tokenIndex1050 := position, tokenIndex
			{
				position1051 := position
				if !_rules[ruleSingleSpace]() {
					goto l1050
				}
				if !_rules[ruleSingleSpace]() {
					goto l1050
				}
			l1052:
				{
					position1053, tokenIndex1053 := position, tokenIndex
					if !_rules[ruleSingleSpace]() {
						goto l1053
					}
					goto l1052
				l1053:
					position, tokenIndex = position1053, tokenIndex1053
				}
				add(ruleMultipleSpace, position1051)
			}
			return true
		l1050:
			position, tokenIndex = position1050, tokenIndex1050
			return false
		},
		/* 128 SingleSpace <- <(' ' / OtherSpace)> */
		func() bool {
			position1054, tokenIndex1054 := position, tokenIndex
			{
				position1055 := position
				{
					position1056, tokenIndex1056 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l1057
					}
					position++
					goto l1056
				l1057:
					position, tokenIndex = position1056, tokenIndex1056
					if !_rules[ruleOtherSpace]() {
						goto l1054
					}
				}
			l1056:
				add(ruleSingleSpace, position1055)
			}
			return true
		l1054:
			position, tokenIndex = position1054, tokenIndex1054
			return false
		},
		/* 129 OtherSpace <- <('\u3000' / '\u00a0' / '\t' / '\r' / '\n' / '\f' / '\v')> */
		func() bool {
			position1058, tokenIndex1058 := position, tokenIndex
			{
				position1059 := position
				{
					position1060, tokenIndex1060 := position, tokenIndex
					if buffer[position] != rune('\u3000') {
						goto l1061
					}
					position++
					goto l1060
				l1061:
					position, tokenIndex = position1060, tokenIndex1060
					if buffer[position] != rune('\u00a0') {
						goto l1062
					}
					position++
					goto l1060
				l1062:
					position, tokenIndex = position1060, tokenIndex1060
					if buffer[position] != rune('\t') {
						goto l1063
					}
					position++
					goto l1060
				l1063:
					position, tokenIndex = position1060, tokenIndex1060
					if buffer[position] != rune('\r') {
						goto l1064
					}
					position++
					goto l1060
				l1064:
					position, tokenIndex = position1060, tokenIndex1060
					if buffer[position] != rune('\n') {
						goto l1065
					}
					position++
					goto l1060
				l1065:
					position, tokenIndex = position1060, tokenIndex1060
					if buffer[position] != rune('\f') {
						goto l1066
					}
					position++
					goto l1060
				l1066:
					position, tokenIndex = position1060, tokenIndex1060
					if buffer[position] != rune('\v') {
						goto l1058
					}
					position++
				}
			l1060:
				add(ruleOtherSpace, position1059)
			}
			return true
		l1058:
			position, tokenIndex = position1058, tokenIndex1058
			return false
		},
		/* 130 END <- <!.> */
		func() bool {
			position1067, tokenIndex1067 := position, tokenIndex
			{
				position1068 := position
				{
					position1069, tokenIndex1069 := position, tokenIndex
					if !matchDot() {
						goto l1069
					}
					goto l1067
				l1069:
					position, tokenIndex = position1069, tokenIndex1069
				}
				add(ruleEND, position1068)
			}
			return true
		l1067:
			position, tokenIndex = position1067, tokenIndex1067
			return false
		},
	}
	p.rules = _rules
	return nil
}
