package parser

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleSciName
	ruleTail
	ruleName
	ruleHybridFormula
	ruleHybridFormulaFull
	ruleHybridFormulaPart
	ruleNamedHybrid
	ruleNamedSpeciesHybrid
	ruleNamedGenusHybrid
	ruleCandidatusName
	ruleCandidatus
	ruleSingleName
	ruleNameUninomial
	ruleNameApprox
	ruleNameComp
	ruleNameSpecies
	ruleGenusWord
	ruleInfraspGroup
	ruleInfraspEpithet
	ruleCultivarWordGroup
	ruleCultivar
	ruleRankCultivar
	ruleNotHybridChar
	ruleCultivarRecursive
	ruleCultivarApostrophe
	ruleSpeciesEpithet
	ruleComparison
	ruleRank
	ruleRankNotho
	ruleRankOtherUncommon
	ruleRankOther
	ruleRankVar
	ruleRankForma
	ruleRankSsp
	ruleRankAgamo
	ruleSubgenusOrSuperspecies
	ruleSubgenus
	ruleSubgenus2
	ruleSubgenus1
	ruleUninomialCombo
	ruleUninomialCombo1
	ruleUninomialCombo2
	ruleRankUninomial
	ruleRankUninomialPlain
	ruleRankUninomialNotho
	ruleUninomial
	ruleUninomialWord
	ruleAbbrSubgenus
	ruleAbbrGenus
	ruleCapWord
	ruleCapWord1
	ruleCapWordWithDash
	ruleUpperAfterDash
	ruleLowerAfterDash
	ruleTwoLetterGenus
	ruleWord
	ruleWord1
	ruleWordStartsWithDigit
	ruleWord2
	ruleWordApostr
	ruleWord4
	ruleMultiDashedWord
	ruleHybridChar
	ruleApproxNameIgnored
	ruleApproximation
	ruleAuthorship
	ruleAuthorshipCombo
	ruleOriginalAuthorship
	ruleOriginalAuthorshipComb
	ruleCombinationAuthorship
	ruleBasionymAuthorshipMissingParens
	ruleMissingParensStart
	ruleMissingParensEnd
	ruleBasionymAuthorshipYearMisformed
	ruleBasionymAuthorship
	ruleBasionymAuthorship1
	ruleBasionymAuthorship2Parens
	ruleAuthorsGroup
	ruleAuthorsTeam
	ruleAuthorSep
	ruleAuthorSep1
	ruleAuthorSep2
	ruleAuthorSepSpanish
	ruleAuthorEx
	ruleAuthorEmend
	ruleAuthor
	ruleAuthor0
	ruleAuthor1
	ruleAuthor2
	ruleUnknownAuthor
	ruleAuthorWord
	ruleAuthorEtAl
	ruleAuthorWord2
	ruleAuthorWord3
	ruleAuthorDashInitials
	ruleAuthorWordSoft
	ruleCapAuthorWord
	ruleAllCapsAuthorWord
	ruleFilius
	ruleFiliusF
	ruleFiliusFNoSpace
	ruleAuthorSuffix
	ruleAuthorPrefixGlued
	ruleAuthorPrefix
	ruleAuthorPrefix2
	ruleAuthorPrefix1
	ruleAuthorUpperChar
	ruleAuthorLowerChar
	ruleYear
	ruleYearRange
	ruleYearWithDot
	ruleYearApprox
	ruleYearWithPage
	ruleYearWithParens
	ruleYearWithChar
	ruleYearNum
	ruleNameUpperChar
	ruleUpperCharExtended
	ruleUpperChar
	ruleNameLowerChar
	ruleMiscodedChar
	ruleLowerCharExtended
	ruleLowerChar
	ruleSpaceCharEOI
	ruleNums
	ruleLowerGreek
	ruleLowerASCII
	ruleUpperASCII
	ruleApostrophe
	ruleApostrASCII
	ruleApostrOther
	ruleDash
	ruleSlash
	rule_
	ruleMultipleSpace
	ruleSingleSpace
	ruleOtherSpace
	ruleEND
)

var rul3s = [...]string{
	"Unknown",
	"SciName",
	"Tail",
	"Name",
	"HybridFormula",
	"HybridFormulaFull",
	"HybridFormulaPart",
	"NamedHybrid",
	"NamedSpeciesHybrid",
	"NamedGenusHybrid",
	"CandidatusName",
	"Candidatus",
	"SingleName",
	"NameUninomial",
	"NameApprox",
	"NameComp",
	"NameSpecies",
	"GenusWord",
	"InfraspGroup",
	"InfraspEpithet",
	"CultivarWordGroup",
	"Cultivar",
	"RankCultivar",
	"NotHybridChar",
	"CultivarRecursive",
	"CultivarApostrophe",
	"SpeciesEpithet",
	"Comparison",
	"Rank",
	"RankNotho",
	"RankOtherUncommon",
	"RankOther",
	"RankVar",
	"RankForma",
	"RankSsp",
	"RankAgamo",
	"SubgenusOrSuperspecies",
	"Subgenus",
	"Subgenus2",
	"Subgenus1",
	"UninomialCombo",
	"UninomialCombo1",
	"UninomialCombo2",
	"RankUninomial",
	"RankUninomialPlain",
	"RankUninomialNotho",
	"Uninomial",
	"UninomialWord",
	"AbbrSubgenus",
	"AbbrGenus",
	"CapWord",
	"CapWord1",
	"CapWordWithDash",
	"UpperAfterDash",
	"LowerAfterDash",
	"TwoLetterGenus",
	"Word",
	"Word1",
	"WordStartsWithDigit",
	"Word2",
	"WordApostr",
	"Word4",
	"MultiDashedWord",
	"HybridChar",
	"ApproxNameIgnored",
	"Approximation",
	"Authorship",
	"AuthorshipCombo",
	"OriginalAuthorship",
	"OriginalAuthorshipComb",
	"CombinationAuthorship",
	"BasionymAuthorshipMissingParens",
	"MissingParensStart",
	"MissingParensEnd",
	"BasionymAuthorshipYearMisformed",
	"BasionymAuthorship",
	"BasionymAuthorship1",
	"BasionymAuthorship2Parens",
	"AuthorsGroup",
	"AuthorsTeam",
	"AuthorSep",
	"AuthorSep1",
	"AuthorSep2",
	"AuthorSepSpanish",
	"AuthorEx",
	"AuthorEmend",
	"Author",
	"Author0",
	"Author1",
	"Author2",
	"UnknownAuthor",
	"AuthorWord",
	"AuthorEtAl",
	"AuthorWord2",
	"AuthorWord3",
	"AuthorDashInitials",
	"AuthorWordSoft",
	"CapAuthorWord",
	"AllCapsAuthorWord",
	"Filius",
	"FiliusF",
	"FiliusFNoSpace",
	"AuthorSuffix",
	"AuthorPrefixGlued",
	"AuthorPrefix",
	"AuthorPrefix2",
	"AuthorPrefix1",
	"AuthorUpperChar",
	"AuthorLowerChar",
	"Year",
	"YearRange",
	"YearWithDot",
	"YearApprox",
	"YearWithPage",
	"YearWithParens",
	"YearWithChar",
	"YearNum",
	"NameUpperChar",
	"UpperCharExtended",
	"UpperChar",
	"NameLowerChar",
	"MiscodedChar",
	"LowerCharExtended",
	"LowerChar",
	"SpaceCharEOI",
	"Nums",
	"LowerGreek",
	"LowerASCII",
	"UpperASCII",
	"Apostrophe",
	"ApostrASCII",
	"ApostrOther",
	"Dash",
	"Slash",
	"_",
	"MultipleSpace",
	"SingleSpace",
	"OtherSpace",
	"END",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type Engine struct {
	baseEngine

	Buffer string
	buffer []rune
	rules  [139]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *Engine) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *Engine) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *Engine
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *Engine) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *Engine) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *Engine) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func Pretty(pretty bool) func(*Engine) error {
	return func(p *Engine) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*Engine) error {
	return func(p *Engine) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *Engine) Init(options ...func(*Engine) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 SciName <- <(_? Name Tail END)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				{
					position2, tokenIndex2 := position, tokenIndex
					if !_rules[rule_]() {
						goto l2
					}
					goto l3
				l2:
					position, tokenIndex = position2, tokenIndex2
				}
			l3:
				if !_rules[ruleName]() {
					goto l0
				}
				if !_rules[ruleTail]() {
					goto l0
				}
				if !_rules[ruleEND]() {
					goto l0
				}
				add(ruleSciName, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Tail <- <((_ / ';' / ',') .*)?> */
		func() bool {
			{
				position5 := position
				{
					position6, tokenIndex6 := position, tokenIndex
					{
						position8, tokenIndex8 := position, tokenIndex
						if !_rules[rule_]() {
							goto l9
						}
						goto l8
					l9:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(';') {
							goto l10
						}
						position++
						goto l8
					l10:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(',') {
							goto l6
						}
						position++
					}
				l8:
				l11:
					{
						position12, tokenIndex12 := position, tokenIndex
						if !matchDot() {
							goto l12
						}
						goto l11
					l12:
						position, tokenIndex = position12, tokenIndex12
					}
					goto l7
				l6:
					position, tokenIndex = position6, tokenIndex6
				}
			l7:
				add(ruleTail, position5)
			}
			return true
		},
		/* 2 Name <- <(NamedHybrid / HybridFormula / CandidatusName / SingleName)> */
		func() bool {
			position13, tokenIndex13 := position, tokenIndex
			{
				position14 := position
				{
					position15, tokenIndex15 := position, tokenIndex
					if !_rules[ruleNamedHybrid]() {
						goto l16
					}
					goto l15
				l16:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleHybridFormula]() {
						goto l17
					}
					goto l15
				l17:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleCandidatusName]() {
						goto l18
					}
					goto l15
				l18:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleSingleName]() {
						goto l13
					}
				}
			l15:
				add(ruleName, position14)
			}
			return true
		l13:
			position, tokenIndex = position13, tokenIndex13
			return false
		},
		/* 3 HybridFormula <- <(SingleName (_ (HybridFormulaPart / HybridFormulaFull))+)> */
		func() bool {
			position19, tokenIndex19 := position, tokenIndex
			{
				position20 := position
				if !_rules[ruleSingleName]() {
					goto l19
				}
				if !_rules[rule_]() {
					goto l19
				}
				{
					position23, tokenIndex23 := position, tokenIndex
					if !_rules[ruleHybridFormulaPart]() {
						goto l24
					}
					goto l23
				l24:
					position, tokenIndex = position23, tokenIndex23
					if !_rules[ruleHybridFormulaFull]() {
						goto l19
					}
				}
			l23:
			l21:
				{
					position22, tokenIndex22 := position, tokenIndex
					if !_rules[rule_]() {
						goto l22
					}
					{
						position25, tokenIndex25 := position, tokenIndex
						if !_rules[ruleHybridFormulaPart]() {
							goto l26
						}
						goto l25
					l26:
						position, tokenIndex = position25, tokenIndex25
						if !_rules[ruleHybridFormulaFull]() {
							goto l22
						}
					}
				l25:
					goto l21
				l22:
					position, tokenIndex = position22, tokenIndex22
				}
				add(ruleHybridFormula, position20)
			}
			return true
		l19:
			position, tokenIndex = position19, tokenIndex19
			return false
		},
		/* 4 HybridFormulaFull <- <(HybridChar (_ SingleName)?)> */
		func() bool {
			position27, tokenIndex27 := position, tokenIndex
			{
				position28 := position
				if !_rules[ruleHybridChar]() {
					goto l27
				}
				{
					position29, tokenIndex29 := position, tokenIndex
					if !_rules[rule_]() {
						goto l29
					}
					if !_rules[ruleSingleName]() {
						goto l29
					}
					goto l30
				l29:
					position, tokenIndex = position29, tokenIndex29
				}
			l30:
				add(ruleHybridFormulaFull, position28)
			}
			return true
		l27:
			position, tokenIndex = position27, tokenIndex27
			return false
		},
		/* 5 HybridFormulaPart <- <(HybridChar _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position31, tokenIndex31 := position, tokenIndex
			{
				position32 := position
				if !_rules[ruleHybridChar]() {
					goto l31
				}
				if !_rules[rule_]() {
					goto l31
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l31
				}
				{
					position33, tokenIndex33 := position, tokenIndex
					if !_rules[rule_]() {
						goto l33
					}
					if !_rules[ruleInfraspGroup]() {
						goto l33
					}
					goto l34
				l33:
					position, tokenIndex = position33, tokenIndex33
				}
			l34:
				add(ruleHybridFormulaPart, position32)
			}
			return true
		l31:
			position, tokenIndex = position31, tokenIndex31
			return false
		},
		/* 6 NamedHybrid <- <(NamedGenusHybrid / NamedSpeciesHybrid)> */
		func() bool {
			position35, tokenIndex35 := position, tokenIndex
			{
				position36 := position
				{
					position37, tokenIndex37 := position, tokenIndex
					if !_rules[ruleNamedGenusHybrid]() {
						goto l38
					}
					goto l37
				l38:
					position, tokenIndex = position37, tokenIndex37
					if !_rules[ruleNamedSpeciesHybrid]() {
						goto l35
					}
				}
			l37:
				add(ruleNamedHybrid, position36)
			}
			return true
		l35:
			position, tokenIndex = position35, tokenIndex35
			return false
		},
		/* 7 NamedSpeciesHybrid <- <(GenusWord (_ Subgenus)? (_ Comparison)? _ HybridChar _? SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position39, tokenIndex39 := position, tokenIndex
			{
				position40 := position
				if !_rules[ruleGenusWord]() {
					goto l39
				}
				{
					position41, tokenIndex41 := position, tokenIndex
					if !_rules[rule_]() {
						goto l41
					}
					if !_rules[ruleSubgenus]() {
						goto l41
					}
					goto l42
				l41:
					position, tokenIndex = position41, tokenIndex41
				}
			l42:
				{
					position43, tokenIndex43 := position, tokenIndex
					if !_rules[rule_]() {
						goto l43
					}
					if !_rules[ruleComparison]() {
						goto l43
					}
					goto l44
				l43:
					position, tokenIndex = position43, tokenIndex43
				}
			l44:
				if !_rules[rule_]() {
					goto l39
				}
				if !_rules[ruleHybridChar]() {
					goto l39
				}
				{
					position45, tokenIndex45 := position, tokenIndex
					if !_rules[rule_]() {
						goto l45
					}
					goto l46
				l45:
					position, tokenIndex = position45, tokenIndex45
				}
			l46:
				if !_rules[ruleSpeciesEpithet]() {
					goto l39
				}
				{
					position47, tokenIndex47 := position, tokenIndex
					if !_rules[rule_]() {
						goto l47
					}
					if !_rules[ruleInfraspGroup]() {
						goto l47
					}
					goto l48
				l47:
					position, tokenIndex = position47, tokenIndex47
				}
			l48:
				add(ruleNamedSpeciesHybrid, position40)
			}
			return true
		l39:
			position, tokenIndex = position39, tokenIndex39
			return false
		},
		/* 8 NamedGenusHybrid <- <(HybridChar _? SingleName)> */
		func() bool {
			position49, tokenIndex49 := position, tokenIndex
			{
				position50 := position
				if !_rules[ruleHybridChar]() {
					goto l49
				}
				{
					position51, tokenIndex51 := position, tokenIndex
					if !_rules[rule_]() {
						goto l51
					}
					goto l52
				l51:
					position, tokenIndex = position51, tokenIndex51
				}
			l52:
				if !_rules[ruleSingleName]() {
					goto l49
				}
				add(ruleNamedGenusHybrid, position50)
			}
			return true
		l49:
			position, tokenIndex = position49, tokenIndex49
			return false
		},
		/* 9 CandidatusName <- <(Candidatus _ SingleName)> */
		func() bool {
			position53, tokenIndex53 := position, tokenIndex
			{
				position54 := position
				if !_rules[ruleCandidatus]() {
					goto l53
				}
				if !_rules[rule_]() {
					goto l53
				}
				if !_rules[ruleSingleName]() {
					goto l53
				}
				add(ruleCandidatusName, position54)
			}
			return true
		l53:
			position, tokenIndex = position53, tokenIndex53
			return false
		},
		/* 10 Candidatus <- <('C' 'a' 'n' 'd' 'i' 'd' 'a' 't' 'u' 's')> */
		func() bool {
			position55, tokenIndex55 := position, tokenIndex
			{
				position56 := position
				if buffer[position] != rune('C') {
					goto l55
				}
				position++
				if buffer[position] != rune('a') {
					goto l55
				}
				position++
				if buffer[position] != rune('n') {
					goto l55
				}
				position++
				if buffer[position] != rune('d') {
					goto l55
				}
				position++
				if buffer[position] != rune('i') {
					goto l55
				}
				position++
				if buffer[position] != rune('d') {
					goto l55
				}
				position++
				if buffer[position] != rune('a') {
					goto l55
				}
				position++
				if buffer[position] != rune('t') {
					goto l55
				}
				position++
				if buffer[position] != rune('u') {
					goto l55
				}
				position++
				if buffer[position] != rune('s') {
					goto l55
				}
				position++
				add(ruleCandidatus, position56)
			}
			return true
		l55:
			position, tokenIndex = position55, tokenIndex55
			return false
		},
		/* 11 SingleName <- <(NameComp / NameApprox / NameSpecies / NameUninomial)> */
		func() bool {
			position57, tokenIndex57 := position, tokenIndex
			{
				position58 := position
				{
					position59, tokenIndex59 := position, tokenIndex
					if !_rules[ruleNameComp]() {
						goto l60
					}
					goto l59
				l60:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleNameApprox]() {
						goto l61
					}
					goto l59
				l61:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleNameSpecies]() {
						goto l62
					}
					goto l59
				l62:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleNameUninomial]() {
						goto l57
					}
				}
			l59:
				add(ruleSingleName, position58)
			}
			return true
		l57:
			position, tokenIndex = position57, tokenIndex57
			return false
		},
		/* 12 NameUninomial <- <((UninomialCombo / Uninomial) (_ CultivarWordGroup)?)> */
		func() bool {
			position63, tokenIndex63 := position, tokenIndex
			{
				position64 := position
				{
					position65, tokenIndex65 := position, tokenIndex
					if !_rules[ruleUninomialCombo]() {
						goto l66
					}
					goto l65
				l66:
					position, tokenIndex = position65, tokenIndex65
					if !_rules[ruleUninomial]() {
						goto l63
					}
				}
			l65:
				{
					position67, tokenIndex67 := position, tokenIndex
					if !_rules[rule_]() {
						goto l67
					}
					if !_rules[ruleCultivarWordGroup]() {
						goto l67
					}
					goto l68
				l67:
					position, tokenIndex = position67, tokenIndex67
				}
			l68:
				add(ruleNameUninomial, position64)
			}
			return true
		l63:
			position, tokenIndex = position63, tokenIndex63
			return false
		},
		/* 13 NameApprox <- <(GenusWord (_ SpeciesEpithet)? _ Approximation ApproxNameIgnored)> */
		func() bool {
			position69, tokenIndex69 := position, tokenIndex
			{
				position70 := position
				if !_rules[ruleGenusWord]() {
					goto l69
				}
				{
					position71, tokenIndex71 := position, tokenIndex
					if !_rules[rule_]() {
						goto l71
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l71
					}
					goto l72
				l71:
					position, tokenIndex = position71, tokenIndex71
				}
			l72:
				if !_rules[rule_]() {
					goto l69
				}
				if !_rules[ruleApproximation]() {
					goto l69
				}
				if !_rules[ruleApproxNameIgnored]() {
					goto l69
				}
				add(ruleNameApprox, position70)
			}
			return true
		l69:
			position, tokenIndex = position69, tokenIndex69
			return false
		},
		/* 14 NameComp <- <(GenusWord _ Comparison (_ SpeciesEpithet)?)> */
		func() bool {
			position73, tokenIndex73 := position, tokenIndex
			{
				position74 := position
				if !_rules[ruleGenusWord]() {
					goto l73
				}
				if !_rules[rule_]() {
					goto l73
				}
				if !_rules[ruleComparison]() {
					goto l73
				}
				{
					position75, tokenIndex75 := position, tokenIndex
					if !_rules[rule_]() {
						goto l75
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l75
					}
					goto l76
				l75:
					position, tokenIndex = position75, tokenIndex75
				}
			l76:
				add(ruleNameComp, position74)
			}
			return true
		l73:
			position, tokenIndex = position73, tokenIndex73
			return false
		},
		/* 15 NameSpecies <- <(GenusWord (_? (Subgenus / SubgenusOrSuperspecies))? _ SpeciesEpithet (_ InfraspGroup)? (_ CultivarWordGroup)?)> */
		func() bool {
			position77, tokenIndex77 := position, tokenIndex
			{
				position78 := position
				if !_rules[ruleGenusWord]() {
					goto l77
				}
				{
					position79, tokenIndex79 := position, tokenIndex
					{
						position81, tokenIndex81 := position, tokenIndex
						if !_rules[rule_]() {
							goto l81
						}
						goto l82
					l81:
						position, tokenIndex = position81, tokenIndex81
					}
				l82:
					{
						position83, tokenIndex83 := position, tokenIndex
						if !_rules[ruleSubgenus]() {
							goto l84
						}
						goto l83
					l84:
						position, tokenIndex = position83, tokenIndex83
						if !_rules[ruleSubgenusOrSuperspecies]() {
							goto l79
						}
					}
				l83:
					goto l80
				l79:
					position, tokenIndex = position79, tokenIndex79
				}
			l80:
				if !_rules[rule_]() {
					goto l77
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l77
				}
				{
					position85, tokenIndex85 := position, tokenIndex
					if !_rules[rule_]() {
						goto l85
					}
					if !_rules[ruleInfraspGroup]() {
						goto l85
					}
					goto l86
				l85:
					position, tokenIndex = position85, tokenIndex85
				}
			l86:
				{
					position87, tokenIndex87 := position, tokenIndex
					if !_rules[rule_]() {
						goto l87
					}
					if !_rules[ruleCultivarWordGroup]() {
						goto l87
					}
					goto l88
				l87:
					position, tokenIndex = position87, tokenIndex87
				}
			l88:
				add(ruleNameSpecies, position78)
			}
			return true
		l77:
			position, tokenIndex = position77, tokenIndex77
			return false
		},
		/* 16 GenusWord <- <((AbbrGenus / UninomialWord) !(_ AuthorWord))> */
		func() bool {
			position89, tokenIndex89 := position, tokenIndex
			{
				position90 := position
				{
					position91, tokenIndex91 := position, tokenIndex
					if !_rules[ruleAbbrGenus]() {
						goto l92
					}
					goto l91
				l92:
					position, tokenIndex = position91, tokenIndex91
					if !_rules[ruleUninomialWord]() {
						goto l89
					}
				}
			l91:
				{
					position93, tokenIndex93 := position, tokenIndex
					if !_rules[rule_]() {
						goto l93
					}
					if !_rules[ruleAuthorWord]() {
						goto l93
					}
					goto l89
				l93:
					position, tokenIndex = position93, tokenIndex93
				}
				add(ruleGenusWord, position90)
			}
			return true
		l89:
			position, tokenIndex = position89, tokenIndex89
			return false
		},
		/* 17 InfraspGroup <- <(InfraspEpithet (_ InfraspEpithet)? (_ InfraspEpithet)?)> */
		func() bool {
			position94, tokenIndex94 := position, tokenIndex
			{
				position95 := position
				if !_rules[ruleInfraspEpithet]() {
					goto l94
				}
				{
					position96, tokenIndex96 := position, tokenIndex
					if !_rules[rule_]() {
						goto l96
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l96
					}
					goto l97
				l96:
					position, tokenIndex = position96, tokenIndex96
				}
			l97:
				{
					position98, tokenIndex98 := position, tokenIndex
					if !_rules[rule_]() {
						goto l98
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l98
					}
					goto l99
				l98:
					position, tokenIndex = position98, tokenIndex98
				}
			l99:
				add(ruleInfraspGroup, position95)
			}
			return true
		l94:
			position, tokenIndex = position94, tokenIndex94
			return false
		},
		/* 18 InfraspEpithet <- <((Rank _?)? !AuthorEx Word (_ Authorship)?)> */
		func() bool {
			position100, tokenIndex100 := position, tokenIndex
			{
				position101 := position
				{
					position102, tokenIndex102 := position, tokenIndex
					if !_rules[ruleRank]() {
						goto l102
					}
					{
						position104, tokenIndex104 := position, tokenIndex
						if !_rules[rule_]() {
							goto l104
						}
						goto l105
					l104:
						position, tokenIndex = position104, tokenIndex104
					}
				l105:
					goto l103
				l102:
					position, tokenIndex = position102, tokenIndex102
				}
			l103:
				{
					position106, tokenIndex106 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l106
					}
					goto l100
				l106:
					position, tokenIndex = position106, tokenIndex106
				}
				if !_rules[ruleWord]() {
					goto l100
				}
				{
					position107, tokenIndex107 := position, tokenIndex
					if !_rules[rule_]() {
						goto l107
					}
					if !_rules[ruleAuthorship]() {
						goto l107
					}
					goto l108
				l107:
					position, tokenIndex = position107, tokenIndex107
				}
			l108:
				add(ruleInfraspEpithet, position101)
			}
			return true
		l100:
			position, tokenIndex = position100, tokenIndex100
			return false
		},
		/* 19 CultivarWordGroup <- <(((RankCultivar _)? CultivarApostrophe CultivarRecursive CultivarApostrophe) / (RankCultivar _ Cultivar))> */
		func() bool {
			position109, tokenIndex109 := position, tokenIndex
			{
				position110 := position
				{
					position111, tokenIndex111 := position, tokenIndex
					{
						position113, tokenIndex113 := position, tokenIndex
						if !_rules[ruleRankCultivar]() {
							goto l113
						}
						if !_rules[rule_]() {
							goto l113
						}
						goto l114
					l113:
						position, tokenIndex = position113, tokenIndex113
					}
				l114:
					if !_rules[ruleCultivarApostrophe]() {
						goto l112
					}
					if !_rules[ruleCultivarRecursive]() {
						goto l112
					}
					if !_rules[ruleCultivarApostrophe]() {
						goto l112
					}
					goto l111
				l112:
					position, tokenIndex = position111, tokenIndex111
					if !_rules[ruleRankCultivar]() {
						goto l109
					}
					if !_rules[rule_]() {
						goto l109
					}
					if !_rules[ruleCultivar]() {
						goto l109
					}
				}
			l111:
				add(ruleCultivarWordGroup, position110)
			}
			return true
		l109:
			position, tokenIndex = position109, tokenIndex109
			return false
		},
		/* 20 Cultivar <- <NotHybridChar+> */
		func() bool {
			position115, tokenIndex115 := position, tokenIndex
			{
				position116 := position
				if !_rules[ruleNotHybridChar]() {
					goto l115
				}
			l117:
				{
					position118, tokenIndex118 := position, tokenIndex
					if !_rules[ruleNotHybridChar]() {
						goto l118
					}
					goto l117
				l118:
					position, tokenIndex = position118, tokenIndex118
				}
				add(ruleCultivar, position116)
			}
			return true
		l115:
			position, tokenIndex = position115, tokenIndex115
			return false
		},
		/* 21 RankCultivar <- <('c' 'v' '.'?)> */
		func() bool {
			position119, tokenIndex119 := position, tokenIndex
			{
				position120 := position
				if buffer[position] != rune('c') {
					goto l119
				}
				position++
				if buffer[position] != rune('v') {
					goto l119
				}
				position++
				{
					position121, tokenIndex121 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l121
					}
					position++
					goto l122
				l121:
					position, tokenIndex = position121, tokenIndex121
				}
			l122:
				add(ruleRankCultivar, position120)
			}
			return true
		l119:
			position, tokenIndex = position119, tokenIndex119
			return false
		},
		/* 22 NotHybridChar <- <(!(_ HybridChar) .)> */
		func() bool {
			position123, tokenIndex123 := position, tokenIndex
			{
				position124 := position
				{
					position125, tokenIndex125 := position, tokenIndex
					if !_rules[rule_]() {
						goto l125
					}
					if !_rules[ruleHybridChar]() {
						goto l125
					}
					goto l123
				l125:
					position, tokenIndex = position125, tokenIndex125
				}
				if !matchDot() {
					goto l123
				}
				add(ruleNotHybridChar, position124)
			}
			return true
		l123:
			position, tokenIndex = position123, tokenIndex123
			return false
		},
		/* 23 CultivarRecursive <- <((NotHybridChar CultivarRecursive) / &CultivarApostrophe)> */
		func() bool {
			position126, tokenIndex126 := position, tokenIndex
			{
				position127 := position
				{
					position128, tokenIndex128 := position, tokenIndex
					if !_rules[ruleNotHybridChar]() {
						goto l129
					}
					if !_rules[ruleCultivarRecursive]() {
						goto l129
					}
					goto l128
				l129:
					position, tokenIndex = position128, tokenIndex128
					{
						position130, tokenIndex130 := position, tokenIndex
						if !_rules[ruleCultivarApostrophe]() {
							goto l126
						}
						position, tokenIndex = position130, tokenIndex130
					}
				}
			l128:
				add(ruleCultivarRecursive, position127)
			}
			return true
		l126:
			position, tokenIndex = position126, tokenIndex126
			return false
		},
		/* 24 CultivarApostrophe <- <('\'' / '‘' / '’' / '"' / '“' / '”')> */
		func() bool {
			position131, tokenIndex131 := position, tokenIndex
			{
				position132 := position
				{
					position133, tokenIndex133 := position, tokenIndex
					if buffer[position] != rune('\'') {
						goto l134
					}
					position++
					goto l133
				l134:
					position, tokenIndex = position133, tokenIndex133
					if buffer[position] != rune('‘') {
						goto l135
					}
					position++
					goto l133
				l135:
					position, tokenIndex = position133, tokenIndex133
					if buffer[position] != rune('’') {
						goto l136
					}
					position++
					goto l133
				l136:
					position, tokenIndex = position133, tokenIndex133
					if buffer[position] != rune('"') {
						goto l137
					}
					position++
					goto l133
				l137:
					position, tokenIndex = position133, tokenIndex133
					if buffer[position] != rune('“') {
						goto l138
					}
					position++
					goto l133
				l138:
					position, tokenIndex = position133, tokenIndex133
					if buffer[position] != rune('”') {
						goto l131
					}
					position++
				}
			l133:
				add(ruleCultivarApostrophe, position132)
			}
			return true
		l131:
			position, tokenIndex = position131, tokenIndex131
			return false
		},
		/* 25 SpeciesEpithet <- <(!AuthorEx Word (_? Authorship)?)> */
		func() bool {
			position139, tokenIndex139 := position, tokenIndex
			{
				position140 := position
				{
					position141, tokenIndex141 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l141
					}
					goto l139
				l141:
					position, tokenIndex = position141, tokenIndex141
				}
				if !_rules[ruleWord]() {
					goto l139
				}
				{
					position142, tokenIndex142 := position, tokenIndex
					{
						position144, tokenIndex144 := position, tokenIndex
						if !_rules[rule_]() {
							goto l144
						}
						goto l145
					l144:
						position, tokenIndex = position144, tokenIndex144
					}
				l145:
					if !_rules[ruleAuthorship]() {
						goto l142
					}
					goto l143
				l142:
					position, tokenIndex = position142, tokenIndex142
				}
			l143:
				add(ruleSpeciesEpithet, position140)
			}
			return true
		l139:
			position, tokenIndex = position139, tokenIndex139
			return false
		},
		/* 26 Comparison <- <('c' 'f' '.'? &SpaceCharEOI)> */
		func() bool {
			position146, tokenIndex146 := position, tokenIndex
			{
				position147 := position
				if buffer[position] != rune('c') {
					goto l146
				}
				position++
				if buffer[position] != rune('f') {
					goto l146
				}
				position++
				{
					position148, tokenIndex148 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l148
					}
					position++
					goto l149
				l148:
					position, tokenIndex = position148, tokenIndex148
				}
			l149:
				{
					position150, tokenIndex150 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l146
					}
					position, tokenIndex = position150, tokenIndex150
				}
				add(ruleComparison, position147)
			}
			return true
		l146:
			position, tokenIndex = position146, tokenIndex146
			return false
		},
		/* 27 Rank <- <((RankForma / RankVar / RankSsp / RankOther / RankOtherUncommon / RankAgamo / RankNotho) (_? LowerGreek ('.' / &SpaceCharEOI))?)> */
		func() bool {
			position151, tokenIndex151 := position, tokenIndex
			{
				position152 := position
				{
					position153, tokenIndex153 := position, tokenIndex
					if !_rules[ruleRankForma]() {
						goto l154
					}
					goto l153
				l154:
					position, tokenIndex = position153, tokenIndex153
					if !_rules[ruleRankVar]() {
						goto l155
					}
					goto l153
				l155:
					position, tokenIndex = position153, tokenIndex153
					if !_rules[ruleRankSsp]() {
						goto l156
					}
					goto l153
				l156:
					position, tokenIndex = position153, tokenIndex153
					if !_rules[ruleRankOther]() {
						goto l157
					}
					goto l153
				l157:
					position, tokenIndex = position153, tokenIndex153
					if !_rules[ruleRankOtherUncommon]() {
						goto l158
					}
					goto l153
				l158:
					position, tokenIndex = position153, tokenIndex153
					if !_rules[ruleRankAgamo]() {
						goto l159
					}
					goto l153
				l159:
					position, tokenIndex = position153, tokenIndex153
					if !_rules[ruleRankNotho]() {
						goto l151
					}
				}
			l153:
				{
					position160, tokenIndex160 := position, tokenIndex
					{
						position162, tokenIndex162 := position, tokenIndex
						if !_rules[rule_]() {
							goto l162
						}
						goto l163
					l162:
						position, tokenIndex = position162, tokenIndex162
					}
				l163:
					if !_rules[ruleLowerGreek]() {
						goto l160
					}
					{
						position164, tokenIndex164 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l165
						}
						position++
						goto l164
					l165:
						position, tokenIndex = position164, tokenIndex164
						{
							position166, tokenIndex166 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l160
							}
							position, tokenIndex = position166, tokenIndex166
						}
					}
				l164:
					goto l161
				l160:
					position, tokenIndex = position160, tokenIndex160
				}
			l161:
				add(ruleRank, position152)
			}
			return true
		l151:
			position, tokenIndex = position151, tokenIndex151
			return false
		},
		/* 28 RankNotho <- <((('n' 'o' 't' 'h' 'o' (('v' 'a' 'r') / ('f' 'o') / 'f' / ('s' 'u' 'b' 's' 'p') / ('s' 's' 'p') / ('s' 'p') / ('m' 'o' 'r' 't' 'h') / ('s' 'u' 'p' 's' 'p') / ('s' 'u'))) / ('n' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position167, tokenIndex167 := position, tokenIndex
			{
				position168 := position
				{
					position169, tokenIndex169 := position, tokenIndex
					if buffer[position] != rune('n') {
						goto l170
					}
					position++
					if buffer[position] != rune('o') {
						goto l170
					}
					position++
					if buffer[position] != rune('t') {
						goto l170
					}
					position++
					if buffer[position] != rune('h') {
						goto l170
					}
					position++
					if buffer[position] != rune('o') {
						goto l170
					}
					position++
					{
						position171, tokenIndex171 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l172
						}
						position++
						if buffer[position] != rune('a') {
							goto l172
						}
						position++
						if buffer[position] != rune('r') {
							goto l172
						}
						position++
						goto l171
					l172:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('f') {
							goto l173
						}
						position++
						if buffer[position] != rune('o') {
							goto l173
						}
						position++
						goto l171
					l173:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('f') {
							goto l174
						}
						position++
						goto l171
					l174:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('s') {
							goto l175
						}
						position++
						if buffer[position] != rune('u') {
							goto l175
						}
						position++
						if buffer[position] != rune('b') {
							goto l175
						}
						position++
						if buffer[position] != rune('s') {
							goto l175
						}
						position++
						if buffer[position] != rune('p') {
							goto l175
						}
						position++
						goto l171
					l175:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('s') {
							goto l176
						}
						position++
						if buffer[position] != rune('s') {
							goto l176
						}
						position++
						if buffer[position] != rune('p') {
							goto l176
						}
						position++
						goto l171
					l176:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('s') {
							goto l177
						}
						position++
						if buffer[position] != rune('p') {
							goto l177
						}
						position++
						goto l171
					l177:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('m') {
							goto l178
						}
						position++
						if buffer[position] != rune('o') {
							goto l178
						}
						position++
						if buffer[position] != rune('r') {
							goto l178
						}
						position++
						if buffer[position] != rune('t') {
							goto l178
						}
						position++
						if buffer[position] != rune('h') {
							goto l178
						}
						position++
						goto l171
					l178:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('s') {
							goto l179
						}
						position++
						if buffer[position] != rune('u') {
							goto l179
						}
						position++
						if buffer[position] != rune('p') {
							goto l179
						}
						position++
						if buffer[position] != rune('s') {
							goto l179
						}
						position++
						if buffer[position] != rune('p') {
							goto l179
						}
						position++
						goto l171
					l179:
						position, tokenIndex = position171, tokenIndex171
						if buffer[position] != rune('s') {
							goto l170
						}
						position++
						if buffer[position] != rune('u') {
							goto l170
						}
						position++
					}
				l171:
					goto l169
				l170:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('n') {
						goto l167
					}
					position++
					if buffer[position] != rune('v') {
						goto l167
					}
					position++
					if buffer[position] != rune('a') {
						goto l167
					}
					position++
					if buffer[position] != rune('r') {
						goto l167
					}
					position++
				}
			l169:
				{
					position180, tokenIndex180 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l181
					}
					position++
					goto l180
				l181:
					position, tokenIndex = position180, tokenIndex180
					{
						position182, tokenIndex182 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l167
						}
						position, tokenIndex = position182, tokenIndex182
					}
				}
			l180:
				add(ruleRankNotho, position168)
			}
			return true
		l167:
			position, tokenIndex = position167, tokenIndex167
			return false
		},
		/* 29 RankOtherUncommon <- <(('*' / ('n' 'a' 't' 'i' 'o') / ('n' 'a' 't' '.') / ('n' 'a' 't') / ('f' '.' 's' 'p') / 'α' / ('β' 'β') / 'β' / 'γ' / 'δ' / 'ε' / 'φ' / 'θ' / 'μ' / ('a' '.') / ('b' '.') / ('c' '.') / ('d' '.') / ('e' '.') / ('g' '.') / ('k' '.') / ('m' 'u' 't' '.')) &SpaceCharEOI)> */
		func() bool {
			position183, tokenIndex183 := position, tokenIndex
			{
				position184 := position
				{
					position185, tokenIndex185 := position, tokenIndex
					if buffer[position] != rune('*') {
						goto l186
					}
					position++
					goto l185
				l186:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('n') {
						goto l187
					}
					position++
					if buffer[position] != rune('a') {
						goto l187
					}
					position++
					if buffer[position] != rune('t') {
						goto l187
					}
					position++
					if buffer[position] != rune('i') {
						goto l187
					}
					position++
					if buffer[position] != rune('o') {
						goto l187
					}
					position++
					goto l185
				l187:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('n') {
						goto l188
					}
					position++
					if buffer[position] != rune('a') {
						goto l188
					}
					position++
					if buffer[position] != rune('t') {
						goto l188
					}
					position++
					if buffer[position] != rune('.') {
						goto l188
					}
					position++
					goto l185
				l188:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('n') {
						goto l189
					}
					position++
					if buffer[position] != rune('a') {
						goto l189
					}
					position++
					if buffer[position] != rune('t') {
						goto l189
					}
					position++
					goto l185
				l189:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('f') {
						goto l190
					}
					position++
					if buffer[position] != rune('.') {
						goto l190
					}
					position++
					if buffer[position] != rune('s') {
						goto l190
					}
					position++
					if buffer[position] != rune('p') {
						goto l190
					}
					position++
					goto l185
				l190:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('α') {
						goto l191
					}
					position++
					goto l185
				l191:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('β') {
						goto l192
					}
					position++
					if buffer[position] != rune('β') {
						goto l192
					}
					position++
					goto l185
				l192:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('β') {
						goto l193
					}
					position++
					goto l185
				l193:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('γ') {
						goto l194
					}
					position++
					goto l185
				l194:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('δ') {
						goto l195
					}
					position++
					goto l185
				l195:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('ε') {
						goto l196
					}
					position++
					goto l185
				l196:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('φ') {
						goto l197
					}
					position++
					goto l185
				l197:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('θ') {
						goto l198
					}
					position++
					goto l185
				l198:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('μ') {
						goto l199
					}
					position++
					goto l185
				l199:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('a') {
						goto l200
					}
					position++
					if buffer[position] != rune('.') {
						goto l200
					}
					position++
					goto l185
				l200:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('b') {
						goto l201
					}
					position++
					if buffer[position] != rune('.') {
						goto l201
					}
					position++
					goto l185
				l201:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('c') {
						goto l202
					}
					position++
					if buffer[position] != rune('.') {
						goto l202
					}
					position++
					goto l185
				l202:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('d') {
						goto l203
					}
					position++
					if buffer[position] != rune('.') {
						goto l203
					}
					position++
					goto l185
				l203:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('e') {
						goto l204
					}
					position++
					if buffer[position] != rune('.') {
						goto l204
					}
					position++
					goto l185
				l204:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('g') {
						goto l205
					}
					position++
					if buffer[position] != rune('.') {
						goto l205
					}
					position++
					goto l185
				l205:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('k') {
						goto l206
					}
					position++
					if buffer[position] != rune('.') {
						goto l206
					}
					position++
					goto l185
				l206:
					position, tokenIndex = position185, tokenIndex185
					if buffer[position] != rune('m') {
						goto l183
					}
					position++
					if buffer[position] != rune('u') {
						goto l183
					}
					position++
					if buffer[position] != rune('t') {
						goto l183
					}
					position++
					if buffer[position] != rune('.') {
						goto l183
					}
					position++
				}
			l185:
				{
					position207, tokenIndex207 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l183
					}
					position, tokenIndex = position207, tokenIndex207
				}
				add(ruleRankOtherUncommon, position184)
			}
			return true
		l183:
			position, tokenIndex = position183, tokenIndex183
			return false
		},
		/* 30 RankOther <- <((('m' 'o' 'r' 'p' 'h') / ('c' 'o' 'n' 'v' 'a' 'r') / ('p' 's' 'e' 'u' 'd' 'o' 'v' 'a' 'r') / ('s' 'e' 'c' 't') / ('s' 'e' 'r') / ('s' 'u' 'b' 'v' 'a' 'r') / ('s' 'u' 'b' 'f') / ('r' 'a' 'c' 'e') / ('p' 'v') / ('p' 'a' 't' 'h' 'o' 'v' 'a' 'r') / ('a' 'b' '.' (_? ('n' '.'))?) / ('s' 't')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position208, tokenIndex208 := position, tokenIndex
			{
				position209 := position
				{
					position210, tokenIndex210 := position, tokenIndex
					if buffer[position] != rune('m') {
						goto l211
					}
					position++
					if buffer[position] != rune('o') {
						goto l211
					}
					position++
					if buffer[position] != rune('r') {
						goto l211
					}
					position++
					if buffer[position] != rune('p') {
						goto l211
					}
					position++
					if buffer[position] != rune('h') {
						goto l211
					}
					position++
					goto l210
				l211:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('c') {
						goto l212
					}
					position++
					if buffer[position] != rune('o') {
						goto l212
					}
					position++
					if buffer[position] != rune('n') {
						goto l212
					}
					position++
					if buffer[position] != rune('v') {
						goto l212
					}
					position++
					if buffer[position] != rune('a') {
						goto l212
					}
					position++
					if buffer[position] != rune('r') {
						goto l212
					}
					position++
					goto l210
				l212:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('p') {
						goto l213
					}
					position++
					if buffer[position] != rune('s') {
						goto l213
					}
					position++
					if buffer[position] != rune('e') {
						goto l213
					}
					position++
					if buffer[position] != rune('u') {
						goto l213
					}
					position++
					if buffer[position] != rune('d') {
						goto l213
					}
					position++
					if buffer[position] != rune('o') {
						goto l213
					}
					position++
					if buffer[position] != rune('v') {
						goto l213
					}
					position++
					if buffer[position] != rune('a') {
						goto l213
					}
					position++
					if buffer[position] != rune('r') {
						goto l213
					}
					position++
					goto l210
				l213:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('s') {
						goto l214
					}
					position++
					if buffer[position] != rune('e') {
						goto l214
					}
					position++
					if buffer[position] != rune('c') {
						goto l214
					}
					position++
					if buffer[position] != rune('t') {
						goto l214
					}
					position++
					goto l210
				l214:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('s') {
						goto l215
					}
					position++
					if buffer[position] != rune('e') {
						goto l215
					}
					position++
					if buffer[position] != rune('r') {
						goto l215
					}
					position++
					goto l210
				l215:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('s') {
						goto l216
					}
					position++
					if buffer[position] != rune('u') {
						goto l216
					}
					position++
					if buffer[position] != rune('b') {
						goto l216
					}
					position++
					if buffer[position] != rune('v') {
						goto l216
					}
					position++
					if buffer[position] != rune('a') {
						goto l216
					}
					position++
					if buffer[position] != rune('r') {
						goto l216
					}
					position++
					goto l210
				l216:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('s') {
						goto l217
					}
					position++
					if buffer[position] != rune('u') {
						goto l217
					}
					position++
					if buffer[position] != rune('b') {
						goto l217
					}
					position++
					if buffer[position] != rune('f') {
						goto l217
					}
					position++
					goto l210
				l217:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('r') {
						goto l218
					}
					position++
					if buffer[position] != rune('a') {
						goto l218
					}
					position++
					if buffer[position] != rune('c') {
						goto l218
					}
					position++
					if buffer[position] != rune('e') {
						goto l218
					}
					position++
					goto l210
				l218:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('p') {
						goto l219
					}
					position++
					if buffer[position] != rune('v') {
						goto l219
					}
					position++
					goto l210
				l219:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('p') {
						goto l220
					}
					position++
					if buffer[position] != rune('a') {
						goto l220
					}
					position++
					if buffer[position] != rune('t') {
						goto l220
					}
					position++
					if buffer[position] != rune('h') {
						goto l220
					}
					position++
					if buffer[position] != rune('o') {
						goto l220
					}
					position++
					if buffer[position] != rune('v') {
						goto l220
					}
					position++
					if buffer[position] != rune('a') {
						goto l220
					}
					position++
					if buffer[position] != rune('r') {
						goto l220
					}
					position++
					goto l210
				l220:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('a') {
						goto l221
					}
					position++
					if buffer[position] != rune('b') {
						goto l221
					}
					position++
					if buffer[position] != rune('.') {
						goto l221
					}
					position++
					{
						position222, tokenIndex222 := position, tokenIndex
						{
							position224, tokenIndex224 := position, tokenIndex
							if !_rules[rule_]() {
								goto l224
							}
							goto l225
						l224:
							position, tokenIndex = position224, tokenIndex224
						}
					l225:
						if buffer[position] != rune('n') {
							goto l222
						}
						position++
						if buffer[position] != rune('.') {
							goto l222
						}
						position++
						goto l223
					l222:
						position, tokenIndex = position222, tokenIndex222
					}
				l223:
					goto l210
				l221:
					position, tokenIndex = position210, tokenIndex210
					if buffer[position] != rune('s') {
						goto l208
					}
					position++
					if buffer[position] != rune('t') {
						goto l208
					}
					position++
				}
			l210:
				{
					position226, tokenIndex226 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l227
					}
					position++
					goto l226
				l227:
					position, tokenIndex = position226, tokenIndex226
					{
						position228, tokenIndex228 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l208
						}
						position, tokenIndex = position228, tokenIndex228
					}
				}
			l226:
				add(ruleRankOther, position209)
			}
			return true
		l208:
			position, tokenIndex = position208, tokenIndex208
			return false
		},
		/* 31 RankVar <- <((('v' 'a' 'r' 'i' 'e' 't' 'y') / ('[' 'v' 'a' 'r' '.' ']') / ('v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position229, tokenIndex229 := position, tokenIndex
			{
				position230 := position
				{
					position231, tokenIndex231 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l232
					}
					position++
					if buffer[position] != rune('a') {
						goto l232
					}
					position++
					if buffer[position] != rune('r') {
						goto l232
					}
					position++
					if buffer[position] != rune('i') {
						goto l232
					}
					position++
					if buffer[position] != rune('e') {
						goto l232
					}
					position++
					if buffer[position] != rune('t') {
						goto l232
					}
					position++
					if buffer[position] != rune('y') {
						goto l232
					}
					position++
					goto l231
				l232:
					position, tokenIndex = position231, tokenIndex231
					if buffer[position] != rune('[') {
						goto l233
					}
					position++
					if buffer[position] != rune('v') {
						goto l233
					}
					position++
					if buffer[position] != rune('a') {
						goto l233
					}
					position++
					if buffer[position] != rune('r') {
						goto l233
					}
					position++
					if buffer[position] != rune('.') {
						goto l233
					}
					position++
					if buffer[position] != rune(']') {
						goto l233
					}
					position++
					goto l231
				l233:
					position, tokenIndex = position231, tokenIndex231
					if buffer[position] != rune('v') {
						goto l229
					}
					position++
					if buffer[position] != rune('a') {
						goto l229
					}
					position++
					if buffer[position] != rune('r') {
						goto l229
					}
					position++
				}
			l231:
				{
					position234, tokenIndex234 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l235
					}
					position++
					goto l234
				l235:
					position, tokenIndex = position234, tokenIndex234
					{
						position236, tokenIndex236 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l229
						}
						position, tokenIndex = position236, tokenIndex236
					}
				}
			l234:
				add(ruleRankVar, position230)
			}
			return true
		l229:
			position, tokenIndex = position229, tokenIndex229
			return false
		},
		/* 32 RankForma <- <((('f' 'o' 'r' 'm' 'a') / ('f' 'm' 'a') / ('f' 'm') / ('f' 'o' 'r' 'm') / ('f' 'o') / 'f') ('.' / &SpaceCharEOI))> */
		func() bool {
			position237, tokenIndex237 := position, tokenIndex
			{
				position238 := position
				{
					position239, tokenIndex239 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l240
					}
					position++
					if buffer[position] != rune('o') {
						goto l240
					}
					position++
					if buffer[position] != rune('r') {
						goto l240
					}
					position++
					if buffer[position] != rune('m') {
						goto l240
					}
					position++
					if buffer[position] != rune('a') {
						goto l240
					}
					position++
					goto l239
				l240:
					position, tokenIndex = position239, tokenIndex239
					if buffer[position] != rune('f') {
						goto l241
					}
					position++
					if buffer[position] != rune('m') {
						goto l241
					}
					position++
					if buffer[position] != rune('a') {
						goto l241
					}
					position++
					goto l239
				l241:
					position, tokenIndex = position239, tokenIndex239
					if buffer[position] != rune('f') {
						goto l242
					}
					position++
					if buffer[position] != rune('m') {
						goto l242
					}
					position++
					goto l239
				l242:
					position, tokenIndex = position239, tokenIndex239
					if buffer[position] != rune('f') {
						goto l243
					}
					position++
					if buffer[position] != rune('o') {
						goto l243
					}
					position++
					if buffer[position] != rune('r') {
						goto l243
					}
					position++
					if buffer[position] != rune('m') {
						goto l243
					}
					position++
					goto l239
				l243:
					position, tokenIndex = position239, tokenIndex239
					if buffer[position] != rune('f') {
						goto l244
					}
					position++
					if buffer[position] != rune('o') {
						goto l244
					}
					position++
					goto l239
				l244:
					position, tokenIndex = position239, tokenIndex239
					if buffer[position] != rune('f') {
						goto l237
					}
					position++
				}
			l239:
				{
					position245, tokenIndex245 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l246
					}
					position++
					goto l245
				l246:
					position, tokenIndex = position245, tokenIndex245
					{
						position247, tokenIndex247 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l237
						}
						position, tokenIndex = position247, tokenIndex247
					}
				}
			l245:
				add(ruleRankForma, position238)
			}
			return true
		l237:
			position, tokenIndex = position237, tokenIndex237
			return false
		},
		/* 33 RankSsp <- <((('s' 's' 'p') / ('s' 'u' 'b' 's' 'p' 'e' 'c') / ('s' 'u' 'b' 's' 'p')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position248, tokenIndex248 := position, tokenIndex
			{
				position249 := position
				{
					position250, tokenIndex250 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l251
					}
					position++
					if buffer[position] != rune('s') {
						goto l251
					}
					position++
					if buffer[position] != rune('p') {
						goto l251
					}
					position++
					goto l250
				l251:
					position, tokenIndex = position250, tokenIndex250
					if buffer[position] != rune('s') {
						goto l252
					}
					position++
					if buffer[position] != rune('u') {
						goto l252
					}
					position++
					if buffer[position] != rune('b') {
						goto l252
					}
					position++
					if buffer[position] != rune('s') {
						goto l252
					}
					position++
					if buffer[position] != rune('p') {
						goto l252
					}
					position++
					if buffer[position] != rune('e') {
						goto l252
					}
					position++
					if buffer[position] != rune('c') {
						goto l252
					}
					position++
					goto l250
				l252:
					position, tokenIndex = position250, tokenIndex250
					if buffer[position] != rune('s') {
						goto l248
					}
					position++
					if buffer[position] != rune('u') {
						goto l248
					}
					position++
					if buffer[position] != rune('b') {
						goto l248
					}
					position++
					if buffer[position] != rune('s') {
						goto l248
					}
					position++
					if buffer[position] != rune('p') {
						goto l248
					}
					position++
				}
			l250:
				{
					position253, tokenIndex253 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l254
					}
					position++
					goto l253
				l254:
					position, tokenIndex = position253, tokenIndex253
					{
						position255, tokenIndex255 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l248
						}
						position, tokenIndex = position255, tokenIndex255
					}
				}
			l253:
				add(ruleRankSsp, position249)
			}
			return true
		l248:
			position, tokenIndex = position248, tokenIndex248
			return false
		},
		/* 34 RankAgamo <- <((('a' 'g' 'a' 'm' 'o' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 's' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position256, tokenIndex256 := position, tokenIndex
			{
				position257 := position
				{
					position258, tokenIndex258 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l259
					}
					position++
					if buffer[position] != rune('g') {
						goto l259
					}
					position++
					if buffer[position] != rune('a') {
						goto l259
					}
					position++
					if buffer[position] != rune('m') {
						goto l259
					}
					position++
					if buffer[position] != rune('o') {
						goto l259
					}
					position++
					if buffer[position] != rune('s') {
						goto l259
					}
					position++
					if buffer[position] != rune('p') {
						goto l259
					}
					position++
					goto l258
				l259:
					position, tokenIndex = position258, tokenIndex258
					if buffer[position] != rune('a') {
						goto l260
					}
					position++
					if buffer[position] != rune('g') {
						goto l260
					}
					position++
					if buffer[position] != rune('a') {
						goto l260
					}
					position++
					if buffer[position] != rune('m') {
						goto l260
					}
					position++
					if buffer[position] != rune('o') {
						goto l260
					}
					position++
					if buffer[position] != rune('s') {
						goto l260
					}
					position++
					if buffer[position] != rune('s') {
						goto l260
					}
					position++
					if buffer[position] != rune('p') {
						goto l260
					}
					position++
					goto l258
				l260:
					position, tokenIndex = position258, tokenIndex258
					if buffer[position] != rune('a') {
						goto l256
					}
					position++
					if buffer[position] != rune('g') {
						goto l256
					}
					position++
					if buffer[position] != rune('a') {
						goto l256
					}
					position++
					if buffer[position] != rune('m') {
						goto l256
					}
					position++
					if buffer[position] != rune('o') {
						goto l256
					}
					position++
					if buffer[position] != rune('v') {
						goto l256
					}
					position++
					if buffer[position] != rune('a') {
						goto l256
					}
					position++
					if buffer[position] != rune('r') {
						goto l256
					}
					position++
				}
			l258:
				{
					position261, tokenIndex261 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l262
					}
					position++
					goto l261
				l262:
					position, tokenIndex = position261, tokenIndex261
					{
						position263, tokenIndex263 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l256
						}
						position, tokenIndex = position263, tokenIndex263
					}
				}
			l261:
				add(ruleRankAgamo, position257)
			}
			return true
		l256:
			position, tokenIndex = position256, tokenIndex256
			return false
		},
		/* 35 SubgenusOrSuperspecies <- <('(' _? NameLowerChar+ _? ')')> */
		func() bool {
			position264, tokenIndex264 := position, tokenIndex
			{
				position265 := position
				if buffer[position] != rune('(') {
					goto l264
				}
				position++
				{
					position266, tokenIndex266 := position, tokenIndex
					if !_rules[rule_]() {
						goto l266
					}
					goto l267
				l266:
					position, tokenIndex = position266, tokenIndex266
				}
			l267:
				if !_rules[ruleNameLowerChar]() {
					goto l264
				}
			l268:
				{
					position269, tokenIndex269 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l269
					}
					goto l268
				l269:
					position, tokenIndex = position269, tokenIndex269
				}
				{
					position270, tokenIndex270 := position, tokenIndex
					if !_rules[rule_]() {
						goto l270
					}
					goto l271
				l270:
					position, tokenIndex = position270, tokenIndex270
				}
			l271:
				if buffer[position] != rune(')') {
					goto l264
				}
				position++
				add(ruleSubgenusOrSuperspecies, position265)
			}
			return true
		l264:
			position, tokenIndex = position264, tokenIndex264
			return false
		},
		/* 36 Subgenus <- <(Subgenus2 / Subgenus1)> */
		func() bool {
			position272, tokenIndex272 := position, tokenIndex
			{
				position273 := position
				{
					position274, tokenIndex274 := position, tokenIndex
					if !_rules[ruleSubgenus2]() {
						goto l275
					}
					goto l274
				l275:
					position, tokenIndex = position274, tokenIndex274
					if !_rules[ruleSubgenus1]() {
						goto l272
					}
				}
			l274:
				add(ruleSubgenus, position273)
			}
			return true
		l272:
			position, tokenIndex = position272, tokenIndex272
			return false
		},
		/* 37 Subgenus2 <- <('(' _? AbbrSubgenus _? ')' !(_? NameUpperChar))> */
		func() bool {
			position276, tokenIndex276 := position, tokenIndex
			{
				position277 := position
				if buffer[position] != rune('(') {
					goto l276
				}
				position++
				{
					position278, tokenIndex278 := position, tokenIndex
					if !_rules[rule_]() {
						goto l278
					}
					goto l279
				l278:
					position, tokenIndex = position278, tokenIndex278
				}
			l279:
				if !_rules[ruleAbbrSubgenus]() {
					goto l276
				}
				{
					position280, tokenIndex280 := position, tokenIndex
					if !_rules[rule_]() {
						goto l280
					}
					goto l281
				l280:
					position, tokenIndex = position280, tokenIndex280
				}
			l281:
				if buffer[position] != rune(')') {
					goto l276
				}
				position++
				{
					position282, tokenIndex282 := position, tokenIndex
					{
						position283, tokenIndex283 := position, tokenIndex
						if !_rules[rule_]() {
							goto l283
						}
						goto l284
					l283:
						position, tokenIndex = position283, tokenIndex283
					}
				l284:
					if !_rules[ruleNameUpperChar]() {
						goto l282
					}
					goto l276
				l282:
					position, tokenIndex = position282, tokenIndex282
				}
				add(ruleSubgenus2, position277)
			}
			return true
		l276:
			position, tokenIndex = position276, tokenIndex276
			return false
		},
		/* 38 Subgenus1 <- <('(' _? UninomialWord _? ')')> */
		func() bool {
			position285, tokenIndex285 := position, tokenIndex
			{
				position286 := position
				if buffer[position] != rune('(') {
					goto l285
				}
				position++
				{
					position287, tokenIndex287 := position, tokenIndex
					if !_rules[rule_]() {
						goto l287
					}
					goto l288
				l287:
					position, tokenIndex = position287, tokenIndex287
				}
			l288:
				if !_rules[ruleUninomialWord]() {
					goto l285
				}
				{
					position289, tokenIndex289 := position, tokenIndex
					if !_rules[rule_]() {
						goto l289
					}
					goto l290
				l289:
					position, tokenIndex = position289, tokenIndex289
				}
			l290:
				if buffer[position] != rune(')') {
					goto l285
				}
				position++
				add(ruleSubgenus1, position286)
			}
			return true
		l285:
			position, tokenIndex = position285, tokenIndex285
			return false
		},
		/* 39 UninomialCombo <- <(UninomialCombo1 / UninomialCombo2)> */
		func() bool {
			position291, tokenIndex291 := position, tokenIndex
			{
				position292 := position
				{
					position293, tokenIndex293 := position, tokenIndex
					if !_rules[ruleUninomialCombo1]() {
						goto l294
					}
					goto l293
				l294:
					position, tokenIndex = position293, tokenIndex293
					if !_rules[ruleUninomialCombo2]() {
						goto l291
					}
				}
			l293:
				add(ruleUninomialCombo, position292)
			}
			return true
		l291:
			position, tokenIndex = position291, tokenIndex291
			return false
		},
		/* 40 UninomialCombo1 <- <(UninomialWord _? Subgenus (_? Authorship)?)> */
		func() bool {
			position295, tokenIndex295 := position, tokenIndex
			{
				position296 := position
				if !_rules[ruleUninomialWord]() {
					goto l295
				}
				{
					position297, tokenIndex297 := position, tokenIndex
					if !_rules[rule_]() {
						goto l297
					}
					goto l298
				l297:
					position, tokenIndex = position297, tokenIndex297
				}
			l298:
				if !_rules[ruleSubgenus]() {
					goto l295
				}
				{
					position299, tokenIndex299 := position, tokenIndex
					{
						position301, tokenIndex301 := position, tokenIndex
						if !_rules[rule_]() {
							goto l301
						}
						goto l302
					l301:
						position, tokenIndex = position301, tokenIndex301
					}
				l302:
					if !_rules[ruleAuthorship]() {
						goto l299
					}
					goto l300
				l299:
					position, tokenIndex = position299, tokenIndex299
				}
			l300:
				add(ruleUninomialCombo1, position296)
			}
			return true
		l295:
			position, tokenIndex = position295, tokenIndex295
			return false
		},
		/* 41 UninomialCombo2 <- <(Uninomial _ RankUninomial _ Uninomial)> */
		func() bool {
			position303, tokenIndex303 := position, tokenIndex
			{
				position304 := position
				if !_rules[ruleUninomial]() {
					goto l303
				}
				if !_rules[rule_]() {
					goto l303
				}
				if !_rules[ruleRankUninomial]() {
					goto l303
				}
				if !_rules[rule_]() {
					goto l303
				}
				if !_rules[ruleUninomial]() {
					goto l303
				}
				add(ruleUninomialCombo2, position304)
			}
			return true
		l303:
			position, tokenIndex = position303, tokenIndex303
			return false
		},
		/* 42 RankUninomial <- <(RankUninomialPlain / RankUninomialNotho)> */
		func() bool {
			position305, tokenIndex305 := position, tokenIndex
			{
				position306 := position
				{
					position307, tokenIndex307 := position, tokenIndex
					if !_rules[ruleRankUninomialPlain]() {
						goto l308
					}
					goto l307
				l308:
					position, tokenIndex = position307, tokenIndex307
					if !_rules[ruleRankUninomialNotho]() {
						goto l305
					}
				}
			l307:
				add(ruleRankUninomial, position306)
			}
			return true
		l305:
			position, tokenIndex = position305, tokenIndex305
			return false
		},
		/* 43 RankUninomialPlain <- <((('s' 'e' 'c' 't') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('t' 'r' 'i' 'b') / ('s' 'u' 'b' 't' 'r' 'i' 'b') / ('s' 'u' 'b' 's' 'e' 'r') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('f' 'a' 'm') / ('s' 'u' 'b' 'f' 'a' 'm') / ('s' 'u' 'p' 'e' 'r' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position309, tokenIndex309 := position, tokenIndex
			{
				position310 := position
				{
					position311, tokenIndex311 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l312
					}
					position++
					if buffer[position] != rune('e') {
						goto l312
					}
					position++
					if buffer[position] != rune('c') {
						goto l312
					}
					position++
					if buffer[position] != rune('t') {
						goto l312
					}
					position++
					goto l311
				l312:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('s') {
						goto l313
					}
					position++
					if buffer[position] != rune('u') {
						goto l313
					}
					position++
					if buffer[position] != rune('b') {
						goto l313
					}
					position++
					if buffer[position] != rune('s') {
						goto l313
					}
					position++
					if buffer[position] != rune('e') {
						goto l313
					}
					position++
					if buffer[position] != rune('c') {
						goto l313
					}
					position++
					if buffer[position] != rune('t') {
						goto l313
					}
					position++
					goto l311
				l313:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('t') {
						goto l314
					}
					position++
					if buffer[position] != rune('r') {
						goto l314
					}
					position++
					if buffer[position] != rune('i') {
						goto l314
					}
					position++
					if buffer[position] != rune('b') {
						goto l314
					}
					position++
					goto l311
				l314:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('s') {
						goto l315
					}
					position++
					if buffer[position] != rune('u') {
						goto l315
					}
					position++
					if buffer[position] != rune('b') {
						goto l315
					}
					position++
					if buffer[position] != rune('t') {
						goto l315
					}
					position++
					if buffer[position] != rune('r') {
						goto l315
					}
					position++
					if buffer[position] != rune('i') {
						goto l315
					}
					position++
					if buffer[position] != rune('b') {
						goto l315
					}
					position++
					goto l311
				l315:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('s') {
						goto l316
					}
					position++
					if buffer[position] != rune('u') {
						goto l316
					}
					position++
					if buffer[position] != rune('b') {
						goto l316
					}
					position++
					if buffer[position] != rune('s') {
						goto l316
					}
					position++
					if buffer[position] != rune('e') {
						goto l316
					}
					position++
					if buffer[position] != rune('r') {
						goto l316
					}
					position++
					goto l311
				l316:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('s') {
						goto l317
					}
					position++
					if buffer[position] != rune('e') {
						goto l317
					}
					position++
					if buffer[position] != rune('r') {
						goto l317
					}
					position++
					goto l311
				l317:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('s') {
						goto l318
					}
					position++
					if buffer[position] != rune('u') {
						goto l318
					}
					position++
					if buffer[position] != rune('b') {
						goto l318
					}
					position++
					if buffer[position] != rune('g') {
						goto l318
					}
					position++
					if buffer[position] != rune('e') {
						goto l318
					}
					position++
					if buffer[position] != rune('n') {
						goto l318
					}
					position++
					goto l311
				l318:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('s') {
						goto l319
					}
					position++
					if buffer[position] != rune('u') {
						goto l319
					}
					position++
					if buffer[position] != rune('b') {
						goto l319
					}
					position++
					if buffer[position] != rune('g') {
						goto l319
					}
					position++
					goto l311
				l319:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('f') {
						goto l320
					}
					position++
					if buffer[position] != rune('a') {
						goto l320
					}
					position++
					if buffer[position] != rune('m') {
						goto l320
					}
					position++
					goto l311
				l320:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('s') {
						goto l321
					}
					position++
					if buffer[position] != rune('u') {
						goto l321
					}
					position++
					if buffer[position] != rune('b') {
						goto l321
					}
					position++
					if buffer[position] != rune('f') {
						goto l321
					}
					position++
					if buffer[position] != rune('a') {
						goto l321
					}
					position++
					if buffer[position] != rune('m') {
						goto l321
					}
					position++
					goto l311
				l321:
					position, tokenIndex = position311, tokenIndex311
					if buffer[position] != rune('s') {
						goto l309
					}
					position++
					if buffer[position] != rune('u') {
						goto l309
					}
					position++
					if buffer[position] != rune('p') {
						goto l309
					}
					position++
					if buffer[position] != rune('e') {
						goto l309
					}
					position++
					if buffer[position] != rune('r') {
						goto l309
					}
					position++
					if buffer[position] != rune('t') {
						goto l309
					}
					position++
					if buffer[position] != rune('r') {
						goto l309
					}
					position++
					if buffer[position] != rune('i') {
						goto l309
					}
					position++
					if buffer[position] != rune('b') {
						goto l309
					}
					position++
				}
			l311:
				{
					position322, tokenIndex322 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l323
					}
					position++
					goto l322
				l323:
					position, tokenIndex = position322, tokenIndex322
					{
						position324, tokenIndex324 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l309
						}
						position, tokenIndex = position324, tokenIndex324
					}
				}
			l322:
				add(ruleRankUninomialPlain, position310)
			}
			return true
		l309:
			position, tokenIndex = position309, tokenIndex309
			return false
		},
		/* 44 RankUninomialNotho <- <('n' 'o' 't' 'h' 'o' _? (('s' 'e' 'c' 't') / ('g' 'e' 'n') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'e' 'n') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('s' 'u' 'b' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position325, tokenIndex325 := position, tokenIndex
			{
				position326 := position
				if buffer[position] != rune('n') {
					goto l325
				}
				position++
				if buffer[position] != rune('o') {
					goto l325
				}
				position++
				if buffer[position] != rune('t') {
					goto l325
				}
				position++
				if buffer[position] != rune('h') {
					goto l325
				}
				position++
				if buffer[position] != rune('o') {
					goto l325
				}
				position++
				{
					position327, tokenIndex327 := position, tokenIndex
					if !_rules[rule_]() {
						goto l327
					}
					goto l328
				l327:
					position, tokenIndex = position327, tokenIndex327
				}
			l328:
				{
					position329, tokenIndex329 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l330
					}
					position++
					if buffer[position] != rune('e') {
						goto l330
					}
					position++
					if buffer[position] != rune('c') {
						goto l330
					}
					position++
					if buffer[position] != rune('t') {
						goto l330
					}
					position++
					goto l329
				l330:
					position, tokenIndex = position329, tokenIndex329
					if buffer[position] != rune('g') {
						goto l331
					}
					position++
					if buffer[position] != rune('e') {
						goto l331
					}
					position++
					if buffer[position] != rune('n') {
						goto l331
					}
					position++
					goto l329
				l331:
					position, tokenIndex = position329, tokenIndex329
					if buffer[position] != rune('s') {
						goto l332
					}
					position++
					if buffer[position] != rune('e') {
						goto l332
					}
					position++
					if buffer[position] != rune('r') {
						goto l332
					}
					position++
					goto l329
				l332:
					position, tokenIndex = position329, tokenIndex329
					if buffer[position] != rune('s') {
						goto l333
					}
					position++
					if buffer[position] != rune('u') {
						goto l333
					}
					position++
					if buffer[position] != rune('b') {
						goto l333
					}
					position++
					if buffer[position] != rune('g') {
						goto l333
					}
					position++
					if buffer[position] != rune('e') {
						goto l333
					}
					position++
					if buffer[position] != rune('e') {
						goto l333
					}
					position++
					if buffer[position] != rune('n') {
						goto l333
					}
					position++
					goto l329
				l333:
					position, tokenIndex = position329, tokenIndex329
					if buffer[position] != rune('s') {
						goto l334
					}
					position++
					if buffer[position] != rune('u') {
						goto l334
					}
					position++
					if buffer[position] != rune('b') {
						goto l334
					}
					position++
					if buffer[position] != rune('g') {
						goto l334
					}
					position++
					if buffer[position] != rune('e') {
						goto l334
					}
					position++
					if buffer[position] != rune('n') {
						goto l334
					}
					position++
					goto l329
				l334:
					position, tokenIndex = position329, tokenIndex329
					if buffer[position] != rune('s') {
						goto l335
					}
					position++
					if buffer[position] != rune('u') {
						goto l335
					}
					position++
					if buffer[position] != rune('b') {
						goto l335
					}
					position++
					if buffer[position] != rune('g') {
						goto l335
					}
					position++
					goto l329
				l335:
					position, tokenIndex = position329, tokenIndex329
					if buffer[position] != rune('s') {
						goto l336
					}
					position++
					if buffer[position] != rune('u') {
						goto l336
					}
					position++
					if buffer[position] != rune('b') {
						goto l336
					}
					position++
					if buffer[position] != rune('s') {
						goto l336
					}
					position++
					if buffer[position] != rune('e') {
						goto l336
					}
					position++
					if buffer[position] != rune('c') {
						goto l336
					}
					position++
					if buffer[position] != rune('t') {
						goto l336
					}
					position++
					goto l329
				l336:
					position, tokenIndex = position329, tokenIndex329
					if buffer[position] != rune('s') {
						goto l325
					}
					position++
					if buffer[position] != rune('u') {
						goto l325
					}
					position++
					if buffer[position] != rune('b') {
						goto l325
					}
					position++
					if buffer[position] != rune('t') {
						goto l325
					}
					position++
					if buffer[position] != rune('r') {
						goto l325
					}
					position++
					if buffer[position] != rune('i') {
						goto l325
					}
					position++
					if buffer[position] != rune('b') {
						goto l325
					}
					position++
				}
			l329:
				{
					position337, tokenIndex337 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l338
					}
					position++
					goto l337
				l338:
					position, tokenIndex = position337, tokenIndex337
					{
						position339, tokenIndex339 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l325
						}
						position, tokenIndex = position339, tokenIndex339
					}
				}
			l337:
				add(ruleRankUninomialNotho, position326)
			}
			return true
		l325:
			position, tokenIndex = position325, tokenIndex325
			return false
		},
		/* 45 Uninomial <- <(UninomialWord (_ Authorship !(_ LowerCharExtended LowerCharExtended LowerCharExtended))?)> */
		func() bool {
			position340, tokenIndex340 := position, tokenIndex
			{
				position341 := position
				if !_rules[ruleUninomialWord]() {
					goto l340
				}
				{
					position342, tokenIndex342 := position, tokenIndex
					if !_rules[rule_]() {
						goto l342
					}
					if !_rules[ruleAuthorship]() {
						goto l342
					}
					{
						position344, tokenIndex344 := position, tokenIndex
						if !_rules[rule_]() {
							goto l344
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l344
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l344
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l344
						}
						goto l342
					l344:
						position, tokenIndex = position344, tokenIndex344
					}
					goto l343
				l342:
					position, tokenIndex = position342, tokenIndex342
				}
			l343:
				add(ruleUninomial, position341)
			}
			return true
		l340:
			position, tokenIndex = position340, tokenIndex340
			return false
		},
		/* 46 UninomialWord <- <(CapWord / TwoLetterGenus)> */
		func() bool {
			position345, tokenIndex345 := position, tokenIndex
			{
				position346 := position
				{
					position347, tokenIndex347 := position, tokenIndex
					if !_rules[ruleCapWord]() {
						goto l348
					}
					goto l347
				l348:
					position, tokenIndex = position347, tokenIndex347
					if !_rules[ruleTwoLetterGenus]() {
						goto l345
					}
				}
			l347:
				add(ruleUninomialWord, position346)
			}
			return true
		l345:
			position, tokenIndex = position345, tokenIndex345
			return false
		},
		/* 47 AbbrSubgenus <- <(UpperChar LowerChar* '.')> */
		func() bool {
			position349, tokenIndex349 := position, tokenIndex
			{
				position350 := position
				if !_rules[ruleUpperChar]() {
					goto l349
				}
			l351:
				{
					position352, tokenIndex352 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l352
					}
					goto l351
				l352:
					position, tokenIndex = position352, tokenIndex352
				}
				if buffer[position] != rune('.') {
					goto l349
				}
				position++
				add(ruleAbbrSubgenus, position350)
			}
			return true
		l349:
			position, tokenIndex = position349, tokenIndex349
			return false
		},
		/* 48 AbbrGenus <- <(UpperChar LowerChar? '.')> */
		func() bool {
			position353, tokenIndex353 := position, tokenIndex
			{
				position354 := position
				if !_rules[ruleUpperChar]() {
					goto l353
				}
				{
					position355, tokenIndex355 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l355
					}
					goto l356
				l355:
					position, tokenIndex = position355, tokenIndex355
				}
			l356:
				if buffer[position] != rune('.') {
					goto l353
				}
				position++
				add(ruleAbbrGenus, position354)
			}
			return true
		l353:
			position, tokenIndex = position353, tokenIndex353
			return false
		},
		/* 49 CapWord <- <(CapWordWithDash / CapWord1)> */
		func() bool {
			position357, tokenIndex357 := position, tokenIndex
			{
				position358 := position
				{
					position359, tokenIndex359 := position, tokenIndex
					if !_rules[ruleCapWordWithDash]() {
						goto l360
					}
					goto l359
				l360:
					position, tokenIndex = position359, tokenIndex359
					if !_rules[ruleCapWord1]() {
						goto l357
					}
				}
			l359:
				add(ruleCapWord, position358)
			}
			return true
		l357:
			position, tokenIndex = position357, tokenIndex357
			return false
		},
		/* 50 CapWord1 <- <(NameUpperChar NameLowerChar NameLowerChar+ '?'?)> */
		func() bool {
			position361, tokenIndex361 := position, tokenIndex
			{
				position362 := position
				if !_rules[ruleNameUpperChar]() {
					goto l361
				}
				if !_rules[ruleNameLowerChar]() {
					goto l361
				}
				if !_rules[ruleNameLowerChar]() {
					goto l361
				}
			l363:
				{
					position364, tokenIndex364 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l364
					}
					goto l363
				l364:
					position, tokenIndex = position364, tokenIndex364
				}
				{
					position365, tokenIndex365 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l365
					}
					position++
					goto l366
				l365:
					position, tokenIndex = position365, tokenIndex365
				}
			l366:
				add(ruleCapWord1, position362)
			}
			return true
		l361:
			position, tokenIndex = position361, tokenIndex361
			return false
		},
		/* 51 CapWordWithDash <- <(CapWord1 Dash (UpperAfterDash / LowerAfterDash))> */
		func() bool {
			position367, tokenIndex367 := position, tokenIndex
			{
				position368 := position
				if !_rules[ruleCapWord1]() {
					goto l367
				}
				if !_rules[ruleDash]() {
					goto l367
				}
				{
					position369, tokenIndex369 := position, tokenIndex
					if !_rules[ruleUpperAfterDash]() {
						goto l370
					}
					goto l369
				l370:
					position, tokenIndex = position369, tokenIndex369
					if !_rules[ruleLowerAfterDash]() {
						goto l367
					}
				}
			l369:
				add(ruleCapWordWithDash, position368)
			}
			return true
		l367:
			position, tokenIndex = position367, tokenIndex367
			return false
		},
		/* 52 UpperAfterDash <- <CapWord1> */
		func() bool {
			position371, tokenIndex371 := position, tokenIndex
			{
				position372 := position
				if !_rules[ruleCapWord1]() {
					goto l371
				}
				add(ruleUpperAfterDash, position372)
			}
			return true
		l371:
			position, tokenIndex = position371, tokenIndex371
			return false
		},
		/* 53 LowerAfterDash <- <Word1> */
		func() bool {
			position373, tokenIndex373 := position, tokenIndex
			{
				position374 := position
				if !_rules[ruleWord1]() {
					goto l373
				}
				add(ruleLowerAfterDash, position374)
			}
			return true
		l373:
			position, tokenIndex = position373, tokenIndex373
			return false
		},
		/* 54 TwoLetterGenus <- <(('C' 'a') / ('D' 'o') / ('E' 'a') / ('G' 'e') / ('I' 'a') / ('I' 'o') / ('I' 'x') / ('L' 'o') / ('O' 'a') / ('O' 'o') / ('N' 'u') / ('R' 'a') / ('T' 'y') / ('U' 'a') / ('A' 'a') / ('J' 'a') / ('Z' 'u') / ('L' 'a') / ('Q' 'u') / ('A' 's') / ('B' 'a'))> */
		func() bool {
			position375, tokenIndex375 := position, tokenIndex
			{
				position376 := position
				{
					position377, tokenIndex377 := position, tokenIndex
					if buffer[position] != rune('C') {
						goto l378
					}
					position++
					if buffer[position] != rune('a') {
						goto l378
					}
					position++
					goto l377
				l378:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('D') {
						goto l379
					}
					position++
					if buffer[position] != rune('o') {
						goto l379
					}
					position++
					goto l377
				l379:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('E') {
						goto l380
					}
					position++
					if buffer[position] != rune('a') {
						goto l380
					}
					position++
					goto l377
				l380:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('G') {
						goto l381
					}
					position++
					if buffer[position] != rune('e') {
						goto l381
					}
					position++
					goto l377
				l381:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('I') {
						goto l382
					}
					position++
					if buffer[position] != rune('a') {
						goto l382
					}
					position++
					goto l377
				l382:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('I') {
						goto l383
					}
					position++
					if buffer[position] != rune('o') {
						goto l383
					}
					position++
					goto l377
				l383:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('I') {
						goto l384
					}
					position++
					if buffer[position] != rune('x') {
						goto l384
					}
					position++
					goto l377
				l384:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('L') {
						goto l385
					}
					position++
					if buffer[position] != rune('o') {
						goto l385
					}
					position++
					goto l377
				l385:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('O') {
						goto l386
					}
					position++
					if buffer[position] != rune('a') {
						goto l386
					}
					position++
					goto l377
				l386:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('O') {
						goto l387
					}
					position++
					if buffer[position] != rune('o') {
						goto l387
					}
					position++
					goto l377
				l387:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('N') {
						goto l388
					}
					position++
					if buffer[position] != rune('u') {
						goto l388
					}
					position++
					goto l377
				l388:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('R') {
						goto l389
					}
					position++
					if buffer[position] != rune('a') {
						goto l389
					}
					position++
					goto l377
				l389:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('T') {
						goto l390
					}
					position++
					if buffer[position] != rune('y') {
						goto l390
					}
					position++
					goto l377
				l390:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('U') {
						goto l391
					}
					position++
					if buffer[position] != rune('a') {
						goto l391
					}
					position++
					goto l377
				l391:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('A') {
						goto l392
					}
					position++
					if buffer[position] != rune('a') {
						goto l392
					}
					position++
					goto l377
				l392:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('J') {
						goto l393
					}
					position++
					if buffer[position] != rune('a') {
						goto l393
					}
					position++
					goto l377
				l393:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('Z') {
						goto l394
					}
					position++
					if buffer[position] != rune('u') {
						goto l394
					}
					position++
					goto l377
				l394:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('L') {
						goto l395
					}
					position++
					if buffer[position] != rune('a') {
						goto l395
					}
					position++
					goto l377
				l395:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('Q') {
						goto l396
					}
					position++
					if buffer[position] != rune('u') {
						goto l396
					}
					position++
					goto l377
				l396:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('A') {
						goto l397
					}
					position++
					if buffer[position] != rune('s') {
						goto l397
					}
					position++
					goto l377
				l397:
					position, tokenIndex = position377, tokenIndex377
					if buffer[position] != rune('B') {
						goto l375
					}
					position++
					if buffer[position] != rune('a') {
						goto l375
					}
					position++
				}
			l377:
				add(ruleTwoLetterGenus, position376)
			}
			return true
		l375:
			position, tokenIndex = position375, tokenIndex375
			return false
		},
		/* 55 Word <- <(!((('e' 'x') / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd') / ('p' 'r' 'o') / ('c' 'v') / ('c' 'u' 'l' 't' 'i' 'v' 'a' 'r') / AuthorPrefix / RankUninomial / Approximation / Word4) SpaceCharEOI) (WordApostr / WordStartsWithDigit / MultiDashedWord / Word2 / Word1) &(SpaceCharEOI / '('))> */
		func() bool {
			position398, tokenIndex398 := position, tokenIndex
			{
				position399 := position
				{
					position400, tokenIndex400 := position, tokenIndex
					{
						position401, tokenIndex401 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l402
						}
						position++
						if buffer[position] != rune('x') {
							goto l402
						}
						position++
						goto l401
					l402:
						position, tokenIndex = position401, tokenIndex401
						if buffer[position] != rune('e') {
							goto l403
						}
						position++
						if buffer[position] != rune('t') {
							goto l403
						}
						position++
						goto l401
					l403:
						position, tokenIndex = position401, tokenIndex401
						if buffer[position] != rune('a') {
							goto l404
						}
						position++
						if buffer[position] != rune('n') {
							goto l404
						}
						position++
						if buffer[position] != rune('d') {
							goto l404
						}
						position++
						goto l401
					l404:
						position, tokenIndex = position401, tokenIndex401
						if buffer[position] != rune('a') {
							goto l405
						}
						position++
						if buffer[position] != rune('p') {
							goto l405
						}
						position++
						if buffer[position] != rune('u') {
							goto l405
						}
						position++
						if buffer[position] != rune('d') {
							goto l405
						}
						position++
						goto l401
					l405:
						position, tokenIndex = position401, tokenIndex401
						if buffer[position] != rune('p') {
							goto l406
						}
						position++
						if buffer[position] != rune('r') {
							goto l406
						}
						position++
						if buffer[position] != rune('o') {
							goto l406
						}
						position++
						goto l401
					l406:
						position, tokenIndex = position401, tokenIndex401
						if buffer[position] != rune('c') {
							goto l407
						}
						position++
						if buffer[position] != rune('v') {
							goto l407
						}
						position++
						goto l401
					l407:
						position, tokenIndex = position401, tokenIndex401
						if buffer[position] != rune('c') {
							goto l408
						}
						position++
						if buffer[position] != rune('u') {
							goto l408
						}
						position++
						if buffer[position] != rune('l') {
							goto l408
						}
						position++
						if buffer[position] != rune('t') {
							goto l408
						}
						position++
						if buffer[position] != rune('i') {
							goto l408
						}
						position++
						if buffer[position] != rune('v') {
							goto l408
						}
						position++
						if buffer[position] != rune('a') {
							goto l408
						}
						position++
						if buffer[position] != rune('r') {
							goto l408
						}
						position++
						goto l401
					l408:
						position, tokenIndex = position401, tokenIndex401
						if !_rules[ruleAuthorPrefix]() {
							goto l409
						}
						goto l401
					l409:
						position, tokenIndex = position401, tokenIndex401
						if !_rules[ruleRankUninomial]() {
							goto l410
						}
						goto l401
					l410:
						position, tokenIndex = position401, tokenIndex401
						if !_rules[ruleApproximation]() {
							goto l411
						}
						goto l401
					l411:
						position, tokenIndex = position401, tokenIndex401
						if !_rules[ruleWord4]() {
							goto l400
						}
					}
				l401:
					if !_rules[ruleSpaceCharEOI]() {
						goto l400
					}
					goto l398
				l400:
					position, tokenIndex = position400, tokenIndex400
				}
				{
					position412, tokenIndex412 := position, tokenIndex
					if !_rules[ruleWordApostr]() {
						goto l413
					}
					goto l412
				l413:
					position, tokenIndex = position412, tokenIndex412
					if !_rules[ruleWordStartsWithDigit]() {
						goto l414
					}
					goto l412
				l414:
					position, tokenIndex = position412, tokenIndex412
					if !_rules[ruleMultiDashedWord]() {
						goto l415
					}
					goto l412
				l415:
					position, tokenIndex = position412, tokenIndex412
					if !_rules[ruleWord2]() {
						goto l416
					}
					goto l412
				l416:
					position, tokenIndex = position412, tokenIndex412
					if !_rules[ruleWord1]() {
						goto l398
					}
				}
			l412:
				{
					position417, tokenIndex417 := position, tokenIndex
					{
						position418, tokenIndex418 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l419
						}
						goto l418
					l419:
						position, tokenIndex = position418, tokenIndex418
						if buffer[position] != rune('(') {
							goto l398
						}
						position++
					}
				l418:
					position, tokenIndex = position417, tokenIndex417
				}
				add(ruleWord, position399)
			}
			return true
		l398:
			position, tokenIndex = position398, tokenIndex398
			return false
		},
		/* 56 Word1 <- <((LowerASCII Dash)? NameLowerChar NameLowerChar+)> */
		func() bool {
			position420, tokenIndex420 := position, tokenIndex
			{
				position421 := position
				{
					position422, tokenIndex422 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l422
					}
					if !_rules[ruleDash]() {
						goto l422
					}
					goto l423
				l422:
					position, tokenIndex = position422, tokenIndex422
				}
			l423:
				if !_rules[ruleNameLowerChar]() {
					goto l420
				}
				if !_rules[ruleNameLowerChar]() {
					goto l420
				}
			l424:
				{
					position425, tokenIndex425 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l425
					}
					goto l424
				l425:
					position, tokenIndex = position425, tokenIndex425
				}
				add(ruleWord1, position421)
			}
			return true
		l420:
			position, tokenIndex = position420, tokenIndex420
			return false
		},
		/* 57 WordStartsWithDigit <- <(('1' / '2' / '3' / '4' / '5' / '6' / '7' / '8' / '9') Nums? ('.' / Dash)? NameLowerChar NameLowerChar NameLowerChar NameLowerChar+)> */
		func() bool {
			position426, tokenIndex426 := position, tokenIndex
			{
				position427 := position
				{
					position428, tokenIndex428 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l429
					}
					position++
					goto l428
				l429:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('2') {
						goto l430
					}
					position++
					goto l428
				l430:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('3') {
						goto l431
					}
					position++
					goto l428
				l431:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('4') {
						goto l432
					}
					position++
					goto l428
				l432:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('5') {
						goto l433
					}
					position++
					goto l428
				l433:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('6') {
						goto l434
					}
					position++
					goto l428
				l434:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('7') {
						goto l435
					}
					position++
					goto l428
				l435:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('8') {
						goto l436
					}
					position++
					goto l428
				l436:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('9') {
						goto l426
					}
					position++
				}
			l428:
				{
					position437, tokenIndex437 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l437
					}
					goto l438
				l437:
					position, tokenIndex = position437, tokenIndex437
				}
			l438:
				{
					position439, tokenIndex439 := position, tokenIndex
					{
						position441, tokenIndex441 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l442
						}
						position++
						goto l441
					l442:
						position, tokenIndex = position441, tokenIndex441
						if !_rules[ruleDash]() {
							goto l439
						}
					}
				l441:
					goto l440
				l439:
					position, tokenIndex = position439, tokenIndex439
				}
			l440:
				if !_rules[ruleNameLowerChar]() {
					goto l426
				}
				if !_rules[ruleNameLowerChar]() {
					goto l426
				}
				if !_rules[ruleNameLowerChar]() {
					goto l426
				}
				if !_rules[ruleNameLowerChar]() {
					goto l426
				}
			l443:
				{
					position444, tokenIndex444 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l444
					}
					goto l443
				l444:
					position, tokenIndex = position444, tokenIndex444
				}
				add(ruleWordStartsWithDigit, position427)
			}
			return true
		l426:
			position, tokenIndex = position426, tokenIndex426
			return false
		},
		/* 58 Word2 <- <(NameLowerChar+ Dash? NameLowerChar+)> */
		func() bool {
			position445, tokenIndex445 := position, tokenIndex
			{
				position446 := position
				if !_rules[ruleNameLowerChar]() {
					goto l445
				}
			l447:
				{
					position448, tokenIndex448 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l448
					}
					goto l447
				l448:
					position, tokenIndex = position448, tokenIndex448
				}
				{
					position449, tokenIndex449 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l449
					}
					goto l450
				l449:
					position, tokenIndex = position449, tokenIndex449
				}
			l450:
				if !_rules[ruleNameLowerChar]() {
					goto l445
				}
			l451:
				{
					position452, tokenIndex452 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l452
					}
					goto l451
				l452:
					position, tokenIndex = position452, tokenIndex452
				}
				add(ruleWord2, position446)
			}
			return true
		l445:
			position, tokenIndex = position445, tokenIndex445
			return false
		},
		/* 59 WordApostr <- <(NameLowerChar NameLowerChar* Apostrophe Word1)> */
		func() bool {
			position453, tokenIndex453 := position, tokenIndex
			{
				position454 := position
				if !_rules[ruleNameLowerChar]() {
					goto l453
				}
			l455:
				{
					position456, tokenIndex456 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l456
					}
					goto l455
				l456:
					position, tokenIndex = position456, tokenIndex456
				}
				if !_rules[ruleApostrophe]() {
					goto l453
				}
				if !_rules[ruleWord1]() {
					goto l453
				}
				add(ruleWordApostr, position454)
			}
			return true
		l453:
			position, tokenIndex = position453, tokenIndex453
			return false
		},
		/* 60 Word4 <- <(NameLowerChar+ '.' NameLowerChar)> */
		func() bool {
			position457, tokenIndex457 := position, tokenIndex
			{
				position458 := position
				if !_rules[ruleNameLowerChar]() {
					goto l457
				}
			l459:
				{
					position460, tokenIndex460 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l460
					}
					goto l459
				l460:
					position, tokenIndex = position460, tokenIndex460
				}
				if buffer[position] != rune('.') {
					goto l457
				}
				position++
				if !_rules[ruleNameLowerChar]() {
					goto l457
				}
				add(ruleWord4, position458)
			}
			return true
		l457:
			position, tokenIndex = position457, tokenIndex457
			return false
		},
		/* 61 MultiDashedWord <- <(NameLowerChar+ Dash NameLowerChar+ Dash NameLowerChar+ (Dash NameLowerChar+)?)> */
		func() bool {
			position461, tokenIndex461 := position, tokenIndex
			{
				position462 := position
				if !_rules[ruleNameLowerChar]() {
					goto l461
				}
			l463:
				{
					position464, tokenIndex464 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l464
					}
					goto l463
				l464:
					position, tokenIndex = position464, tokenIndex464
				}
				if !_rules[ruleDash]() {
					goto l461
				}
				if !_rules[ruleNameLowerChar]() {
					goto l461
				}
			l465:
				{
					position466, tokenIndex466 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l466
					}
					goto l465
				l466:
					position, tokenIndex = position466, tokenIndex466
				}
				if !_rules[ruleDash]() {
					goto l461
				}
				if !_rules[ruleNameLowerChar]() {
					goto l461
				}
			l467:
				{
					position468, tokenIndex468 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l468
					}
					goto l467
				l468:
					position, tokenIndex = position468, tokenIndex468
				}
				{
					position469, tokenIndex469 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l469
					}
					if !_rules[ruleNameLowerChar]() {
						goto l469
					}
				l471:
					{
						position472, tokenIndex472 := position, tokenIndex
						if !_rules[ruleNameLowerChar]() {
							goto l472
						}
						goto l471
					l472:
						position, tokenIndex = position472, tokenIndex472
					}
					goto l470
				l469:
					position, tokenIndex = position469, tokenIndex469
				}
			l470:
				add(ruleMultiDashedWord, position462)
			}
			return true
		l461:
			position, tokenIndex = position461, tokenIndex461
			return false
		},
		/* 62 HybridChar <- <'×'> */
		func() bool {
			position473, tokenIndex473 := position, tokenIndex
			{
				position474 := position
				if buffer[position] != rune('×') {
					goto l473
				}
				position++
				add(ruleHybridChar, position474)
			}
			return true
		l473:
			position, tokenIndex = position473, tokenIndex473
			return false
		},
		/* 63 ApproxNameIgnored <- <.*> */
		func() bool {
			{
				position476 := position
			l477:
				{
					position478, tokenIndex478 := position, tokenIndex
					if !matchDot() {
						goto l478
					}
					goto l477
				l478:
					position, tokenIndex = position478, tokenIndex478
				}
				add(ruleApproxNameIgnored, position476)
			}
			return true
		},
		/* 64 Approximation <- <(('s' 'p' '.' _? ('n' 'r' '.')) / ('s' 'p' '.' _? ('a' 'f' 'f' '.')) / ('m' 'o' 'n' 's' 't' '.') / '?' / ((('s' 'p' 'p') / ('n' 'r') / ('s' 'p') / ('a' 'f' 'f') / ('s' 'p' 'e' 'c' 'i' 'e' 's')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position479, tokenIndex479 := position, tokenIndex
			{
				position480 := position
				{
					position481, tokenIndex481 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l482
					}
					position++
					if buffer[position] != rune('p') {
						goto l482
					}
					position++
					if buffer[position] != rune('.') {
						goto l482
					}
					position++
					{
						position483, tokenIndex483 := position, tokenIndex
						if !_rules[rule_]() {
							goto l483
						}
						goto l484
					l483:
						position, tokenIndex = position483, tokenIndex483
					}
				l484:
					if buffer[position] != rune('n') {
						goto l482
					}
					position++
					if buffer[position] != rune('r') {
						goto l482
					}
					position++
					if buffer[position] != rune('.') {
						goto l482
					}
					position++
					goto l481
				l482:
					position, tokenIndex = position481, tokenIndex481
					if buffer[position] != rune('s') {
						goto l485
					}
					position++
					if buffer[position] != rune('p') {
						goto l485
					}
					position++
					if buffer[position] != rune('.') {
						goto l485
					}
					position++
					{
						position486, tokenIndex486 := position, tokenIndex
						if !_rules[rule_]() {
							goto l486
						}
						goto l487
					l486:
						position, tokenIndex = position486, tokenIndex486
					}
				l487:
					if buffer[position] != rune('a') {
						goto l485
					}
					position++
					if buffer[position] != rune('f') {
						goto l485
					}
					position++
					if buffer[position] != rune('f') {
						goto l485
					}
					position++
					if buffer[position] != rune('.') {
						goto l485
					}
					position++
					goto l481
				l485:
					position, tokenIndex = position481, tokenIndex481
					if buffer[position] != rune('m') {
						goto l488
					}
					position++
					if buffer[position] != rune('o') {
						goto l488
					}
					position++
					if buffer[position] != rune('n') {
						goto l488
					}
					position++
					if buffer[position] != rune('s') {
						goto l488
					}
					position++
					if buffer[position] != rune('t') {
						goto l488
					}
					position++
					if buffer[position] != rune('.') {
						goto l488
					}
					position++
					goto l481
				l488:
					position, tokenIndex = position481, tokenIndex481
					if buffer[position] != rune('?') {
						goto l489
					}
					position++
					goto l481
				l489:
					position, tokenIndex = position481, tokenIndex481
					{
						position490, tokenIndex490 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l491
						}
						position++
						if buffer[position] != rune('p') {
							goto l491
						}
						position++
						if buffer[position] != rune('p') {
							goto l491
						}
						position++
						goto l490
					l491:
						position, tokenIndex = position490, tokenIndex490
						if buffer[position] != rune('n') {
							goto l492
						}
						position++
						if buffer[position] != rune('r') {
							goto l492
						}
						position++
						goto l490
					l492:
						position, tokenIndex = position490, tokenIndex490
						if buffer[position] != rune('s') {
							goto l493
						}
						position++
						if buffer[position] != rune('p') {
							goto l493
						}
						position++
						goto l490
					l493:
						position, tokenIndex = position490, tokenIndex490
						if buffer[position] != rune('a') {
							goto l494
						}
						position++
						if buffer[position] != rune('f') {
							goto l494
						}
						position++
						if buffer[position] != rune('f') {
							goto l494
						}
						position++
						goto l490
					l494:
						position, tokenIndex = position490, tokenIndex490
						if buffer[position] != rune('s') {
							goto l479
						}
						position++
						if buffer[position] != rune('p') {
							goto l479
						}
						position++
						if buffer[position] != rune('e') {
							goto l479
						}
						position++
						if buffer[position] != rune('c') {
							goto l479
						}
						position++
						if buffer[position] != rune('i') {
							goto l479
						}
						position++
						if buffer[position] != rune('e') {
							goto l479
						}
						position++
						if buffer[position] != rune('s') {
							goto l479
						}
						position++
					}
				l490:
					{
						position495, tokenIndex495 := position, tokenIndex
						{
							position497, tokenIndex497 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l496
							}
							position, tokenIndex = position497, tokenIndex497
						}
						goto l495
					l496:
						position, tokenIndex = position495, tokenIndex495
						if buffer[position] != rune('.') {
							goto l479
						}
						position++
					}
				l495:
				}
			l481:
				add(ruleApproximation, position480)
			}
			return true
		l479:
			position, tokenIndex = position479, tokenIndex479
			return false
		},
		/* 65 Authorship <- <((AuthorshipCombo / OriginalAuthorship) &(SpaceCharEOI / ';' / ','))> */
		func() bool {
			position498, tokenIndex498 := position, tokenIndex
			{
				position499 := position
				{
					position500, tokenIndex500 := position, tokenIndex
					if !_rules[ruleAuthorshipCombo]() {
						goto l501
					}
					goto l500
				l501:
					position, tokenIndex = position500, tokenIndex500
					if !_rules[ruleOriginalAuthorship]() {
						goto l498
					}
				}
			l500:
				{
					position502, tokenIndex502 := position, tokenIndex
					{
						position503, tokenIndex503 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l504
						}
						goto l503
					l504:
						position, tokenIndex = position503, tokenIndex503
						if buffer[position] != rune(';') {
							goto l505
						}
						position++
						goto l503
					l505:
						position, tokenIndex = position503, tokenIndex503
						if buffer[position] != rune(',') {
							goto l498
						}
						position++
					}
				l503:
					position, tokenIndex = position502, tokenIndex502
				}
				add(ruleAuthorship, position499)
			}
			return true
		l498:
			position, tokenIndex = position498, tokenIndex498
			return false
		},
		/* 66 AuthorshipCombo <- <(OriginalAuthorshipComb (_? CombinationAuthorship)?)> */
		func() bool {
			position506, tokenIndex506 := position, tokenIndex
			{
				position507 := position
				if !_rules[ruleOriginalAuthorshipComb]() {
					goto l506
				}
				{
					position508, tokenIndex508 := position, tokenIndex
					{
						position510, tokenIndex510 := position, tokenIndex
						if !_rules[rule_]() {
							goto l510
						}
						goto l511
					l510:
						position, tokenIndex = position510, tokenIndex510
					}
				l511:
					if !_rules[ruleCombinationAuthorship]() {
						goto l508
					}
					goto l509
				l508:
					position, tokenIndex = position508, tokenIndex508
				}
			l509:
				add(ruleAuthorshipCombo, position507)
			}
			return true
		l506:
			position, tokenIndex = position506, tokenIndex506
			return false
		},
		/* 67 OriginalAuthorship <- <AuthorsGroup> */
		func() bool {
			position512, tokenIndex512 := position, tokenIndex
			{
				position513 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l512
				}
				add(ruleOriginalAuthorship, position513)
			}
			return true
		l512:
			position, tokenIndex = position512, tokenIndex512
			return false
		},
		/* 68 OriginalAuthorshipComb <- <(BasionymAuthorshipYearMisformed / BasionymAuthorship / BasionymAuthorshipMissingParens)> */
		func() bool {
			position514, tokenIndex514 := position, tokenIndex
			{
				position515 := position
				{
					position516, tokenIndex516 := position, tokenIndex
					if !_rules[ruleBasionymAuthorshipYearMisformed]() {
						goto l517
					}
					goto l516
				l517:
					position, tokenIndex = position516, tokenIndex516
					if !_rules[ruleBasionymAuthorship]() {
						goto l518
					}
					goto l516
				l518:
					position, tokenIndex = position516, tokenIndex516
					if !_rules[ruleBasionymAuthorshipMissingParens]() {
						goto l514
					}
				}
			l516:
				add(ruleOriginalAuthorshipComb, position515)
			}
			return true
		l514:
			position, tokenIndex = position514, tokenIndex514
			return false
		},
		/* 69 CombinationAuthorship <- <AuthorsGroup> */
		func() bool {
			position519, tokenIndex519 := position, tokenIndex
			{
				position520 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l519
				}
				add(ruleCombinationAuthorship, position520)
			}
			return true
		l519:
			position, tokenIndex = position519, tokenIndex519
			return false
		},
		/* 70 BasionymAuthorshipMissingParens <- <(MissingParensStart / MissingParensEnd)> */
		func() bool {
			position521, tokenIndex521 := position, tokenIndex
			{
				position522 := position
				{
					position523, tokenIndex523 := position, tokenIndex
					if !_rules[ruleMissingParensStart]() {
						goto l524
					}
					goto l523
				l524:
					position, tokenIndex = position523, tokenIndex523
					if !_rules[ruleMissingParensEnd]() {
						goto l521
					}
				}
			l523:
				add(ruleBasionymAuthorshipMissingParens, position522)
			}
			return true
		l521:
			position, tokenIndex = position521, tokenIndex521
			return false
		},
		/* 71 MissingParensStart <- <('(' _? AuthorsGroup)> */
		func() bool {
			position525, tokenIndex525 := position, tokenIndex
			{
				position526 := position
				if buffer[position] != rune('(') {
					goto l525
				}
				position++
				{
					position527, tokenIndex527 := position, tokenIndex
					if !_rules[rule_]() {
						goto l527
					}
					goto l528
				l527:
					position, tokenIndex = position527, tokenIndex527
				}
			l528:
				if !_rules[ruleAuthorsGroup]() {
					goto l525
				}
				add(ruleMissingParensStart, position526)
			}
			return true
		l525:
			position, tokenIndex = position525, tokenIndex525
			return false
		},
		/* 72 MissingParensEnd <- <(AuthorsGroup _? ')')> */
		func() bool {
			position529, tokenIndex529 := position, tokenIndex
			{
				position530 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l529
				}
				{
					position531, tokenIndex531 := position, tokenIndex
					if !_rules[rule_]() {
						goto l531
					}
					goto l532
				l531:
					position, tokenIndex = position531, tokenIndex531
				}
			l532:
				if buffer[position] != rune(')') {
					goto l529
				}
				position++
				add(ruleMissingParensEnd, position530)
			}
			return true
		l529:
			position, tokenIndex = position529, tokenIndex529
			return false
		},
		/* 73 BasionymAuthorshipYearMisformed <- <('(' _? AuthorsGroup _? ')' (_? ',')? _? Year)> */
		func() bool {
			position533, tokenIndex533 := position, tokenIndex
			{
				position534 := position
				if buffer[position] != rune('(') {
					goto l533
				}
				position++
				{
					position535, tokenIndex535 := position, tokenIndex
					if !_rules[rule_]() {
						goto l535
					}
					goto l536
				l535:
					position, tokenIndex = position535, tokenIndex535
				}
			l536:
				if !_rules[ruleAuthorsGroup]() {
					goto l533
				}
				{
					position537, tokenIndex537 := position, tokenIndex
					if !_rules[rule_]() {
						goto l537
					}
					goto l538
				l537:
					position, tokenIndex = position537, tokenIndex537
				}
			l538:
				if buffer[position] != rune(')') {
					goto l533
				}
				position++
				{
					position539, tokenIndex539 := position, tokenIndex
					{
						position541, tokenIndex541 := position, tokenIndex
						if !_rules[rule_]() {
							goto l541
						}
						goto l542
					l541:
						position, tokenIndex = position541, tokenIndex541
					}
				l542:
					if buffer[position] != rune(',') {
						goto l539
					}
					position++
					goto l540
				l539:
					position, tokenIndex = position539, tokenIndex539
				}
			l540:
				{
					position543, tokenIndex543 := position, tokenIndex
					if !_rules[rule_]() {
						goto l543
					}
					goto l544
				l543:
					position, tokenIndex = position543, tokenIndex543
				}
			l544:
				if !_rules[ruleYear]() {
					goto l533
				}
				add(ruleBasionymAuthorshipYearMisformed, position534)
			}
			return true
		l533:
			position, tokenIndex = position533, tokenIndex533
			return false
		},
		/* 74 BasionymAuthorship <- <(BasionymAuthorship1 / BasionymAuthorship2Parens)> */
		func() bool {
			position545, tokenIndex545 := position, tokenIndex
			{
				position546 := position
				{
					position547, tokenIndex547 := position, tokenIndex
					if !_rules[ruleBasionymAuthorship1]() {
						goto l548
					}
					goto l547
				l548:
					position, tokenIndex = position547, tokenIndex547
					if !_rules[ruleBasionymAuthorship2Parens]() {
						goto l545
					}
				}
			l547:
				add(ruleBasionymAuthorship, position546)
			}
			return true
		l545:
			position, tokenIndex = position545, tokenIndex545
			return false
		},
		/* 75 BasionymAuthorship1 <- <('(' _? AuthorsGroup _? ')')> */
		func() bool {
			position549, tokenIndex549 := position, tokenIndex
			{
				position550 := position
				if buffer[position] != rune('(') {
					goto l549
				}
				position++
				{
					position551, tokenIndex551 := position, tokenIndex
					if !_rules[rule_]() {
						goto l551
					}
					goto l552
				l551:
					position, tokenIndex = position551, tokenIndex551
				}
			l552:
				if !_rules[ruleAuthorsGroup]() {
					goto l549
				}
				{
					position553, tokenIndex553 := position, tokenIndex
					if !_rules[rule_]() {
						goto l553
					}
					goto l554
				l553:
					position, tokenIndex = position553, tokenIndex553
				}
			l554:
				if buffer[position] != rune(')') {
					goto l549
				}
				position++
				add(ruleBasionymAuthorship1, position550)
			}
			return true
		l549:
			position, tokenIndex = position549, tokenIndex549
			return false
		},
		/* 76 BasionymAuthorship2Parens <- <('(' _? '(' _? AuthorsGroup _? ')' _? ')')> */
		func() bool {
			position555, tokenIndex555 := position, tokenIndex
			{
				position556 := position
				if buffer[position] != rune('(') {
					goto l555
				}
				position++
				{
					position557, tokenIndex557 := position, tokenIndex
					if !_rules[rule_]() {
						goto l557
					}
					goto l558
				l557:
					position, tokenIndex = position557, tokenIndex557
				}
			l558:
				if buffer[position] != rune('(') {
					goto l555
				}
				position++
				{
					position559, tokenIndex559 := position, tokenIndex
					if !_rules[rule_]() {
						goto l559
					}
					goto l560
				l559:
					position, tokenIndex = position559, tokenIndex559
				}
			l560:
				if !_rules[ruleAuthorsGroup]() {
					goto l555
				}
				{
					position561, tokenIndex561 := position, tokenIndex
					if !_rules[rule_]() {
						goto l561
					}
					goto l562
				l561:
					position, tokenIndex = position561, tokenIndex561
				}
			l562:
				if buffer[position] != rune(')') {
					goto l555
				}
				position++
				{
					position563, tokenIndex563 := position, tokenIndex
					if !_rules[rule_]() {
						goto l563
					}
					goto l564
				l563:
					position, tokenIndex = position563, tokenIndex563
				}
			l564:
				if buffer[position] != rune(')') {
					goto l555
				}
				position++
				add(ruleBasionymAuthorship2Parens, position556)
			}
			return true
		l555:
			position, tokenIndex = position555, tokenIndex555
			return false
		},
		/* 77 AuthorsGroup <- <(AuthorsTeam (_ (AuthorEmend / AuthorEx) AuthorsTeam)?)> */
		func() bool {
			position565, tokenIndex565 := position, tokenIndex
			{
				position566 := position
				if !_rules[ruleAuthorsTeam]() {
					goto l565
				}
				{
					position567, tokenIndex567 := position, tokenIndex
					if !_rules[rule_]() {
						goto l567
					}
					{
						position569, tokenIndex569 := position, tokenIndex
						if !_rules[ruleAuthorEmend]() {
							goto l570
						}
						goto l569
					l570:
						position, tokenIndex = position569, tokenIndex569
						if !_rules[ruleAuthorEx]() {
							goto l567
						}
					}
				l569:
					if !_rules[ruleAuthorsTeam]() {
						goto l567
					}
					goto l568
				l567:
					position, tokenIndex = position567, tokenIndex567
				}
			l568:
				add(ruleAuthorsGroup, position566)
			}
			return true
		l565:
			position, tokenIndex = position565, tokenIndex565
			return false
		},
		/* 78 AuthorsTeam <- <(Author (AuthorSep Author)* (_? ','? _? Year)?)> */
		func() bool {
			position571, tokenIndex571 := position, tokenIndex
			{
				position572 := position
				if !_rules[ruleAuthor]() {
					goto l571
				}
			l573:
				{
					position574, tokenIndex574 := position, tokenIndex
					if !_rules[ruleAuthorSep]() {
						goto l574
					}
					if !_rules[ruleAuthor]() {
						goto l574
					}
					goto l573
				l574:
					position, tokenIndex = position574, tokenIndex574
				}
				{
					position575, tokenIndex575 := position, tokenIndex
					{
						position577, tokenIndex577 := position, tokenIndex
						if !_rules[rule_]() {
							goto l577
						}
						goto l578
					l577:
						position, tokenIndex = position577, tokenIndex577
					}
				l578:
					{
						position579, tokenIndex579 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l579
						}
						position++
						goto l580
					l579:
						position, tokenIndex = position579, tokenIndex579
					}
				l580:
					{
						position581, tokenIndex581 := position, tokenIndex
						if !_rules[rule_]() {
							goto l581
						}
						goto l582
					l581:
						position, tokenIndex = position581, tokenIndex581
					}
				l582:
					if !_rules[ruleYear]() {
						goto l575
					}
					goto l576
				l575:
					position, tokenIndex = position575, tokenIndex575
				}
			l576:
				add(ruleAuthorsTeam, position572)
			}
			return true
		l571:
			position, tokenIndex = position571, tokenIndex571
			return false
		},
		/* 79 AuthorSep <- <(AuthorSep1 / AuthorSep2)> */
		func() bool {
			position583, tokenIndex583 := position, tokenIndex
			{
				position584 := position
				{
					position585, tokenIndex585 := position, tokenIndex
					if !_rules[ruleAuthorSep1]() {
						goto l586
					}
					goto l585
				l586:
					position, tokenIndex = position585, tokenIndex585
					if !_rules[ruleAuthorSep2]() {
						goto l583
					}
				}
			l585:
				add(ruleAuthorSep, position584)
			}
			return true
		l583:
			position, tokenIndex = position583, tokenIndex583
			return false
		},
		/* 80 AuthorSep1 <- <(_? (',' _)? ('&' / AuthorSepSpanish / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd')) _?)> */
		func() bool {
			position587, tokenIndex587 := position, tokenIndex
			{
				position588 := position
				{
					position589, tokenIndex589 := position, tokenIndex
					if !_rules[rule_]() {
						goto l589
					}
					goto l590
				l589:
					position, tokenIndex = position589, tokenIndex589
				}
			l590:
				{
					position591, tokenIndex591 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l591
					}
					position++
					if !_rules[rule_]() {
						goto l591
					}
					goto l592
				l591:
					position, tokenIndex = position591, tokenIndex591
				}
			l592:
				{
					position593, tokenIndex593 := position, tokenIndex
					if buffer[position] != rune('&') {
						goto l594
					}
					position++
					goto l593
				l594:
					position, tokenIndex = position593, tokenIndex593
					if !_rules[ruleAuthorSepSpanish]() {
						goto l595
					}
					goto l593
				l595:
					position, tokenIndex = position593, tokenIndex593
					if buffer[position] != rune('e') {
						goto l596
					}
					position++
					if buffer[position] != rune('t') {
						goto l596
					}
					position++
					goto l593
				l596:
					position, tokenIndex = position593, tokenIndex593
					if buffer[position] != rune('a') {
						goto l597
					}
					position++
					if buffer[position] != rune('n') {
						goto l597
					}
					position++
					if buffer[position] != rune('d') {
						goto l597
					}
					position++
					goto l593
				l597:
					position, tokenIndex = position593, tokenIndex593
					if buffer[position] != rune('a') {
						goto l587
					}
					position++
					if buffer[position] != rune('p') {
						goto l587
					}
					position++
					if buffer[position] != rune('u') {
						goto l587
					}
					position++
					if buffer[position] != rune('d') {
						goto l587
					}
					position++
				}
			l593:
				{
					position598, tokenIndex598 := position, tokenIndex
					if !_rules[rule_]() {
						goto l598
					}
					goto l599
				l598:
					position, tokenIndex = position598, tokenIndex598
				}
			l599:
				add(ruleAuthorSep1, position588)
			}
			return true
		l587:
			position, tokenIndex = position587, tokenIndex587
			return false
		},
		/* 81 AuthorSep2 <- <(_? ',' _?)> */
		func() bool {
			position600, tokenIndex600 := position, tokenIndex
			{
				position601 := position
				{
					position602, tokenIndex602 := position, tokenIndex
					if !_rules[rule_]() {
						goto l602
					}
					goto l603
				l602:
					position, tokenIndex = position602, tokenIndex602
				}
			l603:
				if buffer[position] != rune(',') {
					goto l600
				}
				position++
				{
					position604, tokenIndex604 := position, tokenIndex
					if !_rules[rule_]() {
						goto l604
					}
					goto l605
				l604:
					position, tokenIndex = position604, tokenIndex604
				}
			l605:
				add(ruleAuthorSep2, position601)
			}
			return true
		l600:
			position, tokenIndex = position600, tokenIndex600
			return false
		},
		/* 82 AuthorSepSpanish <- <(_? 'y' _?)> */
		func() bool {
			position606, tokenIndex606 := position, tokenIndex
			{
				position607 := position
				{
					position608, tokenIndex608 := position, tokenIndex
					if !_rules[rule_]() {
						goto l608
					}
					goto l609
				l608:
					position, tokenIndex = position608, tokenIndex608
				}
			l609:
				if buffer[position] != rune('y') {
					goto l606
				}
				position++
				{
					position610, tokenIndex610 := position, tokenIndex
					if !_rules[rule_]() {
						goto l610
					}
					goto l611
				l610:
					position, tokenIndex = position610, tokenIndex610
				}
			l611:
				add(ruleAuthorSepSpanish, position607)
			}
			return true
		l606:
			position, tokenIndex = position606, tokenIndex606
			return false
		},
		/* 83 AuthorEx <- <((('e' 'x' '.'?) / ('i' 'n')) _)> */
		func() bool {
			position612, tokenIndex612 := position, tokenIndex
			{
				position613 := position
				{
					position614, tokenIndex614 := position, tokenIndex
					if buffer[position] != rune('e') {
						goto l615
					}
					position++
					if buffer[position] != rune('x') {
						goto l615
					}
					position++
					{
						position616, tokenIndex616 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l616
						}
						position++
						goto l617
					l616:
						position, tokenIndex = position616, tokenIndex616
					}
				l617:
					goto l614
				l615:
					position, tokenIndex = position614, tokenIndex614
					if buffer[position] != rune('i') {
						goto l612
					}
					position++
					if buffer[position] != rune('n') {
						goto l612
					}
					position++
				}
			l614:
				if !_rules[rule_]() {
					goto l612
				}
				add(ruleAuthorEx, position613)
			}
			return true
		l612:
			position, tokenIndex = position612, tokenIndex612
			return false
		},
		/* 84 AuthorEmend <- <('e' 'm' 'e' 'n' 'd' '.'? _)> */
		func() bool {
			position618, tokenIndex618 := position, tokenIndex
			{
				position619 := position
				if buffer[position] != rune('e') {
					goto l618
				}
				position++
				if buffer[position] != rune('m') {
					goto l618
				}
				position++
				if buffer[position] != rune('e') {
					goto l618
				}
				position++
				if buffer[position] != rune('n') {
					goto l618
				}
				position++
				if buffer[position] != rune('d') {
					goto l618
				}
				position++
				{
					position620, tokenIndex620 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l620
					}
					position++
					goto l621
				l620:
					position, tokenIndex = position620, tokenIndex620
				}
			l621:
				if !_rules[rule_]() {
					goto l618
				}
				add(ruleAuthorEmend, position619)
			}
			return true
		l618:
			position, tokenIndex = position618, tokenIndex618
			return false
		},
		/* 85 Author <- <((Author0 / Author1 / Author2 / UnknownAuthor) (_ AuthorEtAl)?)> */
		func() bool {
			position622, tokenIndex622 := position, tokenIndex
			{
				position623 := position
				{
					position624, tokenIndex624 := position, tokenIndex
					if !_rules[ruleAuthor0]() {
						goto l625
					}
					goto l624
				l625:
					position, tokenIndex = position624, tokenIndex624
					if !_rules[ruleAuthor1]() {
						goto l626
					}
					goto l624
				l626:
					position, tokenIndex = position624, tokenIndex624
					if !_rules[ruleAuthor2]() {
						goto l627
					}
					goto l624
				l627:
					position, tokenIndex = position624, tokenIndex624
					if !_rules[ruleUnknownAuthor]() {
						goto l622
					}
				}
			l624:
				{
					position628, tokenIndex628 := position, tokenIndex
					if !_rules[rule_]() {
						goto l628
					}
					if !_rules[ruleAuthorEtAl]() {
						goto l628
					}
					goto l629
				l628:
					position, tokenIndex = position628, tokenIndex628
				}
			l629:
				add(ruleAuthor, position623)
			}
			return true
		l622:
			position, tokenIndex = position622, tokenIndex622
			return false
		},
		/* 86 Author0 <- <(Author2 FiliusFNoSpace)> */
		func() bool {
			position630, tokenIndex630 := position, tokenIndex
			{
				position631 := position
				if !_rules[ruleAuthor2]() {
					goto l630
				}
				if !_rules[ruleFiliusFNoSpace]() {
					goto l630
				}
				add(ruleAuthor0, position631)
			}
			return true
		l630:
			position, tokenIndex = position630, tokenIndex630
			return false
		},
		/* 87 Author1 <- <(Author2 _? (Filius / AuthorSuffix))> */
		func() bool {
			position632, tokenIndex632 := position, tokenIndex
			{
				position633 := position
				if !_rules[ruleAuthor2]() {
					goto l632
				}
				{
					position634, tokenIndex634 := position, tokenIndex
					if !_rules[rule_]() {
						goto l634
					}
					goto l635
				l634:
					position, tokenIndex = position634, tokenIndex634
				}
			l635:
				{
					position636, tokenIndex636 := position, tokenIndex
					if !_rules[ruleFilius]() {
						goto l637
					}
					goto l636
				l637:
					position, tokenIndex = position636, tokenIndex636
					if !_rules[ruleAuthorSuffix]() {
						goto l632
					}
				}
			l636:
				add(ruleAuthor1, position633)
			}
			return true
		l632:
			position, tokenIndex = position632, tokenIndex632
			return false
		},
		/* 88 Author2 <- <(AuthorWord (_? AuthorWord)*)> */
		func() bool {
			position638, tokenIndex638 := position, tokenIndex
			{
				position639 := position
				if !_rules[ruleAuthorWord]() {
					goto l638
				}
			l640:
				{
					position641, tokenIndex641 := position, tokenIndex
					{
						position642, tokenIndex642 := position, tokenIndex
						if !_rules[rule_]() {
							goto l642
						}
						goto l643
					l642:
						position, tokenIndex = position642, tokenIndex642
					}
				l643:
					if !_rules[ruleAuthorWord]() {
						goto l641
					}
					goto l640
				l641:
					position, tokenIndex = position641, tokenIndex641
				}
				add(ruleAuthor2, position639)
			}
			return true
		l638:
			position, tokenIndex = position638, tokenIndex638
			return false
		},
		/* 89 UnknownAuthor <- <('?' / ((('a' 'u' 'c' 't') / ('a' 'n' 'o' 'n')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position644, tokenIndex644 := position, tokenIndex
			{
				position645 := position
				{
					position646, tokenIndex646 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l647
					}
					position++
					goto l646
				l647:
					position, tokenIndex = position646, tokenIndex646
					{
						position648, tokenIndex648 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l649
						}
						position++
						if buffer[position] != rune('u') {
							goto l649
						}
						position++
						if buffer[position] != rune('c') {
							goto l649
						}
						position++
						if buffer[position] != rune('t') {
							goto l649
						}
						position++
						goto l648
					l649:
						position, tokenIndex = position648, tokenIndex648
						if buffer[position] != rune('a') {
							goto l644
						}
						position++
						if buffer[position] != rune('n') {
							goto l644
						}
						position++
						if buffer[position] != rune('o') {
							goto l644
						}
						position++
						if buffer[position] != rune('n') {
							goto l644
						}
						position++
					}
				l648:
					{
						position650, tokenIndex650 := position, tokenIndex
						{
							position652, tokenIndex652 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l651
							}
							position, tokenIndex = position652, tokenIndex652
						}
						goto l650
					l651:
						position, tokenIndex = position650, tokenIndex650
						if buffer[position] != rune('.') {
							goto l644
						}
						position++
					}
				l650:
				}
			l646:
				add(ruleUnknownAuthor, position645)
			}
			return true
		l644:
			position, tokenIndex = position644, tokenIndex644
			return false
		},
		/* 90 AuthorWord <- <(!(('b' / 'B') ('o' / 'O') ('l' / 'L') ('d' / 'D') ':') (AuthorDashInitials / AuthorWord2 / AuthorWord3 / AuthorPrefix))> */
		func() bool {
			position653, tokenIndex653 := position, tokenIndex
			{
				position654 := position
				{
					position655, tokenIndex655 := position, tokenIndex
					{
						position656, tokenIndex656 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l657
						}
						position++
						goto l656
					l657:
						position, tokenIndex = position656, tokenIndex656
						if buffer[position] != rune('B') {
							goto l655
						}
						position++
					}
				l656:
					{
						position658, tokenIndex658 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l659
						}
						position++
						goto l658
					l659:
						position, tokenIndex = position658, tokenIndex658
						if buffer[position] != rune('O') {
							goto l655
						}
						position++
					}
				l658:
					{
						position660, tokenIndex660 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l661
						}
						position++
						goto l660
					l661:
						position, tokenIndex = position660, tokenIndex660
						if buffer[position] != rune('L') {
							goto l655
						}
						position++
					}
				l660:
					{
						position662, tokenIndex662 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l663
						}
						position++
						goto l662
					l663:
						position, tokenIndex = position662, tokenIndex662
						if buffer[position] != rune('D') {
							goto l655
						}
						position++
					}
				l662:
					if buffer[position] != rune(':') {
						goto l655
					}
					position++
					goto l653
				l655:
					position, tokenIndex = position655, tokenIndex655
				}
				{
					position664, tokenIndex664 := position, tokenIndex
					if !_rules[ruleAuthorDashInitials]() {
						goto l665
					}
					goto l664
				l665:
					position, tokenIndex = position664, tokenIndex664
					if !_rules[ruleAuthorWord2]() {
						goto l666
					}
					goto l664
				l666:
					position, tokenIndex = position664, tokenIndex664
					if !_rules[ruleAuthorWord3]() {
						goto l667
					}
					goto l664
				l667:
					position, tokenIndex = position664, tokenIndex664
					if !_rules[ruleAuthorPrefix]() {
						goto l653
					}
				}
			l664:
				add(ruleAuthorWord, position654)
			}
			return true
		l653:
			position, tokenIndex = position653, tokenIndex653
			return false
		},
		/* 91 AuthorEtAl <- <(('a' 'r' 'g' '.') / ('e' 't' ' ' 'a' 'l' '.' '{' '?' '}') / ((('e' 't') / '&') (' ' 'a' 'l') '.'?))> */
		func() bool {
			position668, tokenIndex668 := position, tokenIndex
			{
				position669 := position
				{
					position670, tokenIndex670 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l671
					}
					position++
					if buffer[position] != rune('r') {
						goto l671
					}
					position++
					if buffer[position] != rune('g') {
						goto l671
					}
					position++
					if buffer[position] != rune('.') {
						goto l671
					}
					position++
					goto l670
				l671:
					position, tokenIndex = position670, tokenIndex670
					if buffer[position] != rune('e') {
						goto l672
					}
					position++
					if buffer[position] != rune('t') {
						goto l672
					}
					position++
					if buffer[position] != rune(' ') {
						goto l672
					}
					position++
					if buffer[position] != rune('a') {
						goto l672
					}
					position++
					if buffer[position] != rune('l') {
						goto l672
					}
					position++
					if buffer[position] != rune('.') {
						goto l672
					}
					position++
					if buffer[position] != rune('{') {
						goto l672
					}
					position++
					if buffer[position] != rune('?') {
						goto l672
					}
					position++
					if buffer[position] != rune('}') {
						goto l672
					}
					position++
					goto l670
				l672:
					position, tokenIndex = position670, tokenIndex670
					{
						position673, tokenIndex673 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l674
						}
						position++
						if buffer[position] != rune('t') {
							goto l674
						}
						position++
						goto l673
					l674:
						position, tokenIndex = position673, tokenIndex673
						if buffer[position] != rune('&') {
							goto l668
						}
						position++
					}
				l673:
					if buffer[position] != rune(' ') {
						goto l668
					}
					position++
					if buffer[position] != rune('a') {
						goto l668
					}
					position++
					if buffer[position] != rune('l') {
						goto l668
					}
					position++
					{
						position675, tokenIndex675 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l675
						}
						position++
						goto l676
					l675:
						position, tokenIndex = position675, tokenIndex675
					}
				l676:
				}
			l670:
				add(ruleAuthorEtAl, position669)
			}
			return true
		l668:
			position, tokenIndex = position668, tokenIndex668
			return false
		},
		/* 92 AuthorWord2 <- <(AuthorWord3 Dash AuthorWordSoft)> */
		func() bool {
			position677, tokenIndex677 := position, tokenIndex
			{
				position678 := position
				if !_rules[ruleAuthorWord3]() {
					goto l677
				}
				if !_rules[ruleDash]() {
					goto l677
				}
				if !_rules[ruleAuthorWordSoft]() {
					goto l677
				}
				add(ruleAuthorWord2, position678)
			}
			return true
		l677:
			position, tokenIndex = position677, tokenIndex677
			return false
		},
		/* 93 AuthorWord3 <- <(AuthorPrefixGlued? (AllCapsAuthorWord / CapAuthorWord) '.'?)> */
		func() bool {
			position679, tokenIndex679 := position, tokenIndex
			{
				position680 := position
				{
					position681, tokenIndex681 := position, tokenIndex
					if !_rules[ruleAuthorPrefixGlued]() {
						goto l681
					}
					goto l682
				l681:
					position, tokenIndex = position681, tokenIndex681
				}
			l682:
				{
					position683, tokenIndex683 := position, tokenIndex
					if !_rules[ruleAllCapsAuthorWord]() {
						goto l684
					}
					goto l683
				l684:
					position, tokenIndex = position683, tokenIndex683
					if !_rules[ruleCapAuthorWord]() {
						goto l679
					}
				}
			l683:
				{
					position685, tokenIndex685 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l685
					}
					position++
					goto l686
				l685:
					position, tokenIndex = position685, tokenIndex685
				}
			l686:
				add(ruleAuthorWord3, position680)
			}
			return true
		l679:
			position, tokenIndex = position679, tokenIndex679
			return false
		},
		/* 94 AuthorDashInitials <- <(AuthorUpperChar '.'? Dash AuthorUpperChar '.'?)> */
		func() bool {
			position687, tokenIndex687 := position, tokenIndex
			{
				position688 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l687
				}
				{
					position689, tokenIndex689 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l689
					}
					position++
					goto l690
				l689:
					position, tokenIndex = position689, tokenIndex689
				}
			l690:
				if !_rules[ruleDash]() {
					goto l687
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l687
				}
				{
					position691, tokenIndex691 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l691
					}
					position++
					goto l692
				l691:
					position, tokenIndex = position691, tokenIndex691
				}
			l692:
				add(ruleAuthorDashInitials, position688)
			}
			return true
		l687:
			position, tokenIndex = position687, tokenIndex687
			return false
		},
		/* 95 AuthorWordSoft <- <(((AuthorUpperChar (AuthorUpperChar+ / AuthorLowerChar+)) / AuthorLowerChar+) '.'?)> */
		func() bool {
			position693, tokenIndex693 := position, tokenIndex
			{
				position694 := position
				{
					position695, tokenIndex695 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l696
					}
					{
						position697, tokenIndex697 := position, tokenIndex
						if !_rules[ruleAuthorUpperChar]() {
							goto l698
						}
					l699:
						{
							position700, tokenIndex700 := position, tokenIndex
							if !_rules[ruleAuthorUpperChar]() {
								goto l700
							}
							goto l699
						l700:
							position, tokenIndex = position700, tokenIndex700
						}
						goto l697
					l698:
						position, tokenIndex = position697, tokenIndex697
						if !_rules[ruleAuthorLowerChar]() {
							goto l696
						}
					l701:
						{
							position702, tokenIndex702 := position, tokenIndex
							if !_rules[ruleAuthorLowerChar]() {
								goto l702
							}
							goto l701
						l702:
							position, tokenIndex = position702, tokenIndex702
						}
					}
				l697:
					goto l695
				l696:
					position, tokenIndex = position695, tokenIndex695
					if !_rules[ruleAuthorLowerChar]() {
						goto l693
					}
				l703:
					{
						position704, tokenIndex704 := position, tokenIndex
						if !_rules[ruleAuthorLowerChar]() {
							goto l704
						}
						goto l703
					l704:
						position, tokenIndex = position704, tokenIndex704
					}
				}
			l695:
				{
					position705, tokenIndex705 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l705
					}
					position++
					goto l706
				l705:
					position, tokenIndex = position705, tokenIndex705
				}
			l706:
				add(ruleAuthorWordSoft, position694)
			}
			return true
		l693:
			position, tokenIndex = position693, tokenIndex693
			return false
		},
		/* 96 CapAuthorWord <- <(AuthorUpperChar AuthorLowerChar*)> */
		func() bool {
			position707, tokenIndex707 := position, tokenIndex
			{
				position708 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l707
				}
			l709:
				{
					position710, tokenIndex710 := position, tokenIndex
					if !_rules[ruleAuthorLowerChar]() {
						goto l710
					}
					goto l709
				l710:
					position, tokenIndex = position710, tokenIndex710
				}
				add(ruleCapAuthorWord, position708)
			}
			return true
		l707:
			position, tokenIndex = position707, tokenIndex707
			return false
		},
		/* 97 AllCapsAuthorWord <- <(AuthorUpperChar AuthorUpperChar+)> */
		func() bool {
			position711, tokenIndex711 := position, tokenIndex
			{
				position712 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l711
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l711
				}
			l713:
				{
					position714, tokenIndex714 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l714
					}
					goto l713
				l714:
					position, tokenIndex = position714, tokenIndex714
				}
				add(ruleAllCapsAuthorWord, position712)
			}
			return true
		l711:
			position, tokenIndex = position711, tokenIndex711
			return false
		},
		/* 98 Filius <- <(FiliusF / ('f' 'i' 'l' '.') / ('f' 'i' 'l' 'i' 'u' 's'))> */
		func() bool {
			position715, tokenIndex715 := position, tokenIndex
			{
				position716 := position
				{
					position717, tokenIndex717 := position, tokenIndex
					if !_rules[ruleFiliusF]() {
						goto l718
					}
					goto l717
				l718:
					position, tokenIndex = position717, tokenIndex717
					if buffer[position] != rune('f') {
						goto l719
					}
					position++
					if buffer[position] != rune('i') {
						goto l719
					}
					position++
					if buffer[position] != rune('l') {
						goto l719
					}
					position++
					if buffer[position] != rune('.') {
						goto l719
					}
					position++
					goto l717
				l719:
					position, tokenIndex = position717, tokenIndex717
					if buffer[position] != rune('f') {
						goto l715
					}
					position++
					if buffer[position] != rune('i') {
						goto l715
					}
					position++
					if buffer[position] != rune('l') {
						goto l715
					}
					position++
					if buffer[position] != rune('i') {
						goto l715
					}
					position++
					if buffer[position] != rune('u') {
						goto l715
					}
					position++
					if buffer[position] != rune('s') {
						goto l715
					}
					position++
				}
			l717:
				add(ruleFilius, position716)
			}
			return true
		l715:
			position, tokenIndex = position715, tokenIndex715
			return false
		},
		/* 99 FiliusF <- <('f' '.' !(_ Word))> */
		func() bool {
			position720, tokenIndex720 := position, tokenIndex
			{
				position721 := position
				if buffer[position] != rune('f') {
					goto l720
				}
				position++
				if buffer[position] != rune('.') {
					goto l720
				}
				position++
				{
					position722, tokenIndex722 := position, tokenIndex
					if !_rules[rule_]() {
						goto l722
					}
					if !_rules[ruleWord]() {
						goto l722
					}
					goto l720
				l722:
					position, tokenIndex = position722, tokenIndex722
				}
				add(ruleFiliusF, position721)
			}
			return true
		l720:
			position, tokenIndex = position720, tokenIndex720
			return false
		},
		/* 100 FiliusFNoSpace <- <('f' '.')> */
		func() bool {
			position723, tokenIndex723 := position, tokenIndex
			{
				position724 := position
				if buffer[position] != rune('f') {
					goto l723
				}
				position++
				if buffer[position] != rune('.') {
					goto l723
				}
				position++
				add(ruleFiliusFNoSpace, position724)
			}
			return true
		l723:
			position, tokenIndex = position723, tokenIndex723
			return false
		},
		/* 101 AuthorSuffix <- <('b' 'i' 's')> */
		func() bool {
			position725, tokenIndex725 := position, tokenIndex
			{
				position726 := position
				if buffer[position] != rune('b') {
					goto l725
				}
				position++
				if buffer[position] != rune('i') {
					goto l725
				}
				position++
				if buffer[position] != rune('s') {
					goto l725
				}
				position++
				add(ruleAuthorSuffix, position726)
			}
			return true
		l725:
			position, tokenIndex = position725, tokenIndex725
			return false
		},
		/* 102 AuthorPrefixGlued <- <(('d' / 'O' / 'L' / ('M' 'c') / 'M') Apostrophe)> */
		func() bool {
			position727, tokenIndex727 := position, tokenIndex
			{
				position728 := position
				{
					position729, tokenIndex729 := position, tokenIndex
					if buffer[position] != rune('d') {
						goto l730
					}
					position++
					goto l729
				l730:
					position, tokenIndex = position729, tokenIndex729
					if buffer[position] != rune('O') {
						goto l731
					}
					position++
					goto l729
				l731:
					position, tokenIndex = position729, tokenIndex729
					if buffer[position] != rune('L') {
						goto l732
					}
					position++
					goto l729
				l732:
					position, tokenIndex = position729, tokenIndex729
					if buffer[position] != rune('M') {
						goto l733
					}
					position++
					if buffer[position] != rune('c') {
						goto l733
					}
					position++
					goto l729
				l733:
					position, tokenIndex = position729, tokenIndex729
					if buffer[position] != rune('M') {
						goto l727
					}
					position++
				}
			l729:
				if !_rules[ruleApostrophe]() {
					goto l727
				}
				add(ruleAuthorPrefixGlued, position728)
			}
			return true
		l727:
			position, tokenIndex = position727, tokenIndex727
			return false
		},
		/* 103 AuthorPrefix <- <(AuthorPrefix1 / AuthorPrefix2)> */
		func() bool {
			position734, tokenIndex734 := position, tokenIndex
			{
				position735 := position
				{
					position736, tokenIndex736 := position, tokenIndex
					if !_rules[ruleAuthorPrefix1]() {
						goto l737
					}
					goto l736
				l737:
					position, tokenIndex = position736, tokenIndex736
					if !_rules[ruleAuthorPrefix2]() {
						goto l734
					}
				}
			l736:
				add(ruleAuthorPrefix, position735)
			}
			return true
		l734:
			position, tokenIndex = position734, tokenIndex734
			return false
		},
		/* 104 AuthorPrefix2 <- <(('v' '.' (_? ('d' '.'))?) / (Apostrophe 't'))> */
		func() bool {
			position738, tokenIndex738 := position, tokenIndex
			{
				position739 := position
				{
					position740, tokenIndex740 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l741
					}
					position++
					if buffer[position] != rune('.') {
						goto l741
					}
					position++
					{
						position742, tokenIndex742 := position, tokenIndex
						{
							position744, tokenIndex744 := position, tokenIndex
							if !_rules[rule_]() {
								goto l744
							}
							goto l745
						l744:
							position, tokenIndex = position744, tokenIndex744
						}
					l745:
						if buffer[position] != rune('d') {
							goto l742
						}
						position++
						if buffer[position] != rune('.') {
							goto l742
						}
						position++
						goto l743
					l742:
						position, tokenIndex = position742, tokenIndex742
					}
				l743:
					goto l740
				l741:
					position, tokenIndex = position740, tokenIndex740
					if !_rules[ruleApostrophe]() {
						goto l738
					}
					if buffer[position] != rune('t') {
						goto l738
					}
					position++
				}
			l740:
				add(ruleAuthorPrefix2, position739)
			}
			return true
		l738:
			position, tokenIndex = position738, tokenIndex738
			return false
		},
		/* 105 AuthorPrefix1 <- <((('a' 'b') / ('a' 'f') / ('b' 'i' 's') / ('d' 'a') / ('d' 'e' 'r') / ('d' 'e' 's') / ('d' 'e' 'n') / ('d' 'e' 'l') / ('d' 'e' 'l' 'l' 'a') / ('d' 'e' 'l' 'a') / ('d' 'e') / ('d' 'i') / ('d' 'u') / ('e' 'l') / ('l' 'a') / ('l' 'e') / ('t' 'e' 'r') / ('v' 'a' 'n') / ('d' Apostrophe) / ('i' 'n' Apostrophe 't') / ('z' 'u' 'r') / ('z' 'u') / ('v' 'o' 'n' (_ (('d' '.') / ('d' 'e' 'm')))?) / ('v' (_ 'd')?)) &_)> */
		func() bool {
			position746, tokenIndex746 := position, tokenIndex
			{
				position747 := position
				{
					position748, tokenIndex748 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l749
					}
					position++
					if buffer[position] != rune('b') {
						goto l749
					}
					position++
					goto l748
				l749:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('a') {
						goto l750
					}
					position++
					if buffer[position] != rune('f') {
						goto l750
					}
					position++
					goto l748
				l750:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('b') {
						goto l751
					}
					position++
					if buffer[position] != rune('i') {
						goto l751
					}
					position++
					if buffer[position] != rune('s') {
						goto l751
					}
					position++
					goto l748
				l751:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('d') {
						goto l752
					}
					position++
					if buffer[position] != rune('a') {
						goto l752
					}
					position++
					goto l748
				l752:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('d') {
						goto l753
					}
					position++
					if buffer[position] != rune('e') {
						goto l753
					}
					position++
					if buffer[position] != rune('r') {
						goto l753
					}
					position++
					goto l748
				l753:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('d') {
						goto l754
					}
					position++
					if buffer[position] != rune('e') {
						goto l754
					}
					position++
					if buffer[position] != rune('s') {
						goto l754
					}
					position++
					goto l748
				l754:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('d') {
						goto l755
					}
					position++
					if buffer[position] != rune('e') {
						goto l755
					}
					position++
					if buffer[position] != rune('n') {
						goto l755
					}
					position++
					goto l748
				l755:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('d') {
						goto l756
					}
					position++
					if buffer[position] != rune('e') {
						goto l756
					}
					position++
					if buffer[position] != rune('l') {
						goto l756
					}
					position++
					goto l748
				l756:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('d') {
						goto l757
					}
					position++
					if buffer[position] != rune('e') {
						goto l757
					}
					position++
					if buffer[position] != rune('l') {
						goto l757
					}
					position++
					if buffer[position] != rune('l') {
						goto l757
					}
					position++
					if buffer[position] != rune('a') {
						goto l757
					}
					position++
					goto l748
				l757:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('d') {
						goto l758
					}
					position++
					if buffer[position] != rune('e') {
						goto l758
					}
					position++
					if buffer[position] != rune('l') {
						goto l758
					}
					position++
					if buffer[position] != rune('a') {
						goto l758
					}
					position++
					goto l748
				l758:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('d') {
						goto l759
					}
					position++
					if buffer[position] != rune('e') {
						goto l759
					}
					position++
					goto l748
				l759:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('d') {
						goto l760
					}
					position++
					if buffer[position] != rune('i') {
						goto l760
					}
					position++
					goto l748
				l760:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('d') {
						goto l761
					}
					position++
					if buffer[position] != rune('u') {
						goto l761
					}
					position++
					goto l748
				l761:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('e') {
						goto l762
					}
					position++
					if buffer[position] != rune('l') {
						goto l762
					}
					position++
					goto l748
				l762:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('l') {
						goto l763
					}
					position++
					if buffer[position] != rune('a') {
						goto l763
					}
					position++
					goto l748
				l763:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('l') {
						goto l764
					}
					position++
					if buffer[position] != rune('e') {
						goto l764
					}
					position++
					goto l748
				l764:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('t') {
						goto l765
					}
					position++
					if buffer[position] != rune('e') {
						goto l765
					}
					position++
					if buffer[position] != rune('r') {
						goto l765
					}
					position++
					goto l748
				l765:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('v') {
						goto l766
					}
					position++
					if buffer[position] != rune('a') {
						goto l766
					}
					position++
					if buffer[position] != rune('n') {
						goto l766
					}
					position++
					goto l748
				l766:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('d') {
						goto l767
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l767
					}
					goto l748
				l767:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('i') {
						goto l768
					}
					position++
					if buffer[position] != rune('n') {
						goto l768
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l768
					}
					if buffer[position] != rune('t') {
						goto l768
					}
					position++
					goto l748
				l768:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('z') {
						goto l769
					}
					position++
					if buffer[position] != rune('u') {
						goto l769
					}
					position++
					if buffer[position] != rune('r') {
						goto l769
					}
					position++
					goto l748
				l769:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('z') {
						goto l770
					}
					position++
					if buffer[position] != rune('u') {
						goto l770
					}
					position++
					goto l748
				l770:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('v') {
						goto l771
					}
					position++
					if buffer[position] != rune('o') {
						goto l771
					}
					position++
					if buffer[position] != rune('n') {
						goto l771
					}
					position++
					{
						position772, tokenIndex772 := position, tokenIndex
						if !_rules[rule_]() {
							goto l772
						}
						{
							position774, tokenIndex774 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l775
							}
							position++
							if buffer[position] != rune('.') {
								goto l775
							}
							position++
							goto l774
						l775:
							position, tokenIndex = position774, tokenIndex774
							if buffer[position] != rune('d') {
								goto l772
							}
							position++
							if buffer[position] != rune('e') {
								goto l772
							}
							position++
							if buffer[position] != rune('m') {
								goto l772
							}
							position++
						}
					l774:
						goto l773
					l772:
						position, tokenIndex = position772, tokenIndex772
					}
				l773:
					goto l748
				l771:
					position, tokenIndex = position748, tokenIndex748
					if buffer[position] != rune('v') {
						goto l746
					}
					position++
					{
						position776, tokenIndex776 := position, tokenIndex
						if !_rules[rule_]() {
							goto l776
						}
						if buffer[position] != rune('d') {
							goto l776
						}
						position++
						goto l777
					l776:
						position, tokenIndex = position776, tokenIndex776
					}
				l777:
				}
			l748:
				{
					position778, tokenIndex778 := position, tokenIndex
					if !_rules[rule_]() {
						goto l746
					}
					position, tokenIndex = position778, tokenIndex778
				}
				add(ruleAuthorPrefix1, position747)
			}
			return true
		l746:
			position, tokenIndex = position746, tokenIndex746
			return false
		},
		/* 106 AuthorUpperChar <- <(UpperASCII / MiscodedChar / ('À' / 'Á' / 'Â' / 'Ã' / 'Ä' / 'Å' / 'Æ' / 'Ç' / 'È' / 'É' / 'Ê' / 'Ë' / 'Ì' / 'Í' / 'Î' / 'Ï' / 'Ð' / 'Ñ' / 'Ò' / 'Ó' / 'Ô' / 'Õ' / 'Ö' / 'Ø' / 'Ù' / 'Ú' / 'Û' / 'Ü' / 'Ý' / 'Ć' / 'Č' / 'Ď' / 'İ' / 'Ķ' / 'Ĺ' / 'ĺ' / 'Ľ' / 'ľ' / 'Ł' / 'ł' / 'Ņ' / 'Ō' / 'Ő' / 'Œ' / 'Ř' / 'Ś' / 'Ŝ' / 'Ş' / 'Š' / 'Ÿ' / 'Ź' / 'Ż' / 'Ž' / 'ƒ' / 'Ǿ' / 'Ș' / 'Ț'))> */
		func() bool {
			position779, tokenIndex779 := position, tokenIndex
			{
				position780 := position
				{
					position781, tokenIndex781 := position, tokenIndex
					if !_rules[ruleUpperASCII]() {
						goto l782
					}
					goto l781
				l782:
					position, tokenIndex = position781, tokenIndex781
					if !_rules[ruleMiscodedChar]() {
						goto l783
					}
					goto l781
				l783:
					position, tokenIndex = position781, tokenIndex781
					{
						position784, tokenIndex784 := position, tokenIndex
						if buffer[position] != rune('À') {
							goto l785
						}
						position++
						goto l784
					l785:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Á') {
							goto l786
						}
						position++
						goto l784
					l786:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Â') {
							goto l787
						}
						position++
						goto l784
					l787:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ã') {
							goto l788
						}
						position++
						goto l784
					l788:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ä') {
							goto l789
						}
						position++
						goto l784
					l789:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Å') {
							goto l790
						}
						position++
						goto l784
					l790:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Æ') {
							goto l791
						}
						position++
						goto l784
					l791:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ç') {
							goto l792
						}
						position++
						goto l784
					l792:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('È') {
							goto l793
						}
						position++
						goto l784
					l793:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('É') {
							goto l794
						}
						position++
						goto l784
					l794:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ê') {
							goto l795
						}
						position++
						goto l784
					l795:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ë') {
							goto l796
						}
						position++
						goto l784
					l796:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ì') {
							goto l797
						}
						position++
						goto l784
					l797:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Í') {
							goto l798
						}
						position++
						goto l784
					l798:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Î') {
							goto l799
						}
						position++
						goto l784
					l799:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ï') {
							goto l800
						}
						position++
						goto l784
					l800:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ð') {
							goto l801
						}
						position++
						goto l784
					l801:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ñ') {
							goto l802
						}
						position++
						goto l784
					l802:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ò') {
							goto l803
						}
						position++
						goto l784
					l803:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ó') {
							goto l804
						}
						position++
						goto l784
					l804:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ô') {
							goto l805
						}
						position++
						goto l784
					l805:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Õ') {
							goto l806
						}
						position++
						goto l784
					l806:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ö') {
							goto l807
						}
						position++
						goto l784
					l807:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ø') {
							goto l808
						}
						position++
						goto l784
					l808:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ù') {
							goto l809
						}
						position++
						goto l784
					l809:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ú') {
							goto l810
						}
						position++
						goto l784
					l810:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Û') {
							goto l811
						}
						position++
						goto l784
					l811:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ü') {
							goto l812
						}
						position++
						goto l784
					l812:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ý') {
							goto l813
						}
						position++
						goto l784
					l813:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ć') {
							goto l814
						}
						position++
						goto l784
					l814:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Č') {
							goto l815
						}
						position++
						goto l784
					l815:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ď') {
							goto l816
						}
						position++
						goto l784
					l816:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('İ') {
							goto l817
						}
						position++
						goto l784
					l817:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ķ') {
							goto l818
						}
						position++
						goto l784
					l818:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ĺ') {
							goto l819
						}
						position++
						goto l784
					l819:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('ĺ') {
							goto l820
						}
						position++
						goto l784
					l820:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ľ') {
							goto l821
						}
						position++
						goto l784
					l821:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('ľ') {
							goto l822
						}
						position++
						goto l784
					l822:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ł') {
							goto l823
						}
						position++
						goto l784
					l823:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('ł') {
							goto l824
						}
						position++
						goto l784
					l824:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ņ') {
							goto l825
						}
						position++
						goto l784
					l825:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ō') {
							goto l826
						}
						position++
						goto l784
					l826:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ő') {
							goto l827
						}
						position++
						goto l784
					l827:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Œ') {
							goto l828
						}
						position++
						goto l784
					l828:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ř') {
							goto l829
						}
						position++
						goto l784
					l829:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ś') {
							goto l830
						}
						position++
						goto l784
					l830:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ŝ') {
							goto l831
						}
						position++
						goto l784
					l831:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ş') {
							goto l832
						}
						position++
						goto l784
					l832:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Š') {
							goto l833
						}
						position++
						goto l784
					l833:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ÿ') {
							goto l834
						}
						position++
						goto l784
					l834:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ź') {
							goto l835
						}
						position++
						goto l784
					l835:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ż') {
							goto l836
						}
						position++
						goto l784
					l836:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ž') {
							goto l837
						}
						position++
						goto l784
					l837:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('ƒ') {
							goto l838
						}
						position++
						goto l784
					l838:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ǿ') {
							goto l839
						}
						position++
						goto l784
					l839:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ș') {
							goto l840
						}
						position++
						goto l784
					l840:
						position, tokenIndex = position784, tokenIndex784
						if buffer[position] != rune('Ț') {
							goto l779
						}
						position++
					}
				l784:
				}
			l781:
				add(ruleAuthorUpperChar, position780)
			}
			return true
		l779:
			position, tokenIndex = position779, tokenIndex779
			return false
		},
		/* 107 AuthorLowerChar <- <(LowerASCII / MiscodedChar / ('à' / 'á' / 'â' / 'ã' / 'ä' / 'å' / 'æ' / 'ç' / 'è' / 'é' / 'ê' / 'ë' / 'ì' / 'í' / 'î' / 'ï' / 'ð' / 'ñ' / 'ò' / 'ó' / 'ó' / 'ô' / 'õ' / 'ö' / 'ø' / 'ù' / 'ú' / 'û' / 'ü' / 'ý' / 'ÿ' / 'ā' / 'ă' / 'ą' / 'ć' / 'ĉ' / 'č' / 'ď' / 'đ' / '\'' / 'ē' / 'ĕ' / 'ė' / 'ę' / 'ě' / 'ğ' / 'ī' / 'ĭ' / 'İ' / 'ı' / 'ĺ' / 'ľ' / 'ł' / 'ń' / 'ņ' / 'ň' / 'ŏ' / 'ő' / 'œ' / 'ŕ' / 'ř' / 'ś' / 'ş' / 'š' / 'ţ' / 'ť' / 'ũ' / 'ū' / 'ŭ' / 'ů' / 'ű' / 'ź' / 'ż' / 'ž' / 'ſ' / 'ǎ' / 'ǔ' / 'ǧ' / 'ș' / 'ț' / 'ȳ' / 'ß'))> */
		func() bool {
			position841, tokenIndex841 := position, tokenIndex
			{
				position842 := position
				{
					position843, tokenIndex843 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l844
					}
					goto l843
				l844:
					position, tokenIndex = position843, tokenIndex843
					if !_rules[ruleMiscodedChar]() {
						goto l845
					}
					goto l843
				l845:
					position, tokenIndex = position843, tokenIndex843
					{
						position846, tokenIndex846 := position, tokenIndex
						if buffer[position] != rune('à') {
							goto l847
						}
						position++
						goto l846
					l847:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('á') {
							goto l848
						}
						position++
						goto l846
					l848:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('â') {
							goto l849
						}
						position++
						goto l846
					l849:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ã') {
							goto l850
						}
						position++
						goto l846
					l850:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ä') {
							goto l851
						}
						position++
						goto l846
					l851:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('å') {
							goto l852
						}
						position++
						goto l846
					l852:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('æ') {
							goto l853
						}
						position++
						goto l846
					l853:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ç') {
							goto l854
						}
						position++
						goto l846
					l854:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('è') {
							goto l855
						}
						position++
						goto l846
					l855:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('é') {
							goto l856
						}
						position++
						goto l846
					l856:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ê') {
							goto l857
						}
						position++
						goto l846
					l857:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ë') {
							goto l858
						}
						position++
						goto l846
					l858:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ì') {
							goto l859
						}
						position++
						goto l846
					l859:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('í') {
							goto l860
						}
						position++
						goto l846
					l860:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('î') {
							goto l861
						}
						position++
						goto l846
					l861:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ï') {
							goto l862
						}
						position++
						goto l846
					l862:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ð') {
							goto l863
						}
						position++
						goto l846
					l863:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ñ') {
							goto l864
						}
						position++
						goto l846
					l864:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ò') {
							goto l865
						}
						position++
						goto l846
					l865:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ó') {
							goto l866
						}
						position++
						goto l846
					l866:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ó') {
							goto l867
						}
						position++
						goto l846
					l867:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ô') {
							goto l868
						}
						position++
						goto l846
					l868:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('õ') {
							goto l869
						}
						position++
						goto l846
					l869:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ö') {
							goto l870
						}
						position++
						goto l846
					l870:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ø') {
							goto l871
						}
						position++
						goto l846
					l871:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ù') {
							goto l872
						}
						position++
						goto l846
					l872:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ú') {
							goto l873
						}
						position++
						goto l846
					l873:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('û') {
							goto l874
						}
						position++
						goto l846
					l874:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ü') {
							goto l875
						}
						position++
						goto l846
					l875:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ý') {
							goto l876
						}
						position++
						goto l846
					l876:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ÿ') {
							goto l877
						}
						position++
						goto l846
					l877:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ā') {
							goto l878
						}
						position++
						goto l846
					l878:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ă') {
							goto l879
						}
						position++
						goto l846
					l879:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ą') {
							goto l880
						}
						position++
						goto l846
					l880:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ć') {
							goto l881
						}
						position++
						goto l846
					l881:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ĉ') {
							goto l882
						}
						position++
						goto l846
					l882:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('č') {
							goto l883
						}
						position++
						goto l846
					l883:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ď') {
							goto l884
						}
						position++
						goto l846
					l884:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('đ') {
							goto l885
						}
						position++
						goto l846
					l885:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('\'') {
							goto l886
						}
						position++
						goto l846
					l886:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ē') {
							goto l887
						}
						position++
						goto l846
					l887:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ĕ') {
							goto l888
						}
						position++
						goto l846
					l888:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ė') {
							goto l889
						}
						position++
						goto l846
					l889:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ę') {
							goto l890
						}
						position++
						goto l846
					l890:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ě') {
							goto l891
						}
						position++
						goto l846
					l891:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ğ') {
							goto l892
						}
						position++
						goto l846
					l892:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ī') {
							goto l893
						}
						position++
						goto l846
					l893:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ĭ') {
							goto l894
						}
						position++
						goto l846
					l894:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('İ') {
							goto l895
						}
						position++
						goto l846
					l895:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ı') {
							goto l896
						}
						position++
						goto l846
					l896:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ĺ') {
							goto l897
						}
						position++
						goto l846
					l897:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ľ') {
							goto l898
						}
						position++
						goto l846
					l898:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ł') {
							goto l899
						}
						position++
						goto l846
					l899:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ń') {
							goto l900
						}
						position++
						goto l846
					l900:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ņ') {
							goto l901
						}
						position++
						goto l846
					l901:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ň') {
							goto l902
						}
						position++
						goto l846
					l902:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ŏ') {
							goto l903
						}
						position++
						goto l846
					l903:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ő') {
							goto l904
						}
						position++
						goto l846
					l904:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('œ') {
							goto l905
						}
						position++
						goto l846
					l905:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ŕ') {
							goto l906
						}
						position++
						goto l846
					l906:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ř') {
							goto l907
						}
						position++
						goto l846
					l907:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ś') {
							goto l908
						}
						position++
						goto l846
					l908:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ş') {
							goto l909
						}
						position++
						goto l846
					l909:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('š') {
							goto l910
						}
						position++
						goto l846
					l910:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ţ') {
							goto l911
						}
						position++
						goto l846
					l911:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ť') {
							goto l912
						}
						position++
						goto l846
					l912:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ũ') {
							goto l913
						}
						position++
						goto l846
					l913:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ū') {
							goto l914
						}
						position++
						goto l846
					l914:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ŭ') {
							goto l915
						}
						position++
						goto l846
					l915:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ů') {
							goto l916
						}
						position++
						goto l846
					l916:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ű') {
							goto l917
						}
						position++
						goto l846
					l917:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ź') {
							goto l918
						}
						position++
						goto l846
					l918:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ż') {
							goto l919
						}
						position++
						goto l846
					l919:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ž') {
							goto l920
						}
						position++
						goto l846
					l920:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ſ') {
							goto l921
						}
						position++
						goto l846
					l921:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ǎ') {
							goto l922
						}
						position++
						goto l846
					l922:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ǔ') {
							goto l923
						}
						position++
						goto l846
					l923:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ǧ') {
							goto l924
						}
						position++
						goto l846
					l924:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ș') {
							goto l925
						}
						position++
						goto l846
					l925:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ț') {
							goto l926
						}
						position++
						goto l846
					l926:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ȳ') {
							goto l927
						}
						position++
						goto l846
					l927:
						position, tokenIndex = position846, tokenIndex846
						if buffer[position] != rune('ß') {
							goto l841
						}
						position++
					}
				l846:
				}
			l843:
				add(ruleAuthorLowerChar, position842)
			}
			return true
		l841:
			position, tokenIndex = position841, tokenIndex841
			return false
		},
		/* 108 Year <- <(YearRange / YearApprox / YearWithParens / YearWithPage / YearWithDot / YearWithChar / YearNum)> */
		func() bool {
			position928, tokenIndex928 := position, tokenIndex
			{
				position929 := position
				{
					position930, tokenIndex930 := position, tokenIndex
					if !_rules[ruleYearRange]() {
						goto l931
					}
					goto l930
				l931:
					position, tokenIndex = position930, tokenIndex930
					if !_rules[ruleYearApprox]() {
						goto l932
					}
					goto l930
				l932:
					position, tokenIndex = position930, tokenIndex930
					if !_rules[ruleYearWithParens]() {
						goto l933
					}
					goto l930
				l933:
					position, tokenIndex = position930, tokenIndex930
					if !_rules[ruleYearWithPage]() {
						goto l934
					}
					goto l930
				l934:
					position, tokenIndex = position930, tokenIndex930
					if !_rules[ruleYearWithDot]() {
						goto l935
					}
					goto l930
				l935:
					position, tokenIndex = position930, tokenIndex930
					if !_rules[ruleYearWithChar]() {
						goto l936
					}
					goto l930
				l936:
					position, tokenIndex = position930, tokenIndex930
					if !_rules[ruleYearNum]() {
						goto l928
					}
				}
			l930:
				add(ruleYear, position929)
			}
			return true
		l928:
			position, tokenIndex = position928, tokenIndex928
			return false
		},
		/* 109 YearRange <- <(YearNum (Dash / Slash) (Nums+ ('a' / 'b' / 'c' / 'd' / 'e' / 'f' / 'g' / 'h' / 'i' / 'j' / 'k' / 'l' / 'm' / 'n' / 'o' / 'p' / 'q' / 'r' / 's' / 't' / 'u' / 'v' / 'w' / 'x' / 'y' / 'z' / '?')*))> */
		func() bool {
			position937, tokenIndex937 := position, tokenIndex
			{
				position938 := position
				if !_rules[ruleYearNum]() {
					goto l937
				}
				{
					position939, tokenIndex939 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l940
					}
					goto l939
				l940:
					position, tokenIndex = position939, tokenIndex939
					if !_rules[ruleSlash]() {
						goto l937
					}
				}
			l939:
				if !_rules[ruleNums]() {
					goto l937
				}
			l941:
				{
					position942, tokenIndex942 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l942
					}
					goto l941
				l942:
					position, tokenIndex = position942, tokenIndex942
				}
			l943:
				{
					position944, tokenIndex944 := position, tokenIndex
					{
						position945, tokenIndex945 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l946
						}
						position++
						goto l945
					l946:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('b') {
							goto l947
						}
						position++
						goto l945
					l947:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('c') {
							goto l948
						}
						position++
						goto l945
					l948:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('d') {
							goto l949
						}
						position++
						goto l945
					l949:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('e') {
							goto l950
						}
						position++
						goto l945
					l950:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('f') {
							goto l951
						}
						position++
						goto l945
					l951:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('g') {
							goto l952
						}
						position++
						goto l945
					l952:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('h') {
							goto l953
						}
						position++
						goto l945
					l953:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('i') {
							goto l954
						}
						position++
						goto l945
					l954:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('j') {
							goto l955
						}
						position++
						goto l945
					l955:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('k') {
							goto l956
						}
						position++
						goto l945
					l956:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('l') {
							goto l957
						}
						position++
						goto l945
					l957:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('m') {
							goto l958
						}
						position++
						goto l945
					l958:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('n') {
							goto l959
						}
						position++
						goto l945
					l959:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('o') {
							goto l960
						}
						position++
						goto l945
					l960:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('p') {
							goto l961
						}
						position++
						goto l945
					l961:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('q') {
							goto l962
						}
						position++
						goto l945
					l962:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('r') {
							goto l963
						}
						position++
						goto l945
					l963:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('s') {
							goto l964
						}
						position++
						goto l945
					l964:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('t') {
							goto l965
						}
						position++
						goto l945
					l965:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('u') {
							goto l966
						}
						position++
						goto l945
					l966:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('v') {
							goto l967
						}
						position++
						goto l945
					l967:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('w') {
							goto l968
						}
						position++
						goto l945
					l968:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('x') {
							goto l969
						}
						position++
						goto l945
					l969:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('y') {
							goto l970
						}
						position++
						goto l945
					l970:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('z') {
							goto l971
						}
						position++
						goto l945
					l971:
						position, tokenIndex = position945, tokenIndex945
						if buffer[position] != rune('?') {
							goto l944
						}
						position++
					}
				l945:
					goto l943
				l944:
					position, tokenIndex = position944, tokenIndex944
				}
				add(ruleYearRange, position938)
			}
			return true
		l937:
			position, tokenIndex = position937, tokenIndex937
			return false
		},
		/* 110 YearWithDot <- <(YearNum '.')> */
		func() bool {
			position972, tokenIndex972 := position, tokenIndex
			{
				position973 := position
				if !_rules[ruleYearNum]() {
					goto l972
				}
				if buffer[position] != rune('.') {
					goto l972
				}
				position++
				add(ruleYearWithDot, position973)
			}
			return true
		l972:
			position, tokenIndex = position972, tokenIndex972
			return false
		},
		/* 111 YearApprox <- <('[' _? YearNum _? ']')> */
		func() bool {
			position974, tokenIndex974 := position, tokenIndex
			{
				position975 := position
				if buffer[position] != rune('[') {
					goto l974
				}
				position++
				{
					position976, tokenIndex976 := position, tokenIndex
					if !_rules[rule_]() {
						goto l976
					}
					goto l977
				l976:
					position, tokenIndex = position976, tokenIndex976
				}
			l977:
				if !_rules[ruleYearNum]() {
					goto l974
				}
				{
					position978, tokenIndex978 := position, tokenIndex
					if !_rules[rule_]() {
						goto l978
					}
					goto l979
				l978:
					position, tokenIndex = position978, tokenIndex978
				}
			l979:
				if buffer[position] != rune(']') {
					goto l974
				}
				position++
				add(ruleYearApprox, position975)
			}
			return true
		l974:
			position, tokenIndex = position974, tokenIndex974
			return false
		},
		/* 112 YearWithPage <- <((YearWithChar / YearNum) _? ':' _? Nums+)> */
		func() bool {
			position980, tokenIndex980 := position, tokenIndex
			{
				position981 := position
				{
					position982, tokenIndex982 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l983
					}
					goto l982
				l983:
					position, tokenIndex = position982, tokenIndex982
					if !_rules[ruleYearNum]() {
						goto l980
					}
				}
			l982:
				{
					position984, tokenIndex984 := position, tokenIndex
					if !_rules[rule_]() {
						goto l984
					}
					goto l985
				l984:
					position, tokenIndex = position984, tokenIndex984
				}
			l985:
				if buffer[position] != rune(':') {
					goto l980
				}
				position++
				{
					position986, tokenIndex986 := position, tokenIndex
					if !_rules[rule_]() {
						goto l986
					}
					goto l987
				l986:
					position, tokenIndex = position986, tokenIndex986
				}
			l987:
				if !_rules[ruleNums]() {
					goto l980
				}
			l988:
				{
					position989, tokenIndex989 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l989
					}
					goto l988
				l989:
					position, tokenIndex = position989, tokenIndex989
				}
				add(ruleYearWithPage, position981)
			}
			return true
		l980:
			position, tokenIndex = position980, tokenIndex980
			return false
		},
		/* 113 YearWithParens <- <('(' (YearWithChar / YearNum) ')')> */
		func() bool {
			position990, tokenIndex990 := position, tokenIndex
			{
				position991 := position
				if buffer[position] != rune('(') {
					goto l990
				}
				position++
				{
					position992, tokenIndex992 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l993
					}
					goto l992
				l993:
					position, tokenIndex = position992, tokenIndex992
					if !_rules[ruleYearNum]() {
						goto l990
					}
				}
			l992:
				if buffer[position] != rune(')') {
					goto l990
				}
				position++
				add(ruleYearWithParens, position991)
			}
			return true
		l990:
			position, tokenIndex = position990, tokenIndex990
			return false
		},
		/* 114 YearWithChar <- <(YearNum LowerASCII)> */
		func() bool {
			position994, tokenIndex994 := position, tokenIndex
			{
				position995 := position
				if !_rules[ruleYearNum]() {
					goto l994
				}
				if !_rules[ruleLowerASCII]() {
					goto l994
				}
				add(ruleYearWithChar, position995)
			}
			return true
		l994:
			position, tokenIndex = position994, tokenIndex994
			return false
		},
		/* 115 YearNum <- <(('1' / '2') ('0' / '7' / '8' / '9') Nums (Nums / '?') '?'*)> */
		func() bool {
			position996, tokenIndex996 := position, tokenIndex
			{
				position997 := position
				{
					position998, tokenIndex998 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l999
					}
					position++
					goto l998
				l999:
					position, tokenIndex = position998, tokenIndex998
					if buffer[position] != rune('2') {
						goto l996
					}
					position++
				}
			l998:
				{
					position1000, tokenIndex1000 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l1001
					}
					position++
					goto l1000
				l1001:
					position, tokenIndex = position1000, tokenIndex1000
					if buffer[position] != rune('7') {
						goto l1002
					}
					position++
					goto l1000
				l1002:
					position, tokenIndex = position1000, tokenIndex1000
					if buffer[position] != rune('8') {
						goto l1003
					}
					position++
					goto l1000
				l1003:
					position, tokenIndex = position1000, tokenIndex1000
					if buffer[position] != rune('9') {
						goto l996
					}
					position++
				}
			l1000:
				if !_rules[ruleNums]() {
					goto l996
				}
				{
					position1004, tokenIndex1004 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l1005
					}
					goto l1004
				l1005:
					position, tokenIndex = position1004, tokenIndex1004
					if buffer[position] != rune('?') {
						goto l996
					}
					position++
				}
			l1004:
			l1006:
				{
					position1007, tokenIndex1007 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l1007
					}
					position++
					goto l1006
				l1007:
					position, tokenIndex = position1007, tokenIndex1007
				}
				add(ruleYearNum, position997)
			}
			return true
		l996:
			position, tokenIndex = position996, tokenIndex996
			return false
		},
		/* 116 NameUpperChar <- <(UpperChar / UpperCharExtended)> */
		func() bool {
			position1008, tokenIndex1008 := position, tokenIndex
			{
				position1009 := position
				{
					position1010, tokenIndex1010 := position, tokenIndex
					if !_rules[ruleUpperChar]() {
						goto l1011
					}
					goto l1010
				l1011:
					position, tokenIndex = position1010, tokenIndex1010
					if !_rules[ruleUpperCharExtended]() {
						goto l1008
					}
				}
			l1010:
				add(ruleNameUpperChar, position1009)
			}
			return true
		l1008:
			position, tokenIndex = position1008, tokenIndex1008
			return false
		},
		/* 117 UpperCharExtended <- <('Æ' / 'Œ' / 'Ö')> */
		func() bool {
			position1012, tokenIndex1012 := position, tokenIndex
			{
				position1013 := position
				{
					position1014, tokenIndex1014 := position, tokenIndex
					if buffer[position] != rune('Æ') {
						goto l1015
					}
					position++
					goto l1014
				l1015:
					position, tokenIndex = position1014, tokenIndex1014
					if buffer[position] != rune('Œ') {
						goto l1016
					}
					position++
					goto l1014
				l1016:
					position, tokenIndex = position1014, tokenIndex1014
					if buffer[position] != rune('Ö') {
						goto l1012
					}
					position++
				}
			l1014:
				add(ruleUpperCharExtended, position1013)
			}
			return true
		l1012:
			position, tokenIndex = position1012, tokenIndex1012
			return false
		},
		/* 118 UpperChar <- <UpperASCII> */
		func() bool {
			position1017, tokenIndex1017 := position, tokenIndex
			{
				position1018 := position
				if !_rules[ruleUpperASCII]() {
					goto l1017
				}
				add(ruleUpperChar, position1018)
			}
			return true
		l1017:
			position, tokenIndex = position1017, tokenIndex1017
			return false
		},
		/* 119 NameLowerChar <- <(LowerChar / LowerCharExtended / MiscodedChar)> */
		func() bool {
			position1019, tokenIndex1019 := position, tokenIndex
			{
				position1020 := position
				{
					position1021, tokenIndex1021 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l1022
					}
					goto l1021
				l1022:
					position, tokenIndex = position1021, tokenIndex1021
					if !_rules[ruleLowerCharExtended]() {
						goto l1023
					}
					goto l1021
				l1023:
					position, tokenIndex = position1021, tokenIndex1021
					if !_rules[ruleMiscodedChar]() {
						goto l1019
					}
				}
			l1021:
				add(ruleNameLowerChar, position1020)
			}
			return true
		l1019:
			position, tokenIndex = position1019, tokenIndex1019
			return false
		},
		/* 120 MiscodedChar <- <'�'> */
		func() bool {
			position1024, tokenIndex1024 := position, tokenIndex
			{
				position1025 := position
				if buffer[position] != rune('�') {
					goto l1024
				}
				position++
				add(ruleMiscodedChar, position1025)
			}
			return true
		l1024:
			position, tokenIndex = position1024, tokenIndex1024
			return false
		},
		/* 121 LowerCharExtended <- <('æ' / 'œ' / 'à' / 'â' / 'å' / 'ã' / 'ä' / 'á' / 'ç' / 'č' / 'é' / 'è' / 'ë' / 'í' / 'ì' / 'ï' / 'ň' / 'ñ' / 'ñ' / 'ó' / 'ò' / 'ô' / 'ø' / 'õ' / 'ö' / 'ú' / 'ù' / 'ü' / 'ŕ' / 'ř' / 'ŗ' / 'ſ' / 'š' / 'š' / 'ş' / 'ß' / 'ž')> */
		func() bool {
			position1026, tokenIndex1026 := position, tokenIndex
			{
				position1027 := position
				{
					position1028, tokenIndex1028 := position, tokenIndex
					if buffer[position] != rune('æ') {
						goto l1029
					}
					position++
					goto l1028
				l1029:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('œ') {
						goto l1030
					}
					position++
					goto l1028
				l1030:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('à') {
						goto l1031
					}
					position++
					goto l1028
				l1031:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('â') {
						goto l1032
					}
					position++
					goto l1028
				l1032:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('å') {
						goto l1033
					}
					position++
					goto l1028
				l1033:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ã') {
						goto l1034
					}
					position++
					goto l1028
				l1034:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ä') {
						goto l1035
					}
					position++
					goto l1028
				l1035:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('á') {
						goto l1036
					}
					position++
					goto l1028
				l1036:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ç') {
						goto l1037
					}
					position++
					goto l1028
				l1037:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('č') {
						goto l1038
					}
					position++
					goto l1028
				l1038:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('é') {
						goto l1039
					}
					position++
					goto l1028
				l1039:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('è') {
						goto l1040
					}
					position++
					goto l1028
				l1040:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ë') {
						goto l1041
					}
					position++
					goto l1028
				l1041:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('í') {
						goto l1042
					}
					position++
					goto l1028
				l1042:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ì') {
						goto l1043
					}
					position++
					goto l1028
				l1043:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ï') {
						goto l1044
					}
					position++
					goto l1028
				l1044:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ň') {
						goto l1045
					}
					position++
					goto l1028
				l1045:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ñ') {
						goto l1046
					}
					position++
					goto l1028
				l1046:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ñ') {
						goto l1047
					}
					position++
					goto l1028
				l1047:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ó') {
						goto l1048
					}
					position++
					goto l1028
				l1048:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ò') {
						goto l1049
					}
					position++
					goto l1028
				l1049:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ô') {
						goto l1050
					}
					position++
					goto l1028
				l1050:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ø') {
						goto l1051
					}
					position++
					goto l1028
				l1051:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('õ') {
						goto l1052
					}
					position++
					goto l1028
				l1052:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ö') {
						goto l1053
					}
					position++
					goto l1028
				l1053:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ú') {
						goto l1054
					}
					position++
					goto l1028
				l1054:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ù') {
						goto l1055
					}
					position++
					goto l1028
				l1055:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ü') {
						goto l1056
					}
					position++
					goto l1028
				l1056:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ŕ') {
						goto l1057
					}
					position++
					goto l1028
				l1057:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ř') {
						goto l1058
					}
					position++
					goto l1028
				l1058:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ŗ') {
						goto l1059
					}
					position++
					goto l1028
				l1059:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ſ') {
						goto l1060
					}
					position++
					goto l1028
				l1060:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('š') {
						goto l1061
					}
					position++
					goto l1028
				l1061:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('š') {
						goto l1062
					}
					position++
					goto l1028
				l1062:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ş') {
						goto l1063
					}
					position++
					goto l1028
				l1063:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ß') {
						goto l1064
					}
					position++
					goto l1028
				l1064:
					position, tokenIndex = position1028, tokenIndex1028
					if buffer[position] != rune('ž') {
						goto l1026
					}
					position++
				}
			l1028:
				add(ruleLowerCharExtended, position1027)
			}
			return true
		l1026:
			position, tokenIndex = position1026, tokenIndex1026
			return false
		},
		/* 122 LowerChar <- <LowerASCII> */
		func() bool {
			position1065, tokenIndex1065 := position, tokenIndex
			{
				position1066 := position
				if !_rules[ruleLowerASCII]() {
					goto l1065
				}
				add(ruleLowerChar, position1066)
			}
			return true
		l1065:
			position, tokenIndex = position1065, tokenIndex1065
			return false
		},
		/* 123 SpaceCharEOI <- <(_ / !.)> */
		func() bool {
			position1067, tokenIndex1067 := position, tokenIndex
			{
				position1068 := position
				{
					position1069, tokenIndex1069 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1070
					}
					goto l1069
				l1070:
					position, tokenIndex = position1069, tokenIndex1069
					{
						position1071, tokenIndex1071 := position, tokenIndex
						if !matchDot() {
							goto l1071
						}
						goto l1067
					l1071:
						position, tokenIndex = position1071, tokenIndex1071
					}
				}
			l1069:
				add(ruleSpaceCharEOI, position1068)
			}
			return true
		l1067:
			position, tokenIndex = position1067, tokenIndex1067
			return false
		},
		/* 124 Nums <- <[0-9]> */
		func() bool {
			position1072, tokenIndex1072 := position, tokenIndex
			{
				position1073 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l1072
				}
				position++
				add(ruleNums, position1073)
			}
			return true
		l1072:
			position, tokenIndex = position1072, tokenIndex1072
			return false
		},
		/* 125 LowerGreek <- <[α-ω]> */
		func() bool {
			position1074, tokenIndex1074 := position, tokenIndex
			{
				position1075 := position
				if c := buffer[position]; c < rune('α') || c > rune('ω') {
					goto l1074
				}
				position++
				add(ruleLowerGreek, position1075)
			}
			return true
		l1074:
			position, tokenIndex = position1074, tokenIndex1074
			return false
		},
		/* 126 LowerASCII <- <[a-z]> */
		func() bool {
			position1076, tokenIndex1076 := position, tokenIndex
			{
				position1077 := position
				if c := buffer[position]; c < rune('a') || c > rune('z') {
					goto l1076
				}
				position++
				add(ruleLowerASCII, position1077)
			}
			return true
		l1076:
			position, tokenIndex = position1076, tokenIndex1076
			return false
		},
		/* 127 UpperASCII <- <[A-Z]> */
		func() bool {
			position1078, tokenIndex1078 := position, tokenIndex
			{
				position1079 := position
				if c := buffer[position]; c < rune('A') || c > rune('Z') {
					goto l1078
				}
				position++
				add(ruleUpperASCII, position1079)
			}
			return true
		l1078:
			position, tokenIndex = position1078, tokenIndex1078
			return false
		},
		/* 128 Apostrophe <- <(ApostrOther / ApostrASCII)> */
		func() bool {
			position1080, tokenIndex1080 := position, tokenIndex
			{
				position1081 := position
				{
					position1082, tokenIndex1082 := position, tokenIndex
					if !_rules[ruleApostrOther]() {
						goto l1083
					}
					goto l1082
				l1083:
					position, tokenIndex = position1082, tokenIndex1082
					if !_rules[ruleApostrASCII]() {
						goto l1080
					}
				}
			l1082:
				add(ruleApostrophe, position1081)
			}
			return true
		l1080:
			position, tokenIndex = position1080, tokenIndex1080
			return false
		},
		/* 129 ApostrASCII <- <'\''> */
		func() bool {
			position1084, tokenIndex1084 := position, tokenIndex
			{
				position1085 := position
				if buffer[position] != rune('\'') {
					goto l1084
				}
				position++
				add(ruleApostrASCII, position1085)
			}
			return true
		l1084:
			position, tokenIndex = position1084, tokenIndex1084
			return false
		},
		/* 130 ApostrOther <- <('‘' / '’')> */
		func() bool {
			position1086, tokenIndex1086 := position, tokenIndex
			{
				position1087 := position
				{
					position1088, tokenIndex1088 := position, tokenIndex
					if buffer[position] != rune('‘') {
						goto l1089
					}
					position++
					goto l1088
				l1089:
					position, tokenIndex = position1088, tokenIndex1088
					if buffer[position] != rune('’') {
						goto l1086
					}
					position++
				}
			l1088:
				add(ruleApostrOther, position1087)
			}
			return true
		l1086:
			position, tokenIndex = position1086, tokenIndex1086
			return false
		},
		/* 131 Dash <- <'-'> */
		func() bool {
			position1090, tokenIndex1090 := position, tokenIndex
			{
				position1091 := position
				if buffer[position] != rune('-') {
					goto l1090
				}
				position++
				add(ruleDash, position1091)
			}
			return true
		l1090:
			position, tokenIndex = position1090, tokenIndex1090
			return false
		},
		/* 132 Slash <- <'/'> */
		func() bool {
			position1092, tokenIndex1092 := position, tokenIndex
			{
				position1093 := position
				if buffer[position] != rune('/') {
					goto l1092
				}
				position++
				add(ruleSlash, position1093)
			}
			return true
		l1092:
			position, tokenIndex = position1092, tokenIndex1092
			return false
		},
		/* 133 _ <- <(MultipleSpace / SingleSpace)> */
		func() bool {
			position1094, tokenIndex1094 := position, tokenIndex
			{
				position1095 := position
				{
					position1096, tokenIndex1096 := position, tokenIndex
					if !_rules[ruleMultipleSpace]() {
						goto l1097
					}
					goto l1096
				l1097:
					position, tokenIndex = position1096, tokenIndex1096
					if !_rules[ruleSingleSpace]() {
						goto l1094
					}
				}
			l1096:
				add(rule_, position1095)
			}
			return true
		l1094:
			position, tokenIndex = position1094, tokenIndex1094
			return false
		},
		/* 134 MultipleSpace <- <(SingleSpace SingleSpace+)> */
		func() bool {
			position1098, tokenIndex1098 := position, tokenIndex
			{
				position1099 := position
				if !_rules[ruleSingleSpace]() {
					goto l1098
				}
				if !_rules[ruleSingleSpace]() {
					goto l1098
				}
			l1100:
				{
					position1101, tokenIndex1101 := position, tokenIndex
					if !_rules[ruleSingleSpace]() {
						goto l1101
					}
					goto l1100
				l1101:
					position, tokenIndex = position1101, tokenIndex1101
				}
				add(ruleMultipleSpace, position1099)
			}
			return true
		l1098:
			position, tokenIndex = position1098, tokenIndex1098
			return false
		},
		/* 135 SingleSpace <- <(' ' / OtherSpace)> */
		func() bool {
			position1102, tokenIndex1102 := position, tokenIndex
			{
				position1103 := position
				{
					position1104, tokenIndex1104 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l1105
					}
					position++
					goto l1104
				l1105:
					position, tokenIndex = position1104, tokenIndex1104
					if !_rules[ruleOtherSpace]() {
						goto l1102
					}
				}
			l1104:
				add(ruleSingleSpace, position1103)
			}
			return true
		l1102:
			position, tokenIndex = position1102, tokenIndex1102
			return false
		},
		/* 136 OtherSpace <- <('\u3000' / '\u00a0' / '\t' / '\r' / '\n' / '\f' / '\v')> */
		func() bool {
			position1106, tokenIndex1106 := position, tokenIndex
			{
				position1107 := position
				{
					position1108, tokenIndex1108 := position, tokenIndex
					if buffer[position] != rune('\u3000') {
						goto l1109
					}
					position++
					goto l1108
				l1109:
					position, tokenIndex = position1108, tokenIndex1108
					if buffer[position] != rune('\u00a0') {
						goto l1110
					}
					position++
					goto l1108
				l1110:
					position, tokenIndex = position1108, tokenIndex1108
					if buffer[position] != rune('\t') {
						goto l1111
					}
					position++
					goto l1108
				l1111:
					position, tokenIndex = position1108, tokenIndex1108
					if buffer[position] != rune('\r') {
						goto l1112
					}
					position++
					goto l1108
				l1112:
					position, tokenIndex = position1108, tokenIndex1108
					if buffer[position] != rune('\n') {
						goto l1113
					}
					position++
					goto l1108
				l1113:
					position, tokenIndex = position1108, tokenIndex1108
					if buffer[position] != rune('\f') {
						goto l1114
					}
					position++
					goto l1108
				l1114:
					position, tokenIndex = position1108, tokenIndex1108
					if buffer[position] != rune('\v') {
						goto l1106
					}
					position++
				}
			l1108:
				add(ruleOtherSpace, position1107)
			}
			return true
		l1106:
			position, tokenIndex = position1106, tokenIndex1106
			return false
		},
		/* 137 END <- <!.> */
		func() bool {
			position1115, tokenIndex1115 := position, tokenIndex
			{
				position1116 := position
				{
					position1117, tokenIndex1117 := position, tokenIndex
					if !matchDot() {
						goto l1117
					}
					goto l1115
				l1117:
					position, tokenIndex = position1117, tokenIndex1117
				}
				add(ruleEND, position1116)
			}
			return true
		l1115:
			position, tokenIndex = position1115, tokenIndex1115
			return false
		},
	}
	p.rules = _rules
	return nil
}
