package parser

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleSciName
	ruleTail
	ruleName
	ruleHybridFormula
	ruleHybridFormulaFull
	ruleHybridFormulaPart
	ruleNamedHybrid
	ruleNamedSpeciesHybrid
	ruleNamedGenusHybrid
	ruleGraftChimeraFormula
	ruleGraftChimeraFormulaFull
	ruleGraftChimeraFormulaPart
	ruleNamedGenusGraftChimera
	ruleCandidatusName
	ruleCandidatus
	ruleSingleName
	ruleNameUninomial
	ruleNameApprox
	ruleNameComp
	ruleNameSpecies
	ruleGenusWord
	ruleInfraspGroup
	ruleInfraspEpithet
	ruleCultivarWordGroup
	ruleCultivar
	ruleRankCultivar
	ruleNotHybridChar
	ruleCultivarRecursive
	ruleCultivarApostrophe
	ruleSpeciesEpithet
	ruleComparison
	ruleRank
	ruleRankNotho
	ruleRankOtherUncommon
	ruleRankOther
	ruleRankVar
	ruleRankForma
	ruleRankSsp
	ruleRankAgamo
	ruleSubgenusOrSuperspecies
	ruleSubgenus
	ruleSubgenus2
	ruleSubgenus1
	ruleUninomialCombo
	ruleUninomialCombo1
	ruleUninomialCombo2
	ruleRankUninomial
	ruleRankUninomialPlain
	ruleRankUninomialNotho
	ruleUninomial
	ruleUninomialWord
	ruleAbbrSubgenus
	ruleAbbrGenus
	ruleCapWord
	ruleCapWord1
	ruleCapWordWithDash
	ruleUpperAfterDash
	ruleLowerAfterDash
	ruleTwoLetterGenus
	ruleWord
	ruleWord1
	ruleWordStartsWithDigit
	ruleWord2
	ruleWordApostr
	ruleWord4
	ruleMultiDashedWord
	ruleHybridChar
	ruleGraftChimeraChar
	ruleApproxNameIgnored
	ruleApproximation
	ruleAuthorship
	ruleAuthorshipCombo
	ruleOriginalAuthorship
	ruleOriginalAuthorshipComb
	ruleCombinationAuthorship
	ruleBasionymAuthorshipMissingParens
	ruleMissingParensStart
	ruleMissingParensEnd
	ruleBasionymAuthorshipYearMisformed
	ruleBasionymAuthorship
	ruleBasionymAuthorship1
	ruleBasionymAuthorship2Parens
	ruleAuthorsGroup
	ruleAuthorsTeam
	ruleAuthorSep
	ruleAuthorSep1
	ruleAuthorSep2
	ruleAuthorSepSpanish
	ruleAuthorEx
	ruleAuthorEmend
	ruleAuthor
	ruleAuthor0
	ruleAuthor1
	ruleAuthor2
	ruleUnknownAuthor
	ruleAuthorWord
	ruleAuthorEtAl
	ruleAuthorWord2
	ruleAuthorWord3
	ruleAuthorDashInitials
	ruleAuthorWordSoft
	ruleCapAuthorWord
	ruleAllCapsAuthorWord
	ruleFilius
	ruleFiliusF
	ruleFiliusFNoSpace
	ruleAuthorSuffix
	ruleAuthorPrefixGlued
	ruleAuthorPrefix
	ruleAuthorPrefix2
	ruleAuthorPrefix1
	ruleAuthorUpperChar
	ruleAuthorLowerChar
	ruleYear
	ruleYearRange
	ruleYearWithDot
	ruleYearApprox
	ruleYearWithPage
	ruleYearWithParens
	ruleYearWithChar
	ruleYearNum
	ruleNameUpperChar
	ruleUpperCharExtended
	ruleUpperChar
	ruleNameLowerChar
	ruleMiscodedChar
	ruleLowerCharExtended
	ruleLowerChar
	ruleSpaceCharEOI
	ruleNums
	ruleLowerGreek
	ruleLowerASCII
	ruleUpperASCII
	ruleApostrophe
	ruleApostrASCII
	ruleApostrOther
	ruleDash
	ruleSlash
	rule_
	ruleMultipleSpace
	ruleSingleSpace
	ruleOtherSpace
	ruleEND
)

var rul3s = [...]string{
	"Unknown",
	"SciName",
	"Tail",
	"Name",
	"HybridFormula",
	"HybridFormulaFull",
	"HybridFormulaPart",
	"NamedHybrid",
	"NamedSpeciesHybrid",
	"NamedGenusHybrid",
	"GraftChimeraFormula",
	"GraftChimeraFormulaFull",
	"GraftChimeraFormulaPart",
	"NamedGenusGraftChimera",
	"CandidatusName",
	"Candidatus",
	"SingleName",
	"NameUninomial",
	"NameApprox",
	"NameComp",
	"NameSpecies",
	"GenusWord",
	"InfraspGroup",
	"InfraspEpithet",
	"CultivarWordGroup",
	"Cultivar",
	"RankCultivar",
	"NotHybridChar",
	"CultivarRecursive",
	"CultivarApostrophe",
	"SpeciesEpithet",
	"Comparison",
	"Rank",
	"RankNotho",
	"RankOtherUncommon",
	"RankOther",
	"RankVar",
	"RankForma",
	"RankSsp",
	"RankAgamo",
	"SubgenusOrSuperspecies",
	"Subgenus",
	"Subgenus2",
	"Subgenus1",
	"UninomialCombo",
	"UninomialCombo1",
	"UninomialCombo2",
	"RankUninomial",
	"RankUninomialPlain",
	"RankUninomialNotho",
	"Uninomial",
	"UninomialWord",
	"AbbrSubgenus",
	"AbbrGenus",
	"CapWord",
	"CapWord1",
	"CapWordWithDash",
	"UpperAfterDash",
	"LowerAfterDash",
	"TwoLetterGenus",
	"Word",
	"Word1",
	"WordStartsWithDigit",
	"Word2",
	"WordApostr",
	"Word4",
	"MultiDashedWord",
	"HybridChar",
	"GraftChimeraChar",
	"ApproxNameIgnored",
	"Approximation",
	"Authorship",
	"AuthorshipCombo",
	"OriginalAuthorship",
	"OriginalAuthorshipComb",
	"CombinationAuthorship",
	"BasionymAuthorshipMissingParens",
	"MissingParensStart",
	"MissingParensEnd",
	"BasionymAuthorshipYearMisformed",
	"BasionymAuthorship",
	"BasionymAuthorship1",
	"BasionymAuthorship2Parens",
	"AuthorsGroup",
	"AuthorsTeam",
	"AuthorSep",
	"AuthorSep1",
	"AuthorSep2",
	"AuthorSepSpanish",
	"AuthorEx",
	"AuthorEmend",
	"Author",
	"Author0",
	"Author1",
	"Author2",
	"UnknownAuthor",
	"AuthorWord",
	"AuthorEtAl",
	"AuthorWord2",
	"AuthorWord3",
	"AuthorDashInitials",
	"AuthorWordSoft",
	"CapAuthorWord",
	"AllCapsAuthorWord",
	"Filius",
	"FiliusF",
	"FiliusFNoSpace",
	"AuthorSuffix",
	"AuthorPrefixGlued",
	"AuthorPrefix",
	"AuthorPrefix2",
	"AuthorPrefix1",
	"AuthorUpperChar",
	"AuthorLowerChar",
	"Year",
	"YearRange",
	"YearWithDot",
	"YearApprox",
	"YearWithPage",
	"YearWithParens",
	"YearWithChar",
	"YearNum",
	"NameUpperChar",
	"UpperCharExtended",
	"UpperChar",
	"NameLowerChar",
	"MiscodedChar",
	"LowerCharExtended",
	"LowerChar",
	"SpaceCharEOI",
	"Nums",
	"LowerGreek",
	"LowerASCII",
	"UpperASCII",
	"Apostrophe",
	"ApostrASCII",
	"ApostrOther",
	"Dash",
	"Slash",
	"_",
	"MultipleSpace",
	"SingleSpace",
	"OtherSpace",
	"END",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type Engine struct {
	baseEngine

	Buffer string
	buffer []rune
	rules  [144]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *Engine) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *Engine) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *Engine
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *Engine) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *Engine) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *Engine) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func Pretty(pretty bool) func(*Engine) error {
	return func(p *Engine) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*Engine) error {
	return func(p *Engine) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *Engine) Init(options ...func(*Engine) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 SciName <- <(_? Name Tail END)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				{
					position2, tokenIndex2 := position, tokenIndex
					if !_rules[rule_]() {
						goto l2
					}
					goto l3
				l2:
					position, tokenIndex = position2, tokenIndex2
				}
			l3:
				if !_rules[ruleName]() {
					goto l0
				}
				if !_rules[ruleTail]() {
					goto l0
				}
				if !_rules[ruleEND]() {
					goto l0
				}
				add(ruleSciName, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Tail <- <((_ / ';' / ',') .*)?> */
		func() bool {
			{
				position5 := position
				{
					position6, tokenIndex6 := position, tokenIndex
					{
						position8, tokenIndex8 := position, tokenIndex
						if !_rules[rule_]() {
							goto l9
						}
						goto l8
					l9:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(';') {
							goto l10
						}
						position++
						goto l8
					l10:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(',') {
							goto l6
						}
						position++
					}
				l8:
				l11:
					{
						position12, tokenIndex12 := position, tokenIndex
						if !matchDot() {
							goto l12
						}
						goto l11
					l12:
						position, tokenIndex = position12, tokenIndex12
					}
					goto l7
				l6:
					position, tokenIndex = position6, tokenIndex6
				}
			l7:
				add(ruleTail, position5)
			}
			return true
		},
		/* 2 Name <- <(NamedGenusGraftChimera / GraftChimeraFormula / NamedHybrid / HybridFormula / CandidatusName / SingleName)> */
		func() bool {
			position13, tokenIndex13 := position, tokenIndex
			{
				position14 := position
				{
					position15, tokenIndex15 := position, tokenIndex
					if !_rules[ruleNamedGenusGraftChimera]() {
						goto l16
					}
					goto l15
				l16:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleGraftChimeraFormula]() {
						goto l17
					}
					goto l15
				l17:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleNamedHybrid]() {
						goto l18
					}
					goto l15
				l18:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleHybridFormula]() {
						goto l19
					}
					goto l15
				l19:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleCandidatusName]() {
						goto l20
					}
					goto l15
				l20:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleSingleName]() {
						goto l13
					}
				}
			l15:
				add(ruleName, position14)
			}
			return true
		l13:
			position, tokenIndex = position13, tokenIndex13
			return false
		},
		/* 3 HybridFormula <- <(SingleName (_ (HybridFormulaPart / HybridFormulaFull))+)> */
		func() bool {
			position21, tokenIndex21 := position, tokenIndex
			{
				position22 := position
				if !_rules[ruleSingleName]() {
					goto l21
				}
				if !_rules[rule_]() {
					goto l21
				}
				{
					position25, tokenIndex25 := position, tokenIndex
					if !_rules[ruleHybridFormulaPart]() {
						goto l26
					}
					goto l25
				l26:
					position, tokenIndex = position25, tokenIndex25
					if !_rules[ruleHybridFormulaFull]() {
						goto l21
					}
				}
			l25:
			l23:
				{
					position24, tokenIndex24 := position, tokenIndex
					if !_rules[rule_]() {
						goto l24
					}
					{
						position27, tokenIndex27 := position, tokenIndex
						if !_rules[ruleHybridFormulaPart]() {
							goto l28
						}
						goto l27
					l28:
						position, tokenIndex = position27, tokenIndex27
						if !_rules[ruleHybridFormulaFull]() {
							goto l24
						}
					}
				l27:
					goto l23
				l24:
					position, tokenIndex = position24, tokenIndex24
				}
				add(ruleHybridFormula, position22)
			}
			return true
		l21:
			position, tokenIndex = position21, tokenIndex21
			return false
		},
		/* 4 HybridFormulaFull <- <(HybridChar (_ SingleName)?)> */
		func() bool {
			position29, tokenIndex29 := position, tokenIndex
			{
				position30 := position
				if !_rules[ruleHybridChar]() {
					goto l29
				}
				{
					position31, tokenIndex31 := position, tokenIndex
					if !_rules[rule_]() {
						goto l31
					}
					if !_rules[ruleSingleName]() {
						goto l31
					}
					goto l32
				l31:
					position, tokenIndex = position31, tokenIndex31
				}
			l32:
				add(ruleHybridFormulaFull, position30)
			}
			return true
		l29:
			position, tokenIndex = position29, tokenIndex29
			return false
		},
		/* 5 HybridFormulaPart <- <(HybridChar _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position33, tokenIndex33 := position, tokenIndex
			{
				position34 := position
				if !_rules[ruleHybridChar]() {
					goto l33
				}
				if !_rules[rule_]() {
					goto l33
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l33
				}
				{
					position35, tokenIndex35 := position, tokenIndex
					if !_rules[rule_]() {
						goto l35
					}
					if !_rules[ruleInfraspGroup]() {
						goto l35
					}
					goto l36
				l35:
					position, tokenIndex = position35, tokenIndex35
				}
			l36:
				add(ruleHybridFormulaPart, position34)
			}
			return true
		l33:
			position, tokenIndex = position33, tokenIndex33
			return false
		},
		/* 6 NamedHybrid <- <(NamedGenusHybrid / NamedSpeciesHybrid)> */
		func() bool {
			position37, tokenIndex37 := position, tokenIndex
			{
				position38 := position
				{
					position39, tokenIndex39 := position, tokenIndex
					if !_rules[ruleNamedGenusHybrid]() {
						goto l40
					}
					goto l39
				l40:
					position, tokenIndex = position39, tokenIndex39
					if !_rules[ruleNamedSpeciesHybrid]() {
						goto l37
					}
				}
			l39:
				add(ruleNamedHybrid, position38)
			}
			return true
		l37:
			position, tokenIndex = position37, tokenIndex37
			return false
		},
		/* 7 NamedSpeciesHybrid <- <(GenusWord (_ Subgenus)? (_ Comparison)? _ HybridChar _? SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position41, tokenIndex41 := position, tokenIndex
			{
				position42 := position
				if !_rules[ruleGenusWord]() {
					goto l41
				}
				{
					position43, tokenIndex43 := position, tokenIndex
					if !_rules[rule_]() {
						goto l43
					}
					if !_rules[ruleSubgenus]() {
						goto l43
					}
					goto l44
				l43:
					position, tokenIndex = position43, tokenIndex43
				}
			l44:
				{
					position45, tokenIndex45 := position, tokenIndex
					if !_rules[rule_]() {
						goto l45
					}
					if !_rules[ruleComparison]() {
						goto l45
					}
					goto l46
				l45:
					position, tokenIndex = position45, tokenIndex45
				}
			l46:
				if !_rules[rule_]() {
					goto l41
				}
				if !_rules[ruleHybridChar]() {
					goto l41
				}
				{
					position47, tokenIndex47 := position, tokenIndex
					if !_rules[rule_]() {
						goto l47
					}
					goto l48
				l47:
					position, tokenIndex = position47, tokenIndex47
				}
			l48:
				if !_rules[ruleSpeciesEpithet]() {
					goto l41
				}
				{
					position49, tokenIndex49 := position, tokenIndex
					if !_rules[rule_]() {
						goto l49
					}
					if !_rules[ruleInfraspGroup]() {
						goto l49
					}
					goto l50
				l49:
					position, tokenIndex = position49, tokenIndex49
				}
			l50:
				add(ruleNamedSpeciesHybrid, position42)
			}
			return true
		l41:
			position, tokenIndex = position41, tokenIndex41
			return false
		},
		/* 8 NamedGenusHybrid <- <(HybridChar _? SingleName)> */
		func() bool {
			position51, tokenIndex51 := position, tokenIndex
			{
				position52 := position
				if !_rules[ruleHybridChar]() {
					goto l51
				}
				{
					position53, tokenIndex53 := position, tokenIndex
					if !_rules[rule_]() {
						goto l53
					}
					goto l54
				l53:
					position, tokenIndex = position53, tokenIndex53
				}
			l54:
				if !_rules[ruleSingleName]() {
					goto l51
				}
				add(ruleNamedGenusHybrid, position52)
			}
			return true
		l51:
			position, tokenIndex = position51, tokenIndex51
			return false
		},
		/* 9 GraftChimeraFormula <- <(SingleName (_ (GraftChimeraFormulaPart / GraftChimeraFormulaFull))+)> */
		func() bool {
			position55, tokenIndex55 := position, tokenIndex
			{
				position56 := position
				if !_rules[ruleSingleName]() {
					goto l55
				}
				if !_rules[rule_]() {
					goto l55
				}
				{
					position59, tokenIndex59 := position, tokenIndex
					if !_rules[ruleGraftChimeraFormulaPart]() {
						goto l60
					}
					goto l59
				l60:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleGraftChimeraFormulaFull]() {
						goto l55
					}
				}
			l59:
			l57:
				{
					position58, tokenIndex58 := position, tokenIndex
					if !_rules[rule_]() {
						goto l58
					}
					{
						position61, tokenIndex61 := position, tokenIndex
						if !_rules[ruleGraftChimeraFormulaPart]() {
							goto l62
						}
						goto l61
					l62:
						position, tokenIndex = position61, tokenIndex61
						if !_rules[ruleGraftChimeraFormulaFull]() {
							goto l58
						}
					}
				l61:
					goto l57
				l58:
					position, tokenIndex = position58, tokenIndex58
				}
				add(ruleGraftChimeraFormula, position56)
			}
			return true
		l55:
			position, tokenIndex = position55, tokenIndex55
			return false
		},
		/* 10 GraftChimeraFormulaFull <- <(GraftChimeraChar (_ SingleName)?)> */
		func() bool {
			position63, tokenIndex63 := position, tokenIndex
			{
				position64 := position
				if !_rules[ruleGraftChimeraChar]() {
					goto l63
				}
				{
					position65, tokenIndex65 := position, tokenIndex
					if !_rules[rule_]() {
						goto l65
					}
					if !_rules[ruleSingleName]() {
						goto l65
					}
					goto l66
				l65:
					position, tokenIndex = position65, tokenIndex65
				}
			l66:
				add(ruleGraftChimeraFormulaFull, position64)
			}
			return true
		l63:
			position, tokenIndex = position63, tokenIndex63
			return false
		},
		/* 11 GraftChimeraFormulaPart <- <(GraftChimeraChar _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position67, tokenIndex67 := position, tokenIndex
			{
				position68 := position
				if !_rules[ruleGraftChimeraChar]() {
					goto l67
				}
				if !_rules[rule_]() {
					goto l67
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l67
				}
				{
					position69, tokenIndex69 := position, tokenIndex
					if !_rules[rule_]() {
						goto l69
					}
					if !_rules[ruleInfraspGroup]() {
						goto l69
					}
					goto l70
				l69:
					position, tokenIndex = position69, tokenIndex69
				}
			l70:
				add(ruleGraftChimeraFormulaPart, position68)
			}
			return true
		l67:
			position, tokenIndex = position67, tokenIndex67
			return false
		},
		/* 12 NamedGenusGraftChimera <- <(GraftChimeraChar _? SingleName)> */
		func() bool {
			position71, tokenIndex71 := position, tokenIndex
			{
				position72 := position
				if !_rules[ruleGraftChimeraChar]() {
					goto l71
				}
				{
					position73, tokenIndex73 := position, tokenIndex
					if !_rules[rule_]() {
						goto l73
					}
					goto l74
				l73:
					position, tokenIndex = position73, tokenIndex73
				}
			l74:
				if !_rules[ruleSingleName]() {
					goto l71
				}
				add(ruleNamedGenusGraftChimera, position72)
			}
			return true
		l71:
			position, tokenIndex = position71, tokenIndex71
			return false
		},
		/* 13 CandidatusName <- <(Candidatus _ SingleName)> */
		func() bool {
			position75, tokenIndex75 := position, tokenIndex
			{
				position76 := position
				if !_rules[ruleCandidatus]() {
					goto l75
				}
				if !_rules[rule_]() {
					goto l75
				}
				if !_rules[ruleSingleName]() {
					goto l75
				}
				add(ruleCandidatusName, position76)
			}
			return true
		l75:
			position, tokenIndex = position75, tokenIndex75
			return false
		},
		/* 14 Candidatus <- <('C' 'a' 'n' 'd' 'i' 'd' 'a' 't' 'u' 's')> */
		func() bool {
			position77, tokenIndex77 := position, tokenIndex
			{
				position78 := position
				if buffer[position] != rune('C') {
					goto l77
				}
				position++
				if buffer[position] != rune('a') {
					goto l77
				}
				position++
				if buffer[position] != rune('n') {
					goto l77
				}
				position++
				if buffer[position] != rune('d') {
					goto l77
				}
				position++
				if buffer[position] != rune('i') {
					goto l77
				}
				position++
				if buffer[position] != rune('d') {
					goto l77
				}
				position++
				if buffer[position] != rune('a') {
					goto l77
				}
				position++
				if buffer[position] != rune('t') {
					goto l77
				}
				position++
				if buffer[position] != rune('u') {
					goto l77
				}
				position++
				if buffer[position] != rune('s') {
					goto l77
				}
				position++
				add(ruleCandidatus, position78)
			}
			return true
		l77:
			position, tokenIndex = position77, tokenIndex77
			return false
		},
		/* 15 SingleName <- <(NameComp / NameApprox / NameSpecies / NameUninomial)> */
		func() bool {
			position79, tokenIndex79 := position, tokenIndex
			{
				position80 := position
				{
					position81, tokenIndex81 := position, tokenIndex
					if !_rules[ruleNameComp]() {
						goto l82
					}
					goto l81
				l82:
					position, tokenIndex = position81, tokenIndex81
					if !_rules[ruleNameApprox]() {
						goto l83
					}
					goto l81
				l83:
					position, tokenIndex = position81, tokenIndex81
					if !_rules[ruleNameSpecies]() {
						goto l84
					}
					goto l81
				l84:
					position, tokenIndex = position81, tokenIndex81
					if !_rules[ruleNameUninomial]() {
						goto l79
					}
				}
			l81:
				add(ruleSingleName, position80)
			}
			return true
		l79:
			position, tokenIndex = position79, tokenIndex79
			return false
		},
		/* 16 NameUninomial <- <((UninomialCombo / Uninomial) (_ CultivarWordGroup)?)> */
		func() bool {
			position85, tokenIndex85 := position, tokenIndex
			{
				position86 := position
				{
					position87, tokenIndex87 := position, tokenIndex
					if !_rules[ruleUninomialCombo]() {
						goto l88
					}
					goto l87
				l88:
					position, tokenIndex = position87, tokenIndex87
					if !_rules[ruleUninomial]() {
						goto l85
					}
				}
			l87:
				{
					position89, tokenIndex89 := position, tokenIndex
					if !_rules[rule_]() {
						goto l89
					}
					if !_rules[ruleCultivarWordGroup]() {
						goto l89
					}
					goto l90
				l89:
					position, tokenIndex = position89, tokenIndex89
				}
			l90:
				add(ruleNameUninomial, position86)
			}
			return true
		l85:
			position, tokenIndex = position85, tokenIndex85
			return false
		},
		/* 17 NameApprox <- <(GenusWord (_ SpeciesEpithet)? _ Approximation ApproxNameIgnored)> */
		func() bool {
			position91, tokenIndex91 := position, tokenIndex
			{
				position92 := position
				if !_rules[ruleGenusWord]() {
					goto l91
				}
				{
					position93, tokenIndex93 := position, tokenIndex
					if !_rules[rule_]() {
						goto l93
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l93
					}
					goto l94
				l93:
					position, tokenIndex = position93, tokenIndex93
				}
			l94:
				if !_rules[rule_]() {
					goto l91
				}
				if !_rules[ruleApproximation]() {
					goto l91
				}
				if !_rules[ruleApproxNameIgnored]() {
					goto l91
				}
				add(ruleNameApprox, position92)
			}
			return true
		l91:
			position, tokenIndex = position91, tokenIndex91
			return false
		},
		/* 18 NameComp <- <(GenusWord _ Comparison (_ SpeciesEpithet)?)> */
		func() bool {
			position95, tokenIndex95 := position, tokenIndex
			{
				position96 := position
				if !_rules[ruleGenusWord]() {
					goto l95
				}
				if !_rules[rule_]() {
					goto l95
				}
				if !_rules[ruleComparison]() {
					goto l95
				}
				{
					position97, tokenIndex97 := position, tokenIndex
					if !_rules[rule_]() {
						goto l97
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l97
					}
					goto l98
				l97:
					position, tokenIndex = position97, tokenIndex97
				}
			l98:
				add(ruleNameComp, position96)
			}
			return true
		l95:
			position, tokenIndex = position95, tokenIndex95
			return false
		},
		/* 19 NameSpecies <- <(GenusWord (_? (Subgenus / SubgenusOrSuperspecies))? _ SpeciesEpithet (_ InfraspGroup)? (_ CultivarWordGroup)?)> */
		func() bool {
			position99, tokenIndex99 := position, tokenIndex
			{
				position100 := position
				if !_rules[ruleGenusWord]() {
					goto l99
				}
				{
					position101, tokenIndex101 := position, tokenIndex
					{
						position103, tokenIndex103 := position, tokenIndex
						if !_rules[rule_]() {
							goto l103
						}
						goto l104
					l103:
						position, tokenIndex = position103, tokenIndex103
					}
				l104:
					{
						position105, tokenIndex105 := position, tokenIndex
						if !_rules[ruleSubgenus]() {
							goto l106
						}
						goto l105
					l106:
						position, tokenIndex = position105, tokenIndex105
						if !_rules[ruleSubgenusOrSuperspecies]() {
							goto l101
						}
					}
				l105:
					goto l102
				l101:
					position, tokenIndex = position101, tokenIndex101
				}
			l102:
				if !_rules[rule_]() {
					goto l99
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l99
				}
				{
					position107, tokenIndex107 := position, tokenIndex
					if !_rules[rule_]() {
						goto l107
					}
					if !_rules[ruleInfraspGroup]() {
						goto l107
					}
					goto l108
				l107:
					position, tokenIndex = position107, tokenIndex107
				}
			l108:
				{
					position109, tokenIndex109 := position, tokenIndex
					if !_rules[rule_]() {
						goto l109
					}
					if !_rules[ruleCultivarWordGroup]() {
						goto l109
					}
					goto l110
				l109:
					position, tokenIndex = position109, tokenIndex109
				}
			l110:
				add(ruleNameSpecies, position100)
			}
			return true
		l99:
			position, tokenIndex = position99, tokenIndex99
			return false
		},
		/* 20 GenusWord <- <((AbbrGenus / UninomialWord) !(_ AuthorWord))> */
		func() bool {
			position111, tokenIndex111 := position, tokenIndex
			{
				position112 := position
				{
					position113, tokenIndex113 := position, tokenIndex
					if !_rules[ruleAbbrGenus]() {
						goto l114
					}
					goto l113
				l114:
					position, tokenIndex = position113, tokenIndex113
					if !_rules[ruleUninomialWord]() {
						goto l111
					}
				}
			l113:
				{
					position115, tokenIndex115 := position, tokenIndex
					if !_rules[rule_]() {
						goto l115
					}
					if !_rules[ruleAuthorWord]() {
						goto l115
					}
					goto l111
				l115:
					position, tokenIndex = position115, tokenIndex115
				}
				add(ruleGenusWord, position112)
			}
			return true
		l111:
			position, tokenIndex = position111, tokenIndex111
			return false
		},
		/* 21 InfraspGroup <- <(InfraspEpithet (_ InfraspEpithet)? (_ InfraspEpithet)?)> */
		func() bool {
			position116, tokenIndex116 := position, tokenIndex
			{
				position117 := position
				if !_rules[ruleInfraspEpithet]() {
					goto l116
				}
				{
					position118, tokenIndex118 := position, tokenIndex
					if !_rules[rule_]() {
						goto l118
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l118
					}
					goto l119
				l118:
					position, tokenIndex = position118, tokenIndex118
				}
			l119:
				{
					position120, tokenIndex120 := position, tokenIndex
					if !_rules[rule_]() {
						goto l120
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l120
					}
					goto l121
				l120:
					position, tokenIndex = position120, tokenIndex120
				}
			l121:
				add(ruleInfraspGroup, position117)
			}
			return true
		l116:
			position, tokenIndex = position116, tokenIndex116
			return false
		},
		/* 22 InfraspEpithet <- <((Rank _?)? !AuthorEx Word (_? Authorship)?)> */
		func() bool {
			position122, tokenIndex122 := position, tokenIndex
			{
				position123 := position
				{
					position124, tokenIndex124 := position, tokenIndex
					if !_rules[ruleRank]() {
						goto l124
					}
					{
						position126, tokenIndex126 := position, tokenIndex
						if !_rules[rule_]() {
							goto l126
						}
						goto l127
					l126:
						position, tokenIndex = position126, tokenIndex126
					}
				l127:
					goto l125
				l124:
					position, tokenIndex = position124, tokenIndex124
				}
			l125:
				{
					position128, tokenIndex128 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l128
					}
					goto l122
				l128:
					position, tokenIndex = position128, tokenIndex128
				}
				if !_rules[ruleWord]() {
					goto l122
				}
				{
					position129, tokenIndex129 := position, tokenIndex
					{
						position131, tokenIndex131 := position, tokenIndex
						if !_rules[rule_]() {
							goto l131
						}
						goto l132
					l131:
						position, tokenIndex = position131, tokenIndex131
					}
				l132:
					if !_rules[ruleAuthorship]() {
						goto l129
					}
					goto l130
				l129:
					position, tokenIndex = position129, tokenIndex129
				}
			l130:
				add(ruleInfraspEpithet, position123)
			}
			return true
		l122:
			position, tokenIndex = position122, tokenIndex122
			return false
		},
		/* 23 CultivarWordGroup <- <(((RankCultivar _)? CultivarApostrophe CultivarRecursive CultivarApostrophe) / (RankCultivar _ Cultivar))> */
		func() bool {
			position133, tokenIndex133 := position, tokenIndex
			{
				position134 := position
				{
					position135, tokenIndex135 := position, tokenIndex
					{
						position137, tokenIndex137 := position, tokenIndex
						if !_rules[ruleRankCultivar]() {
							goto l137
						}
						if !_rules[rule_]() {
							goto l137
						}
						goto l138
					l137:
						position, tokenIndex = position137, tokenIndex137
					}
				l138:
					if !_rules[ruleCultivarApostrophe]() {
						goto l136
					}
					if !_rules[ruleCultivarRecursive]() {
						goto l136
					}
					if !_rules[ruleCultivarApostrophe]() {
						goto l136
					}
					goto l135
				l136:
					position, tokenIndex = position135, tokenIndex135
					if !_rules[ruleRankCultivar]() {
						goto l133
					}
					if !_rules[rule_]() {
						goto l133
					}
					if !_rules[ruleCultivar]() {
						goto l133
					}
				}
			l135:
				add(ruleCultivarWordGroup, position134)
			}
			return true
		l133:
			position, tokenIndex = position133, tokenIndex133
			return false
		},
		/* 24 Cultivar <- <NotHybridChar+> */
		func() bool {
			position139, tokenIndex139 := position, tokenIndex
			{
				position140 := position
				if !_rules[ruleNotHybridChar]() {
					goto l139
				}
			l141:
				{
					position142, tokenIndex142 := position, tokenIndex
					if !_rules[ruleNotHybridChar]() {
						goto l142
					}
					goto l141
				l142:
					position, tokenIndex = position142, tokenIndex142
				}
				add(ruleCultivar, position140)
			}
			return true
		l139:
			position, tokenIndex = position139, tokenIndex139
			return false
		},
		/* 25 RankCultivar <- <('c' 'v' '.'?)> */
		func() bool {
			position143, tokenIndex143 := position, tokenIndex
			{
				position144 := position
				if buffer[position] != rune('c') {
					goto l143
				}
				position++
				if buffer[position] != rune('v') {
					goto l143
				}
				position++
				{
					position145, tokenIndex145 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l145
					}
					position++
					goto l146
				l145:
					position, tokenIndex = position145, tokenIndex145
				}
			l146:
				add(ruleRankCultivar, position144)
			}
			return true
		l143:
			position, tokenIndex = position143, tokenIndex143
			return false
		},
		/* 26 NotHybridChar <- <(!(_ HybridChar) .)> */
		func() bool {
			position147, tokenIndex147 := position, tokenIndex
			{
				position148 := position
				{
					position149, tokenIndex149 := position, tokenIndex
					if !_rules[rule_]() {
						goto l149
					}
					if !_rules[ruleHybridChar]() {
						goto l149
					}
					goto l147
				l149:
					position, tokenIndex = position149, tokenIndex149
				}
				if !matchDot() {
					goto l147
				}
				add(ruleNotHybridChar, position148)
			}
			return true
		l147:
			position, tokenIndex = position147, tokenIndex147
			return false
		},
		/* 27 CultivarRecursive <- <((NotHybridChar CultivarRecursive) / &CultivarApostrophe)> */
		func() bool {
			position150, tokenIndex150 := position, tokenIndex
			{
				position151 := position
				{
					position152, tokenIndex152 := position, tokenIndex
					if !_rules[ruleNotHybridChar]() {
						goto l153
					}
					if !_rules[ruleCultivarRecursive]() {
						goto l153
					}
					goto l152
				l153:
					position, tokenIndex = position152, tokenIndex152
					{
						position154, tokenIndex154 := position, tokenIndex
						if !_rules[ruleCultivarApostrophe]() {
							goto l150
						}
						position, tokenIndex = position154, tokenIndex154
					}
				}
			l152:
				add(ruleCultivarRecursive, position151)
			}
			return true
		l150:
			position, tokenIndex = position150, tokenIndex150
			return false
		},
		/* 28 CultivarApostrophe <- <('\'' / '‘' / '’' / '"' / '“' / '”')> */
		func() bool {
			position155, tokenIndex155 := position, tokenIndex
			{
				position156 := position
				{
					position157, tokenIndex157 := position, tokenIndex
					if buffer[position] != rune('\'') {
						goto l158
					}
					position++
					goto l157
				l158:
					position, tokenIndex = position157, tokenIndex157
					if buffer[position] != rune('‘') {
						goto l159
					}
					position++
					goto l157
				l159:
					position, tokenIndex = position157, tokenIndex157
					if buffer[position] != rune('’') {
						goto l160
					}
					position++
					goto l157
				l160:
					position, tokenIndex = position157, tokenIndex157
					if buffer[position] != rune('"') {
						goto l161
					}
					position++
					goto l157
				l161:
					position, tokenIndex = position157, tokenIndex157
					if buffer[position] != rune('“') {
						goto l162
					}
					position++
					goto l157
				l162:
					position, tokenIndex = position157, tokenIndex157
					if buffer[position] != rune('”') {
						goto l155
					}
					position++
				}
			l157:
				add(ruleCultivarApostrophe, position156)
			}
			return true
		l155:
			position, tokenIndex = position155, tokenIndex155
			return false
		},
		/* 29 SpeciesEpithet <- <(!AuthorEx Word (_? Authorship)?)> */
		func() bool {
			position163, tokenIndex163 := position, tokenIndex
			{
				position164 := position
				{
					position165, tokenIndex165 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l165
					}
					goto l163
				l165:
					position, tokenIndex = position165, tokenIndex165
				}
				if !_rules[ruleWord]() {
					goto l163
				}
				{
					position166, tokenIndex166 := position, tokenIndex
					{
						position168, tokenIndex168 := position, tokenIndex
						if !_rules[rule_]() {
							goto l168
						}
						goto l169
					l168:
						position, tokenIndex = position168, tokenIndex168
					}
				l169:
					if !_rules[ruleAuthorship]() {
						goto l166
					}
					goto l167
				l166:
					position, tokenIndex = position166, tokenIndex166
				}
			l167:
				add(ruleSpeciesEpithet, position164)
			}
			return true
		l163:
			position, tokenIndex = position163, tokenIndex163
			return false
		},
		/* 30 Comparison <- <('c' 'f' '.'? &SpaceCharEOI)> */
		func() bool {
			position170, tokenIndex170 := position, tokenIndex
			{
				position171 := position
				if buffer[position] != rune('c') {
					goto l170
				}
				position++
				if buffer[position] != rune('f') {
					goto l170
				}
				position++
				{
					position172, tokenIndex172 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l172
					}
					position++
					goto l173
				l172:
					position, tokenIndex = position172, tokenIndex172
				}
			l173:
				{
					position174, tokenIndex174 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l170
					}
					position, tokenIndex = position174, tokenIndex174
				}
				add(ruleComparison, position171)
			}
			return true
		l170:
			position, tokenIndex = position170, tokenIndex170
			return false
		},
		/* 31 Rank <- <((RankForma / RankVar / RankSsp / RankOther / RankOtherUncommon / RankAgamo / RankNotho) (_? LowerGreek ('.' / &SpaceCharEOI))?)> */
		func() bool {
			position175, tokenIndex175 := position, tokenIndex
			{
				position176 := position
				{
					position177, tokenIndex177 := position, tokenIndex
					if !_rules[ruleRankForma]() {
						goto l178
					}
					goto l177
				l178:
					position, tokenIndex = position177, tokenIndex177
					if !_rules[ruleRankVar]() {
						goto l179
					}
					goto l177
				l179:
					position, tokenIndex = position177, tokenIndex177
					if !_rules[ruleRankSsp]() {
						goto l180
					}
					goto l177
				l180:
					position, tokenIndex = position177, tokenIndex177
					if !_rules[ruleRankOther]() {
						goto l181
					}
					goto l177
				l181:
					position, tokenIndex = position177, tokenIndex177
					if !_rules[ruleRankOtherUncommon]() {
						goto l182
					}
					goto l177
				l182:
					position, tokenIndex = position177, tokenIndex177
					if !_rules[ruleRankAgamo]() {
						goto l183
					}
					goto l177
				l183:
					position, tokenIndex = position177, tokenIndex177
					if !_rules[ruleRankNotho]() {
						goto l175
					}
				}
			l177:
				{
					position184, tokenIndex184 := position, tokenIndex
					{
						position186, tokenIndex186 := position, tokenIndex
						if !_rules[rule_]() {
							goto l186
						}
						goto l187
					l186:
						position, tokenIndex = position186, tokenIndex186
					}
				l187:
					if !_rules[ruleLowerGreek]() {
						goto l184
					}
					{
						position188, tokenIndex188 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l189
						}
						position++
						goto l188
					l189:
						position, tokenIndex = position188, tokenIndex188
						{
							position190, tokenIndex190 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l184
							}
							position, tokenIndex = position190, tokenIndex190
						}
					}
				l188:
					goto l185
				l184:
					position, tokenIndex = position184, tokenIndex184
				}
			l185:
				add(ruleRank, position176)
			}
			return true
		l175:
			position, tokenIndex = position175, tokenIndex175
			return false
		},
		/* 32 RankNotho <- <((('n' 'o' 't' 'h' 'o' (('v' 'a' 'r') / ('f' 'o') / 'f' / ('s' 'u' 'b' 's' 'p') / ('s' 's' 'p') / ('s' 'p') / ('m' 'o' 'r' 't' 'h') / ('s' 'u' 'p' 's' 'p') / ('s' 'u'))) / ('n' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position191, tokenIndex191 := position, tokenIndex
			{
				position192 := position
				{
					position193, tokenIndex193 := position, tokenIndex
					if buffer[position] != rune('n') {
						goto l194
					}
					position++
					if buffer[position] != rune('o') {
						goto l194
					}
					position++
					if buffer[position] != rune('t') {
						goto l194
					}
					position++
					if buffer[position] != rune('h') {
						goto l194
					}
					position++
					if buffer[position] != rune('o') {
						goto l194
					}
					position++
					{
						position195, tokenIndex195 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l196
						}
						position++
						if buffer[position] != rune('a') {
							goto l196
						}
						position++
						if buffer[position] != rune('r') {
							goto l196
						}
						position++
						goto l195
					l196:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('f') {
							goto l197
						}
						position++
						if buffer[position] != rune('o') {
							goto l197
						}
						position++
						goto l195
					l197:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('f') {
							goto l198
						}
						position++
						goto l195
					l198:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('s') {
							goto l199
						}
						position++
						if buffer[position] != rune('u') {
							goto l199
						}
						position++
						if buffer[position] != rune('b') {
							goto l199
						}
						position++
						if buffer[position] != rune('s') {
							goto l199
						}
						position++
						if buffer[position] != rune('p') {
							goto l199
						}
						position++
						goto l195
					l199:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('s') {
							goto l200
						}
						position++
						if buffer[position] != rune('s') {
							goto l200
						}
						position++
						if buffer[position] != rune('p') {
							goto l200
						}
						position++
						goto l195
					l200:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('s') {
							goto l201
						}
						position++
						if buffer[position] != rune('p') {
							goto l201
						}
						position++
						goto l195
					l201:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('m') {
							goto l202
						}
						position++
						if buffer[position] != rune('o') {
							goto l202
						}
						position++
						if buffer[position] != rune('r') {
							goto l202
						}
						position++
						if buffer[position] != rune('t') {
							goto l202
						}
						position++
						if buffer[position] != rune('h') {
							goto l202
						}
						position++
						goto l195
					l202:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('s') {
							goto l203
						}
						position++
						if buffer[position] != rune('u') {
							goto l203
						}
						position++
						if buffer[position] != rune('p') {
							goto l203
						}
						position++
						if buffer[position] != rune('s') {
							goto l203
						}
						position++
						if buffer[position] != rune('p') {
							goto l203
						}
						position++
						goto l195
					l203:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('s') {
							goto l194
						}
						position++
						if buffer[position] != rune('u') {
							goto l194
						}
						position++
					}
				l195:
					goto l193
				l194:
					position, tokenIndex = position193, tokenIndex193
					if buffer[position] != rune('n') {
						goto l191
					}
					position++
					if buffer[position] != rune('v') {
						goto l191
					}
					position++
					if buffer[position] != rune('a') {
						goto l191
					}
					position++
					if buffer[position] != rune('r') {
						goto l191
					}
					position++
				}
			l193:
				{
					position204, tokenIndex204 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l205
					}
					position++
					goto l204
				l205:
					position, tokenIndex = position204, tokenIndex204
					{
						position206, tokenIndex206 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l191
						}
						position, tokenIndex = position206, tokenIndex206
					}
				}
			l204:
				add(ruleRankNotho, position192)
			}
			return true
		l191:
			position, tokenIndex = position191, tokenIndex191
			return false
		},
		/* 33 RankOtherUncommon <- <(('*' / ('n' 'a' 't' 'i' 'o') / ('n' 'a' 't' '.') / ('n' 'a' 't') / ('f' '.' 's' 'p') / 'α' / ('β' 'β') / 'β' / 'γ' / 'δ' / 'ε' / 'φ' / 'θ' / 'μ' / ('a' '.') / ('b' '.') / ('c' '.') / ('d' '.') / ('e' '.') / ('g' '.') / ('k' '.') / ('m' 'u' 't' '.')) &SpaceCharEOI)> */
		func() bool {
			position207, tokenIndex207 := position, tokenIndex
			{
				position208 := position
				{
					position209, tokenIndex209 := position, tokenIndex
					if buffer[position] != rune('*') {
						goto l210
					}
					position++
					goto l209
				l210:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('n') {
						goto l211
					}
					position++
					if buffer[position] != rune('a') {
						goto l211
					}
					position++
					if buffer[position] != rune('t') {
						goto l211
					}
					position++
					if buffer[position] != rune('i') {
						goto l211
					}
					position++
					if buffer[position] != rune('o') {
						goto l211
					}
					position++
					goto l209
				l211:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('n') {
						goto l212
					}
					position++
					if buffer[position] != rune('a') {
						goto l212
					}
					position++
					if buffer[position] != rune('t') {
						goto l212
					}
					position++
					if buffer[position] != rune('.') {
						goto l212
					}
					position++
					goto l209
				l212:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('n') {
						goto l213
					}
					position++
					if buffer[position] != rune('a') {
						goto l213
					}
					position++
					if buffer[position] != rune('t') {
						goto l213
					}
					position++
					goto l209
				l213:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('f') {
						goto l214
					}
					position++
					if buffer[position] != rune('.') {
						goto l214
					}
					position++
					if buffer[position] != rune('s') {
						goto l214
					}
					position++
					if buffer[position] != rune('p') {
						goto l214
					}
					position++
					goto l209
				l214:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('α') {
						goto l215
					}
					position++
					goto l209
				l215:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('β') {
						goto l216
					}
					position++
					if buffer[position] != rune('β') {
						goto l216
					}
					position++
					goto l209
				l216:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('β') {
						goto l217
					}
					position++
					goto l209
				l217:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('γ') {
						goto l218
					}
					position++
					goto l209
				l218:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('δ') {
						goto l219
					}
					position++
					goto l209
				l219:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('ε') {
						goto l220
					}
					position++
					goto l209
				l220:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('φ') {
						goto l221
					}
					position++
					goto l209
				l221:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('θ') {
						goto l222
					}
					position++
					goto l209
				l222:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('μ') {
						goto l223
					}
					position++
					goto l209
				l223:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('a') {
						goto l224
					}
					position++
					if buffer[position] != rune('.') {
						goto l224
					}
					position++
					goto l209
				l224:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('b') {
						goto l225
					}
					position++
					if buffer[position] != rune('.') {
						goto l225
					}
					position++
					goto l209
				l225:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('c') {
						goto l226
					}
					position++
					if buffer[position] != rune('.') {
						goto l226
					}
					position++
					goto l209
				l226:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('d') {
						goto l227
					}
					position++
					if buffer[position] != rune('.') {
						goto l227
					}
					position++
					goto l209
				l227:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('e') {
						goto l228
					}
					position++
					if buffer[position] != rune('.') {
						goto l228
					}
					position++
					goto l209
				l228:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('g') {
						goto l229
					}
					position++
					if buffer[position] != rune('.') {
						goto l229
					}
					position++
					goto l209
				l229:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('k') {
						goto l230
					}
					position++
					if buffer[position] != rune('.') {
						goto l230
					}
					position++
					goto l209
				l230:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('m') {
						goto l207
					}
					position++
					if buffer[position] != rune('u') {
						goto l207
					}
					position++
					if buffer[position] != rune('t') {
						goto l207
					}
					position++
					if buffer[position] != rune('.') {
						goto l207
					}
					position++
				}
			l209:
				{
					position231, tokenIndex231 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l207
					}
					position, tokenIndex = position231, tokenIndex231
				}
				add(ruleRankOtherUncommon, position208)
			}
			return true
		l207:
			position, tokenIndex = position207, tokenIndex207
			return false
		},
		/* 34 RankOther <- <((('m' 'o' 'r' 'p' 'h') / ('c' 'o' 'n' 'v' 'a' 'r') / ('p' 's' 'e' 'u' 'd' 'o' 'v' 'a' 'r') / ('s' 'e' 'c' 't') / ('s' 'e' 'r') / ('s' 'u' 'b' 'v' 'a' 'r') / ('s' 'u' 'b' 'f') / ('r' 'a' 'c' 'e') / ('p' 'v') / ('p' 'a' 't' 'h' 'o' 'v' 'a' 'r') / ('a' 'b' '.' (_? ('n' '.'))?) / ('s' 't')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position232, tokenIndex232 := position, tokenIndex
			{
				position233 := position
				{
					position234, tokenIndex234 := position, tokenIndex
					if buffer[position] != rune('m') {
						goto l235
					}
					position++
					if buffer[position] != rune('o') {
						goto l235
					}
					position++
					if buffer[position] != rune('r') {
						goto l235
					}
					position++
					if buffer[position] != rune('p') {
						goto l235
					}
					position++
					if buffer[position] != rune('h') {
						goto l235
					}
					position++
					goto l234
				l235:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('c') {
						goto l236
					}
					position++
					if buffer[position] != rune('o') {
						goto l236
					}
					position++
					if buffer[position] != rune('n') {
						goto l236
					}
					position++
					if buffer[position] != rune('v') {
						goto l236
					}
					position++
					if buffer[position] != rune('a') {
						goto l236
					}
					position++
					if buffer[position] != rune('r') {
						goto l236
					}
					position++
					goto l234
				l236:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('p') {
						goto l237
					}
					position++
					if buffer[position] != rune('s') {
						goto l237
					}
					position++
					if buffer[position] != rune('e') {
						goto l237
					}
					position++
					if buffer[position] != rune('u') {
						goto l237
					}
					position++
					if buffer[position] != rune('d') {
						goto l237
					}
					position++
					if buffer[position] != rune('o') {
						goto l237
					}
					position++
					if buffer[position] != rune('v') {
						goto l237
					}
					position++
					if buffer[position] != rune('a') {
						goto l237
					}
					position++
					if buffer[position] != rune('r') {
						goto l237
					}
					position++
					goto l234
				l237:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('s') {
						goto l238
					}
					position++
					if buffer[position] != rune('e') {
						goto l238
					}
					position++
					if buffer[position] != rune('c') {
						goto l238
					}
					position++
					if buffer[position] != rune('t') {
						goto l238
					}
					position++
					goto l234
				l238:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('s') {
						goto l239
					}
					position++
					if buffer[position] != rune('e') {
						goto l239
					}
					position++
					if buffer[position] != rune('r') {
						goto l239
					}
					position++
					goto l234
				l239:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('s') {
						goto l240
					}
					position++
					if buffer[position] != rune('u') {
						goto l240
					}
					position++
					if buffer[position] != rune('b') {
						goto l240
					}
					position++
					if buffer[position] != rune('v') {
						goto l240
					}
					position++
					if buffer[position] != rune('a') {
						goto l240
					}
					position++
					if buffer[position] != rune('r') {
						goto l240
					}
					position++
					goto l234
				l240:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('s') {
						goto l241
					}
					position++
					if buffer[position] != rune('u') {
						goto l241
					}
					position++
					if buffer[position] != rune('b') {
						goto l241
					}
					position++
					if buffer[position] != rune('f') {
						goto l241
					}
					position++
					goto l234
				l241:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('r') {
						goto l242
					}
					position++
					if buffer[position] != rune('a') {
						goto l242
					}
					position++
					if buffer[position] != rune('c') {
						goto l242
					}
					position++
					if buffer[position] != rune('e') {
						goto l242
					}
					position++
					goto l234
				l242:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('p') {
						goto l243
					}
					position++
					if buffer[position] != rune('v') {
						goto l243
					}
					position++
					goto l234
				l243:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('p') {
						goto l244
					}
					position++
					if buffer[position] != rune('a') {
						goto l244
					}
					position++
					if buffer[position] != rune('t') {
						goto l244
					}
					position++
					if buffer[position] != rune('h') {
						goto l244
					}
					position++
					if buffer[position] != rune('o') {
						goto l244
					}
					position++
					if buffer[position] != rune('v') {
						goto l244
					}
					position++
					if buffer[position] != rune('a') {
						goto l244
					}
					position++
					if buffer[position] != rune('r') {
						goto l244
					}
					position++
					goto l234
				l244:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('a') {
						goto l245
					}
					position++
					if buffer[position] != rune('b') {
						goto l245
					}
					position++
					if buffer[position] != rune('.') {
						goto l245
					}
					position++
					{
						position246, tokenIndex246 := position, tokenIndex
						{
							position248, tokenIndex248 := position, tokenIndex
							if !_rules[rule_]() {
								goto l248
							}
							goto l249
						l248:
							position, tokenIndex = position248, tokenIndex248
						}
					l249:
						if buffer[position] != rune('n') {
							goto l246
						}
						position++
						if buffer[position] != rune('.') {
							goto l246
						}
						position++
						goto l247
					l246:
						position, tokenIndex = position246, tokenIndex246
					}
				l247:
					goto l234
				l245:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('s') {
						goto l232
					}
					position++
					if buffer[position] != rune('t') {
						goto l232
					}
					position++
				}
			l234:
				{
					position250, tokenIndex250 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l251
					}
					position++
					goto l250
				l251:
					position, tokenIndex = position250, tokenIndex250
					{
						position252, tokenIndex252 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l232
						}
						position, tokenIndex = position252, tokenIndex252
					}
				}
			l250:
				add(ruleRankOther, position233)
			}
			return true
		l232:
			position, tokenIndex = position232, tokenIndex232
			return false
		},
		/* 35 RankVar <- <((('v' 'a' 'r' 'i' 'e' 't' 'y') / ('[' 'v' 'a' 'r' '.' ']') / ('v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position253, tokenIndex253 := position, tokenIndex
			{
				position254 := position
				{
					position255, tokenIndex255 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l256
					}
					position++
					if buffer[position] != rune('a') {
						goto l256
					}
					position++
					if buffer[position] != rune('r') {
						goto l256
					}
					position++
					if buffer[position] != rune('i') {
						goto l256
					}
					position++
					if buffer[position] != rune('e') {
						goto l256
					}
					position++
					if buffer[position] != rune('t') {
						goto l256
					}
					position++
					if buffer[position] != rune('y') {
						goto l256
					}
					position++
					goto l255
				l256:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('[') {
						goto l257
					}
					position++
					if buffer[position] != rune('v') {
						goto l257
					}
					position++
					if buffer[position] != rune('a') {
						goto l257
					}
					position++
					if buffer[position] != rune('r') {
						goto l257
					}
					position++
					if buffer[position] != rune('.') {
						goto l257
					}
					position++
					if buffer[position] != rune(']') {
						goto l257
					}
					position++
					goto l255
				l257:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('v') {
						goto l253
					}
					position++
					if buffer[position] != rune('a') {
						goto l253
					}
					position++
					if buffer[position] != rune('r') {
						goto l253
					}
					position++
				}
			l255:
				{
					position258, tokenIndex258 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l259
					}
					position++
					goto l258
				l259:
					position, tokenIndex = position258, tokenIndex258
					{
						position260, tokenIndex260 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l253
						}
						position, tokenIndex = position260, tokenIndex260
					}
				}
			l258:
				add(ruleRankVar, position254)
			}
			return true
		l253:
			position, tokenIndex = position253, tokenIndex253
			return false
		},
		/* 36 RankForma <- <((('f' 'o' 'r' 'm' 'a') / ('f' 'm' 'a') / ('f' 'm') / ('f' 'o' 'r' 'm') / ('f' 'o') / 'f') ('.' / &SpaceCharEOI))> */
		func() bool {
			position261, tokenIndex261 := position, tokenIndex
			{
				position262 := position
				{
					position263, tokenIndex263 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l264
					}
					position++
					if buffer[position] != rune('o') {
						goto l264
					}
					position++
					if buffer[position] != rune('r') {
						goto l264
					}
					position++
					if buffer[position] != rune('m') {
						goto l264
					}
					position++
					if buffer[position] != rune('a') {
						goto l264
					}
					position++
					goto l263
				l264:
					position, tokenIndex = position263, tokenIndex263
					if buffer[position] != rune('f') {
						goto l265
					}
					position++
					if buffer[position] != rune('m') {
						goto l265
					}
					position++
					if buffer[position] != rune('a') {
						goto l265
					}
					position++
					goto l263
				l265:
					position, tokenIndex = position263, tokenIndex263
					if buffer[position] != rune('f') {
						goto l266
					}
					position++
					if buffer[position] != rune('m') {
						goto l266
					}
					position++
					goto l263
				l266:
					position, tokenIndex = position263, tokenIndex263
					if buffer[position] != rune('f') {
						goto l267
					}
					position++
					if buffer[position] != rune('o') {
						goto l267
					}
					position++
					if buffer[position] != rune('r') {
						goto l267
					}
					position++
					if buffer[position] != rune('m') {
						goto l267
					}
					position++
					goto l263
				l267:
					position, tokenIndex = position263, tokenIndex263
					if buffer[position] != rune('f') {
						goto l268
					}
					position++
					if buffer[position] != rune('o') {
						goto l268
					}
					position++
					goto l263
				l268:
					position, tokenIndex = position263, tokenIndex263
					if buffer[position] != rune('f') {
						goto l261
					}
					position++
				}
			l263:
				{
					position269, tokenIndex269 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l270
					}
					position++
					goto l269
				l270:
					position, tokenIndex = position269, tokenIndex269
					{
						position271, tokenIndex271 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l261
						}
						position, tokenIndex = position271, tokenIndex271
					}
				}
			l269:
				add(ruleRankForma, position262)
			}
			return true
		l261:
			position, tokenIndex = position261, tokenIndex261
			return false
		},
		/* 37 RankSsp <- <((('s' 's' 'p') / ('s' 'u' 'b' 's' 'p' 'e' 'c') / ('s' 'u' 'b' 's' 'p')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position272, tokenIndex272 := position, tokenIndex
			{
				position273 := position
				{
					position274, tokenIndex274 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l275
					}
					position++
					if buffer[position] != rune('s') {
						goto l275
					}
					position++
					if buffer[position] != rune('p') {
						goto l275
					}
					position++
					goto l274
				l275:
					position, tokenIndex = position274, tokenIndex274
					if buffer[position] != rune('s') {
						goto l276
					}
					position++
					if buffer[position] != rune('u') {
						goto l276
					}
					position++
					if buffer[position] != rune('b') {
						goto l276
					}
					position++
					if buffer[position] != rune('s') {
						goto l276
					}
					position++
					if buffer[position] != rune('p') {
						goto l276
					}
					position++
					if buffer[position] != rune('e') {
						goto l276
					}
					position++
					if buffer[position] != rune('c') {
						goto l276
					}
					position++
					goto l274
				l276:
					position, tokenIndex = position274, tokenIndex274
					if buffer[position] != rune('s') {
						goto l272
					}
					position++
					if buffer[position] != rune('u') {
						goto l272
					}
					position++
					if buffer[position] != rune('b') {
						goto l272
					}
					position++
					if buffer[position] != rune('s') {
						goto l272
					}
					position++
					if buffer[position] != rune('p') {
						goto l272
					}
					position++
				}
			l274:
				{
					position277, tokenIndex277 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l278
					}
					position++
					goto l277
				l278:
					position, tokenIndex = position277, tokenIndex277
					{
						position279, tokenIndex279 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l272
						}
						position, tokenIndex = position279, tokenIndex279
					}
				}
			l277:
				add(ruleRankSsp, position273)
			}
			return true
		l272:
			position, tokenIndex = position272, tokenIndex272
			return false
		},
		/* 38 RankAgamo <- <((('a' 'g' 'a' 'm' 'o' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 's' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position280, tokenIndex280 := position, tokenIndex
			{
				position281 := position
				{
					position282, tokenIndex282 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l283
					}
					position++
					if buffer[position] != rune('g') {
						goto l283
					}
					position++
					if buffer[position] != rune('a') {
						goto l283
					}
					position++
					if buffer[position] != rune('m') {
						goto l283
					}
					position++
					if buffer[position] != rune('o') {
						goto l283
					}
					position++
					if buffer[position] != rune('s') {
						goto l283
					}
					position++
					if buffer[position] != rune('p') {
						goto l283
					}
					position++
					goto l282
				l283:
					position, tokenIndex = position282, tokenIndex282
					if buffer[position] != rune('a') {
						goto l284
					}
					position++
					if buffer[position] != rune('g') {
						goto l284
					}
					position++
					if buffer[position] != rune('a') {
						goto l284
					}
					position++
					if buffer[position] != rune('m') {
						goto l284
					}
					position++
					if buffer[position] != rune('o') {
						goto l284
					}
					position++
					if buffer[position] != rune('s') {
						goto l284
					}
					position++
					if buffer[position] != rune('s') {
						goto l284
					}
					position++
					if buffer[position] != rune('p') {
						goto l284
					}
					position++
					goto l282
				l284:
					position, tokenIndex = position282, tokenIndex282
					if buffer[position] != rune('a') {
						goto l280
					}
					position++
					if buffer[position] != rune('g') {
						goto l280
					}
					position++
					if buffer[position] != rune('a') {
						goto l280
					}
					position++
					if buffer[position] != rune('m') {
						goto l280
					}
					position++
					if buffer[position] != rune('o') {
						goto l280
					}
					position++
					if buffer[position] != rune('v') {
						goto l280
					}
					position++
					if buffer[position] != rune('a') {
						goto l280
					}
					position++
					if buffer[position] != rune('r') {
						goto l280
					}
					position++
				}
			l282:
				{
					position285, tokenIndex285 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l286
					}
					position++
					goto l285
				l286:
					position, tokenIndex = position285, tokenIndex285
					{
						position287, tokenIndex287 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l280
						}
						position, tokenIndex = position287, tokenIndex287
					}
				}
			l285:
				add(ruleRankAgamo, position281)
			}
			return true
		l280:
			position, tokenIndex = position280, tokenIndex280
			return false
		},
		/* 39 SubgenusOrSuperspecies <- <('(' _? NameLowerChar+ _? ')')> */
		func() bool {
			position288, tokenIndex288 := position, tokenIndex
			{
				position289 := position
				if buffer[position] != rune('(') {
					goto l288
				}
				position++
				{
					position290, tokenIndex290 := position, tokenIndex
					if !_rules[rule_]() {
						goto l290
					}
					goto l291
				l290:
					position, tokenIndex = position290, tokenIndex290
				}
			l291:
				if !_rules[ruleNameLowerChar]() {
					goto l288
				}
			l292:
				{
					position293, tokenIndex293 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l293
					}
					goto l292
				l293:
					position, tokenIndex = position293, tokenIndex293
				}
				{
					position294, tokenIndex294 := position, tokenIndex
					if !_rules[rule_]() {
						goto l294
					}
					goto l295
				l294:
					position, tokenIndex = position294, tokenIndex294
				}
			l295:
				if buffer[position] != rune(')') {
					goto l288
				}
				position++
				add(ruleSubgenusOrSuperspecies, position289)
			}
			return true
		l288:
			position, tokenIndex = position288, tokenIndex288
			return false
		},
		/* 40 Subgenus <- <(Subgenus2 / Subgenus1)> */
		func() bool {
			position296, tokenIndex296 := position, tokenIndex
			{
				position297 := position
				{
					position298, tokenIndex298 := position, tokenIndex
					if !_rules[ruleSubgenus2]() {
						goto l299
					}
					goto l298
				l299:
					position, tokenIndex = position298, tokenIndex298
					if !_rules[ruleSubgenus1]() {
						goto l296
					}
				}
			l298:
				add(ruleSubgenus, position297)
			}
			return true
		l296:
			position, tokenIndex = position296, tokenIndex296
			return false
		},
		/* 41 Subgenus2 <- <('(' _? AbbrSubgenus _? ')' !(_? NameUpperChar))> */
		func() bool {
			position300, tokenIndex300 := position, tokenIndex
			{
				position301 := position
				if buffer[position] != rune('(') {
					goto l300
				}
				position++
				{
					position302, tokenIndex302 := position, tokenIndex
					if !_rules[rule_]() {
						goto l302
					}
					goto l303
				l302:
					position, tokenIndex = position302, tokenIndex302
				}
			l303:
				if !_rules[ruleAbbrSubgenus]() {
					goto l300
				}
				{
					position304, tokenIndex304 := position, tokenIndex
					if !_rules[rule_]() {
						goto l304
					}
					goto l305
				l304:
					position, tokenIndex = position304, tokenIndex304
				}
			l305:
				if buffer[position] != rune(')') {
					goto l300
				}
				position++
				{
					position306, tokenIndex306 := position, tokenIndex
					{
						position307, tokenIndex307 := position, tokenIndex
						if !_rules[rule_]() {
							goto l307
						}
						goto l308
					l307:
						position, tokenIndex = position307, tokenIndex307
					}
				l308:
					if !_rules[ruleNameUpperChar]() {
						goto l306
					}
					goto l300
				l306:
					position, tokenIndex = position306, tokenIndex306
				}
				add(ruleSubgenus2, position301)
			}
			return true
		l300:
			position, tokenIndex = position300, tokenIndex300
			return false
		},
		/* 42 Subgenus1 <- <('(' _? UninomialWord _? ')')> */
		func() bool {
			position309, tokenIndex309 := position, tokenIndex
			{
				position310 := position
				if buffer[position] != rune('(') {
					goto l309
				}
				position++
				{
					position311, tokenIndex311 := position, tokenIndex
					if !_rules[rule_]() {
						goto l311
					}
					goto l312
				l311:
					position, tokenIndex = position311, tokenIndex311
				}
			l312:
				if !_rules[ruleUninomialWord]() {
					goto l309
				}
				{
					position313, tokenIndex313 := position, tokenIndex
					if !_rules[rule_]() {
						goto l313
					}
					goto l314
				l313:
					position, tokenIndex = position313, tokenIndex313
				}
			l314:
				if buffer[position] != rune(')') {
					goto l309
				}
				position++
				add(ruleSubgenus1, position310)
			}
			return true
		l309:
			position, tokenIndex = position309, tokenIndex309
			return false
		},
		/* 43 UninomialCombo <- <(UninomialCombo1 / UninomialCombo2)> */
		func() bool {
			position315, tokenIndex315 := position, tokenIndex
			{
				position316 := position
				{
					position317, tokenIndex317 := position, tokenIndex
					if !_rules[ruleUninomialCombo1]() {
						goto l318
					}
					goto l317
				l318:
					position, tokenIndex = position317, tokenIndex317
					if !_rules[ruleUninomialCombo2]() {
						goto l315
					}
				}
			l317:
				add(ruleUninomialCombo, position316)
			}
			return true
		l315:
			position, tokenIndex = position315, tokenIndex315
			return false
		},
		/* 44 UninomialCombo1 <- <(UninomialWord _? Subgenus (_? Authorship)?)> */
		func() bool {
			position319, tokenIndex319 := position, tokenIndex
			{
				position320 := position
				if !_rules[ruleUninomialWord]() {
					goto l319
				}
				{
					position321, tokenIndex321 := position, tokenIndex
					if !_rules[rule_]() {
						goto l321
					}
					goto l322
				l321:
					position, tokenIndex = position321, tokenIndex321
				}
			l322:
				if !_rules[ruleSubgenus]() {
					goto l319
				}
				{
					position323, tokenIndex323 := position, tokenIndex
					{
						position325, tokenIndex325 := position, tokenIndex
						if !_rules[rule_]() {
							goto l325
						}
						goto l326
					l325:
						position, tokenIndex = position325, tokenIndex325
					}
				l326:
					if !_rules[ruleAuthorship]() {
						goto l323
					}
					goto l324
				l323:
					position, tokenIndex = position323, tokenIndex323
				}
			l324:
				add(ruleUninomialCombo1, position320)
			}
			return true
		l319:
			position, tokenIndex = position319, tokenIndex319
			return false
		},
		/* 45 UninomialCombo2 <- <(Uninomial _ RankUninomial _ Uninomial)> */
		func() bool {
			position327, tokenIndex327 := position, tokenIndex
			{
				position328 := position
				if !_rules[ruleUninomial]() {
					goto l327
				}
				if !_rules[rule_]() {
					goto l327
				}
				if !_rules[ruleRankUninomial]() {
					goto l327
				}
				if !_rules[rule_]() {
					goto l327
				}
				if !_rules[ruleUninomial]() {
					goto l327
				}
				add(ruleUninomialCombo2, position328)
			}
			return true
		l327:
			position, tokenIndex = position327, tokenIndex327
			return false
		},
		/* 46 RankUninomial <- <(RankUninomialPlain / RankUninomialNotho)> */
		func() bool {
			position329, tokenIndex329 := position, tokenIndex
			{
				position330 := position
				{
					position331, tokenIndex331 := position, tokenIndex
					if !_rules[ruleRankUninomialPlain]() {
						goto l332
					}
					goto l331
				l332:
					position, tokenIndex = position331, tokenIndex331
					if !_rules[ruleRankUninomialNotho]() {
						goto l329
					}
				}
			l331:
				add(ruleRankUninomial, position330)
			}
			return true
		l329:
			position, tokenIndex = position329, tokenIndex329
			return false
		},
		/* 47 RankUninomialPlain <- <((('s' 'e' 'c' 't') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('t' 'r' 'i' 'b') / ('s' 'u' 'b' 't' 'r' 'i' 'b') / ('s' 'u' 'b' 's' 'e' 'r') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('f' 'a' 'm') / ('s' 'u' 'b' 'f' 'a' 'm') / ('d' 'i' 'v') / ('s' 'u' 'p' 'e' 'r' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position333, tokenIndex333 := position, tokenIndex
			{
				position334 := position
				{
					position335, tokenIndex335 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l336
					}
					position++
					if buffer[position] != rune('e') {
						goto l336
					}
					position++
					if buffer[position] != rune('c') {
						goto l336
					}
					position++
					if buffer[position] != rune('t') {
						goto l336
					}
					position++
					goto l335
				l336:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('s') {
						goto l337
					}
					position++
					if buffer[position] != rune('u') {
						goto l337
					}
					position++
					if buffer[position] != rune('b') {
						goto l337
					}
					position++
					if buffer[position] != rune('s') {
						goto l337
					}
					position++
					if buffer[position] != rune('e') {
						goto l337
					}
					position++
					if buffer[position] != rune('c') {
						goto l337
					}
					position++
					if buffer[position] != rune('t') {
						goto l337
					}
					position++
					goto l335
				l337:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('t') {
						goto l338
					}
					position++
					if buffer[position] != rune('r') {
						goto l338
					}
					position++
					if buffer[position] != rune('i') {
						goto l338
					}
					position++
					if buffer[position] != rune('b') {
						goto l338
					}
					position++
					goto l335
				l338:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('s') {
						goto l339
					}
					position++
					if buffer[position] != rune('u') {
						goto l339
					}
					position++
					if buffer[position] != rune('b') {
						goto l339
					}
					position++
					if buffer[position] != rune('t') {
						goto l339
					}
					position++
					if buffer[position] != rune('r') {
						goto l339
					}
					position++
					if buffer[position] != rune('i') {
						goto l339
					}
					position++
					if buffer[position] != rune('b') {
						goto l339
					}
					position++
					goto l335
				l339:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('s') {
						goto l340
					}
					position++
					if buffer[position] != rune('u') {
						goto l340
					}
					position++
					if buffer[position] != rune('b') {
						goto l340
					}
					position++
					if buffer[position] != rune('s') {
						goto l340
					}
					position++
					if buffer[position] != rune('e') {
						goto l340
					}
					position++
					if buffer[position] != rune('r') {
						goto l340
					}
					position++
					goto l335
				l340:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('s') {
						goto l341
					}
					position++
					if buffer[position] != rune('e') {
						goto l341
					}
					position++
					if buffer[position] != rune('r') {
						goto l341
					}
					position++
					goto l335
				l341:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('s') {
						goto l342
					}
					position++
					if buffer[position] != rune('u') {
						goto l342
					}
					position++
					if buffer[position] != rune('b') {
						goto l342
					}
					position++
					if buffer[position] != rune('g') {
						goto l342
					}
					position++
					if buffer[position] != rune('e') {
						goto l342
					}
					position++
					if buffer[position] != rune('n') {
						goto l342
					}
					position++
					goto l335
				l342:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('s') {
						goto l343
					}
					position++
					if buffer[position] != rune('u') {
						goto l343
					}
					position++
					if buffer[position] != rune('b') {
						goto l343
					}
					position++
					if buffer[position] != rune('g') {
						goto l343
					}
					position++
					goto l335
				l343:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('f') {
						goto l344
					}
					position++
					if buffer[position] != rune('a') {
						goto l344
					}
					position++
					if buffer[position] != rune('m') {
						goto l344
					}
					position++
					goto l335
				l344:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('s') {
						goto l345
					}
					position++
					if buffer[position] != rune('u') {
						goto l345
					}
					position++
					if buffer[position] != rune('b') {
						goto l345
					}
					position++
					if buffer[position] != rune('f') {
						goto l345
					}
					position++
					if buffer[position] != rune('a') {
						goto l345
					}
					position++
					if buffer[position] != rune('m') {
						goto l345
					}
					position++
					goto l335
				l345:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('d') {
						goto l346
					}
					position++
					if buffer[position] != rune('i') {
						goto l346
					}
					position++
					if buffer[position] != rune('v') {
						goto l346
					}
					position++
					goto l335
				l346:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('s') {
						goto l333
					}
					position++
					if buffer[position] != rune('u') {
						goto l333
					}
					position++
					if buffer[position] != rune('p') {
						goto l333
					}
					position++
					if buffer[position] != rune('e') {
						goto l333
					}
					position++
					if buffer[position] != rune('r') {
						goto l333
					}
					position++
					if buffer[position] != rune('t') {
						goto l333
					}
					position++
					if buffer[position] != rune('r') {
						goto l333
					}
					position++
					if buffer[position] != rune('i') {
						goto l333
					}
					position++
					if buffer[position] != rune('b') {
						goto l333
					}
					position++
				}
			l335:
				{
					position347, tokenIndex347 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l348
					}
					position++
					goto l347
				l348:
					position, tokenIndex = position347, tokenIndex347
					{
						position349, tokenIndex349 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l333
						}
						position, tokenIndex = position349, tokenIndex349
					}
				}
			l347:
				add(ruleRankUninomialPlain, position334)
			}
			return true
		l333:
			position, tokenIndex = position333, tokenIndex333
			return false
		},
		/* 48 RankUninomialNotho <- <('n' 'o' 't' 'h' 'o' _? (('s' 'e' 'c' 't') / ('g' 'e' 'n') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'e' 'n') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('s' 'u' 'b' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position350, tokenIndex350 := position, tokenIndex
			{
				position351 := position
				if buffer[position] != rune('n') {
					goto l350
				}
				position++
				if buffer[position] != rune('o') {
					goto l350
				}
				position++
				if buffer[position] != rune('t') {
					goto l350
				}
				position++
				if buffer[position] != rune('h') {
					goto l350
				}
				position++
				if buffer[position] != rune('o') {
					goto l350
				}
				position++
				{
					position352, tokenIndex352 := position, tokenIndex
					if !_rules[rule_]() {
						goto l352
					}
					goto l353
				l352:
					position, tokenIndex = position352, tokenIndex352
				}
			l353:
				{
					position354, tokenIndex354 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l355
					}
					position++
					if buffer[position] != rune('e') {
						goto l355
					}
					position++
					if buffer[position] != rune('c') {
						goto l355
					}
					position++
					if buffer[position] != rune('t') {
						goto l355
					}
					position++
					goto l354
				l355:
					position, tokenIndex = position354, tokenIndex354
					if buffer[position] != rune('g') {
						goto l356
					}
					position++
					if buffer[position] != rune('e') {
						goto l356
					}
					position++
					if buffer[position] != rune('n') {
						goto l356
					}
					position++
					goto l354
				l356:
					position, tokenIndex = position354, tokenIndex354
					if buffer[position] != rune('s') {
						goto l357
					}
					position++
					if buffer[position] != rune('e') {
						goto l357
					}
					position++
					if buffer[position] != rune('r') {
						goto l357
					}
					position++
					goto l354
				l357:
					position, tokenIndex = position354, tokenIndex354
					if buffer[position] != rune('s') {
						goto l358
					}
					position++
					if buffer[position] != rune('u') {
						goto l358
					}
					position++
					if buffer[position] != rune('b') {
						goto l358
					}
					position++
					if buffer[position] != rune('g') {
						goto l358
					}
					position++
					if buffer[position] != rune('e') {
						goto l358
					}
					position++
					if buffer[position] != rune('e') {
						goto l358
					}
					position++
					if buffer[position] != rune('n') {
						goto l358
					}
					position++
					goto l354
				l358:
					position, tokenIndex = position354, tokenIndex354
					if buffer[position] != rune('s') {
						goto l359
					}
					position++
					if buffer[position] != rune('u') {
						goto l359
					}
					position++
					if buffer[position] != rune('b') {
						goto l359
					}
					position++
					if buffer[position] != rune('g') {
						goto l359
					}
					position++
					if buffer[position] != rune('e') {
						goto l359
					}
					position++
					if buffer[position] != rune('n') {
						goto l359
					}
					position++
					goto l354
				l359:
					position, tokenIndex = position354, tokenIndex354
					if buffer[position] != rune('s') {
						goto l360
					}
					position++
					if buffer[position] != rune('u') {
						goto l360
					}
					position++
					if buffer[position] != rune('b') {
						goto l360
					}
					position++
					if buffer[position] != rune('g') {
						goto l360
					}
					position++
					goto l354
				l360:
					position, tokenIndex = position354, tokenIndex354
					if buffer[position] != rune('s') {
						goto l361
					}
					position++
					if buffer[position] != rune('u') {
						goto l361
					}
					position++
					if buffer[position] != rune('b') {
						goto l361
					}
					position++
					if buffer[position] != rune('s') {
						goto l361
					}
					position++
					if buffer[position] != rune('e') {
						goto l361
					}
					position++
					if buffer[position] != rune('c') {
						goto l361
					}
					position++
					if buffer[position] != rune('t') {
						goto l361
					}
					position++
					goto l354
				l361:
					position, tokenIndex = position354, tokenIndex354
					if buffer[position] != rune('s') {
						goto l350
					}
					position++
					if buffer[position] != rune('u') {
						goto l350
					}
					position++
					if buffer[position] != rune('b') {
						goto l350
					}
					position++
					if buffer[position] != rune('t') {
						goto l350
					}
					position++
					if buffer[position] != rune('r') {
						goto l350
					}
					position++
					if buffer[position] != rune('i') {
						goto l350
					}
					position++
					if buffer[position] != rune('b') {
						goto l350
					}
					position++
				}
			l354:
				{
					position362, tokenIndex362 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l363
					}
					position++
					goto l362
				l363:
					position, tokenIndex = position362, tokenIndex362
					{
						position364, tokenIndex364 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l350
						}
						position, tokenIndex = position364, tokenIndex364
					}
				}
			l362:
				add(ruleRankUninomialNotho, position351)
			}
			return true
		l350:
			position, tokenIndex = position350, tokenIndex350
			return false
		},
		/* 49 Uninomial <- <(UninomialWord (_ Authorship !(_ LowerCharExtended LowerCharExtended LowerCharExtended))?)> */
		func() bool {
			position365, tokenIndex365 := position, tokenIndex
			{
				position366 := position
				if !_rules[ruleUninomialWord]() {
					goto l365
				}
				{
					position367, tokenIndex367 := position, tokenIndex
					if !_rules[rule_]() {
						goto l367
					}
					if !_rules[ruleAuthorship]() {
						goto l367
					}
					{
						position369, tokenIndex369 := position, tokenIndex
						if !_rules[rule_]() {
							goto l369
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l369
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l369
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l369
						}
						goto l367
					l369:
						position, tokenIndex = position369, tokenIndex369
					}
					goto l368
				l367:
					position, tokenIndex = position367, tokenIndex367
				}
			l368:
				add(ruleUninomial, position366)
			}
			return true
		l365:
			position, tokenIndex = position365, tokenIndex365
			return false
		},
		/* 50 UninomialWord <- <(CapWord / TwoLetterGenus)> */
		func() bool {
			position370, tokenIndex370 := position, tokenIndex
			{
				position371 := position
				{
					position372, tokenIndex372 := position, tokenIndex
					if !_rules[ruleCapWord]() {
						goto l373
					}
					goto l372
				l373:
					position, tokenIndex = position372, tokenIndex372
					if !_rules[ruleTwoLetterGenus]() {
						goto l370
					}
				}
			l372:
				add(ruleUninomialWord, position371)
			}
			return true
		l370:
			position, tokenIndex = position370, tokenIndex370
			return false
		},
		/* 51 AbbrSubgenus <- <(UpperChar LowerChar* '.')> */
		func() bool {
			position374, tokenIndex374 := position, tokenIndex
			{
				position375 := position
				if !_rules[ruleUpperChar]() {
					goto l374
				}
			l376:
				{
					position377, tokenIndex377 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l377
					}
					goto l376
				l377:
					position, tokenIndex = position377, tokenIndex377
				}
				if buffer[position] != rune('.') {
					goto l374
				}
				position++
				add(ruleAbbrSubgenus, position375)
			}
			return true
		l374:
			position, tokenIndex = position374, tokenIndex374
			return false
		},
		/* 52 AbbrGenus <- <(UpperChar LowerChar? '.')> */
		func() bool {
			position378, tokenIndex378 := position, tokenIndex
			{
				position379 := position
				if !_rules[ruleUpperChar]() {
					goto l378
				}
				{
					position380, tokenIndex380 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l380
					}
					goto l381
				l380:
					position, tokenIndex = position380, tokenIndex380
				}
			l381:
				if buffer[position] != rune('.') {
					goto l378
				}
				position++
				add(ruleAbbrGenus, position379)
			}
			return true
		l378:
			position, tokenIndex = position378, tokenIndex378
			return false
		},
		/* 53 CapWord <- <(CapWordWithDash / CapWord1)> */
		func() bool {
			position382, tokenIndex382 := position, tokenIndex
			{
				position383 := position
				{
					position384, tokenIndex384 := position, tokenIndex
					if !_rules[ruleCapWordWithDash]() {
						goto l385
					}
					goto l384
				l385:
					position, tokenIndex = position384, tokenIndex384
					if !_rules[ruleCapWord1]() {
						goto l382
					}
				}
			l384:
				add(ruleCapWord, position383)
			}
			return true
		l382:
			position, tokenIndex = position382, tokenIndex382
			return false
		},
		/* 54 CapWord1 <- <(NameUpperChar NameLowerChar NameLowerChar+ '?'?)> */
		func() bool {
			position386, tokenIndex386 := position, tokenIndex
			{
				position387 := position
				if !_rules[ruleNameUpperChar]() {
					goto l386
				}
				if !_rules[ruleNameLowerChar]() {
					goto l386
				}
				if !_rules[ruleNameLowerChar]() {
					goto l386
				}
			l388:
				{
					position389, tokenIndex389 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l389
					}
					goto l388
				l389:
					position, tokenIndex = position389, tokenIndex389
				}
				{
					position390, tokenIndex390 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l390
					}
					position++
					goto l391
				l390:
					position, tokenIndex = position390, tokenIndex390
				}
			l391:
				add(ruleCapWord1, position387)
			}
			return true
		l386:
			position, tokenIndex = position386, tokenIndex386
			return false
		},
		/* 55 CapWordWithDash <- <(CapWord1 Dash (UpperAfterDash / LowerAfterDash))> */
		func() bool {
			position392, tokenIndex392 := position, tokenIndex
			{
				position393 := position
				if !_rules[ruleCapWord1]() {
					goto l392
				}
				if !_rules[ruleDash]() {
					goto l392
				}
				{
					position394, tokenIndex394 := position, tokenIndex
					if !_rules[ruleUpperAfterDash]() {
						goto l395
					}
					goto l394
				l395:
					position, tokenIndex = position394, tokenIndex394
					if !_rules[ruleLowerAfterDash]() {
						goto l392
					}
				}
			l394:
				add(ruleCapWordWithDash, position393)
			}
			return true
		l392:
			position, tokenIndex = position392, tokenIndex392
			return false
		},
		/* 56 UpperAfterDash <- <CapWord1> */
		func() bool {
			position396, tokenIndex396 := position, tokenIndex
			{
				position397 := position
				if !_rules[ruleCapWord1]() {
					goto l396
				}
				add(ruleUpperAfterDash, position397)
			}
			return true
		l396:
			position, tokenIndex = position396, tokenIndex396
			return false
		},
		/* 57 LowerAfterDash <- <Word1> */
		func() bool {
			position398, tokenIndex398 := position, tokenIndex
			{
				position399 := position
				if !_rules[ruleWord1]() {
					goto l398
				}
				add(ruleLowerAfterDash, position399)
			}
			return true
		l398:
			position, tokenIndex = position398, tokenIndex398
			return false
		},
		/* 58 TwoLetterGenus <- <(('C' 'a') / ('D' 'o') / ('E' 'a') / ('G' 'e') / ('I' 'a') / ('I' 'o') / ('I' 'x') / ('L' 'o') / ('O' 'a') / ('O' 'o') / ('N' 'u') / ('R' 'a') / ('T' 'y') / ('U' 'a') / ('A' 'a') / ('J' 'a') / ('Z' 'u') / ('L' 'a') / ('Q' 'u') / ('A' 's') / ('B' 'a'))> */
		func() bool {
			position400, tokenIndex400 := position, tokenIndex
			{
				position401 := position
				{
					position402, tokenIndex402 := position, tokenIndex
					if buffer[position] != rune('C') {
						goto l403
					}
					position++
					if buffer[position] != rune('a') {
						goto l403
					}
					position++
					goto l402
				l403:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('D') {
						goto l404
					}
					position++
					if buffer[position] != rune('o') {
						goto l404
					}
					position++
					goto l402
				l404:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('E') {
						goto l405
					}
					position++
					if buffer[position] != rune('a') {
						goto l405
					}
					position++
					goto l402
				l405:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('G') {
						goto l406
					}
					position++
					if buffer[position] != rune('e') {
						goto l406
					}
					position++
					goto l402
				l406:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('I') {
						goto l407
					}
					position++
					if buffer[position] != rune('a') {
						goto l407
					}
					position++
					goto l402
				l407:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('I') {
						goto l408
					}
					position++
					if buffer[position] != rune('o') {
						goto l408
					}
					position++
					goto l402
				l408:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('I') {
						goto l409
					}
					position++
					if buffer[position] != rune('x') {
						goto l409
					}
					position++
					goto l402
				l409:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('L') {
						goto l410
					}
					position++
					if buffer[position] != rune('o') {
						goto l410
					}
					position++
					goto l402
				l410:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('O') {
						goto l411
					}
					position++
					if buffer[position] != rune('a') {
						goto l411
					}
					position++
					goto l402
				l411:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('O') {
						goto l412
					}
					position++
					if buffer[position] != rune('o') {
						goto l412
					}
					position++
					goto l402
				l412:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('N') {
						goto l413
					}
					position++
					if buffer[position] != rune('u') {
						goto l413
					}
					position++
					goto l402
				l413:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('R') {
						goto l414
					}
					position++
					if buffer[position] != rune('a') {
						goto l414
					}
					position++
					goto l402
				l414:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('T') {
						goto l415
					}
					position++
					if buffer[position] != rune('y') {
						goto l415
					}
					position++
					goto l402
				l415:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('U') {
						goto l416
					}
					position++
					if buffer[position] != rune('a') {
						goto l416
					}
					position++
					goto l402
				l416:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('A') {
						goto l417
					}
					position++
					if buffer[position] != rune('a') {
						goto l417
					}
					position++
					goto l402
				l417:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('J') {
						goto l418
					}
					position++
					if buffer[position] != rune('a') {
						goto l418
					}
					position++
					goto l402
				l418:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('Z') {
						goto l419
					}
					position++
					if buffer[position] != rune('u') {
						goto l419
					}
					position++
					goto l402
				l419:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('L') {
						goto l420
					}
					position++
					if buffer[position] != rune('a') {
						goto l420
					}
					position++
					goto l402
				l420:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('Q') {
						goto l421
					}
					position++
					if buffer[position] != rune('u') {
						goto l421
					}
					position++
					goto l402
				l421:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('A') {
						goto l422
					}
					position++
					if buffer[position] != rune('s') {
						goto l422
					}
					position++
					goto l402
				l422:
					position, tokenIndex = position402, tokenIndex402
					if buffer[position] != rune('B') {
						goto l400
					}
					position++
					if buffer[position] != rune('a') {
						goto l400
					}
					position++
				}
			l402:
				add(ruleTwoLetterGenus, position401)
			}
			return true
		l400:
			position, tokenIndex = position400, tokenIndex400
			return false
		},
		/* 59 Word <- <(!((('e' 'x') / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd') / ('p' 'r' 'o') / ('c' 'v') / ('c' 'u' 'l' 't' 'i' 'v' 'a' 'r') / AuthorPrefix / RankUninomial / Approximation / Word4) SpaceCharEOI) (WordApostr / WordStartsWithDigit / MultiDashedWord / Word2 / Word1) &(SpaceCharEOI / '('))> */
		func() bool {
			position423, tokenIndex423 := position, tokenIndex
			{
				position424 := position
				{
					position425, tokenIndex425 := position, tokenIndex
					{
						position426, tokenIndex426 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l427
						}
						position++
						if buffer[position] != rune('x') {
							goto l427
						}
						position++
						goto l426
					l427:
						position, tokenIndex = position426, tokenIndex426
						if buffer[position] != rune('e') {
							goto l428
						}
						position++
						if buffer[position] != rune('t') {
							goto l428
						}
						position++
						goto l426
					l428:
						position, tokenIndex = position426, tokenIndex426
						if buffer[position] != rune('a') {
							goto l429
						}
						position++
						if buffer[position] != rune('n') {
							goto l429
						}
						position++
						if buffer[position] != rune('d') {
							goto l429
						}
						position++
						goto l426
					l429:
						position, tokenIndex = position426, tokenIndex426
						if buffer[position] != rune('a') {
							goto l430
						}
						position++
						if buffer[position] != rune('p') {
							goto l430
						}
						position++
						if buffer[position] != rune('u') {
							goto l430
						}
						position++
						if buffer[position] != rune('d') {
							goto l430
						}
						position++
						goto l426
					l430:
						position, tokenIndex = position426, tokenIndex426
						if buffer[position] != rune('p') {
							goto l431
						}
						position++
						if buffer[position] != rune('r') {
							goto l431
						}
						position++
						if buffer[position] != rune('o') {
							goto l431
						}
						position++
						goto l426
					l431:
						position, tokenIndex = position426, tokenIndex426
						if buffer[position] != rune('c') {
							goto l432
						}
						position++
						if buffer[position] != rune('v') {
							goto l432
						}
						position++
						goto l426
					l432:
						position, tokenIndex = position426, tokenIndex426
						if buffer[position] != rune('c') {
							goto l433
						}
						position++
						if buffer[position] != rune('u') {
							goto l433
						}
						position++
						if buffer[position] != rune('l') {
							goto l433
						}
						position++
						if buffer[position] != rune('t') {
							goto l433
						}
						position++
						if buffer[position] != rune('i') {
							goto l433
						}
						position++
						if buffer[position] != rune('v') {
							goto l433
						}
						position++
						if buffer[position] != rune('a') {
							goto l433
						}
						position++
						if buffer[position] != rune('r') {
							goto l433
						}
						position++
						goto l426
					l433:
						position, tokenIndex = position426, tokenIndex426
						if !_rules[ruleAuthorPrefix]() {
							goto l434
						}
						goto l426
					l434:
						position, tokenIndex = position426, tokenIndex426
						if !_rules[ruleRankUninomial]() {
							goto l435
						}
						goto l426
					l435:
						position, tokenIndex = position426, tokenIndex426
						if !_rules[ruleApproximation]() {
							goto l436
						}
						goto l426
					l436:
						position, tokenIndex = position426, tokenIndex426
						if !_rules[ruleWord4]() {
							goto l425
						}
					}
				l426:
					if !_rules[ruleSpaceCharEOI]() {
						goto l425
					}
					goto l423
				l425:
					position, tokenIndex = position425, tokenIndex425
				}
				{
					position437, tokenIndex437 := position, tokenIndex
					if !_rules[ruleWordApostr]() {
						goto l438
					}
					goto l437
				l438:
					position, tokenIndex = position437, tokenIndex437
					if !_rules[ruleWordStartsWithDigit]() {
						goto l439
					}
					goto l437
				l439:
					position, tokenIndex = position437, tokenIndex437
					if !_rules[ruleMultiDashedWord]() {
						goto l440
					}
					goto l437
				l440:
					position, tokenIndex = position437, tokenIndex437
					if !_rules[ruleWord2]() {
						goto l441
					}
					goto l437
				l441:
					position, tokenIndex = position437, tokenIndex437
					if !_rules[ruleWord1]() {
						goto l423
					}
				}
			l437:
				{
					position442, tokenIndex442 := position, tokenIndex
					{
						position443, tokenIndex443 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l444
						}
						goto l443
					l444:
						position, tokenIndex = position443, tokenIndex443
						if buffer[position] != rune('(') {
							goto l423
						}
						position++
					}
				l443:
					position, tokenIndex = position442, tokenIndex442
				}
				add(ruleWord, position424)
			}
			return true
		l423:
			position, tokenIndex = position423, tokenIndex423
			return false
		},
		/* 60 Word1 <- <((LowerASCII Dash)? NameLowerChar NameLowerChar+)> */
		func() bool {
			position445, tokenIndex445 := position, tokenIndex
			{
				position446 := position
				{
					position447, tokenIndex447 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l447
					}
					if !_rules[ruleDash]() {
						goto l447
					}
					goto l448
				l447:
					position, tokenIndex = position447, tokenIndex447
				}
			l448:
				if !_rules[ruleNameLowerChar]() {
					goto l445
				}
				if !_rules[ruleNameLowerChar]() {
					goto l445
				}
			l449:
				{
					position450, tokenIndex450 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l450
					}
					goto l449
				l450:
					position, tokenIndex = position450, tokenIndex450
				}
				add(ruleWord1, position446)
			}
			return true
		l445:
			position, tokenIndex = position445, tokenIndex445
			return false
		},
		/* 61 WordStartsWithDigit <- <(('1' / '2' / '3' / '4' / '5' / '6' / '7' / '8' / '9') Nums? ('.' / Dash)? NameLowerChar NameLowerChar NameLowerChar NameLowerChar+)> */
		func() bool {
			position451, tokenIndex451 := position, tokenIndex
			{
				position452 := position
				{
					position453, tokenIndex453 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l454
					}
					position++
					goto l453
				l454:
					position, tokenIndex = position453, tokenIndex453
					if buffer[position] != rune('2') {
						goto l455
					}
					position++
					goto l453
				l455:
					position, tokenIndex = position453, tokenIndex453
					if buffer[position] != rune('3') {
						goto l456
					}
					position++
					goto l453
				l456:
					position, tokenIndex = position453, tokenIndex453
					if buffer[position] != rune('4') {
						goto l457
					}
					position++
					goto l453
				l457:
					position, tokenIndex = position453, tokenIndex453
					if buffer[position] != rune('5') {
						goto l458
					}
					position++
					goto l453
				l458:
					position, tokenIndex = position453, tokenIndex453
					if buffer[position] != rune('6') {
						goto l459
					}
					position++
					goto l453
				l459:
					position, tokenIndex = position453, tokenIndex453
					if buffer[position] != rune('7') {
						goto l460
					}
					position++
					goto l453
				l460:
					position, tokenIndex = position453, tokenIndex453
					if buffer[position] != rune('8') {
						goto l461
					}
					position++
					goto l453
				l461:
					position, tokenIndex = position453, tokenIndex453
					if buffer[position] != rune('9') {
						goto l451
					}
					position++
				}
			l453:
				{
					position462, tokenIndex462 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l462
					}
					goto l463
				l462:
					position, tokenIndex = position462, tokenIndex462
				}
			l463:
				{
					position464, tokenIndex464 := position, tokenIndex
					{
						position466, tokenIndex466 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l467
						}
						position++
						goto l466
					l467:
						position, tokenIndex = position466, tokenIndex466
						if !_rules[ruleDash]() {
							goto l464
						}
					}
				l466:
					goto l465
				l464:
					position, tokenIndex = position464, tokenIndex464
				}
			l465:
				if !_rules[ruleNameLowerChar]() {
					goto l451
				}
				if !_rules[ruleNameLowerChar]() {
					goto l451
				}
				if !_rules[ruleNameLowerChar]() {
					goto l451
				}
				if !_rules[ruleNameLowerChar]() {
					goto l451
				}
			l468:
				{
					position469, tokenIndex469 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l469
					}
					goto l468
				l469:
					position, tokenIndex = position469, tokenIndex469
				}
				add(ruleWordStartsWithDigit, position452)
			}
			return true
		l451:
			position, tokenIndex = position451, tokenIndex451
			return false
		},
		/* 62 Word2 <- <(NameLowerChar+ Dash? (WordApostr / NameLowerChar+))> */
		func() bool {
			position470, tokenIndex470 := position, tokenIndex
			{
				position471 := position
				if !_rules[ruleNameLowerChar]() {
					goto l470
				}
			l472:
				{
					position473, tokenIndex473 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l473
					}
					goto l472
				l473:
					position, tokenIndex = position473, tokenIndex473
				}
				{
					position474, tokenIndex474 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l474
					}
					goto l475
				l474:
					position, tokenIndex = position474, tokenIndex474
				}
			l475:
				{
					position476, tokenIndex476 := position, tokenIndex
					if !_rules[ruleWordApostr]() {
						goto l477
					}
					goto l476
				l477:
					position, tokenIndex = position476, tokenIndex476
					if !_rules[ruleNameLowerChar]() {
						goto l470
					}
				l478:
					{
						position479, tokenIndex479 := position, tokenIndex
						if !_rules[ruleNameLowerChar]() {
							goto l479
						}
						goto l478
					l479:
						position, tokenIndex = position479, tokenIndex479
					}
				}
			l476:
				add(ruleWord2, position471)
			}
			return true
		l470:
			position, tokenIndex = position470, tokenIndex470
			return false
		},
		/* 63 WordApostr <- <(NameLowerChar NameLowerChar* Apostrophe Word1)> */
		func() bool {
			position480, tokenIndex480 := position, tokenIndex
			{
				position481 := position
				if !_rules[ruleNameLowerChar]() {
					goto l480
				}
			l482:
				{
					position483, tokenIndex483 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l483
					}
					goto l482
				l483:
					position, tokenIndex = position483, tokenIndex483
				}
				if !_rules[ruleApostrophe]() {
					goto l480
				}
				if !_rules[ruleWord1]() {
					goto l480
				}
				add(ruleWordApostr, position481)
			}
			return true
		l480:
			position, tokenIndex = position480, tokenIndex480
			return false
		},
		/* 64 Word4 <- <(NameLowerChar+ '.' NameLowerChar)> */
		func() bool {
			position484, tokenIndex484 := position, tokenIndex
			{
				position485 := position
				if !_rules[ruleNameLowerChar]() {
					goto l484
				}
			l486:
				{
					position487, tokenIndex487 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l487
					}
					goto l486
				l487:
					position, tokenIndex = position487, tokenIndex487
				}
				if buffer[position] != rune('.') {
					goto l484
				}
				position++
				if !_rules[ruleNameLowerChar]() {
					goto l484
				}
				add(ruleWord4, position485)
			}
			return true
		l484:
			position, tokenIndex = position484, tokenIndex484
			return false
		},
		/* 65 MultiDashedWord <- <(NameLowerChar+ Dash NameLowerChar+ Dash NameLowerChar+ (Dash NameLowerChar+)?)> */
		func() bool {
			position488, tokenIndex488 := position, tokenIndex
			{
				position489 := position
				if !_rules[ruleNameLowerChar]() {
					goto l488
				}
			l490:
				{
					position491, tokenIndex491 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l491
					}
					goto l490
				l491:
					position, tokenIndex = position491, tokenIndex491
				}
				if !_rules[ruleDash]() {
					goto l488
				}
				if !_rules[ruleNameLowerChar]() {
					goto l488
				}
			l492:
				{
					position493, tokenIndex493 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l493
					}
					goto l492
				l493:
					position, tokenIndex = position493, tokenIndex493
				}
				if !_rules[ruleDash]() {
					goto l488
				}
				if !_rules[ruleNameLowerChar]() {
					goto l488
				}
			l494:
				{
					position495, tokenIndex495 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l495
					}
					goto l494
				l495:
					position, tokenIndex = position495, tokenIndex495
				}
				{
					position496, tokenIndex496 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l496
					}
					if !_rules[ruleNameLowerChar]() {
						goto l496
					}
				l498:
					{
						position499, tokenIndex499 := position, tokenIndex
						if !_rules[ruleNameLowerChar]() {
							goto l499
						}
						goto l498
					l499:
						position, tokenIndex = position499, tokenIndex499
					}
					goto l497
				l496:
					position, tokenIndex = position496, tokenIndex496
				}
			l497:
				add(ruleMultiDashedWord, position489)
			}
			return true
		l488:
			position, tokenIndex = position488, tokenIndex488
			return false
		},
		/* 66 HybridChar <- <('×' / (('x' / 'X') &_) / (('x' / 'X') &UninomialWord) / (('x' / 'X') &END))> */
		func() bool {
			position500, tokenIndex500 := position, tokenIndex
			{
				position501 := position
				{
					position502, tokenIndex502 := position, tokenIndex
					if buffer[position] != rune('×') {
						goto l503
					}
					position++
					goto l502
				l503:
					position, tokenIndex = position502, tokenIndex502
					{
						position505, tokenIndex505 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l506
						}
						position++
						goto l505
					l506:
						position, tokenIndex = position505, tokenIndex505
						if buffer[position] != rune('X') {
							goto l504
						}
						position++
					}
				l505:
					{
						position507, tokenIndex507 := position, tokenIndex
						if !_rules[rule_]() {
							goto l504
						}
						position, tokenIndex = position507, tokenIndex507
					}
					goto l502
				l504:
					position, tokenIndex = position502, tokenIndex502
					{
						position509, tokenIndex509 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l510
						}
						position++
						goto l509
					l510:
						position, tokenIndex = position509, tokenIndex509
						if buffer[position] != rune('X') {
							goto l508
						}
						position++
					}
				l509:
					{
						position511, tokenIndex511 := position, tokenIndex
						if !_rules[ruleUninomialWord]() {
							goto l508
						}
						position, tokenIndex = position511, tokenIndex511
					}
					goto l502
				l508:
					position, tokenIndex = position502, tokenIndex502
					{
						position512, tokenIndex512 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l513
						}
						position++
						goto l512
					l513:
						position, tokenIndex = position512, tokenIndex512
						if buffer[position] != rune('X') {
							goto l500
						}
						position++
					}
				l512:
					{
						position514, tokenIndex514 := position, tokenIndex
						if !_rules[ruleEND]() {
							goto l500
						}
						position, tokenIndex = position514, tokenIndex514
					}
				}
			l502:
				add(ruleHybridChar, position501)
			}
			return true
		l500:
			position, tokenIndex = position500, tokenIndex500
			return false
		},
		/* 67 GraftChimeraChar <- <'+'> */
		func() bool {
			position515, tokenIndex515 := position, tokenIndex
			{
				position516 := position
				if buffer[position] != rune('+') {
					goto l515
				}
				position++
				add(ruleGraftChimeraChar, position516)
			}
			return true
		l515:
			position, tokenIndex = position515, tokenIndex515
			return false
		},
		/* 68 ApproxNameIgnored <- <.*> */
		func() bool {
			{
				position518 := position
			l519:
				{
					position520, tokenIndex520 := position, tokenIndex
					if !matchDot() {
						goto l520
					}
					goto l519
				l520:
					position, tokenIndex = position520, tokenIndex520
				}
				add(ruleApproxNameIgnored, position518)
			}
			return true
		},
		/* 69 Approximation <- <(('s' 'p' '.' _? ('n' 'r' '.')) / ('s' 'p' '.' _? ('a' 'f' 'f' '.')) / ('m' 'o' 'n' 's' 't' '.') / '?' / ((('s' 'p' 'p') / ('n' 'r') / ('s' 'p') / ('a' 'f' 'f') / ('s' 'p' 'e' 'c' 'i' 'e' 's')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position521, tokenIndex521 := position, tokenIndex
			{
				position522 := position
				{
					position523, tokenIndex523 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l524
					}
					position++
					if buffer[position] != rune('p') {
						goto l524
					}
					position++
					if buffer[position] != rune('.') {
						goto l524
					}
					position++
					{
						position525, tokenIndex525 := position, tokenIndex
						if !_rules[rule_]() {
							goto l525
						}
						goto l526
					l525:
						position, tokenIndex = position525, tokenIndex525
					}
				l526:
					if buffer[position] != rune('n') {
						goto l524
					}
					position++
					if buffer[position] != rune('r') {
						goto l524
					}
					position++
					if buffer[position] != rune('.') {
						goto l524
					}
					position++
					goto l523
				l524:
					position, tokenIndex = position523, tokenIndex523
					if buffer[position] != rune('s') {
						goto l527
					}
					position++
					if buffer[position] != rune('p') {
						goto l527
					}
					position++
					if buffer[position] != rune('.') {
						goto l527
					}
					position++
					{
						position528, tokenIndex528 := position, tokenIndex
						if !_rules[rule_]() {
							goto l528
						}
						goto l529
					l528:
						position, tokenIndex = position528, tokenIndex528
					}
				l529:
					if buffer[position] != rune('a') {
						goto l527
					}
					position++
					if buffer[position] != rune('f') {
						goto l527
					}
					position++
					if buffer[position] != rune('f') {
						goto l527
					}
					position++
					if buffer[position] != rune('.') {
						goto l527
					}
					position++
					goto l523
				l527:
					position, tokenIndex = position523, tokenIndex523
					if buffer[position] != rune('m') {
						goto l530
					}
					position++
					if buffer[position] != rune('o') {
						goto l530
					}
					position++
					if buffer[position] != rune('n') {
						goto l530
					}
					position++
					if buffer[position] != rune('s') {
						goto l530
					}
					position++
					if buffer[position] != rune('t') {
						goto l530
					}
					position++
					if buffer[position] != rune('.') {
						goto l530
					}
					position++
					goto l523
				l530:
					position, tokenIndex = position523, tokenIndex523
					if buffer[position] != rune('?') {
						goto l531
					}
					position++
					goto l523
				l531:
					position, tokenIndex = position523, tokenIndex523
					{
						position532, tokenIndex532 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l533
						}
						position++
						if buffer[position] != rune('p') {
							goto l533
						}
						position++
						if buffer[position] != rune('p') {
							goto l533
						}
						position++
						goto l532
					l533:
						position, tokenIndex = position532, tokenIndex532
						if buffer[position] != rune('n') {
							goto l534
						}
						position++
						if buffer[position] != rune('r') {
							goto l534
						}
						position++
						goto l532
					l534:
						position, tokenIndex = position532, tokenIndex532
						if buffer[position] != rune('s') {
							goto l535
						}
						position++
						if buffer[position] != rune('p') {
							goto l535
						}
						position++
						goto l532
					l535:
						position, tokenIndex = position532, tokenIndex532
						if buffer[position] != rune('a') {
							goto l536
						}
						position++
						if buffer[position] != rune('f') {
							goto l536
						}
						position++
						if buffer[position] != rune('f') {
							goto l536
						}
						position++
						goto l532
					l536:
						position, tokenIndex = position532, tokenIndex532
						if buffer[position] != rune('s') {
							goto l521
						}
						position++
						if buffer[position] != rune('p') {
							goto l521
						}
						position++
						if buffer[position] != rune('e') {
							goto l521
						}
						position++
						if buffer[position] != rune('c') {
							goto l521
						}
						position++
						if buffer[position] != rune('i') {
							goto l521
						}
						position++
						if buffer[position] != rune('e') {
							goto l521
						}
						position++
						if buffer[position] != rune('s') {
							goto l521
						}
						position++
					}
				l532:
					{
						position537, tokenIndex537 := position, tokenIndex
						{
							position539, tokenIndex539 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l538
							}
							position, tokenIndex = position539, tokenIndex539
						}
						goto l537
					l538:
						position, tokenIndex = position537, tokenIndex537
						if buffer[position] != rune('.') {
							goto l521
						}
						position++
					}
				l537:
				}
			l523:
				add(ruleApproximation, position522)
			}
			return true
		l521:
			position, tokenIndex = position521, tokenIndex521
			return false
		},
		/* 70 Authorship <- <((AuthorshipCombo / OriginalAuthorship) &(SpaceCharEOI / ';' / ','))> */
		func() bool {
			position540, tokenIndex540 := position, tokenIndex
			{
				position541 := position
				{
					position542, tokenIndex542 := position, tokenIndex
					if !_rules[ruleAuthorshipCombo]() {
						goto l543
					}
					goto l542
				l543:
					position, tokenIndex = position542, tokenIndex542
					if !_rules[ruleOriginalAuthorship]() {
						goto l540
					}
				}
			l542:
				{
					position544, tokenIndex544 := position, tokenIndex
					{
						position545, tokenIndex545 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l546
						}
						goto l545
					l546:
						position, tokenIndex = position545, tokenIndex545
						if buffer[position] != rune(';') {
							goto l547
						}
						position++
						goto l545
					l547:
						position, tokenIndex = position545, tokenIndex545
						if buffer[position] != rune(',') {
							goto l540
						}
						position++
					}
				l545:
					position, tokenIndex = position544, tokenIndex544
				}
				add(ruleAuthorship, position541)
			}
			return true
		l540:
			position, tokenIndex = position540, tokenIndex540
			return false
		},
		/* 71 AuthorshipCombo <- <(OriginalAuthorshipComb (_? CombinationAuthorship)?)> */
		func() bool {
			position548, tokenIndex548 := position, tokenIndex
			{
				position549 := position
				if !_rules[ruleOriginalAuthorshipComb]() {
					goto l548
				}
				{
					position550, tokenIndex550 := position, tokenIndex
					{
						position552, tokenIndex552 := position, tokenIndex
						if !_rules[rule_]() {
							goto l552
						}
						goto l553
					l552:
						position, tokenIndex = position552, tokenIndex552
					}
				l553:
					if !_rules[ruleCombinationAuthorship]() {
						goto l550
					}
					goto l551
				l550:
					position, tokenIndex = position550, tokenIndex550
				}
			l551:
				add(ruleAuthorshipCombo, position549)
			}
			return true
		l548:
			position, tokenIndex = position548, tokenIndex548
			return false
		},
		/* 72 OriginalAuthorship <- <AuthorsGroup> */
		func() bool {
			position554, tokenIndex554 := position, tokenIndex
			{
				position555 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l554
				}
				add(ruleOriginalAuthorship, position555)
			}
			return true
		l554:
			position, tokenIndex = position554, tokenIndex554
			return false
		},
		/* 73 OriginalAuthorshipComb <- <(BasionymAuthorshipYearMisformed / BasionymAuthorship / BasionymAuthorshipMissingParens)> */
		func() bool {
			position556, tokenIndex556 := position, tokenIndex
			{
				position557 := position
				{
					position558, tokenIndex558 := position, tokenIndex
					if !_rules[ruleBasionymAuthorshipYearMisformed]() {
						goto l559
					}
					goto l558
				l559:
					position, tokenIndex = position558, tokenIndex558
					if !_rules[ruleBasionymAuthorship]() {
						goto l560
					}
					goto l558
				l560:
					position, tokenIndex = position558, tokenIndex558
					if !_rules[ruleBasionymAuthorshipMissingParens]() {
						goto l556
					}
				}
			l558:
				add(ruleOriginalAuthorshipComb, position557)
			}
			return true
		l556:
			position, tokenIndex = position556, tokenIndex556
			return false
		},
		/* 74 CombinationAuthorship <- <AuthorsGroup> */
		func() bool {
			position561, tokenIndex561 := position, tokenIndex
			{
				position562 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l561
				}
				add(ruleCombinationAuthorship, position562)
			}
			return true
		l561:
			position, tokenIndex = position561, tokenIndex561
			return false
		},
		/* 75 BasionymAuthorshipMissingParens <- <(MissingParensStart / MissingParensEnd)> */
		func() bool {
			position563, tokenIndex563 := position, tokenIndex
			{
				position564 := position
				{
					position565, tokenIndex565 := position, tokenIndex
					if !_rules[ruleMissingParensStart]() {
						goto l566
					}
					goto l565
				l566:
					position, tokenIndex = position565, tokenIndex565
					if !_rules[ruleMissingParensEnd]() {
						goto l563
					}
				}
			l565:
				add(ruleBasionymAuthorshipMissingParens, position564)
			}
			return true
		l563:
			position, tokenIndex = position563, tokenIndex563
			return false
		},
		/* 76 MissingParensStart <- <('(' _? AuthorsGroup)> */
		func() bool {
			position567, tokenIndex567 := position, tokenIndex
			{
				position568 := position
				if buffer[position] != rune('(') {
					goto l567
				}
				position++
				{
					position569, tokenIndex569 := position, tokenIndex
					if !_rules[rule_]() {
						goto l569
					}
					goto l570
				l569:
					position, tokenIndex = position569, tokenIndex569
				}
			l570:
				if !_rules[ruleAuthorsGroup]() {
					goto l567
				}
				add(ruleMissingParensStart, position568)
			}
			return true
		l567:
			position, tokenIndex = position567, tokenIndex567
			return false
		},
		/* 77 MissingParensEnd <- <(AuthorsGroup _? ')')> */
		func() bool {
			position571, tokenIndex571 := position, tokenIndex
			{
				position572 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l571
				}
				{
					position573, tokenIndex573 := position, tokenIndex
					if !_rules[rule_]() {
						goto l573
					}
					goto l574
				l573:
					position, tokenIndex = position573, tokenIndex573
				}
			l574:
				if buffer[position] != rune(')') {
					goto l571
				}
				position++
				add(ruleMissingParensEnd, position572)
			}
			return true
		l571:
			position, tokenIndex = position571, tokenIndex571
			return false
		},
		/* 78 BasionymAuthorshipYearMisformed <- <('(' _? AuthorsGroup _? ')' (_? ',')? _? Year)> */
		func() bool {
			position575, tokenIndex575 := position, tokenIndex
			{
				position576 := position
				if buffer[position] != rune('(') {
					goto l575
				}
				position++
				{
					position577, tokenIndex577 := position, tokenIndex
					if !_rules[rule_]() {
						goto l577
					}
					goto l578
				l577:
					position, tokenIndex = position577, tokenIndex577
				}
			l578:
				if !_rules[ruleAuthorsGroup]() {
					goto l575
				}
				{
					position579, tokenIndex579 := position, tokenIndex
					if !_rules[rule_]() {
						goto l579
					}
					goto l580
				l579:
					position, tokenIndex = position579, tokenIndex579
				}
			l580:
				if buffer[position] != rune(')') {
					goto l575
				}
				position++
				{
					position581, tokenIndex581 := position, tokenIndex
					{
						position583, tokenIndex583 := position, tokenIndex
						if !_rules[rule_]() {
							goto l583
						}
						goto l584
					l583:
						position, tokenIndex = position583, tokenIndex583
					}
				l584:
					if buffer[position] != rune(',') {
						goto l581
					}
					position++
					goto l582
				l581:
					position, tokenIndex = position581, tokenIndex581
				}
			l582:
				{
					position585, tokenIndex585 := position, tokenIndex
					if !_rules[rule_]() {
						goto l585
					}
					goto l586
				l585:
					position, tokenIndex = position585, tokenIndex585
				}
			l586:
				if !_rules[ruleYear]() {
					goto l575
				}
				add(ruleBasionymAuthorshipYearMisformed, position576)
			}
			return true
		l575:
			position, tokenIndex = position575, tokenIndex575
			return false
		},
		/* 79 BasionymAuthorship <- <(BasionymAuthorship1 / BasionymAuthorship2Parens)> */
		func() bool {
			position587, tokenIndex587 := position, tokenIndex
			{
				position588 := position
				{
					position589, tokenIndex589 := position, tokenIndex
					if !_rules[ruleBasionymAuthorship1]() {
						goto l590
					}
					goto l589
				l590:
					position, tokenIndex = position589, tokenIndex589
					if !_rules[ruleBasionymAuthorship2Parens]() {
						goto l587
					}
				}
			l589:
				add(ruleBasionymAuthorship, position588)
			}
			return true
		l587:
			position, tokenIndex = position587, tokenIndex587
			return false
		},
		/* 80 BasionymAuthorship1 <- <('(' _? AuthorsGroup _? ')')> */
		func() bool {
			position591, tokenIndex591 := position, tokenIndex
			{
				position592 := position
				if buffer[position] != rune('(') {
					goto l591
				}
				position++
				{
					position593, tokenIndex593 := position, tokenIndex
					if !_rules[rule_]() {
						goto l593
					}
					goto l594
				l593:
					position, tokenIndex = position593, tokenIndex593
				}
			l594:
				if !_rules[ruleAuthorsGroup]() {
					goto l591
				}
				{
					position595, tokenIndex595 := position, tokenIndex
					if !_rules[rule_]() {
						goto l595
					}
					goto l596
				l595:
					position, tokenIndex = position595, tokenIndex595
				}
			l596:
				if buffer[position] != rune(')') {
					goto l591
				}
				position++
				add(ruleBasionymAuthorship1, position592)
			}
			return true
		l591:
			position, tokenIndex = position591, tokenIndex591
			return false
		},
		/* 81 BasionymAuthorship2Parens <- <('(' _? '(' _? AuthorsGroup _? ')' _? ')')> */
		func() bool {
			position597, tokenIndex597 := position, tokenIndex
			{
				position598 := position
				if buffer[position] != rune('(') {
					goto l597
				}
				position++
				{
					position599, tokenIndex599 := position, tokenIndex
					if !_rules[rule_]() {
						goto l599
					}
					goto l600
				l599:
					position, tokenIndex = position599, tokenIndex599
				}
			l600:
				if buffer[position] != rune('(') {
					goto l597
				}
				position++
				{
					position601, tokenIndex601 := position, tokenIndex
					if !_rules[rule_]() {
						goto l601
					}
					goto l602
				l601:
					position, tokenIndex = position601, tokenIndex601
				}
			l602:
				if !_rules[ruleAuthorsGroup]() {
					goto l597
				}
				{
					position603, tokenIndex603 := position, tokenIndex
					if !_rules[rule_]() {
						goto l603
					}
					goto l604
				l603:
					position, tokenIndex = position603, tokenIndex603
				}
			l604:
				if buffer[position] != rune(')') {
					goto l597
				}
				position++
				{
					position605, tokenIndex605 := position, tokenIndex
					if !_rules[rule_]() {
						goto l605
					}
					goto l606
				l605:
					position, tokenIndex = position605, tokenIndex605
				}
			l606:
				if buffer[position] != rune(')') {
					goto l597
				}
				position++
				add(ruleBasionymAuthorship2Parens, position598)
			}
			return true
		l597:
			position, tokenIndex = position597, tokenIndex597
			return false
		},
		/* 82 AuthorsGroup <- <(AuthorsTeam (_ (AuthorEmend / AuthorEx) AuthorsTeam)?)> */
		func() bool {
			position607, tokenIndex607 := position, tokenIndex
			{
				position608 := position
				if !_rules[ruleAuthorsTeam]() {
					goto l607
				}
				{
					position609, tokenIndex609 := position, tokenIndex
					if !_rules[rule_]() {
						goto l609
					}
					{
						position611, tokenIndex611 := position, tokenIndex
						if !_rules[ruleAuthorEmend]() {
							goto l612
						}
						goto l611
					l612:
						position, tokenIndex = position611, tokenIndex611
						if !_rules[ruleAuthorEx]() {
							goto l609
						}
					}
				l611:
					if !_rules[ruleAuthorsTeam]() {
						goto l609
					}
					goto l610
				l609:
					position, tokenIndex = position609, tokenIndex609
				}
			l610:
				add(ruleAuthorsGroup, position608)
			}
			return true
		l607:
			position, tokenIndex = position607, tokenIndex607
			return false
		},
		/* 83 AuthorsTeam <- <(Author (AuthorSep Author)* (_? ','? _? Year)?)> */
		func() bool {
			position613, tokenIndex613 := position, tokenIndex
			{
				position614 := position
				if !_rules[ruleAuthor]() {
					goto l613
				}
			l615:
				{
					position616, tokenIndex616 := position, tokenIndex
					if !_rules[ruleAuthorSep]() {
						goto l616
					}
					if !_rules[ruleAuthor]() {
						goto l616
					}
					goto l615
				l616:
					position, tokenIndex = position616, tokenIndex616
				}
				{
					position617, tokenIndex617 := position, tokenIndex
					{
						position619, tokenIndex619 := position, tokenIndex
						if !_rules[rule_]() {
							goto l619
						}
						goto l620
					l619:
						position, tokenIndex = position619, tokenIndex619
					}
				l620:
					{
						position621, tokenIndex621 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l621
						}
						position++
						goto l622
					l621:
						position, tokenIndex = position621, tokenIndex621
					}
				l622:
					{
						position623, tokenIndex623 := position, tokenIndex
						if !_rules[rule_]() {
							goto l623
						}
						goto l624
					l623:
						position, tokenIndex = position623, tokenIndex623
					}
				l624:
					if !_rules[ruleYear]() {
						goto l617
					}
					goto l618
				l617:
					position, tokenIndex = position617, tokenIndex617
				}
			l618:
				add(ruleAuthorsTeam, position614)
			}
			return true
		l613:
			position, tokenIndex = position613, tokenIndex613
			return false
		},
		/* 84 AuthorSep <- <(AuthorSep1 / AuthorSep2)> */
		func() bool {
			position625, tokenIndex625 := position, tokenIndex
			{
				position626 := position
				{
					position627, tokenIndex627 := position, tokenIndex
					if !_rules[ruleAuthorSep1]() {
						goto l628
					}
					goto l627
				l628:
					position, tokenIndex = position627, tokenIndex627
					if !_rules[ruleAuthorSep2]() {
						goto l625
					}
				}
			l627:
				add(ruleAuthorSep, position626)
			}
			return true
		l625:
			position, tokenIndex = position625, tokenIndex625
			return false
		},
		/* 85 AuthorSep1 <- <(_? (',' _)? ('&' / AuthorSepSpanish / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd')) _?)> */
		func() bool {
			position629, tokenIndex629 := position, tokenIndex
			{
				position630 := position
				{
					position631, tokenIndex631 := position, tokenIndex
					if !_rules[rule_]() {
						goto l631
					}
					goto l632
				l631:
					position, tokenIndex = position631, tokenIndex631
				}
			l632:
				{
					position633, tokenIndex633 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l633
					}
					position++
					if !_rules[rule_]() {
						goto l633
					}
					goto l634
				l633:
					position, tokenIndex = position633, tokenIndex633
				}
			l634:
				{
					position635, tokenIndex635 := position, tokenIndex
					if buffer[position] != rune('&') {
						goto l636
					}
					position++
					goto l635
				l636:
					position, tokenIndex = position635, tokenIndex635
					if !_rules[ruleAuthorSepSpanish]() {
						goto l637
					}
					goto l635
				l637:
					position, tokenIndex = position635, tokenIndex635
					if buffer[position] != rune('e') {
						goto l638
					}
					position++
					if buffer[position] != rune('t') {
						goto l638
					}
					position++
					goto l635
				l638:
					position, tokenIndex = position635, tokenIndex635
					if buffer[position] != rune('a') {
						goto l639
					}
					position++
					if buffer[position] != rune('n') {
						goto l639
					}
					position++
					if buffer[position] != rune('d') {
						goto l639
					}
					position++
					goto l635
				l639:
					position, tokenIndex = position635, tokenIndex635
					if buffer[position] != rune('a') {
						goto l629
					}
					position++
					if buffer[position] != rune('p') {
						goto l629
					}
					position++
					if buffer[position] != rune('u') {
						goto l629
					}
					position++
					if buffer[position] != rune('d') {
						goto l629
					}
					position++
				}
			l635:
				{
					position640, tokenIndex640 := position, tokenIndex
					if !_rules[rule_]() {
						goto l640
					}
					goto l641
				l640:
					position, tokenIndex = position640, tokenIndex640
				}
			l641:
				add(ruleAuthorSep1, position630)
			}
			return true
		l629:
			position, tokenIndex = position629, tokenIndex629
			return false
		},
		/* 86 AuthorSep2 <- <(_? ',' _?)> */
		func() bool {
			position642, tokenIndex642 := position, tokenIndex
			{
				position643 := position
				{
					position644, tokenIndex644 := position, tokenIndex
					if !_rules[rule_]() {
						goto l644
					}
					goto l645
				l644:
					position, tokenIndex = position644, tokenIndex644
				}
			l645:
				if buffer[position] != rune(',') {
					goto l642
				}
				position++
				{
					position646, tokenIndex646 := position, tokenIndex
					if !_rules[rule_]() {
						goto l646
					}
					goto l647
				l646:
					position, tokenIndex = position646, tokenIndex646
				}
			l647:
				add(ruleAuthorSep2, position643)
			}
			return true
		l642:
			position, tokenIndex = position642, tokenIndex642
			return false
		},
		/* 87 AuthorSepSpanish <- <(_? 'y' _?)> */
		func() bool {
			position648, tokenIndex648 := position, tokenIndex
			{
				position649 := position
				{
					position650, tokenIndex650 := position, tokenIndex
					if !_rules[rule_]() {
						goto l650
					}
					goto l651
				l650:
					position, tokenIndex = position650, tokenIndex650
				}
			l651:
				if buffer[position] != rune('y') {
					goto l648
				}
				position++
				{
					position652, tokenIndex652 := position, tokenIndex
					if !_rules[rule_]() {
						goto l652
					}
					goto l653
				l652:
					position, tokenIndex = position652, tokenIndex652
				}
			l653:
				add(ruleAuthorSepSpanish, position649)
			}
			return true
		l648:
			position, tokenIndex = position648, tokenIndex648
			return false
		},
		/* 88 AuthorEx <- <((('e' 'x' '.'?) / ('m' 's' _ ('i' 'n')) / ('i' 'n')) _)> */
		func() bool {
			position654, tokenIndex654 := position, tokenIndex
			{
				position655 := position
				{
					position656, tokenIndex656 := position, tokenIndex
					if buffer[position] != rune('e') {
						goto l657
					}
					position++
					if buffer[position] != rune('x') {
						goto l657
					}
					position++
					{
						position658, tokenIndex658 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l658
						}
						position++
						goto l659
					l658:
						position, tokenIndex = position658, tokenIndex658
					}
				l659:
					goto l656
				l657:
					position, tokenIndex = position656, tokenIndex656
					if buffer[position] != rune('m') {
						goto l660
					}
					position++
					if buffer[position] != rune('s') {
						goto l660
					}
					position++
					if !_rules[rule_]() {
						goto l660
					}
					if buffer[position] != rune('i') {
						goto l660
					}
					position++
					if buffer[position] != rune('n') {
						goto l660
					}
					position++
					goto l656
				l660:
					position, tokenIndex = position656, tokenIndex656
					if buffer[position] != rune('i') {
						goto l654
					}
					position++
					if buffer[position] != rune('n') {
						goto l654
					}
					position++
				}
			l656:
				if !_rules[rule_]() {
					goto l654
				}
				add(ruleAuthorEx, position655)
			}
			return true
		l654:
			position, tokenIndex = position654, tokenIndex654
			return false
		},
		/* 89 AuthorEmend <- <('e' 'm' 'e' 'n' 'd' '.'? _)> */
		func() bool {
			position661, tokenIndex661 := position, tokenIndex
			{
				position662 := position
				if buffer[position] != rune('e') {
					goto l661
				}
				position++
				if buffer[position] != rune('m') {
					goto l661
				}
				position++
				if buffer[position] != rune('e') {
					goto l661
				}
				position++
				if buffer[position] != rune('n') {
					goto l661
				}
				position++
				if buffer[position] != rune('d') {
					goto l661
				}
				position++
				{
					position663, tokenIndex663 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l663
					}
					position++
					goto l664
				l663:
					position, tokenIndex = position663, tokenIndex663
				}
			l664:
				if !_rules[rule_]() {
					goto l661
				}
				add(ruleAuthorEmend, position662)
			}
			return true
		l661:
			position, tokenIndex = position661, tokenIndex661
			return false
		},
		/* 90 Author <- <((Author0 / Author1 / Author2 / UnknownAuthor) (_ AuthorEtAl)?)> */
		func() bool {
			position665, tokenIndex665 := position, tokenIndex
			{
				position666 := position
				{
					position667, tokenIndex667 := position, tokenIndex
					if !_rules[ruleAuthor0]() {
						goto l668
					}
					goto l667
				l668:
					position, tokenIndex = position667, tokenIndex667
					if !_rules[ruleAuthor1]() {
						goto l669
					}
					goto l667
				l669:
					position, tokenIndex = position667, tokenIndex667
					if !_rules[ruleAuthor2]() {
						goto l670
					}
					goto l667
				l670:
					position, tokenIndex = position667, tokenIndex667
					if !_rules[ruleUnknownAuthor]() {
						goto l665
					}
				}
			l667:
				{
					position671, tokenIndex671 := position, tokenIndex
					if !_rules[rule_]() {
						goto l671
					}
					if !_rules[ruleAuthorEtAl]() {
						goto l671
					}
					goto l672
				l671:
					position, tokenIndex = position671, tokenIndex671
				}
			l672:
				add(ruleAuthor, position666)
			}
			return true
		l665:
			position, tokenIndex = position665, tokenIndex665
			return false
		},
		/* 91 Author0 <- <(Author2 FiliusFNoSpace)> */
		func() bool {
			position673, tokenIndex673 := position, tokenIndex
			{
				position674 := position
				if !_rules[ruleAuthor2]() {
					goto l673
				}
				if !_rules[ruleFiliusFNoSpace]() {
					goto l673
				}
				add(ruleAuthor0, position674)
			}
			return true
		l673:
			position, tokenIndex = position673, tokenIndex673
			return false
		},
		/* 92 Author1 <- <(Author2 _? (Filius / AuthorSuffix))> */
		func() bool {
			position675, tokenIndex675 := position, tokenIndex
			{
				position676 := position
				if !_rules[ruleAuthor2]() {
					goto l675
				}
				{
					position677, tokenIndex677 := position, tokenIndex
					if !_rules[rule_]() {
						goto l677
					}
					goto l678
				l677:
					position, tokenIndex = position677, tokenIndex677
				}
			l678:
				{
					position679, tokenIndex679 := position, tokenIndex
					if !_rules[ruleFilius]() {
						goto l680
					}
					goto l679
				l680:
					position, tokenIndex = position679, tokenIndex679
					if !_rules[ruleAuthorSuffix]() {
						goto l675
					}
				}
			l679:
				add(ruleAuthor1, position676)
			}
			return true
		l675:
			position, tokenIndex = position675, tokenIndex675
			return false
		},
		/* 93 Author2 <- <(AuthorWord (_? AuthorWord)*)> */
		func() bool {
			position681, tokenIndex681 := position, tokenIndex
			{
				position682 := position
				if !_rules[ruleAuthorWord]() {
					goto l681
				}
			l683:
				{
					position684, tokenIndex684 := position, tokenIndex
					{
						position685, tokenIndex685 := position, tokenIndex
						if !_rules[rule_]() {
							goto l685
						}
						goto l686
					l685:
						position, tokenIndex = position685, tokenIndex685
					}
				l686:
					if !_rules[ruleAuthorWord]() {
						goto l684
					}
					goto l683
				l684:
					position, tokenIndex = position684, tokenIndex684
				}
				add(ruleAuthor2, position682)
			}
			return true
		l681:
			position, tokenIndex = position681, tokenIndex681
			return false
		},
		/* 94 UnknownAuthor <- <('?' / ((('a' 'u' 'c' 't') / ('a' 'n' 'o' 'n')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position687, tokenIndex687 := position, tokenIndex
			{
				position688 := position
				{
					position689, tokenIndex689 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l690
					}
					position++
					goto l689
				l690:
					position, tokenIndex = position689, tokenIndex689
					{
						position691, tokenIndex691 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l692
						}
						position++
						if buffer[position] != rune('u') {
							goto l692
						}
						position++
						if buffer[position] != rune('c') {
							goto l692
						}
						position++
						if buffer[position] != rune('t') {
							goto l692
						}
						position++
						goto l691
					l692:
						position, tokenIndex = position691, tokenIndex691
						if buffer[position] != rune('a') {
							goto l687
						}
						position++
						if buffer[position] != rune('n') {
							goto l687
						}
						position++
						if buffer[position] != rune('o') {
							goto l687
						}
						position++
						if buffer[position] != rune('n') {
							goto l687
						}
						position++
					}
				l691:
					{
						position693, tokenIndex693 := position, tokenIndex
						{
							position695, tokenIndex695 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l694
							}
							position, tokenIndex = position695, tokenIndex695
						}
						goto l693
					l694:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('.') {
							goto l687
						}
						position++
					}
				l693:
				}
			l689:
				add(ruleUnknownAuthor, position688)
			}
			return true
		l687:
			position, tokenIndex = position687, tokenIndex687
			return false
		},
		/* 95 AuthorWord <- <(!(HybridChar / (('b' / 'B') ('o' / 'O') ('l' / 'L') ('d' / 'D') ':')) (AuthorDashInitials / AuthorWord2 / AuthorWord3 / AuthorPrefix))> */
		func() bool {
			position696, tokenIndex696 := position, tokenIndex
			{
				position697 := position
				{
					position698, tokenIndex698 := position, tokenIndex
					{
						position699, tokenIndex699 := position, tokenIndex
						if !_rules[ruleHybridChar]() {
							goto l700
						}
						goto l699
					l700:
						position, tokenIndex = position699, tokenIndex699
						{
							position701, tokenIndex701 := position, tokenIndex
							if buffer[position] != rune('b') {
								goto l702
							}
							position++
							goto l701
						l702:
							position, tokenIndex = position701, tokenIndex701
							if buffer[position] != rune('B') {
								goto l698
							}
							position++
						}
					l701:
						{
							position703, tokenIndex703 := position, tokenIndex
							if buffer[position] != rune('o') {
								goto l704
							}
							position++
							goto l703
						l704:
							position, tokenIndex = position703, tokenIndex703
							if buffer[position] != rune('O') {
								goto l698
							}
							position++
						}
					l703:
						{
							position705, tokenIndex705 := position, tokenIndex
							if buffer[position] != rune('l') {
								goto l706
							}
							position++
							goto l705
						l706:
							position, tokenIndex = position705, tokenIndex705
							if buffer[position] != rune('L') {
								goto l698
							}
							position++
						}
					l705:
						{
							position707, tokenIndex707 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l708
							}
							position++
							goto l707
						l708:
							position, tokenIndex = position707, tokenIndex707
							if buffer[position] != rune('D') {
								goto l698
							}
							position++
						}
					l707:
						if buffer[position] != rune(':') {
							goto l698
						}
						position++
					}
				l699:
					goto l696
				l698:
					position, tokenIndex = position698, tokenIndex698
				}
				{
					position709, tokenIndex709 := position, tokenIndex
					if !_rules[ruleAuthorDashInitials]() {
						goto l710
					}
					goto l709
				l710:
					position, tokenIndex = position709, tokenIndex709
					if !_rules[ruleAuthorWord2]() {
						goto l711
					}
					goto l709
				l711:
					position, tokenIndex = position709, tokenIndex709
					if !_rules[ruleAuthorWord3]() {
						goto l712
					}
					goto l709
				l712:
					position, tokenIndex = position709, tokenIndex709
					if !_rules[ruleAuthorPrefix]() {
						goto l696
					}
				}
			l709:
				add(ruleAuthorWord, position697)
			}
			return true
		l696:
			position, tokenIndex = position696, tokenIndex696
			return false
		},
		/* 96 AuthorEtAl <- <(('a' 'r' 'g' '.') / ('e' 't' ' ' 'a' 'l' '.' '{' '?' '}') / ((('e' 't') / '&') (' ' 'a' 'l') '.'?))> */
		func() bool {
			position713, tokenIndex713 := position, tokenIndex
			{
				position714 := position
				{
					position715, tokenIndex715 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l716
					}
					position++
					if buffer[position] != rune('r') {
						goto l716
					}
					position++
					if buffer[position] != rune('g') {
						goto l716
					}
					position++
					if buffer[position] != rune('.') {
						goto l716
					}
					position++
					goto l715
				l716:
					position, tokenIndex = position715, tokenIndex715
					if buffer[position] != rune('e') {
						goto l717
					}
					position++
					if buffer[position] != rune('t') {
						goto l717
					}
					position++
					if buffer[position] != rune(' ') {
						goto l717
					}
					position++
					if buffer[position] != rune('a') {
						goto l717
					}
					position++
					if buffer[position] != rune('l') {
						goto l717
					}
					position++
					if buffer[position] != rune('.') {
						goto l717
					}
					position++
					if buffer[position] != rune('{') {
						goto l717
					}
					position++
					if buffer[position] != rune('?') {
						goto l717
					}
					position++
					if buffer[position] != rune('}') {
						goto l717
					}
					position++
					goto l715
				l717:
					position, tokenIndex = position715, tokenIndex715
					{
						position718, tokenIndex718 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l719
						}
						position++
						if buffer[position] != rune('t') {
							goto l719
						}
						position++
						goto l718
					l719:
						position, tokenIndex = position718, tokenIndex718
						if buffer[position] != rune('&') {
							goto l713
						}
						position++
					}
				l718:
					if buffer[position] != rune(' ') {
						goto l713
					}
					position++
					if buffer[position] != rune('a') {
						goto l713
					}
					position++
					if buffer[position] != rune('l') {
						goto l713
					}
					position++
					{
						position720, tokenIndex720 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l720
						}
						position++
						goto l721
					l720:
						position, tokenIndex = position720, tokenIndex720
					}
				l721:
				}
			l715:
				add(ruleAuthorEtAl, position714)
			}
			return true
		l713:
			position, tokenIndex = position713, tokenIndex713
			return false
		},
		/* 97 AuthorWord2 <- <(AuthorWord3 Dash AuthorWordSoft)> */
		func() bool {
			position722, tokenIndex722 := position, tokenIndex
			{
				position723 := position
				if !_rules[ruleAuthorWord3]() {
					goto l722
				}
				if !_rules[ruleDash]() {
					goto l722
				}
				if !_rules[ruleAuthorWordSoft]() {
					goto l722
				}
				add(ruleAuthorWord2, position723)
			}
			return true
		l722:
			position, tokenIndex = position722, tokenIndex722
			return false
		},
		/* 98 AuthorWord3 <- <(AuthorPrefixGlued? (AllCapsAuthorWord / CapAuthorWord) '.'?)> */
		func() bool {
			position724, tokenIndex724 := position, tokenIndex
			{
				position725 := position
				{
					position726, tokenIndex726 := position, tokenIndex
					if !_rules[ruleAuthorPrefixGlued]() {
						goto l726
					}
					goto l727
				l726:
					position, tokenIndex = position726, tokenIndex726
				}
			l727:
				{
					position728, tokenIndex728 := position, tokenIndex
					if !_rules[ruleAllCapsAuthorWord]() {
						goto l729
					}
					goto l728
				l729:
					position, tokenIndex = position728, tokenIndex728
					if !_rules[ruleCapAuthorWord]() {
						goto l724
					}
				}
			l728:
				{
					position730, tokenIndex730 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l730
					}
					position++
					goto l731
				l730:
					position, tokenIndex = position730, tokenIndex730
				}
			l731:
				add(ruleAuthorWord3, position725)
			}
			return true
		l724:
			position, tokenIndex = position724, tokenIndex724
			return false
		},
		/* 99 AuthorDashInitials <- <(AuthorUpperChar '.'? Dash AuthorUpperChar '.'?)> */
		func() bool {
			position732, tokenIndex732 := position, tokenIndex
			{
				position733 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l732
				}
				{
					position734, tokenIndex734 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l734
					}
					position++
					goto l735
				l734:
					position, tokenIndex = position734, tokenIndex734
				}
			l735:
				if !_rules[ruleDash]() {
					goto l732
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l732
				}
				{
					position736, tokenIndex736 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l736
					}
					position++
					goto l737
				l736:
					position, tokenIndex = position736, tokenIndex736
				}
			l737:
				add(ruleAuthorDashInitials, position733)
			}
			return true
		l732:
			position, tokenIndex = position732, tokenIndex732
			return false
		},
		/* 100 AuthorWordSoft <- <(((AuthorUpperChar (AuthorUpperChar+ / AuthorLowerChar+)) / AuthorLowerChar+) '.'?)> */
		func() bool {
			position738, tokenIndex738 := position, tokenIndex
			{
				position739 := position
				{
					position740, tokenIndex740 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l741
					}
					{
						position742, tokenIndex742 := position, tokenIndex
						if !_rules[ruleAuthorUpperChar]() {
							goto l743
						}
					l744:
						{
							position745, tokenIndex745 := position, tokenIndex
							if !_rules[ruleAuthorUpperChar]() {
								goto l745
							}
							goto l744
						l745:
							position, tokenIndex = position745, tokenIndex745
						}
						goto l742
					l743:
						position, tokenIndex = position742, tokenIndex742
						if !_rules[ruleAuthorLowerChar]() {
							goto l741
						}
					l746:
						{
							position747, tokenIndex747 := position, tokenIndex
							if !_rules[ruleAuthorLowerChar]() {
								goto l747
							}
							goto l746
						l747:
							position, tokenIndex = position747, tokenIndex747
						}
					}
				l742:
					goto l740
				l741:
					position, tokenIndex = position740, tokenIndex740
					if !_rules[ruleAuthorLowerChar]() {
						goto l738
					}
				l748:
					{
						position749, tokenIndex749 := position, tokenIndex
						if !_rules[ruleAuthorLowerChar]() {
							goto l749
						}
						goto l748
					l749:
						position, tokenIndex = position749, tokenIndex749
					}
				}
			l740:
				{
					position750, tokenIndex750 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l750
					}
					position++
					goto l751
				l750:
					position, tokenIndex = position750, tokenIndex750
				}
			l751:
				add(ruleAuthorWordSoft, position739)
			}
			return true
		l738:
			position, tokenIndex = position738, tokenIndex738
			return false
		},
		/* 101 CapAuthorWord <- <(AuthorUpperChar AuthorLowerChar*)> */
		func() bool {
			position752, tokenIndex752 := position, tokenIndex
			{
				position753 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l752
				}
			l754:
				{
					position755, tokenIndex755 := position, tokenIndex
					if !_rules[ruleAuthorLowerChar]() {
						goto l755
					}
					goto l754
				l755:
					position, tokenIndex = position755, tokenIndex755
				}
				add(ruleCapAuthorWord, position753)
			}
			return true
		l752:
			position, tokenIndex = position752, tokenIndex752
			return false
		},
		/* 102 AllCapsAuthorWord <- <(AuthorUpperChar AuthorUpperChar+)> */
		func() bool {
			position756, tokenIndex756 := position, tokenIndex
			{
				position757 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l756
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l756
				}
			l758:
				{
					position759, tokenIndex759 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l759
					}
					goto l758
				l759:
					position, tokenIndex = position759, tokenIndex759
				}
				add(ruleAllCapsAuthorWord, position757)
			}
			return true
		l756:
			position, tokenIndex = position756, tokenIndex756
			return false
		},
		/* 103 Filius <- <(FiliusF / ('f' 'i' 'l' '.') / ('f' 'i' 'l' 'i' 'u' 's'))> */
		func() bool {
			position760, tokenIndex760 := position, tokenIndex
			{
				position761 := position
				{
					position762, tokenIndex762 := position, tokenIndex
					if !_rules[ruleFiliusF]() {
						goto l763
					}
					goto l762
				l763:
					position, tokenIndex = position762, tokenIndex762
					if buffer[position] != rune('f') {
						goto l764
					}
					position++
					if buffer[position] != rune('i') {
						goto l764
					}
					position++
					if buffer[position] != rune('l') {
						goto l764
					}
					position++
					if buffer[position] != rune('.') {
						goto l764
					}
					position++
					goto l762
				l764:
					position, tokenIndex = position762, tokenIndex762
					if buffer[position] != rune('f') {
						goto l760
					}
					position++
					if buffer[position] != rune('i') {
						goto l760
					}
					position++
					if buffer[position] != rune('l') {
						goto l760
					}
					position++
					if buffer[position] != rune('i') {
						goto l760
					}
					position++
					if buffer[position] != rune('u') {
						goto l760
					}
					position++
					if buffer[position] != rune('s') {
						goto l760
					}
					position++
				}
			l762:
				add(ruleFilius, position761)
			}
			return true
		l760:
			position, tokenIndex = position760, tokenIndex760
			return false
		},
		/* 104 FiliusF <- <('f' '.' !(_ Word))> */
		func() bool {
			position765, tokenIndex765 := position, tokenIndex
			{
				position766 := position
				if buffer[position] != rune('f') {
					goto l765
				}
				position++
				if buffer[position] != rune('.') {
					goto l765
				}
				position++
				{
					position767, tokenIndex767 := position, tokenIndex
					if !_rules[rule_]() {
						goto l767
					}
					if !_rules[ruleWord]() {
						goto l767
					}
					goto l765
				l767:
					position, tokenIndex = position767, tokenIndex767
				}
				add(ruleFiliusF, position766)
			}
			return true
		l765:
			position, tokenIndex = position765, tokenIndex765
			return false
		},
		/* 105 FiliusFNoSpace <- <('f' '.')> */
		func() bool {
			position768, tokenIndex768 := position, tokenIndex
			{
				position769 := position
				if buffer[position] != rune('f') {
					goto l768
				}
				position++
				if buffer[position] != rune('.') {
					goto l768
				}
				position++
				add(ruleFiliusFNoSpace, position769)
			}
			return true
		l768:
			position, tokenIndex = position768, tokenIndex768
			return false
		},
		/* 106 AuthorSuffix <- <(('b' 'i' 's') / ('t' 'e' 'r'))> */
		func() bool {
			position770, tokenIndex770 := position, tokenIndex
			{
				position771 := position
				{
					position772, tokenIndex772 := position, tokenIndex
					if buffer[position] != rune('b') {
						goto l773
					}
					position++
					if buffer[position] != rune('i') {
						goto l773
					}
					position++
					if buffer[position] != rune('s') {
						goto l773
					}
					position++
					goto l772
				l773:
					position, tokenIndex = position772, tokenIndex772
					if buffer[position] != rune('t') {
						goto l770
					}
					position++
					if buffer[position] != rune('e') {
						goto l770
					}
					position++
					if buffer[position] != rune('r') {
						goto l770
					}
					position++
				}
			l772:
				add(ruleAuthorSuffix, position771)
			}
			return true
		l770:
			position, tokenIndex = position770, tokenIndex770
			return false
		},
		/* 107 AuthorPrefixGlued <- <(('d' / 'O' / 'L' / ('M' 'c') / 'M') Apostrophe)> */
		func() bool {
			position774, tokenIndex774 := position, tokenIndex
			{
				position775 := position
				{
					position776, tokenIndex776 := position, tokenIndex
					if buffer[position] != rune('d') {
						goto l777
					}
					position++
					goto l776
				l777:
					position, tokenIndex = position776, tokenIndex776
					if buffer[position] != rune('O') {
						goto l778
					}
					position++
					goto l776
				l778:
					position, tokenIndex = position776, tokenIndex776
					if buffer[position] != rune('L') {
						goto l779
					}
					position++
					goto l776
				l779:
					position, tokenIndex = position776, tokenIndex776
					if buffer[position] != rune('M') {
						goto l780
					}
					position++
					if buffer[position] != rune('c') {
						goto l780
					}
					position++
					goto l776
				l780:
					position, tokenIndex = position776, tokenIndex776
					if buffer[position] != rune('M') {
						goto l774
					}
					position++
				}
			l776:
				if !_rules[ruleApostrophe]() {
					goto l774
				}
				add(ruleAuthorPrefixGlued, position775)
			}
			return true
		l774:
			position, tokenIndex = position774, tokenIndex774
			return false
		},
		/* 108 AuthorPrefix <- <(AuthorPrefix1 / AuthorPrefix2)> */
		func() bool {
			position781, tokenIndex781 := position, tokenIndex
			{
				position782 := position
				{
					position783, tokenIndex783 := position, tokenIndex
					if !_rules[ruleAuthorPrefix1]() {
						goto l784
					}
					goto l783
				l784:
					position, tokenIndex = position783, tokenIndex783
					if !_rules[ruleAuthorPrefix2]() {
						goto l781
					}
				}
			l783:
				add(ruleAuthorPrefix, position782)
			}
			return true
		l781:
			position, tokenIndex = position781, tokenIndex781
			return false
		},
		/* 109 AuthorPrefix2 <- <(('v' '.' (_? ('d' '.'))?) / (Apostrophe 't'))> */
		func() bool {
			position785, tokenIndex785 := position, tokenIndex
			{
				position786 := position
				{
					position787, tokenIndex787 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l788
					}
					position++
					if buffer[position] != rune('.') {
						goto l788
					}
					position++
					{
						position789, tokenIndex789 := position, tokenIndex
						{
							position791, tokenIndex791 := position, tokenIndex
							if !_rules[rule_]() {
								goto l791
							}
							goto l792
						l791:
							position, tokenIndex = position791, tokenIndex791
						}
					l792:
						if buffer[position] != rune('d') {
							goto l789
						}
						position++
						if buffer[position] != rune('.') {
							goto l789
						}
						position++
						goto l790
					l789:
						position, tokenIndex = position789, tokenIndex789
					}
				l790:
					goto l787
				l788:
					position, tokenIndex = position787, tokenIndex787
					if !_rules[ruleApostrophe]() {
						goto l785
					}
					if buffer[position] != rune('t') {
						goto l785
					}
					position++
				}
			l787:
				add(ruleAuthorPrefix2, position786)
			}
			return true
		l785:
			position, tokenIndex = position785, tokenIndex785
			return false
		},
		/* 110 AuthorPrefix1 <- <((('a' 'b') / ('a' 'f') / ('b' 'i' 's') / ('d' 'a') / ('d' 'e' 'r') / ('d' 'e' 's') / ('d' 'e' 'n') / ('d' 'e' 'l' 'l' 'a') / ('d' 'e' 'l' 'a') / ('d' 'e' 'l' 'l' 'e') / ('d' 'e' 'l') / ('d' 'e' ' ' 'l' 'o' 's') / ('d' 'e') / ('d' 'i') / ('d' 'o' 's') / ('d' 'u') / ('d' 'o') / ('e' 'l') / ('l' 'a') / ('l' 'e') / ('t' 'e' 'n') / ('t' 'e' 'r') / ('v' 'a' 'n') / ('v' 'e' 'r') / ('d' Apostrophe) / ('i' 'n' Apostrophe 't') / ('z' 'u' 'r') / ('z' 'u') / ('v' 'o' 'n' (_ (('d' '.') / ('d' 'e' 'm')))?) / ('v' (_ 'd')?)) &_)> */
		func() bool {
			position793, tokenIndex793 := position, tokenIndex
			{
				position794 := position
				{
					position795, tokenIndex795 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l796
					}
					position++
					if buffer[position] != rune('b') {
						goto l796
					}
					position++
					goto l795
				l796:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('a') {
						goto l797
					}
					position++
					if buffer[position] != rune('f') {
						goto l797
					}
					position++
					goto l795
				l797:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('b') {
						goto l798
					}
					position++
					if buffer[position] != rune('i') {
						goto l798
					}
					position++
					if buffer[position] != rune('s') {
						goto l798
					}
					position++
					goto l795
				l798:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('d') {
						goto l799
					}
					position++
					if buffer[position] != rune('a') {
						goto l799
					}
					position++
					goto l795
				l799:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('d') {
						goto l800
					}
					position++
					if buffer[position] != rune('e') {
						goto l800
					}
					position++
					if buffer[position] != rune('r') {
						goto l800
					}
					position++
					goto l795
				l800:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('d') {
						goto l801
					}
					position++
					if buffer[position] != rune('e') {
						goto l801
					}
					position++
					if buffer[position] != rune('s') {
						goto l801
					}
					position++
					goto l795
				l801:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('d') {
						goto l802
					}
					position++
					if buffer[position] != rune('e') {
						goto l802
					}
					position++
					if buffer[position] != rune('n') {
						goto l802
					}
					position++
					goto l795
				l802:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('d') {
						goto l803
					}
					position++
					if buffer[position] != rune('e') {
						goto l803
					}
					position++
					if buffer[position] != rune('l') {
						goto l803
					}
					position++
					if buffer[position] != rune('l') {
						goto l803
					}
					position++
					if buffer[position] != rune('a') {
						goto l803
					}
					position++
					goto l795
				l803:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('d') {
						goto l804
					}
					position++
					if buffer[position] != rune('e') {
						goto l804
					}
					position++
					if buffer[position] != rune('l') {
						goto l804
					}
					position++
					if buffer[position] != rune('a') {
						goto l804
					}
					position++
					goto l795
				l804:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('d') {
						goto l805
					}
					position++
					if buffer[position] != rune('e') {
						goto l805
					}
					position++
					if buffer[position] != rune('l') {
						goto l805
					}
					position++
					if buffer[position] != rune('l') {
						goto l805
					}
					position++
					if buffer[position] != rune('e') {
						goto l805
					}
					position++
					goto l795
				l805:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('d') {
						goto l806
					}
					position++
					if buffer[position] != rune('e') {
						goto l806
					}
					position++
					if buffer[position] != rune('l') {
						goto l806
					}
					position++
					goto l795
				l806:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('d') {
						goto l807
					}
					position++
					if buffer[position] != rune('e') {
						goto l807
					}
					position++
					if buffer[position] != rune(' ') {
						goto l807
					}
					position++
					if buffer[position] != rune('l') {
						goto l807
					}
					position++
					if buffer[position] != rune('o') {
						goto l807
					}
					position++
					if buffer[position] != rune('s') {
						goto l807
					}
					position++
					goto l795
				l807:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('d') {
						goto l808
					}
					position++
					if buffer[position] != rune('e') {
						goto l808
					}
					position++
					goto l795
				l808:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('d') {
						goto l809
					}
					position++
					if buffer[position] != rune('i') {
						goto l809
					}
					position++
					goto l795
				l809:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('d') {
						goto l810
					}
					position++
					if buffer[position] != rune('o') {
						goto l810
					}
					position++
					if buffer[position] != rune('s') {
						goto l810
					}
					position++
					goto l795
				l810:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('d') {
						goto l811
					}
					position++
					if buffer[position] != rune('u') {
						goto l811
					}
					position++
					goto l795
				l811:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('d') {
						goto l812
					}
					position++
					if buffer[position] != rune('o') {
						goto l812
					}
					position++
					goto l795
				l812:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('e') {
						goto l813
					}
					position++
					if buffer[position] != rune('l') {
						goto l813
					}
					position++
					goto l795
				l813:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('l') {
						goto l814
					}
					position++
					if buffer[position] != rune('a') {
						goto l814
					}
					position++
					goto l795
				l814:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('l') {
						goto l815
					}
					position++
					if buffer[position] != rune('e') {
						goto l815
					}
					position++
					goto l795
				l815:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('t') {
						goto l816
					}
					position++
					if buffer[position] != rune('e') {
						goto l816
					}
					position++
					if buffer[position] != rune('n') {
						goto l816
					}
					position++
					goto l795
				l816:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('t') {
						goto l817
					}
					position++
					if buffer[position] != rune('e') {
						goto l817
					}
					position++
					if buffer[position] != rune('r') {
						goto l817
					}
					position++
					goto l795
				l817:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('v') {
						goto l818
					}
					position++
					if buffer[position] != rune('a') {
						goto l818
					}
					position++
					if buffer[position] != rune('n') {
						goto l818
					}
					position++
					goto l795
				l818:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('v') {
						goto l819
					}
					position++
					if buffer[position] != rune('e') {
						goto l819
					}
					position++
					if buffer[position] != rune('r') {
						goto l819
					}
					position++
					goto l795
				l819:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('d') {
						goto l820
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l820
					}
					goto l795
				l820:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('i') {
						goto l821
					}
					position++
					if buffer[position] != rune('n') {
						goto l821
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l821
					}
					if buffer[position] != rune('t') {
						goto l821
					}
					position++
					goto l795
				l821:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('z') {
						goto l822
					}
					position++
					if buffer[position] != rune('u') {
						goto l822
					}
					position++
					if buffer[position] != rune('r') {
						goto l822
					}
					position++
					goto l795
				l822:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('z') {
						goto l823
					}
					position++
					if buffer[position] != rune('u') {
						goto l823
					}
					position++
					goto l795
				l823:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('v') {
						goto l824
					}
					position++
					if buffer[position] != rune('o') {
						goto l824
					}
					position++
					if buffer[position] != rune('n') {
						goto l824
					}
					position++
					{
						position825, tokenIndex825 := position, tokenIndex
						if !_rules[rule_]() {
							goto l825
						}
						{
							position827, tokenIndex827 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l828
							}
							position++
							if buffer[position] != rune('.') {
								goto l828
							}
							position++
							goto l827
						l828:
							position, tokenIndex = position827, tokenIndex827
							if buffer[position] != rune('d') {
								goto l825
							}
							position++
							if buffer[position] != rune('e') {
								goto l825
							}
							position++
							if buffer[position] != rune('m') {
								goto l825
							}
							position++
						}
					l827:
						goto l826
					l825:
						position, tokenIndex = position825, tokenIndex825
					}
				l826:
					goto l795
				l824:
					position, tokenIndex = position795, tokenIndex795
					if buffer[position] != rune('v') {
						goto l793
					}
					position++
					{
						position829, tokenIndex829 := position, tokenIndex
						if !_rules[rule_]() {
							goto l829
						}
						if buffer[position] != rune('d') {
							goto l829
						}
						position++
						goto l830
					l829:
						position, tokenIndex = position829, tokenIndex829
					}
				l830:
				}
			l795:
				{
					position831, tokenIndex831 := position, tokenIndex
					if !_rules[rule_]() {
						goto l793
					}
					position, tokenIndex = position831, tokenIndex831
				}
				add(ruleAuthorPrefix1, position794)
			}
			return true
		l793:
			position, tokenIndex = position793, tokenIndex793
			return false
		},
		/* 111 AuthorUpperChar <- <(UpperASCII / MiscodedChar / ('À' / 'Á' / 'Â' / 'Ã' / 'Ä' / 'Å' / 'Æ' / 'Ç' / 'È' / 'É' / 'Ê' / 'Ë' / 'Ì' / 'Í' / 'Î' / 'Ï' / 'Ð' / 'Ñ' / 'Ò' / 'Ó' / 'Ô' / 'Õ' / 'Ö' / 'Ø' / 'Ù' / 'Ú' / 'Û' / 'Ü' / 'Ý' / 'Ć' / 'Č' / 'Ď' / 'İ' / 'Ķ' / 'Ĺ' / 'ĺ' / 'Ľ' / 'ľ' / 'Ł' / 'ł' / 'Ņ' / 'Ō' / 'Ő' / 'Œ' / 'Ř' / 'Ś' / 'Ŝ' / 'Ş' / 'Š' / 'Ÿ' / 'Ź' / 'Ż' / 'Ž' / 'ƒ' / 'Ǿ' / 'Ș' / 'Ț'))> */
		func() bool {
			position832, tokenIndex832 := position, tokenIndex
			{
				position833 := position
				{
					position834, tokenIndex834 := position, tokenIndex
					if !_rules[ruleUpperASCII]() {
						goto l835
					}
					goto l834
				l835:
					position, tokenIndex = position834, tokenIndex834
					if !_rules[ruleMiscodedChar]() {
						goto l836
					}
					goto l834
				l836:
					position, tokenIndex = position834, tokenIndex834
					{
						position837, tokenIndex837 := position, tokenIndex
						if buffer[position] != rune('À') {
							goto l838
						}
						position++
						goto l837
					l838:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Á') {
							goto l839
						}
						position++
						goto l837
					l839:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Â') {
							goto l840
						}
						position++
						goto l837
					l840:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ã') {
							goto l841
						}
						position++
						goto l837
					l841:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ä') {
							goto l842
						}
						position++
						goto l837
					l842:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Å') {
							goto l843
						}
						position++
						goto l837
					l843:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Æ') {
							goto l844
						}
						position++
						goto l837
					l844:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ç') {
							goto l845
						}
						position++
						goto l837
					l845:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('È') {
							goto l846
						}
						position++
						goto l837
					l846:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('É') {
							goto l847
						}
						position++
						goto l837
					l847:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ê') {
							goto l848
						}
						position++
						goto l837
					l848:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ë') {
							goto l849
						}
						position++
						goto l837
					l849:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ì') {
							goto l850
						}
						position++
						goto l837
					l850:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Í') {
							goto l851
						}
						position++
						goto l837
					l851:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Î') {
							goto l852
						}
						position++
						goto l837
					l852:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ï') {
							goto l853
						}
						position++
						goto l837
					l853:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ð') {
							goto l854
						}
						position++
						goto l837
					l854:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ñ') {
							goto l855
						}
						position++
						goto l837
					l855:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ò') {
							goto l856
						}
						position++
						goto l837
					l856:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ó') {
							goto l857
						}
						position++
						goto l837
					l857:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ô') {
							goto l858
						}
						position++
						goto l837
					l858:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Õ') {
							goto l859
						}
						position++
						goto l837
					l859:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ö') {
							goto l860
						}
						position++
						goto l837
					l860:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ø') {
							goto l861
						}
						position++
						goto l837
					l861:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ù') {
							goto l862
						}
						position++
						goto l837
					l862:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ú') {
							goto l863
						}
						position++
						goto l837
					l863:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Û') {
							goto l864
						}
						position++
						goto l837
					l864:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ü') {
							goto l865
						}
						position++
						goto l837
					l865:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ý') {
							goto l866
						}
						position++
						goto l837
					l866:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ć') {
							goto l867
						}
						position++
						goto l837
					l867:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Č') {
							goto l868
						}
						position++
						goto l837
					l868:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ď') {
							goto l869
						}
						position++
						goto l837
					l869:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('İ') {
							goto l870
						}
						position++
						goto l837
					l870:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ķ') {
							goto l871
						}
						position++
						goto l837
					l871:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ĺ') {
							goto l872
						}
						position++
						goto l837
					l872:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('ĺ') {
							goto l873
						}
						position++
						goto l837
					l873:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ľ') {
							goto l874
						}
						position++
						goto l837
					l874:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('ľ') {
							goto l875
						}
						position++
						goto l837
					l875:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ł') {
							goto l876
						}
						position++
						goto l837
					l876:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('ł') {
							goto l877
						}
						position++
						goto l837
					l877:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ņ') {
							goto l878
						}
						position++
						goto l837
					l878:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ō') {
							goto l879
						}
						position++
						goto l837
					l879:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ő') {
							goto l880
						}
						position++
						goto l837
					l880:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Œ') {
							goto l881
						}
						position++
						goto l837
					l881:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ř') {
							goto l882
						}
						position++
						goto l837
					l882:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ś') {
							goto l883
						}
						position++
						goto l837
					l883:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ŝ') {
							goto l884
						}
						position++
						goto l837
					l884:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ş') {
							goto l885
						}
						position++
						goto l837
					l885:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Š') {
							goto l886
						}
						position++
						goto l837
					l886:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ÿ') {
							goto l887
						}
						position++
						goto l837
					l887:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ź') {
							goto l888
						}
						position++
						goto l837
					l888:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ż') {
							goto l889
						}
						position++
						goto l837
					l889:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ž') {
							goto l890
						}
						position++
						goto l837
					l890:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('ƒ') {
							goto l891
						}
						position++
						goto l837
					l891:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ǿ') {
							goto l892
						}
						position++
						goto l837
					l892:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ș') {
							goto l893
						}
						position++
						goto l837
					l893:
						position, tokenIndex = position837, tokenIndex837
						if buffer[position] != rune('Ț') {
							goto l832
						}
						position++
					}
				l837:
				}
			l834:
				add(ruleAuthorUpperChar, position833)
			}
			return true
		l832:
			position, tokenIndex = position832, tokenIndex832
			return false
		},
		/* 112 AuthorLowerChar <- <(LowerASCII / MiscodedChar / Apostrophe / ('à' / 'á' / 'â' / 'ã' / 'ä' / 'å' / 'æ' / 'ç' / 'è' / 'é' / 'ê' / 'ë' / 'ì' / 'í' / 'î' / 'ï' / 'ð' / 'ñ' / 'ò' / 'ó' / 'ó' / 'ô' / 'õ' / 'ö' / 'ø' / 'ù' / 'ú' / 'û' / 'ü' / 'ý' / 'ÿ' / 'ā' / 'ă' / 'ą' / 'ć' / 'ĉ' / 'č' / 'ď' / 'đ' / 'ē' / 'ĕ' / 'ė' / 'ę' / 'ě' / 'ğ' / 'ī' / 'ĭ' / 'İ' / 'ı' / 'ĺ' / 'ľ' / 'ł' / 'ń' / 'ņ' / 'ň' / 'ŏ' / 'ő' / 'œ' / 'ŕ' / 'ř' / 'ś' / 'ş' / 'š' / 'ţ' / 'ť' / 'ũ' / 'ū' / 'ŭ' / 'ů' / 'ű' / 'ź' / 'ż' / 'ž' / 'ſ' / 'ǎ' / 'ǔ' / 'ǧ' / 'ș' / 'ț' / 'ȳ' / 'ß'))> */
		func() bool {
			position894, tokenIndex894 := position, tokenIndex
			{
				position895 := position
				{
					position896, tokenIndex896 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l897
					}
					goto l896
				l897:
					position, tokenIndex = position896, tokenIndex896
					if !_rules[ruleMiscodedChar]() {
						goto l898
					}
					goto l896
				l898:
					position, tokenIndex = position896, tokenIndex896
					if !_rules[ruleApostrophe]() {
						goto l899
					}
					goto l896
				l899:
					position, tokenIndex = position896, tokenIndex896
					{
						position900, tokenIndex900 := position, tokenIndex
						if buffer[position] != rune('à') {
							goto l901
						}
						position++
						goto l900
					l901:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('á') {
							goto l902
						}
						position++
						goto l900
					l902:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('â') {
							goto l903
						}
						position++
						goto l900
					l903:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ã') {
							goto l904
						}
						position++
						goto l900
					l904:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ä') {
							goto l905
						}
						position++
						goto l900
					l905:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('å') {
							goto l906
						}
						position++
						goto l900
					l906:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('æ') {
							goto l907
						}
						position++
						goto l900
					l907:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ç') {
							goto l908
						}
						position++
						goto l900
					l908:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('è') {
							goto l909
						}
						position++
						goto l900
					l909:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('é') {
							goto l910
						}
						position++
						goto l900
					l910:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ê') {
							goto l911
						}
						position++
						goto l900
					l911:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ë') {
							goto l912
						}
						position++
						goto l900
					l912:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ì') {
							goto l913
						}
						position++
						goto l900
					l913:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('í') {
							goto l914
						}
						position++
						goto l900
					l914:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('î') {
							goto l915
						}
						position++
						goto l900
					l915:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ï') {
							goto l916
						}
						position++
						goto l900
					l916:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ð') {
							goto l917
						}
						position++
						goto l900
					l917:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ñ') {
							goto l918
						}
						position++
						goto l900
					l918:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ò') {
							goto l919
						}
						position++
						goto l900
					l919:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ó') {
							goto l920
						}
						position++
						goto l900
					l920:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ó') {
							goto l921
						}
						position++
						goto l900
					l921:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ô') {
							goto l922
						}
						position++
						goto l900
					l922:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('õ') {
							goto l923
						}
						position++
						goto l900
					l923:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ö') {
							goto l924
						}
						position++
						goto l900
					l924:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ø') {
							goto l925
						}
						position++
						goto l900
					l925:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ù') {
							goto l926
						}
						position++
						goto l900
					l926:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ú') {
							goto l927
						}
						position++
						goto l900
					l927:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('û') {
							goto l928
						}
						position++
						goto l900
					l928:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ü') {
							goto l929
						}
						position++
						goto l900
					l929:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ý') {
							goto l930
						}
						position++
						goto l900
					l930:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ÿ') {
							goto l931
						}
						position++
						goto l900
					l931:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ā') {
							goto l932
						}
						position++
						goto l900
					l932:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ă') {
							goto l933
						}
						position++
						goto l900
					l933:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ą') {
							goto l934
						}
						position++
						goto l900
					l934:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ć') {
							goto l935
						}
						position++
						goto l900
					l935:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ĉ') {
							goto l936
						}
						position++
						goto l900
					l936:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('č') {
							goto l937
						}
						position++
						goto l900
					l937:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ď') {
							goto l938
						}
						position++
						goto l900
					l938:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('đ') {
							goto l939
						}
						position++
						goto l900
					l939:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ē') {
							goto l940
						}
						position++
						goto l900
					l940:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ĕ') {
							goto l941
						}
						position++
						goto l900
					l941:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ė') {
							goto l942
						}
						position++
						goto l900
					l942:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ę') {
							goto l943
						}
						position++
						goto l900
					l943:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ě') {
							goto l944
						}
						position++
						goto l900
					l944:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ğ') {
							goto l945
						}
						position++
						goto l900
					l945:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ī') {
							goto l946
						}
						position++
						goto l900
					l946:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ĭ') {
							goto l947
						}
						position++
						goto l900
					l947:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('İ') {
							goto l948
						}
						position++
						goto l900
					l948:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ı') {
							goto l949
						}
						position++
						goto l900
					l949:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ĺ') {
							goto l950
						}
						position++
						goto l900
					l950:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ľ') {
							goto l951
						}
						position++
						goto l900
					l951:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ł') {
							goto l952
						}
						position++
						goto l900
					l952:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ń') {
							goto l953
						}
						position++
						goto l900
					l953:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ņ') {
							goto l954
						}
						position++
						goto l900
					l954:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ň') {
							goto l955
						}
						position++
						goto l900
					l955:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ŏ') {
							goto l956
						}
						position++
						goto l900
					l956:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ő') {
							goto l957
						}
						position++
						goto l900
					l957:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('œ') {
							goto l958
						}
						position++
						goto l900
					l958:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ŕ') {
							goto l959
						}
						position++
						goto l900
					l959:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ř') {
							goto l960
						}
						position++
						goto l900
					l960:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ś') {
							goto l961
						}
						position++
						goto l900
					l961:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ş') {
							goto l962
						}
						position++
						goto l900
					l962:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('š') {
							goto l963
						}
						position++
						goto l900
					l963:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ţ') {
							goto l964
						}
						position++
						goto l900
					l964:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ť') {
							goto l965
						}
						position++
						goto l900
					l965:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ũ') {
							goto l966
						}
						position++
						goto l900
					l966:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ū') {
							goto l967
						}
						position++
						goto l900
					l967:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ŭ') {
							goto l968
						}
						position++
						goto l900
					l968:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ů') {
							goto l969
						}
						position++
						goto l900
					l969:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ű') {
							goto l970
						}
						position++
						goto l900
					l970:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ź') {
							goto l971
						}
						position++
						goto l900
					l971:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ż') {
							goto l972
						}
						position++
						goto l900
					l972:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ž') {
							goto l973
						}
						position++
						goto l900
					l973:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ſ') {
							goto l974
						}
						position++
						goto l900
					l974:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ǎ') {
							goto l975
						}
						position++
						goto l900
					l975:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ǔ') {
							goto l976
						}
						position++
						goto l900
					l976:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ǧ') {
							goto l977
						}
						position++
						goto l900
					l977:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ș') {
							goto l978
						}
						position++
						goto l900
					l978:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ț') {
							goto l979
						}
						position++
						goto l900
					l979:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ȳ') {
							goto l980
						}
						position++
						goto l900
					l980:
						position, tokenIndex = position900, tokenIndex900
						if buffer[position] != rune('ß') {
							goto l894
						}
						position++
					}
				l900:
				}
			l896:
				add(ruleAuthorLowerChar, position895)
			}
			return true
		l894:
			position, tokenIndex = position894, tokenIndex894
			return false
		},
		/* 113 Year <- <(YearRange / YearApprox / YearWithParens / YearWithPage / YearWithDot / YearWithChar / YearNum)> */
		func() bool {
			position981, tokenIndex981 := position, tokenIndex
			{
				position982 := position
				{
					position983, tokenIndex983 := position, tokenIndex
					if !_rules[ruleYearRange]() {
						goto l984
					}
					goto l983
				l984:
					position, tokenIndex = position983, tokenIndex983
					if !_rules[ruleYearApprox]() {
						goto l985
					}
					goto l983
				l985:
					position, tokenIndex = position983, tokenIndex983
					if !_rules[ruleYearWithParens]() {
						goto l986
					}
					goto l983
				l986:
					position, tokenIndex = position983, tokenIndex983
					if !_rules[ruleYearWithPage]() {
						goto l987
					}
					goto l983
				l987:
					position, tokenIndex = position983, tokenIndex983
					if !_rules[ruleYearWithDot]() {
						goto l988
					}
					goto l983
				l988:
					position, tokenIndex = position983, tokenIndex983
					if !_rules[ruleYearWithChar]() {
						goto l989
					}
					goto l983
				l989:
					position, tokenIndex = position983, tokenIndex983
					if !_rules[ruleYearNum]() {
						goto l981
					}
				}
			l983:
				add(ruleYear, position982)
			}
			return true
		l981:
			position, tokenIndex = position981, tokenIndex981
			return false
		},
		/* 114 YearRange <- <(YearNum (Dash / Slash) (Nums+ ('a' / 'b' / 'c' / 'd' / 'e' / 'f' / 'g' / 'h' / 'i' / 'j' / 'k' / 'l' / 'm' / 'n' / 'o' / 'p' / 'q' / 'r' / 's' / 't' / 'u' / 'v' / 'w' / 'x' / 'y' / 'z' / '?')*))> */
		func() bool {
			position990, tokenIndex990 := position, tokenIndex
			{
				position991 := position
				if !_rules[ruleYearNum]() {
					goto l990
				}
				{
					position992, tokenIndex992 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l993
					}
					goto l992
				l993:
					position, tokenIndex = position992, tokenIndex992
					if !_rules[ruleSlash]() {
						goto l990
					}
				}
			l992:
				if !_rules[ruleNums]() {
					goto l990
				}
			l994:
				{
					position995, tokenIndex995 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l995
					}
					goto l994
				l995:
					position, tokenIndex = position995, tokenIndex995
				}
			l996:
				{
					position997, tokenIndex997 := position, tokenIndex
					{
						position998, tokenIndex998 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l999
						}
						position++
						goto l998
					l999:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('b') {
							goto l1000
						}
						position++
						goto l998
					l1000:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('c') {
							goto l1001
						}
						position++
						goto l998
					l1001:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('d') {
							goto l1002
						}
						position++
						goto l998
					l1002:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('e') {
							goto l1003
						}
						position++
						goto l998
					l1003:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('f') {
							goto l1004
						}
						position++
						goto l998
					l1004:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('g') {
							goto l1005
						}
						position++
						goto l998
					l1005:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('h') {
							goto l1006
						}
						position++
						goto l998
					l1006:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('i') {
							goto l1007
						}
						position++
						goto l998
					l1007:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('j') {
							goto l1008
						}
						position++
						goto l998
					l1008:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('k') {
							goto l1009
						}
						position++
						goto l998
					l1009:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('l') {
							goto l1010
						}
						position++
						goto l998
					l1010:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('m') {
							goto l1011
						}
						position++
						goto l998
					l1011:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('n') {
							goto l1012
						}
						position++
						goto l998
					l1012:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('o') {
							goto l1013
						}
						position++
						goto l998
					l1013:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('p') {
							goto l1014
						}
						position++
						goto l998
					l1014:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('q') {
							goto l1015
						}
						position++
						goto l998
					l1015:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('r') {
							goto l1016
						}
						position++
						goto l998
					l1016:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('s') {
							goto l1017
						}
						position++
						goto l998
					l1017:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('t') {
							goto l1018
						}
						position++
						goto l998
					l1018:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('u') {
							goto l1019
						}
						position++
						goto l998
					l1019:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('v') {
							goto l1020
						}
						position++
						goto l998
					l1020:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('w') {
							goto l1021
						}
						position++
						goto l998
					l1021:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('x') {
							goto l1022
						}
						position++
						goto l998
					l1022:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('y') {
							goto l1023
						}
						position++
						goto l998
					l1023:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('z') {
							goto l1024
						}
						position++
						goto l998
					l1024:
						position, tokenIndex = position998, tokenIndex998
						if buffer[position] != rune('?') {
							goto l997
						}
						position++
					}
				l998:
					goto l996
				l997:
					position, tokenIndex = position997, tokenIndex997
				}
				add(ruleYearRange, position991)
			}
			return true
		l990:
			position, tokenIndex = position990, tokenIndex990
			return false
		},
		/* 115 YearWithDot <- <(YearNum '.')> */
		func() bool {
			position1025, tokenIndex1025 := position, tokenIndex
			{
				position1026 := position
				if !_rules[ruleYearNum]() {
					goto l1025
				}
				if buffer[position] != rune('.') {
					goto l1025
				}
				position++
				add(ruleYearWithDot, position1026)
			}
			return true
		l1025:
			position, tokenIndex = position1025, tokenIndex1025
			return false
		},
		/* 116 YearApprox <- <('[' _? YearNum _? ']')> */
		func() bool {
			position1027, tokenIndex1027 := position, tokenIndex
			{
				position1028 := position
				if buffer[position] != rune('[') {
					goto l1027
				}
				position++
				{
					position1029, tokenIndex1029 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1029
					}
					goto l1030
				l1029:
					position, tokenIndex = position1029, tokenIndex1029
				}
			l1030:
				if !_rules[ruleYearNum]() {
					goto l1027
				}
				{
					position1031, tokenIndex1031 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1031
					}
					goto l1032
				l1031:
					position, tokenIndex = position1031, tokenIndex1031
				}
			l1032:
				if buffer[position] != rune(']') {
					goto l1027
				}
				position++
				add(ruleYearApprox, position1028)
			}
			return true
		l1027:
			position, tokenIndex = position1027, tokenIndex1027
			return false
		},
		/* 117 YearWithPage <- <((YearWithChar / YearNum) _? ':' _? Nums+)> */
		func() bool {
			position1033, tokenIndex1033 := position, tokenIndex
			{
				position1034 := position
				{
					position1035, tokenIndex1035 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l1036
					}
					goto l1035
				l1036:
					position, tokenIndex = position1035, tokenIndex1035
					if !_rules[ruleYearNum]() {
						goto l1033
					}
				}
			l1035:
				{
					position1037, tokenIndex1037 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1037
					}
					goto l1038
				l1037:
					position, tokenIndex = position1037, tokenIndex1037
				}
			l1038:
				if buffer[position] != rune(':') {
					goto l1033
				}
				position++
				{
					position1039, tokenIndex1039 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1039
					}
					goto l1040
				l1039:
					position, tokenIndex = position1039, tokenIndex1039
				}
			l1040:
				if !_rules[ruleNums]() {
					goto l1033
				}
			l1041:
				{
					position1042, tokenIndex1042 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l1042
					}
					goto l1041
				l1042:
					position, tokenIndex = position1042, tokenIndex1042
				}
				add(ruleYearWithPage, position1034)
			}
			return true
		l1033:
			position, tokenIndex = position1033, tokenIndex1033
			return false
		},
		/* 118 YearWithParens <- <('(' (YearWithChar / YearNum) ')')> */
		func() bool {
			position1043, tokenIndex1043 := position, tokenIndex
			{
				position1044 := position
				if buffer[position] != rune('(') {
					goto l1043
				}
				position++
				{
					position1045, tokenIndex1045 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l1046
					}
					goto l1045
				l1046:
					position, tokenIndex = position1045, tokenIndex1045
					if !_rules[ruleYearNum]() {
						goto l1043
					}
				}
			l1045:
				if buffer[position] != rune(')') {
					goto l1043
				}
				position++
				add(ruleYearWithParens, position1044)
			}
			return true
		l1043:
			position, tokenIndex = position1043, tokenIndex1043
			return false
		},
		/* 119 YearWithChar <- <(YearNum LowerASCII)> */
		func() bool {
			position1047, tokenIndex1047 := position, tokenIndex
			{
				position1048 := position
				if !_rules[ruleYearNum]() {
					goto l1047
				}
				if !_rules[ruleLowerASCII]() {
					goto l1047
				}
				add(ruleYearWithChar, position1048)
			}
			return true
		l1047:
			position, tokenIndex = position1047, tokenIndex1047
			return false
		},
		/* 120 YearNum <- <(('1' / '2') ('0' / '7' / '8' / '9') Nums (Nums / '?') '?'*)> */
		func() bool {
			position1049, tokenIndex1049 := position, tokenIndex
			{
				position1050 := position
				{
					position1051, tokenIndex1051 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l1052
					}
					position++
					goto l1051
				l1052:
					position, tokenIndex = position1051, tokenIndex1051
					if buffer[position] != rune('2') {
						goto l1049
					}
					position++
				}
			l1051:
				{
					position1053, tokenIndex1053 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l1054
					}
					position++
					goto l1053
				l1054:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('7') {
						goto l1055
					}
					position++
					goto l1053
				l1055:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('8') {
						goto l1056
					}
					position++
					goto l1053
				l1056:
					position, tokenIndex = position1053, tokenIndex1053
					if buffer[position] != rune('9') {
						goto l1049
					}
					position++
				}
			l1053:
				if !_rules[ruleNums]() {
					goto l1049
				}
				{
					position1057, tokenIndex1057 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l1058
					}
					goto l1057
				l1058:
					position, tokenIndex = position1057, tokenIndex1057
					if buffer[position] != rune('?') {
						goto l1049
					}
					position++
				}
			l1057:
			l1059:
				{
					position1060, tokenIndex1060 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l1060
					}
					position++
					goto l1059
				l1060:
					position, tokenIndex = position1060, tokenIndex1060
				}
				add(ruleYearNum, position1050)
			}
			return true
		l1049:
			position, tokenIndex = position1049, tokenIndex1049
			return false
		},
		/* 121 NameUpperChar <- <(UpperChar / UpperCharExtended)> */
		func() bool {
			position1061, tokenIndex1061 := position, tokenIndex
			{
				position1062 := position
				{
					position1063, tokenIndex1063 := position, tokenIndex
					if !_rules[ruleUpperChar]() {
						goto l1064
					}
					goto l1063
				l1064:
					position, tokenIndex = position1063, tokenIndex1063
					if !_rules[ruleUpperCharExtended]() {
						goto l1061
					}
				}
			l1063:
				add(ruleNameUpperChar, position1062)
			}
			return true
		l1061:
			position, tokenIndex = position1061, tokenIndex1061
			return false
		},
		/* 122 UpperCharExtended <- <('Æ' / 'Œ' / 'Ö')> */
		func() bool {
			position1065, tokenIndex1065 := position, tokenIndex
			{
				position1066 := position
				{
					position1067, tokenIndex1067 := position, tokenIndex
					if buffer[position] != rune('Æ') {
						goto l1068
					}
					position++
					goto l1067
				l1068:
					position, tokenIndex = position1067, tokenIndex1067
					if buffer[position] != rune('Œ') {
						goto l1069
					}
					position++
					goto l1067
				l1069:
					position, tokenIndex = position1067, tokenIndex1067
					if buffer[position] != rune('Ö') {
						goto l1065
					}
					position++
				}
			l1067:
				add(ruleUpperCharExtended, position1066)
			}
			return true
		l1065:
			position, tokenIndex = position1065, tokenIndex1065
			return false
		},
		/* 123 UpperChar <- <UpperASCII> */
		func() bool {
			position1070, tokenIndex1070 := position, tokenIndex
			{
				position1071 := position
				if !_rules[ruleUpperASCII]() {
					goto l1070
				}
				add(ruleUpperChar, position1071)
			}
			return true
		l1070:
			position, tokenIndex = position1070, tokenIndex1070
			return false
		},
		/* 124 NameLowerChar <- <(LowerChar / LowerCharExtended / MiscodedChar)> */
		func() bool {
			position1072, tokenIndex1072 := position, tokenIndex
			{
				position1073 := position
				{
					position1074, tokenIndex1074 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l1075
					}
					goto l1074
				l1075:
					position, tokenIndex = position1074, tokenIndex1074
					if !_rules[ruleLowerCharExtended]() {
						goto l1076
					}
					goto l1074
				l1076:
					position, tokenIndex = position1074, tokenIndex1074
					if !_rules[ruleMiscodedChar]() {
						goto l1072
					}
				}
			l1074:
				add(ruleNameLowerChar, position1073)
			}
			return true
		l1072:
			position, tokenIndex = position1072, tokenIndex1072
			return false
		},
		/* 125 MiscodedChar <- <'�'> */
		func() bool {
			position1077, tokenIndex1077 := position, tokenIndex
			{
				position1078 := position
				if buffer[position] != rune('�') {
					goto l1077
				}
				position++
				add(ruleMiscodedChar, position1078)
			}
			return true
		l1077:
			position, tokenIndex = position1077, tokenIndex1077
			return false
		},
		/* 126 LowerCharExtended <- <('æ' / 'œ' / 'à' / 'â' / 'å' / 'ã' / 'ä' / 'á' / 'ç' / 'č' / 'é' / 'è' / 'ë' / 'í' / 'ì' / 'ï' / 'ň' / 'ñ' / 'ñ' / 'ó' / 'ò' / 'ô' / 'ø' / 'õ' / 'ö' / 'ú' / 'ù' / 'ü' / 'ŕ' / 'ř' / 'ŗ' / 'ſ' / 'š' / 'š' / 'ş' / 'ß' / 'ž')> */
		func() bool {
			position1079, tokenIndex1079 := position, tokenIndex
			{
				position1080 := position
				{
					position1081, tokenIndex1081 := position, tokenIndex
					if buffer[position] != rune('æ') {
						goto l1082
					}
					position++
					goto l1081
				l1082:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('œ') {
						goto l1083
					}
					position++
					goto l1081
				l1083:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('à') {
						goto l1084
					}
					position++
					goto l1081
				l1084:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('â') {
						goto l1085
					}
					position++
					goto l1081
				l1085:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('å') {
						goto l1086
					}
					position++
					goto l1081
				l1086:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ã') {
						goto l1087
					}
					position++
					goto l1081
				l1087:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ä') {
						goto l1088
					}
					position++
					goto l1081
				l1088:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('á') {
						goto l1089
					}
					position++
					goto l1081
				l1089:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ç') {
						goto l1090
					}
					position++
					goto l1081
				l1090:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('č') {
						goto l1091
					}
					position++
					goto l1081
				l1091:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('é') {
						goto l1092
					}
					position++
					goto l1081
				l1092:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('è') {
						goto l1093
					}
					position++
					goto l1081
				l1093:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ë') {
						goto l1094
					}
					position++
					goto l1081
				l1094:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('í') {
						goto l1095
					}
					position++
					goto l1081
				l1095:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ì') {
						goto l1096
					}
					position++
					goto l1081
				l1096:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ï') {
						goto l1097
					}
					position++
					goto l1081
				l1097:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ň') {
						goto l1098
					}
					position++
					goto l1081
				l1098:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ñ') {
						goto l1099
					}
					position++
					goto l1081
				l1099:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ñ') {
						goto l1100
					}
					position++
					goto l1081
				l1100:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ó') {
						goto l1101
					}
					position++
					goto l1081
				l1101:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ò') {
						goto l1102
					}
					position++
					goto l1081
				l1102:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ô') {
						goto l1103
					}
					position++
					goto l1081
				l1103:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ø') {
						goto l1104
					}
					position++
					goto l1081
				l1104:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('õ') {
						goto l1105
					}
					position++
					goto l1081
				l1105:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ö') {
						goto l1106
					}
					position++
					goto l1081
				l1106:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ú') {
						goto l1107
					}
					position++
					goto l1081
				l1107:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ù') {
						goto l1108
					}
					position++
					goto l1081
				l1108:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ü') {
						goto l1109
					}
					position++
					goto l1081
				l1109:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ŕ') {
						goto l1110
					}
					position++
					goto l1081
				l1110:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ř') {
						goto l1111
					}
					position++
					goto l1081
				l1111:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ŗ') {
						goto l1112
					}
					position++
					goto l1081
				l1112:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ſ') {
						goto l1113
					}
					position++
					goto l1081
				l1113:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('š') {
						goto l1114
					}
					position++
					goto l1081
				l1114:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('š') {
						goto l1115
					}
					position++
					goto l1081
				l1115:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ş') {
						goto l1116
					}
					position++
					goto l1081
				l1116:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ß') {
						goto l1117
					}
					position++
					goto l1081
				l1117:
					position, tokenIndex = position1081, tokenIndex1081
					if buffer[position] != rune('ž') {
						goto l1079
					}
					position++
				}
			l1081:
				add(ruleLowerCharExtended, position1080)
			}
			return true
		l1079:
			position, tokenIndex = position1079, tokenIndex1079
			return false
		},
		/* 127 LowerChar <- <LowerASCII> */
		func() bool {
			position1118, tokenIndex1118 := position, tokenIndex
			{
				position1119 := position
				if !_rules[ruleLowerASCII]() {
					goto l1118
				}
				add(ruleLowerChar, position1119)
			}
			return true
		l1118:
			position, tokenIndex = position1118, tokenIndex1118
			return false
		},
		/* 128 SpaceCharEOI <- <(_ / !.)> */
		func() bool {
			position1120, tokenIndex1120 := position, tokenIndex
			{
				position1121 := position
				{
					position1122, tokenIndex1122 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1123
					}
					goto l1122
				l1123:
					position, tokenIndex = position1122, tokenIndex1122
					{
						position1124, tokenIndex1124 := position, tokenIndex
						if !matchDot() {
							goto l1124
						}
						goto l1120
					l1124:
						position, tokenIndex = position1124, tokenIndex1124
					}
				}
			l1122:
				add(ruleSpaceCharEOI, position1121)
			}
			return true
		l1120:
			position, tokenIndex = position1120, tokenIndex1120
			return false
		},
		/* 129 Nums <- <[0-9]> */
		func() bool {
			position1125, tokenIndex1125 := position, tokenIndex
			{
				position1126 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l1125
				}
				position++
				add(ruleNums, position1126)
			}
			return true
		l1125:
			position, tokenIndex = position1125, tokenIndex1125
			return false
		},
		/* 130 LowerGreek <- <[α-ω]> */
		func() bool {
			position1127, tokenIndex1127 := position, tokenIndex
			{
				position1128 := position
				if c := buffer[position]; c < rune('α') || c > rune('ω') {
					goto l1127
				}
				position++
				add(ruleLowerGreek, position1128)
			}
			return true
		l1127:
			position, tokenIndex = position1127, tokenIndex1127
			return false
		},
		/* 131 LowerASCII <- <[a-z]> */
		func() bool {
			position1129, tokenIndex1129 := position, tokenIndex
			{
				position1130 := position
				if c := buffer[position]; c < rune('a') || c > rune('z') {
					goto l1129
				}
				position++
				add(ruleLowerASCII, position1130)
			}
			return true
		l1129:
			position, tokenIndex = position1129, tokenIndex1129
			return false
		},
		/* 132 UpperASCII <- <[A-Z]> */
		func() bool {
			position1131, tokenIndex1131 := position, tokenIndex
			{
				position1132 := position
				if c := buffer[position]; c < rune('A') || c > rune('Z') {
					goto l1131
				}
				position++
				add(ruleUpperASCII, position1132)
			}
			return true
		l1131:
			position, tokenIndex = position1131, tokenIndex1131
			return false
		},
		/* 133 Apostrophe <- <(ApostrOther / ApostrASCII)> */
		func() bool {
			position1133, tokenIndex1133 := position, tokenIndex
			{
				position1134 := position
				{
					position1135, tokenIndex1135 := position, tokenIndex
					if !_rules[ruleApostrOther]() {
						goto l1136
					}
					goto l1135
				l1136:
					position, tokenIndex = position1135, tokenIndex1135
					if !_rules[ruleApostrASCII]() {
						goto l1133
					}
				}
			l1135:
				add(ruleApostrophe, position1134)
			}
			return true
		l1133:
			position, tokenIndex = position1133, tokenIndex1133
			return false
		},
		/* 134 ApostrASCII <- <'\''> */
		func() bool {
			position1137, tokenIndex1137 := position, tokenIndex
			{
				position1138 := position
				if buffer[position] != rune('\'') {
					goto l1137
				}
				position++
				add(ruleApostrASCII, position1138)
			}
			return true
		l1137:
			position, tokenIndex = position1137, tokenIndex1137
			return false
		},
		/* 135 ApostrOther <- <('‘' / '’' / '`' / '´')> */
		func() bool {
			position1139, tokenIndex1139 := position, tokenIndex
			{
				position1140 := position
				{
					position1141, tokenIndex1141 := position, tokenIndex
					if buffer[position] != rune('‘') {
						goto l1142
					}
					position++
					goto l1141
				l1142:
					position, tokenIndex = position1141, tokenIndex1141
					if buffer[position] != rune('’') {
						goto l1143
					}
					position++
					goto l1141
				l1143:
					position, tokenIndex = position1141, tokenIndex1141
					if buffer[position] != rune('`') {
						goto l1144
					}
					position++
					goto l1141
				l1144:
					position, tokenIndex = position1141, tokenIndex1141
					if buffer[position] != rune('´') {
						goto l1139
					}
					position++
				}
			l1141:
				add(ruleApostrOther, position1140)
			}
			return true
		l1139:
			position, tokenIndex = position1139, tokenIndex1139
			return false
		},
		/* 136 Dash <- <'-'> */
		func() bool {
			position1145, tokenIndex1145 := position, tokenIndex
			{
				position1146 := position
				if buffer[position] != rune('-') {
					goto l1145
				}
				position++
				add(ruleDash, position1146)
			}
			return true
		l1145:
			position, tokenIndex = position1145, tokenIndex1145
			return false
		},
		/* 137 Slash <- <'/'> */
		func() bool {
			position1147, tokenIndex1147 := position, tokenIndex
			{
				position1148 := position
				if buffer[position] != rune('/') {
					goto l1147
				}
				position++
				add(ruleSlash, position1148)
			}
			return true
		l1147:
			position, tokenIndex = position1147, tokenIndex1147
			return false
		},
		/* 138 _ <- <(MultipleSpace / SingleSpace)> */
		func() bool {
			position1149, tokenIndex1149 := position, tokenIndex
			{
				position1150 := position
				{
					position1151, tokenIndex1151 := position, tokenIndex
					if !_rules[ruleMultipleSpace]() {
						goto l1152
					}
					goto l1151
				l1152:
					position, tokenIndex = position1151, tokenIndex1151
					if !_rules[ruleSingleSpace]() {
						goto l1149
					}
				}
			l1151:
				add(rule_, position1150)
			}
			return true
		l1149:
			position, tokenIndex = position1149, tokenIndex1149
			return false
		},
		/* 139 MultipleSpace <- <(SingleSpace SingleSpace+)> */
		func() bool {
			position1153, tokenIndex1153 := position, tokenIndex
			{
				position1154 := position
				if !_rules[ruleSingleSpace]() {
					goto l1153
				}
				if !_rules[ruleSingleSpace]() {
					goto l1153
				}
			l1155:
				{
					position1156, tokenIndex1156 := position, tokenIndex
					if !_rules[ruleSingleSpace]() {
						goto l1156
					}
					goto l1155
				l1156:
					position, tokenIndex = position1156, tokenIndex1156
				}
				add(ruleMultipleSpace, position1154)
			}
			return true
		l1153:
			position, tokenIndex = position1153, tokenIndex1153
			return false
		},
		/* 140 SingleSpace <- <(' ' / OtherSpace)> */
		func() bool {
			position1157, tokenIndex1157 := position, tokenIndex
			{
				position1158 := position
				{
					position1159, tokenIndex1159 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l1160
					}
					position++
					goto l1159
				l1160:
					position, tokenIndex = position1159, tokenIndex1159
					if !_rules[ruleOtherSpace]() {
						goto l1157
					}
				}
			l1159:
				add(ruleSingleSpace, position1158)
			}
			return true
		l1157:
			position, tokenIndex = position1157, tokenIndex1157
			return false
		},
		/* 141 OtherSpace <- <('\u3000' / '\u00a0' / '\t' / '\r' / '\n' / '\f' / '\v')> */
		func() bool {
			position1161, tokenIndex1161 := position, tokenIndex
			{
				position1162 := position
				{
					position1163, tokenIndex1163 := position, tokenIndex
					if buffer[position] != rune('\u3000') {
						goto l1164
					}
					position++
					goto l1163
				l1164:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('\u00a0') {
						goto l1165
					}
					position++
					goto l1163
				l1165:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('\t') {
						goto l1166
					}
					position++
					goto l1163
				l1166:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('\r') {
						goto l1167
					}
					position++
					goto l1163
				l1167:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('\n') {
						goto l1168
					}
					position++
					goto l1163
				l1168:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('\f') {
						goto l1169
					}
					position++
					goto l1163
				l1169:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('\v') {
						goto l1161
					}
					position++
				}
			l1163:
				add(ruleOtherSpace, position1162)
			}
			return true
		l1161:
			position, tokenIndex = position1161, tokenIndex1161
			return false
		},
		/* 142 END <- <!.> */
		func() bool {
			position1170, tokenIndex1170 := position, tokenIndex
			{
				position1171 := position
				{
					position1172, tokenIndex1172 := position, tokenIndex
					if !matchDot() {
						goto l1172
					}
					goto l1170
				l1172:
					position, tokenIndex = position1172, tokenIndex1172
				}
				add(ruleEND, position1171)
			}
			return true
		l1170:
			position, tokenIndex = position1170, tokenIndex1170
			return false
		},
	}
	p.rules = _rules
	return nil
}
