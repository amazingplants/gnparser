package parser

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleSciName
	ruleTail
	ruleName
	ruleHybridFormula
	ruleHybridFormulaFull
	ruleHybridFormulaPart
	ruleNamedHybrid
	ruleNamedSpeciesHybrid
	ruleNamedGenusHybrid
	ruleCandidatusName
	ruleCandidatus
	ruleSingleName
	ruleNameUninomial
	ruleNameApprox
	ruleNameComp
	ruleNameSpecies
	ruleGenusWord
	ruleInfraspGroup
	ruleInfraspEpithet
	ruleSpeciesEpithet
	ruleComparison
	ruleRank
	ruleRankNotho
	ruleRankOtherUncommon
	ruleRankOther
	ruleRankVar
	ruleRankForma
	ruleRankSsp
	ruleRankAgamo
	ruleSubgenusOrSuperspecies
	ruleSubgenus
	ruleSubgenus2
	ruleSubgenus1
	ruleUninomialCombo
	ruleUninomialCombo1
	ruleUninomialCombo2
	ruleRankUninomial
	ruleRankUninomialPlain
	ruleRankUninomialNotho
	ruleUninomial
	ruleUninomialWord
	ruleAbbrSubgenus
	ruleAbbrGenus
	ruleCapWord
	ruleCapWord1
	ruleCapWordWithDash
	ruleUpperAfterDash
	ruleLowerAfterDash
	ruleTwoLetterGenus
	ruleWord
	ruleWord1
	ruleWordStartsWithDigit
	ruleWord2
	ruleWordApostr
	ruleWord4
	ruleMultiDashedWord
	ruleHybridChar
	ruleApproxNameIgnored
	ruleApproximation
	ruleAuthorship
	ruleAuthorshipCombo
	ruleOriginalAuthorship
	ruleOriginalAuthorshipComb
	ruleCombinationAuthorship
	ruleBasionymAuthorshipMissingParens
	ruleMissingParensStart
	ruleMissingParensEnd
	ruleBasionymAuthorshipYearMisformed
	ruleBasionymAuthorship
	ruleBasionymAuthorship1
	ruleBasionymAuthorship2Parens
	ruleAuthorsGroup
	ruleAuthorsTeam
	ruleAuthorSep
	ruleAuthorSep1
	ruleAuthorSep2
	ruleAuthorSepSpanish
	ruleAuthorEx
	ruleAuthorEmend
	ruleAuthor
	ruleAuthor0
	ruleAuthor1
	ruleAuthor2
	ruleUnknownAuthor
	ruleAuthorWord
	ruleAuthorEtAl
	ruleAuthorWord2
	ruleAuthorWord3
	ruleAuthorDashInitials
	ruleAuthorWordSoft
	ruleCapAuthorWord
	ruleAllCapsAuthorWord
	ruleFilius
	ruleFiliusF
	ruleFiliusFNoSpace
	ruleAuthorSuffix
	ruleAuthorPrefixGlued
	ruleAuthorPrefix
	ruleAuthorPrefix2
	ruleAuthorPrefix1
	ruleAuthorUpperChar
	ruleAuthorLowerChar
	ruleYear
	ruleYearRange
	ruleYearWithDot
	ruleYearApprox
	ruleYearWithPage
	ruleYearWithParens
	ruleYearWithChar
	ruleYearNum
	ruleNameUpperChar
	ruleUpperCharExtended
	ruleUpperChar
	ruleNameLowerChar
	ruleMiscodedChar
	ruleLowerCharExtended
	ruleLowerChar
	ruleSpaceCharEOI
	ruleNums
	ruleLowerGreek
	ruleLowerASCII
	ruleUpperASCII
	ruleApostrophe
	ruleApostrASCII
	ruleApostrOther
	ruleDash
	ruleSlash
	rule_
	ruleMultipleSpace
	ruleSingleSpace
	ruleOtherSpace
	ruleEND
)

var rul3s = [...]string{
	"Unknown",
	"SciName",
	"Tail",
	"Name",
	"HybridFormula",
	"HybridFormulaFull",
	"HybridFormulaPart",
	"NamedHybrid",
	"NamedSpeciesHybrid",
	"NamedGenusHybrid",
	"CandidatusName",
	"Candidatus",
	"SingleName",
	"NameUninomial",
	"NameApprox",
	"NameComp",
	"NameSpecies",
	"GenusWord",
	"InfraspGroup",
	"InfraspEpithet",
	"SpeciesEpithet",
	"Comparison",
	"Rank",
	"RankNotho",
	"RankOtherUncommon",
	"RankOther",
	"RankVar",
	"RankForma",
	"RankSsp",
	"RankAgamo",
	"SubgenusOrSuperspecies",
	"Subgenus",
	"Subgenus2",
	"Subgenus1",
	"UninomialCombo",
	"UninomialCombo1",
	"UninomialCombo2",
	"RankUninomial",
	"RankUninomialPlain",
	"RankUninomialNotho",
	"Uninomial",
	"UninomialWord",
	"AbbrSubgenus",
	"AbbrGenus",
	"CapWord",
	"CapWord1",
	"CapWordWithDash",
	"UpperAfterDash",
	"LowerAfterDash",
	"TwoLetterGenus",
	"Word",
	"Word1",
	"WordStartsWithDigit",
	"Word2",
	"WordApostr",
	"Word4",
	"MultiDashedWord",
	"HybridChar",
	"ApproxNameIgnored",
	"Approximation",
	"Authorship",
	"AuthorshipCombo",
	"OriginalAuthorship",
	"OriginalAuthorshipComb",
	"CombinationAuthorship",
	"BasionymAuthorshipMissingParens",
	"MissingParensStart",
	"MissingParensEnd",
	"BasionymAuthorshipYearMisformed",
	"BasionymAuthorship",
	"BasionymAuthorship1",
	"BasionymAuthorship2Parens",
	"AuthorsGroup",
	"AuthorsTeam",
	"AuthorSep",
	"AuthorSep1",
	"AuthorSep2",
	"AuthorSepSpanish",
	"AuthorEx",
	"AuthorEmend",
	"Author",
	"Author0",
	"Author1",
	"Author2",
	"UnknownAuthor",
	"AuthorWord",
	"AuthorEtAl",
	"AuthorWord2",
	"AuthorWord3",
	"AuthorDashInitials",
	"AuthorWordSoft",
	"CapAuthorWord",
	"AllCapsAuthorWord",
	"Filius",
	"FiliusF",
	"FiliusFNoSpace",
	"AuthorSuffix",
	"AuthorPrefixGlued",
	"AuthorPrefix",
	"AuthorPrefix2",
	"AuthorPrefix1",
	"AuthorUpperChar",
	"AuthorLowerChar",
	"Year",
	"YearRange",
	"YearWithDot",
	"YearApprox",
	"YearWithPage",
	"YearWithParens",
	"YearWithChar",
	"YearNum",
	"NameUpperChar",
	"UpperCharExtended",
	"UpperChar",
	"NameLowerChar",
	"MiscodedChar",
	"LowerCharExtended",
	"LowerChar",
	"SpaceCharEOI",
	"Nums",
	"LowerGreek",
	"LowerASCII",
	"UpperASCII",
	"Apostrophe",
	"ApostrASCII",
	"ApostrOther",
	"Dash",
	"Slash",
	"_",
	"MultipleSpace",
	"SingleSpace",
	"OtherSpace",
	"END",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type Engine struct {
	baseEngine

	Buffer string
	buffer []rune
	rules  [133]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *Engine) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *Engine) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *Engine
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *Engine) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *Engine) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *Engine) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func Pretty(pretty bool) func(*Engine) error {
	return func(p *Engine) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*Engine) error {
	return func(p *Engine) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *Engine) Init(options ...func(*Engine) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 SciName <- <(_? Name Tail END)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				{
					position2, tokenIndex2 := position, tokenIndex
					if !_rules[rule_]() {
						goto l2
					}
					goto l3
				l2:
					position, tokenIndex = position2, tokenIndex2
				}
			l3:
				if !_rules[ruleName]() {
					goto l0
				}
				if !_rules[ruleTail]() {
					goto l0
				}
				if !_rules[ruleEND]() {
					goto l0
				}
				add(ruleSciName, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Tail <- <((_ / ';' / ',') .*)?> */
		func() bool {
			{
				position5 := position
				{
					position6, tokenIndex6 := position, tokenIndex
					{
						position8, tokenIndex8 := position, tokenIndex
						if !_rules[rule_]() {
							goto l9
						}
						goto l8
					l9:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(';') {
							goto l10
						}
						position++
						goto l8
					l10:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(',') {
							goto l6
						}
						position++
					}
				l8:
				l11:
					{
						position12, tokenIndex12 := position, tokenIndex
						if !matchDot() {
							goto l12
						}
						goto l11
					l12:
						position, tokenIndex = position12, tokenIndex12
					}
					goto l7
				l6:
					position, tokenIndex = position6, tokenIndex6
				}
			l7:
				add(ruleTail, position5)
			}
			return true
		},
		/* 2 Name <- <(NamedHybrid / HybridFormula / CandidatusName / SingleName)> */
		func() bool {
			position13, tokenIndex13 := position, tokenIndex
			{
				position14 := position
				{
					position15, tokenIndex15 := position, tokenIndex
					if !_rules[ruleNamedHybrid]() {
						goto l16
					}
					goto l15
				l16:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleHybridFormula]() {
						goto l17
					}
					goto l15
				l17:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleCandidatusName]() {
						goto l18
					}
					goto l15
				l18:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleSingleName]() {
						goto l13
					}
				}
			l15:
				add(ruleName, position14)
			}
			return true
		l13:
			position, tokenIndex = position13, tokenIndex13
			return false
		},
		/* 3 HybridFormula <- <(SingleName (_ (HybridFormulaPart / HybridFormulaFull))+)> */
		func() bool {
			position19, tokenIndex19 := position, tokenIndex
			{
				position20 := position
				if !_rules[ruleSingleName]() {
					goto l19
				}
				if !_rules[rule_]() {
					goto l19
				}
				{
					position23, tokenIndex23 := position, tokenIndex
					if !_rules[ruleHybridFormulaPart]() {
						goto l24
					}
					goto l23
				l24:
					position, tokenIndex = position23, tokenIndex23
					if !_rules[ruleHybridFormulaFull]() {
						goto l19
					}
				}
			l23:
			l21:
				{
					position22, tokenIndex22 := position, tokenIndex
					if !_rules[rule_]() {
						goto l22
					}
					{
						position25, tokenIndex25 := position, tokenIndex
						if !_rules[ruleHybridFormulaPart]() {
							goto l26
						}
						goto l25
					l26:
						position, tokenIndex = position25, tokenIndex25
						if !_rules[ruleHybridFormulaFull]() {
							goto l22
						}
					}
				l25:
					goto l21
				l22:
					position, tokenIndex = position22, tokenIndex22
				}
				add(ruleHybridFormula, position20)
			}
			return true
		l19:
			position, tokenIndex = position19, tokenIndex19
			return false
		},
		/* 4 HybridFormulaFull <- <(HybridChar (_ SingleName)?)> */
		func() bool {
			position27, tokenIndex27 := position, tokenIndex
			{
				position28 := position
				if !_rules[ruleHybridChar]() {
					goto l27
				}
				{
					position29, tokenIndex29 := position, tokenIndex
					if !_rules[rule_]() {
						goto l29
					}
					if !_rules[ruleSingleName]() {
						goto l29
					}
					goto l30
				l29:
					position, tokenIndex = position29, tokenIndex29
				}
			l30:
				add(ruleHybridFormulaFull, position28)
			}
			return true
		l27:
			position, tokenIndex = position27, tokenIndex27
			return false
		},
		/* 5 HybridFormulaPart <- <(HybridChar _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position31, tokenIndex31 := position, tokenIndex
			{
				position32 := position
				if !_rules[ruleHybridChar]() {
					goto l31
				}
				if !_rules[rule_]() {
					goto l31
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l31
				}
				{
					position33, tokenIndex33 := position, tokenIndex
					if !_rules[rule_]() {
						goto l33
					}
					if !_rules[ruleInfraspGroup]() {
						goto l33
					}
					goto l34
				l33:
					position, tokenIndex = position33, tokenIndex33
				}
			l34:
				add(ruleHybridFormulaPart, position32)
			}
			return true
		l31:
			position, tokenIndex = position31, tokenIndex31
			return false
		},
		/* 6 NamedHybrid <- <(NamedGenusHybrid / NamedSpeciesHybrid)> */
		func() bool {
			position35, tokenIndex35 := position, tokenIndex
			{
				position36 := position
				{
					position37, tokenIndex37 := position, tokenIndex
					if !_rules[ruleNamedGenusHybrid]() {
						goto l38
					}
					goto l37
				l38:
					position, tokenIndex = position37, tokenIndex37
					if !_rules[ruleNamedSpeciesHybrid]() {
						goto l35
					}
				}
			l37:
				add(ruleNamedHybrid, position36)
			}
			return true
		l35:
			position, tokenIndex = position35, tokenIndex35
			return false
		},
		/* 7 NamedSpeciesHybrid <- <(GenusWord (_ Subgenus)? (_ Comparison)? _ HybridChar _? SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position39, tokenIndex39 := position, tokenIndex
			{
				position40 := position
				if !_rules[ruleGenusWord]() {
					goto l39
				}
				{
					position41, tokenIndex41 := position, tokenIndex
					if !_rules[rule_]() {
						goto l41
					}
					if !_rules[ruleSubgenus]() {
						goto l41
					}
					goto l42
				l41:
					position, tokenIndex = position41, tokenIndex41
				}
			l42:
				{
					position43, tokenIndex43 := position, tokenIndex
					if !_rules[rule_]() {
						goto l43
					}
					if !_rules[ruleComparison]() {
						goto l43
					}
					goto l44
				l43:
					position, tokenIndex = position43, tokenIndex43
				}
			l44:
				if !_rules[rule_]() {
					goto l39
				}
				if !_rules[ruleHybridChar]() {
					goto l39
				}
				{
					position45, tokenIndex45 := position, tokenIndex
					if !_rules[rule_]() {
						goto l45
					}
					goto l46
				l45:
					position, tokenIndex = position45, tokenIndex45
				}
			l46:
				if !_rules[ruleSpeciesEpithet]() {
					goto l39
				}
				{
					position47, tokenIndex47 := position, tokenIndex
					if !_rules[rule_]() {
						goto l47
					}
					if !_rules[ruleInfraspGroup]() {
						goto l47
					}
					goto l48
				l47:
					position, tokenIndex = position47, tokenIndex47
				}
			l48:
				add(ruleNamedSpeciesHybrid, position40)
			}
			return true
		l39:
			position, tokenIndex = position39, tokenIndex39
			return false
		},
		/* 8 NamedGenusHybrid <- <(HybridChar _? SingleName)> */
		func() bool {
			position49, tokenIndex49 := position, tokenIndex
			{
				position50 := position
				if !_rules[ruleHybridChar]() {
					goto l49
				}
				{
					position51, tokenIndex51 := position, tokenIndex
					if !_rules[rule_]() {
						goto l51
					}
					goto l52
				l51:
					position, tokenIndex = position51, tokenIndex51
				}
			l52:
				if !_rules[ruleSingleName]() {
					goto l49
				}
				add(ruleNamedGenusHybrid, position50)
			}
			return true
		l49:
			position, tokenIndex = position49, tokenIndex49
			return false
		},
		/* 9 CandidatusName <- <(Candidatus _ SingleName)> */
		func() bool {
			position53, tokenIndex53 := position, tokenIndex
			{
				position54 := position
				if !_rules[ruleCandidatus]() {
					goto l53
				}
				if !_rules[rule_]() {
					goto l53
				}
				if !_rules[ruleSingleName]() {
					goto l53
				}
				add(ruleCandidatusName, position54)
			}
			return true
		l53:
			position, tokenIndex = position53, tokenIndex53
			return false
		},
		/* 10 Candidatus <- <('C' 'a' 'n' 'd' 'i' 'd' 'a' 't' 'u' 's')> */
		func() bool {
			position55, tokenIndex55 := position, tokenIndex
			{
				position56 := position
				if buffer[position] != rune('C') {
					goto l55
				}
				position++
				if buffer[position] != rune('a') {
					goto l55
				}
				position++
				if buffer[position] != rune('n') {
					goto l55
				}
				position++
				if buffer[position] != rune('d') {
					goto l55
				}
				position++
				if buffer[position] != rune('i') {
					goto l55
				}
				position++
				if buffer[position] != rune('d') {
					goto l55
				}
				position++
				if buffer[position] != rune('a') {
					goto l55
				}
				position++
				if buffer[position] != rune('t') {
					goto l55
				}
				position++
				if buffer[position] != rune('u') {
					goto l55
				}
				position++
				if buffer[position] != rune('s') {
					goto l55
				}
				position++
				add(ruleCandidatus, position56)
			}
			return true
		l55:
			position, tokenIndex = position55, tokenIndex55
			return false
		},
		/* 11 SingleName <- <(NameComp / NameApprox / NameSpecies / NameUninomial)> */
		func() bool {
			position57, tokenIndex57 := position, tokenIndex
			{
				position58 := position
				{
					position59, tokenIndex59 := position, tokenIndex
					if !_rules[ruleNameComp]() {
						goto l60
					}
					goto l59
				l60:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleNameApprox]() {
						goto l61
					}
					goto l59
				l61:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleNameSpecies]() {
						goto l62
					}
					goto l59
				l62:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleNameUninomial]() {
						goto l57
					}
				}
			l59:
				add(ruleSingleName, position58)
			}
			return true
		l57:
			position, tokenIndex = position57, tokenIndex57
			return false
		},
		/* 12 NameUninomial <- <(UninomialCombo / Uninomial)> */
		func() bool {
			position63, tokenIndex63 := position, tokenIndex
			{
				position64 := position
				{
					position65, tokenIndex65 := position, tokenIndex
					if !_rules[ruleUninomialCombo]() {
						goto l66
					}
					goto l65
				l66:
					position, tokenIndex = position65, tokenIndex65
					if !_rules[ruleUninomial]() {
						goto l63
					}
				}
			l65:
				add(ruleNameUninomial, position64)
			}
			return true
		l63:
			position, tokenIndex = position63, tokenIndex63
			return false
		},
		/* 13 NameApprox <- <(GenusWord (_ SpeciesEpithet)? _ Approximation ApproxNameIgnored)> */
		func() bool {
			position67, tokenIndex67 := position, tokenIndex
			{
				position68 := position
				if !_rules[ruleGenusWord]() {
					goto l67
				}
				{
					position69, tokenIndex69 := position, tokenIndex
					if !_rules[rule_]() {
						goto l69
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l69
					}
					goto l70
				l69:
					position, tokenIndex = position69, tokenIndex69
				}
			l70:
				if !_rules[rule_]() {
					goto l67
				}
				if !_rules[ruleApproximation]() {
					goto l67
				}
				if !_rules[ruleApproxNameIgnored]() {
					goto l67
				}
				add(ruleNameApprox, position68)
			}
			return true
		l67:
			position, tokenIndex = position67, tokenIndex67
			return false
		},
		/* 14 NameComp <- <(GenusWord _ Comparison (_ SpeciesEpithet)?)> */
		func() bool {
			position71, tokenIndex71 := position, tokenIndex
			{
				position72 := position
				if !_rules[ruleGenusWord]() {
					goto l71
				}
				if !_rules[rule_]() {
					goto l71
				}
				if !_rules[ruleComparison]() {
					goto l71
				}
				{
					position73, tokenIndex73 := position, tokenIndex
					if !_rules[rule_]() {
						goto l73
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l73
					}
					goto l74
				l73:
					position, tokenIndex = position73, tokenIndex73
				}
			l74:
				add(ruleNameComp, position72)
			}
			return true
		l71:
			position, tokenIndex = position71, tokenIndex71
			return false
		},
		/* 15 NameSpecies <- <(GenusWord (_? (Subgenus / SubgenusOrSuperspecies))? _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position75, tokenIndex75 := position, tokenIndex
			{
				position76 := position
				if !_rules[ruleGenusWord]() {
					goto l75
				}
				{
					position77, tokenIndex77 := position, tokenIndex
					{
						position79, tokenIndex79 := position, tokenIndex
						if !_rules[rule_]() {
							goto l79
						}
						goto l80
					l79:
						position, tokenIndex = position79, tokenIndex79
					}
				l80:
					{
						position81, tokenIndex81 := position, tokenIndex
						if !_rules[ruleSubgenus]() {
							goto l82
						}
						goto l81
					l82:
						position, tokenIndex = position81, tokenIndex81
						if !_rules[ruleSubgenusOrSuperspecies]() {
							goto l77
						}
					}
				l81:
					goto l78
				l77:
					position, tokenIndex = position77, tokenIndex77
				}
			l78:
				if !_rules[rule_]() {
					goto l75
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l75
				}
				{
					position83, tokenIndex83 := position, tokenIndex
					if !_rules[rule_]() {
						goto l83
					}
					if !_rules[ruleInfraspGroup]() {
						goto l83
					}
					goto l84
				l83:
					position, tokenIndex = position83, tokenIndex83
				}
			l84:
				add(ruleNameSpecies, position76)
			}
			return true
		l75:
			position, tokenIndex = position75, tokenIndex75
			return false
		},
		/* 16 GenusWord <- <((AbbrGenus / UninomialWord) !(_ AuthorWord))> */
		func() bool {
			position85, tokenIndex85 := position, tokenIndex
			{
				position86 := position
				{
					position87, tokenIndex87 := position, tokenIndex
					if !_rules[ruleAbbrGenus]() {
						goto l88
					}
					goto l87
				l88:
					position, tokenIndex = position87, tokenIndex87
					if !_rules[ruleUninomialWord]() {
						goto l85
					}
				}
			l87:
				{
					position89, tokenIndex89 := position, tokenIndex
					if !_rules[rule_]() {
						goto l89
					}
					if !_rules[ruleAuthorWord]() {
						goto l89
					}
					goto l85
				l89:
					position, tokenIndex = position89, tokenIndex89
				}
				add(ruleGenusWord, position86)
			}
			return true
		l85:
			position, tokenIndex = position85, tokenIndex85
			return false
		},
		/* 17 InfraspGroup <- <(InfraspEpithet (_ InfraspEpithet)? (_ InfraspEpithet)?)> */
		func() bool {
			position90, tokenIndex90 := position, tokenIndex
			{
				position91 := position
				if !_rules[ruleInfraspEpithet]() {
					goto l90
				}
				{
					position92, tokenIndex92 := position, tokenIndex
					if !_rules[rule_]() {
						goto l92
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l92
					}
					goto l93
				l92:
					position, tokenIndex = position92, tokenIndex92
				}
			l93:
				{
					position94, tokenIndex94 := position, tokenIndex
					if !_rules[rule_]() {
						goto l94
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l94
					}
					goto l95
				l94:
					position, tokenIndex = position94, tokenIndex94
				}
			l95:
				add(ruleInfraspGroup, position91)
			}
			return true
		l90:
			position, tokenIndex = position90, tokenIndex90
			return false
		},
		/* 18 InfraspEpithet <- <((Rank _?)? !AuthorEx Word (_ Authorship)?)> */
		func() bool {
			position96, tokenIndex96 := position, tokenIndex
			{
				position97 := position
				{
					position98, tokenIndex98 := position, tokenIndex
					if !_rules[ruleRank]() {
						goto l98
					}
					{
						position100, tokenIndex100 := position, tokenIndex
						if !_rules[rule_]() {
							goto l100
						}
						goto l101
					l100:
						position, tokenIndex = position100, tokenIndex100
					}
				l101:
					goto l99
				l98:
					position, tokenIndex = position98, tokenIndex98
				}
			l99:
				{
					position102, tokenIndex102 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l102
					}
					goto l96
				l102:
					position, tokenIndex = position102, tokenIndex102
				}
				if !_rules[ruleWord]() {
					goto l96
				}
				{
					position103, tokenIndex103 := position, tokenIndex
					if !_rules[rule_]() {
						goto l103
					}
					if !_rules[ruleAuthorship]() {
						goto l103
					}
					goto l104
				l103:
					position, tokenIndex = position103, tokenIndex103
				}
			l104:
				add(ruleInfraspEpithet, position97)
			}
			return true
		l96:
			position, tokenIndex = position96, tokenIndex96
			return false
		},
		/* 19 SpeciesEpithet <- <(!AuthorEx Word (_? Authorship)?)> */
		func() bool {
			position105, tokenIndex105 := position, tokenIndex
			{
				position106 := position
				{
					position107, tokenIndex107 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l107
					}
					goto l105
				l107:
					position, tokenIndex = position107, tokenIndex107
				}
				if !_rules[ruleWord]() {
					goto l105
				}
				{
					position108, tokenIndex108 := position, tokenIndex
					{
						position110, tokenIndex110 := position, tokenIndex
						if !_rules[rule_]() {
							goto l110
						}
						goto l111
					l110:
						position, tokenIndex = position110, tokenIndex110
					}
				l111:
					if !_rules[ruleAuthorship]() {
						goto l108
					}
					goto l109
				l108:
					position, tokenIndex = position108, tokenIndex108
				}
			l109:
				add(ruleSpeciesEpithet, position106)
			}
			return true
		l105:
			position, tokenIndex = position105, tokenIndex105
			return false
		},
		/* 20 Comparison <- <('c' 'f' '.'?)> */
		func() bool {
			position112, tokenIndex112 := position, tokenIndex
			{
				position113 := position
				if buffer[position] != rune('c') {
					goto l112
				}
				position++
				if buffer[position] != rune('f') {
					goto l112
				}
				position++
				{
					position114, tokenIndex114 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l114
					}
					position++
					goto l115
				l114:
					position, tokenIndex = position114, tokenIndex114
				}
			l115:
				add(ruleComparison, position113)
			}
			return true
		l112:
			position, tokenIndex = position112, tokenIndex112
			return false
		},
		/* 21 Rank <- <((RankForma / RankVar / RankSsp / RankOther / RankOtherUncommon / RankAgamo / RankNotho) (_? LowerGreek ('.' / &SpaceCharEOI))?)> */
		func() bool {
			position116, tokenIndex116 := position, tokenIndex
			{
				position117 := position
				{
					position118, tokenIndex118 := position, tokenIndex
					if !_rules[ruleRankForma]() {
						goto l119
					}
					goto l118
				l119:
					position, tokenIndex = position118, tokenIndex118
					if !_rules[ruleRankVar]() {
						goto l120
					}
					goto l118
				l120:
					position, tokenIndex = position118, tokenIndex118
					if !_rules[ruleRankSsp]() {
						goto l121
					}
					goto l118
				l121:
					position, tokenIndex = position118, tokenIndex118
					if !_rules[ruleRankOther]() {
						goto l122
					}
					goto l118
				l122:
					position, tokenIndex = position118, tokenIndex118
					if !_rules[ruleRankOtherUncommon]() {
						goto l123
					}
					goto l118
				l123:
					position, tokenIndex = position118, tokenIndex118
					if !_rules[ruleRankAgamo]() {
						goto l124
					}
					goto l118
				l124:
					position, tokenIndex = position118, tokenIndex118
					if !_rules[ruleRankNotho]() {
						goto l116
					}
				}
			l118:
				{
					position125, tokenIndex125 := position, tokenIndex
					{
						position127, tokenIndex127 := position, tokenIndex
						if !_rules[rule_]() {
							goto l127
						}
						goto l128
					l127:
						position, tokenIndex = position127, tokenIndex127
					}
				l128:
					if !_rules[ruleLowerGreek]() {
						goto l125
					}
					{
						position129, tokenIndex129 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l130
						}
						position++
						goto l129
					l130:
						position, tokenIndex = position129, tokenIndex129
						{
							position131, tokenIndex131 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l125
							}
							position, tokenIndex = position131, tokenIndex131
						}
					}
				l129:
					goto l126
				l125:
					position, tokenIndex = position125, tokenIndex125
				}
			l126:
				add(ruleRank, position117)
			}
			return true
		l116:
			position, tokenIndex = position116, tokenIndex116
			return false
		},
		/* 22 RankNotho <- <((('n' 'o' 't' 'h' 'o' (('v' 'a' 'r') / ('f' 'o') / 'f' / ('s' 'u' 'b' 's' 'p') / ('s' 's' 'p') / ('s' 'p') / ('m' 'o' 'r' 't' 'h') / ('s' 'u' 'p' 's' 'p') / ('s' 'u'))) / ('n' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position132, tokenIndex132 := position, tokenIndex
			{
				position133 := position
				{
					position134, tokenIndex134 := position, tokenIndex
					if buffer[position] != rune('n') {
						goto l135
					}
					position++
					if buffer[position] != rune('o') {
						goto l135
					}
					position++
					if buffer[position] != rune('t') {
						goto l135
					}
					position++
					if buffer[position] != rune('h') {
						goto l135
					}
					position++
					if buffer[position] != rune('o') {
						goto l135
					}
					position++
					{
						position136, tokenIndex136 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l137
						}
						position++
						if buffer[position] != rune('a') {
							goto l137
						}
						position++
						if buffer[position] != rune('r') {
							goto l137
						}
						position++
						goto l136
					l137:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('f') {
							goto l138
						}
						position++
						if buffer[position] != rune('o') {
							goto l138
						}
						position++
						goto l136
					l138:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('f') {
							goto l139
						}
						position++
						goto l136
					l139:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('s') {
							goto l140
						}
						position++
						if buffer[position] != rune('u') {
							goto l140
						}
						position++
						if buffer[position] != rune('b') {
							goto l140
						}
						position++
						if buffer[position] != rune('s') {
							goto l140
						}
						position++
						if buffer[position] != rune('p') {
							goto l140
						}
						position++
						goto l136
					l140:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('s') {
							goto l141
						}
						position++
						if buffer[position] != rune('s') {
							goto l141
						}
						position++
						if buffer[position] != rune('p') {
							goto l141
						}
						position++
						goto l136
					l141:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('s') {
							goto l142
						}
						position++
						if buffer[position] != rune('p') {
							goto l142
						}
						position++
						goto l136
					l142:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('m') {
							goto l143
						}
						position++
						if buffer[position] != rune('o') {
							goto l143
						}
						position++
						if buffer[position] != rune('r') {
							goto l143
						}
						position++
						if buffer[position] != rune('t') {
							goto l143
						}
						position++
						if buffer[position] != rune('h') {
							goto l143
						}
						position++
						goto l136
					l143:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('s') {
							goto l144
						}
						position++
						if buffer[position] != rune('u') {
							goto l144
						}
						position++
						if buffer[position] != rune('p') {
							goto l144
						}
						position++
						if buffer[position] != rune('s') {
							goto l144
						}
						position++
						if buffer[position] != rune('p') {
							goto l144
						}
						position++
						goto l136
					l144:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('s') {
							goto l135
						}
						position++
						if buffer[position] != rune('u') {
							goto l135
						}
						position++
					}
				l136:
					goto l134
				l135:
					position, tokenIndex = position134, tokenIndex134
					if buffer[position] != rune('n') {
						goto l132
					}
					position++
					if buffer[position] != rune('v') {
						goto l132
					}
					position++
					if buffer[position] != rune('a') {
						goto l132
					}
					position++
					if buffer[position] != rune('r') {
						goto l132
					}
					position++
				}
			l134:
				{
					position145, tokenIndex145 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l146
					}
					position++
					goto l145
				l146:
					position, tokenIndex = position145, tokenIndex145
					{
						position147, tokenIndex147 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l132
						}
						position, tokenIndex = position147, tokenIndex147
					}
				}
			l145:
				add(ruleRankNotho, position133)
			}
			return true
		l132:
			position, tokenIndex = position132, tokenIndex132
			return false
		},
		/* 23 RankOtherUncommon <- <(('*' / ('n' 'a' 't' 'i' 'o') / ('n' 'a' 't' '.') / ('n' 'a' 't') / ('f' '.' 's' 'p') / 'α' / ('β' 'β') / 'β' / 'γ' / 'δ' / 'ε' / 'φ' / 'θ' / 'μ' / ('a' '.') / ('b' '.') / ('c' '.') / ('d' '.') / ('e' '.') / ('g' '.') / ('k' '.') / ('m' 'u' 't' '.')) &SpaceCharEOI)> */
		func() bool {
			position148, tokenIndex148 := position, tokenIndex
			{
				position149 := position
				{
					position150, tokenIndex150 := position, tokenIndex
					if buffer[position] != rune('*') {
						goto l151
					}
					position++
					goto l150
				l151:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('n') {
						goto l152
					}
					position++
					if buffer[position] != rune('a') {
						goto l152
					}
					position++
					if buffer[position] != rune('t') {
						goto l152
					}
					position++
					if buffer[position] != rune('i') {
						goto l152
					}
					position++
					if buffer[position] != rune('o') {
						goto l152
					}
					position++
					goto l150
				l152:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('n') {
						goto l153
					}
					position++
					if buffer[position] != rune('a') {
						goto l153
					}
					position++
					if buffer[position] != rune('t') {
						goto l153
					}
					position++
					if buffer[position] != rune('.') {
						goto l153
					}
					position++
					goto l150
				l153:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('n') {
						goto l154
					}
					position++
					if buffer[position] != rune('a') {
						goto l154
					}
					position++
					if buffer[position] != rune('t') {
						goto l154
					}
					position++
					goto l150
				l154:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('f') {
						goto l155
					}
					position++
					if buffer[position] != rune('.') {
						goto l155
					}
					position++
					if buffer[position] != rune('s') {
						goto l155
					}
					position++
					if buffer[position] != rune('p') {
						goto l155
					}
					position++
					goto l150
				l155:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('α') {
						goto l156
					}
					position++
					goto l150
				l156:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('β') {
						goto l157
					}
					position++
					if buffer[position] != rune('β') {
						goto l157
					}
					position++
					goto l150
				l157:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('β') {
						goto l158
					}
					position++
					goto l150
				l158:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('γ') {
						goto l159
					}
					position++
					goto l150
				l159:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('δ') {
						goto l160
					}
					position++
					goto l150
				l160:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('ε') {
						goto l161
					}
					position++
					goto l150
				l161:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('φ') {
						goto l162
					}
					position++
					goto l150
				l162:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('θ') {
						goto l163
					}
					position++
					goto l150
				l163:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('μ') {
						goto l164
					}
					position++
					goto l150
				l164:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('a') {
						goto l165
					}
					position++
					if buffer[position] != rune('.') {
						goto l165
					}
					position++
					goto l150
				l165:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('b') {
						goto l166
					}
					position++
					if buffer[position] != rune('.') {
						goto l166
					}
					position++
					goto l150
				l166:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('c') {
						goto l167
					}
					position++
					if buffer[position] != rune('.') {
						goto l167
					}
					position++
					goto l150
				l167:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('d') {
						goto l168
					}
					position++
					if buffer[position] != rune('.') {
						goto l168
					}
					position++
					goto l150
				l168:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('e') {
						goto l169
					}
					position++
					if buffer[position] != rune('.') {
						goto l169
					}
					position++
					goto l150
				l169:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('g') {
						goto l170
					}
					position++
					if buffer[position] != rune('.') {
						goto l170
					}
					position++
					goto l150
				l170:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('k') {
						goto l171
					}
					position++
					if buffer[position] != rune('.') {
						goto l171
					}
					position++
					goto l150
				l171:
					position, tokenIndex = position150, tokenIndex150
					if buffer[position] != rune('m') {
						goto l148
					}
					position++
					if buffer[position] != rune('u') {
						goto l148
					}
					position++
					if buffer[position] != rune('t') {
						goto l148
					}
					position++
					if buffer[position] != rune('.') {
						goto l148
					}
					position++
				}
			l150:
				{
					position172, tokenIndex172 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l148
					}
					position, tokenIndex = position172, tokenIndex172
				}
				add(ruleRankOtherUncommon, position149)
			}
			return true
		l148:
			position, tokenIndex = position148, tokenIndex148
			return false
		},
		/* 24 RankOther <- <((('m' 'o' 'r' 'p' 'h') / ('c' 'o' 'n' 'v' 'a' 'r') / ('p' 's' 'e' 'u' 'd' 'o' 'v' 'a' 'r') / ('s' 'e' 'c' 't') / ('s' 'e' 'r') / ('s' 'u' 'b' 'v' 'a' 'r') / ('s' 'u' 'b' 'f') / ('r' 'a' 'c' 'e') / ('p' 'v') / ('p' 'a' 't' 'h' 'o' 'v' 'a' 'r') / ('a' 'b' '.' (_? ('n' '.'))?) / ('s' 't')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position173, tokenIndex173 := position, tokenIndex
			{
				position174 := position
				{
					position175, tokenIndex175 := position, tokenIndex
					if buffer[position] != rune('m') {
						goto l176
					}
					position++
					if buffer[position] != rune('o') {
						goto l176
					}
					position++
					if buffer[position] != rune('r') {
						goto l176
					}
					position++
					if buffer[position] != rune('p') {
						goto l176
					}
					position++
					if buffer[position] != rune('h') {
						goto l176
					}
					position++
					goto l175
				l176:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('c') {
						goto l177
					}
					position++
					if buffer[position] != rune('o') {
						goto l177
					}
					position++
					if buffer[position] != rune('n') {
						goto l177
					}
					position++
					if buffer[position] != rune('v') {
						goto l177
					}
					position++
					if buffer[position] != rune('a') {
						goto l177
					}
					position++
					if buffer[position] != rune('r') {
						goto l177
					}
					position++
					goto l175
				l177:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('p') {
						goto l178
					}
					position++
					if buffer[position] != rune('s') {
						goto l178
					}
					position++
					if buffer[position] != rune('e') {
						goto l178
					}
					position++
					if buffer[position] != rune('u') {
						goto l178
					}
					position++
					if buffer[position] != rune('d') {
						goto l178
					}
					position++
					if buffer[position] != rune('o') {
						goto l178
					}
					position++
					if buffer[position] != rune('v') {
						goto l178
					}
					position++
					if buffer[position] != rune('a') {
						goto l178
					}
					position++
					if buffer[position] != rune('r') {
						goto l178
					}
					position++
					goto l175
				l178:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('s') {
						goto l179
					}
					position++
					if buffer[position] != rune('e') {
						goto l179
					}
					position++
					if buffer[position] != rune('c') {
						goto l179
					}
					position++
					if buffer[position] != rune('t') {
						goto l179
					}
					position++
					goto l175
				l179:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('s') {
						goto l180
					}
					position++
					if buffer[position] != rune('e') {
						goto l180
					}
					position++
					if buffer[position] != rune('r') {
						goto l180
					}
					position++
					goto l175
				l180:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('s') {
						goto l181
					}
					position++
					if buffer[position] != rune('u') {
						goto l181
					}
					position++
					if buffer[position] != rune('b') {
						goto l181
					}
					position++
					if buffer[position] != rune('v') {
						goto l181
					}
					position++
					if buffer[position] != rune('a') {
						goto l181
					}
					position++
					if buffer[position] != rune('r') {
						goto l181
					}
					position++
					goto l175
				l181:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('s') {
						goto l182
					}
					position++
					if buffer[position] != rune('u') {
						goto l182
					}
					position++
					if buffer[position] != rune('b') {
						goto l182
					}
					position++
					if buffer[position] != rune('f') {
						goto l182
					}
					position++
					goto l175
				l182:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('r') {
						goto l183
					}
					position++
					if buffer[position] != rune('a') {
						goto l183
					}
					position++
					if buffer[position] != rune('c') {
						goto l183
					}
					position++
					if buffer[position] != rune('e') {
						goto l183
					}
					position++
					goto l175
				l183:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('p') {
						goto l184
					}
					position++
					if buffer[position] != rune('v') {
						goto l184
					}
					position++
					goto l175
				l184:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('p') {
						goto l185
					}
					position++
					if buffer[position] != rune('a') {
						goto l185
					}
					position++
					if buffer[position] != rune('t') {
						goto l185
					}
					position++
					if buffer[position] != rune('h') {
						goto l185
					}
					position++
					if buffer[position] != rune('o') {
						goto l185
					}
					position++
					if buffer[position] != rune('v') {
						goto l185
					}
					position++
					if buffer[position] != rune('a') {
						goto l185
					}
					position++
					if buffer[position] != rune('r') {
						goto l185
					}
					position++
					goto l175
				l185:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('a') {
						goto l186
					}
					position++
					if buffer[position] != rune('b') {
						goto l186
					}
					position++
					if buffer[position] != rune('.') {
						goto l186
					}
					position++
					{
						position187, tokenIndex187 := position, tokenIndex
						{
							position189, tokenIndex189 := position, tokenIndex
							if !_rules[rule_]() {
								goto l189
							}
							goto l190
						l189:
							position, tokenIndex = position189, tokenIndex189
						}
					l190:
						if buffer[position] != rune('n') {
							goto l187
						}
						position++
						if buffer[position] != rune('.') {
							goto l187
						}
						position++
						goto l188
					l187:
						position, tokenIndex = position187, tokenIndex187
					}
				l188:
					goto l175
				l186:
					position, tokenIndex = position175, tokenIndex175
					if buffer[position] != rune('s') {
						goto l173
					}
					position++
					if buffer[position] != rune('t') {
						goto l173
					}
					position++
				}
			l175:
				{
					position191, tokenIndex191 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l192
					}
					position++
					goto l191
				l192:
					position, tokenIndex = position191, tokenIndex191
					{
						position193, tokenIndex193 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l173
						}
						position, tokenIndex = position193, tokenIndex193
					}
				}
			l191:
				add(ruleRankOther, position174)
			}
			return true
		l173:
			position, tokenIndex = position173, tokenIndex173
			return false
		},
		/* 25 RankVar <- <((('v' 'a' 'r' 'i' 'e' 't' 'y') / ('[' 'v' 'a' 'r' '.' ']') / ('v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position194, tokenIndex194 := position, tokenIndex
			{
				position195 := position
				{
					position196, tokenIndex196 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l197
					}
					position++
					if buffer[position] != rune('a') {
						goto l197
					}
					position++
					if buffer[position] != rune('r') {
						goto l197
					}
					position++
					if buffer[position] != rune('i') {
						goto l197
					}
					position++
					if buffer[position] != rune('e') {
						goto l197
					}
					position++
					if buffer[position] != rune('t') {
						goto l197
					}
					position++
					if buffer[position] != rune('y') {
						goto l197
					}
					position++
					goto l196
				l197:
					position, tokenIndex = position196, tokenIndex196
					if buffer[position] != rune('[') {
						goto l198
					}
					position++
					if buffer[position] != rune('v') {
						goto l198
					}
					position++
					if buffer[position] != rune('a') {
						goto l198
					}
					position++
					if buffer[position] != rune('r') {
						goto l198
					}
					position++
					if buffer[position] != rune('.') {
						goto l198
					}
					position++
					if buffer[position] != rune(']') {
						goto l198
					}
					position++
					goto l196
				l198:
					position, tokenIndex = position196, tokenIndex196
					if buffer[position] != rune('v') {
						goto l194
					}
					position++
					if buffer[position] != rune('a') {
						goto l194
					}
					position++
					if buffer[position] != rune('r') {
						goto l194
					}
					position++
				}
			l196:
				{
					position199, tokenIndex199 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l200
					}
					position++
					goto l199
				l200:
					position, tokenIndex = position199, tokenIndex199
					{
						position201, tokenIndex201 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l194
						}
						position, tokenIndex = position201, tokenIndex201
					}
				}
			l199:
				add(ruleRankVar, position195)
			}
			return true
		l194:
			position, tokenIndex = position194, tokenIndex194
			return false
		},
		/* 26 RankForma <- <((('f' 'o' 'r' 'm' 'a') / ('f' 'm' 'a') / ('f' 'm') / ('f' 'o' 'r' 'm') / ('f' 'o') / 'f') ('.' / &SpaceCharEOI))> */
		func() bool {
			position202, tokenIndex202 := position, tokenIndex
			{
				position203 := position
				{
					position204, tokenIndex204 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l205
					}
					position++
					if buffer[position] != rune('o') {
						goto l205
					}
					position++
					if buffer[position] != rune('r') {
						goto l205
					}
					position++
					if buffer[position] != rune('m') {
						goto l205
					}
					position++
					if buffer[position] != rune('a') {
						goto l205
					}
					position++
					goto l204
				l205:
					position, tokenIndex = position204, tokenIndex204
					if buffer[position] != rune('f') {
						goto l206
					}
					position++
					if buffer[position] != rune('m') {
						goto l206
					}
					position++
					if buffer[position] != rune('a') {
						goto l206
					}
					position++
					goto l204
				l206:
					position, tokenIndex = position204, tokenIndex204
					if buffer[position] != rune('f') {
						goto l207
					}
					position++
					if buffer[position] != rune('m') {
						goto l207
					}
					position++
					goto l204
				l207:
					position, tokenIndex = position204, tokenIndex204
					if buffer[position] != rune('f') {
						goto l208
					}
					position++
					if buffer[position] != rune('o') {
						goto l208
					}
					position++
					if buffer[position] != rune('r') {
						goto l208
					}
					position++
					if buffer[position] != rune('m') {
						goto l208
					}
					position++
					goto l204
				l208:
					position, tokenIndex = position204, tokenIndex204
					if buffer[position] != rune('f') {
						goto l209
					}
					position++
					if buffer[position] != rune('o') {
						goto l209
					}
					position++
					goto l204
				l209:
					position, tokenIndex = position204, tokenIndex204
					if buffer[position] != rune('f') {
						goto l202
					}
					position++
				}
			l204:
				{
					position210, tokenIndex210 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l211
					}
					position++
					goto l210
				l211:
					position, tokenIndex = position210, tokenIndex210
					{
						position212, tokenIndex212 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l202
						}
						position, tokenIndex = position212, tokenIndex212
					}
				}
			l210:
				add(ruleRankForma, position203)
			}
			return true
		l202:
			position, tokenIndex = position202, tokenIndex202
			return false
		},
		/* 27 RankSsp <- <((('s' 's' 'p') / ('s' 'u' 'b' 's' 'p' 'e' 'c') / ('s' 'u' 'b' 's' 'p')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position213, tokenIndex213 := position, tokenIndex
			{
				position214 := position
				{
					position215, tokenIndex215 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l216
					}
					position++
					if buffer[position] != rune('s') {
						goto l216
					}
					position++
					if buffer[position] != rune('p') {
						goto l216
					}
					position++
					goto l215
				l216:
					position, tokenIndex = position215, tokenIndex215
					if buffer[position] != rune('s') {
						goto l217
					}
					position++
					if buffer[position] != rune('u') {
						goto l217
					}
					position++
					if buffer[position] != rune('b') {
						goto l217
					}
					position++
					if buffer[position] != rune('s') {
						goto l217
					}
					position++
					if buffer[position] != rune('p') {
						goto l217
					}
					position++
					if buffer[position] != rune('e') {
						goto l217
					}
					position++
					if buffer[position] != rune('c') {
						goto l217
					}
					position++
					goto l215
				l217:
					position, tokenIndex = position215, tokenIndex215
					if buffer[position] != rune('s') {
						goto l213
					}
					position++
					if buffer[position] != rune('u') {
						goto l213
					}
					position++
					if buffer[position] != rune('b') {
						goto l213
					}
					position++
					if buffer[position] != rune('s') {
						goto l213
					}
					position++
					if buffer[position] != rune('p') {
						goto l213
					}
					position++
				}
			l215:
				{
					position218, tokenIndex218 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l219
					}
					position++
					goto l218
				l219:
					position, tokenIndex = position218, tokenIndex218
					{
						position220, tokenIndex220 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l213
						}
						position, tokenIndex = position220, tokenIndex220
					}
				}
			l218:
				add(ruleRankSsp, position214)
			}
			return true
		l213:
			position, tokenIndex = position213, tokenIndex213
			return false
		},
		/* 28 RankAgamo <- <((('a' 'g' 'a' 'm' 'o' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 's' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position221, tokenIndex221 := position, tokenIndex
			{
				position222 := position
				{
					position223, tokenIndex223 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l224
					}
					position++
					if buffer[position] != rune('g') {
						goto l224
					}
					position++
					if buffer[position] != rune('a') {
						goto l224
					}
					position++
					if buffer[position] != rune('m') {
						goto l224
					}
					position++
					if buffer[position] != rune('o') {
						goto l224
					}
					position++
					if buffer[position] != rune('s') {
						goto l224
					}
					position++
					if buffer[position] != rune('p') {
						goto l224
					}
					position++
					goto l223
				l224:
					position, tokenIndex = position223, tokenIndex223
					if buffer[position] != rune('a') {
						goto l225
					}
					position++
					if buffer[position] != rune('g') {
						goto l225
					}
					position++
					if buffer[position] != rune('a') {
						goto l225
					}
					position++
					if buffer[position] != rune('m') {
						goto l225
					}
					position++
					if buffer[position] != rune('o') {
						goto l225
					}
					position++
					if buffer[position] != rune('s') {
						goto l225
					}
					position++
					if buffer[position] != rune('s') {
						goto l225
					}
					position++
					if buffer[position] != rune('p') {
						goto l225
					}
					position++
					goto l223
				l225:
					position, tokenIndex = position223, tokenIndex223
					if buffer[position] != rune('a') {
						goto l221
					}
					position++
					if buffer[position] != rune('g') {
						goto l221
					}
					position++
					if buffer[position] != rune('a') {
						goto l221
					}
					position++
					if buffer[position] != rune('m') {
						goto l221
					}
					position++
					if buffer[position] != rune('o') {
						goto l221
					}
					position++
					if buffer[position] != rune('v') {
						goto l221
					}
					position++
					if buffer[position] != rune('a') {
						goto l221
					}
					position++
					if buffer[position] != rune('r') {
						goto l221
					}
					position++
				}
			l223:
				{
					position226, tokenIndex226 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l227
					}
					position++
					goto l226
				l227:
					position, tokenIndex = position226, tokenIndex226
					{
						position228, tokenIndex228 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l221
						}
						position, tokenIndex = position228, tokenIndex228
					}
				}
			l226:
				add(ruleRankAgamo, position222)
			}
			return true
		l221:
			position, tokenIndex = position221, tokenIndex221
			return false
		},
		/* 29 SubgenusOrSuperspecies <- <('(' _? NameLowerChar+ _? ')')> */
		func() bool {
			position229, tokenIndex229 := position, tokenIndex
			{
				position230 := position
				if buffer[position] != rune('(') {
					goto l229
				}
				position++
				{
					position231, tokenIndex231 := position, tokenIndex
					if !_rules[rule_]() {
						goto l231
					}
					goto l232
				l231:
					position, tokenIndex = position231, tokenIndex231
				}
			l232:
				if !_rules[ruleNameLowerChar]() {
					goto l229
				}
			l233:
				{
					position234, tokenIndex234 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l234
					}
					goto l233
				l234:
					position, tokenIndex = position234, tokenIndex234
				}
				{
					position235, tokenIndex235 := position, tokenIndex
					if !_rules[rule_]() {
						goto l235
					}
					goto l236
				l235:
					position, tokenIndex = position235, tokenIndex235
				}
			l236:
				if buffer[position] != rune(')') {
					goto l229
				}
				position++
				add(ruleSubgenusOrSuperspecies, position230)
			}
			return true
		l229:
			position, tokenIndex = position229, tokenIndex229
			return false
		},
		/* 30 Subgenus <- <(Subgenus2 / Subgenus1)> */
		func() bool {
			position237, tokenIndex237 := position, tokenIndex
			{
				position238 := position
				{
					position239, tokenIndex239 := position, tokenIndex
					if !_rules[ruleSubgenus2]() {
						goto l240
					}
					goto l239
				l240:
					position, tokenIndex = position239, tokenIndex239
					if !_rules[ruleSubgenus1]() {
						goto l237
					}
				}
			l239:
				add(ruleSubgenus, position238)
			}
			return true
		l237:
			position, tokenIndex = position237, tokenIndex237
			return false
		},
		/* 31 Subgenus2 <- <('(' _? AbbrSubgenus _? ')' !(_? NameUpperChar))> */
		func() bool {
			position241, tokenIndex241 := position, tokenIndex
			{
				position242 := position
				if buffer[position] != rune('(') {
					goto l241
				}
				position++
				{
					position243, tokenIndex243 := position, tokenIndex
					if !_rules[rule_]() {
						goto l243
					}
					goto l244
				l243:
					position, tokenIndex = position243, tokenIndex243
				}
			l244:
				if !_rules[ruleAbbrSubgenus]() {
					goto l241
				}
				{
					position245, tokenIndex245 := position, tokenIndex
					if !_rules[rule_]() {
						goto l245
					}
					goto l246
				l245:
					position, tokenIndex = position245, tokenIndex245
				}
			l246:
				if buffer[position] != rune(')') {
					goto l241
				}
				position++
				{
					position247, tokenIndex247 := position, tokenIndex
					{
						position248, tokenIndex248 := position, tokenIndex
						if !_rules[rule_]() {
							goto l248
						}
						goto l249
					l248:
						position, tokenIndex = position248, tokenIndex248
					}
				l249:
					if !_rules[ruleNameUpperChar]() {
						goto l247
					}
					goto l241
				l247:
					position, tokenIndex = position247, tokenIndex247
				}
				add(ruleSubgenus2, position242)
			}
			return true
		l241:
			position, tokenIndex = position241, tokenIndex241
			return false
		},
		/* 32 Subgenus1 <- <('(' _? UninomialWord _? ')')> */
		func() bool {
			position250, tokenIndex250 := position, tokenIndex
			{
				position251 := position
				if buffer[position] != rune('(') {
					goto l250
				}
				position++
				{
					position252, tokenIndex252 := position, tokenIndex
					if !_rules[rule_]() {
						goto l252
					}
					goto l253
				l252:
					position, tokenIndex = position252, tokenIndex252
				}
			l253:
				if !_rules[ruleUninomialWord]() {
					goto l250
				}
				{
					position254, tokenIndex254 := position, tokenIndex
					if !_rules[rule_]() {
						goto l254
					}
					goto l255
				l254:
					position, tokenIndex = position254, tokenIndex254
				}
			l255:
				if buffer[position] != rune(')') {
					goto l250
				}
				position++
				add(ruleSubgenus1, position251)
			}
			return true
		l250:
			position, tokenIndex = position250, tokenIndex250
			return false
		},
		/* 33 UninomialCombo <- <(UninomialCombo1 / UninomialCombo2)> */
		func() bool {
			position256, tokenIndex256 := position, tokenIndex
			{
				position257 := position
				{
					position258, tokenIndex258 := position, tokenIndex
					if !_rules[ruleUninomialCombo1]() {
						goto l259
					}
					goto l258
				l259:
					position, tokenIndex = position258, tokenIndex258
					if !_rules[ruleUninomialCombo2]() {
						goto l256
					}
				}
			l258:
				add(ruleUninomialCombo, position257)
			}
			return true
		l256:
			position, tokenIndex = position256, tokenIndex256
			return false
		},
		/* 34 UninomialCombo1 <- <(UninomialWord _? Subgenus (_? Authorship)?)> */
		func() bool {
			position260, tokenIndex260 := position, tokenIndex
			{
				position261 := position
				if !_rules[ruleUninomialWord]() {
					goto l260
				}
				{
					position262, tokenIndex262 := position, tokenIndex
					if !_rules[rule_]() {
						goto l262
					}
					goto l263
				l262:
					position, tokenIndex = position262, tokenIndex262
				}
			l263:
				if !_rules[ruleSubgenus]() {
					goto l260
				}
				{
					position264, tokenIndex264 := position, tokenIndex
					{
						position266, tokenIndex266 := position, tokenIndex
						if !_rules[rule_]() {
							goto l266
						}
						goto l267
					l266:
						position, tokenIndex = position266, tokenIndex266
					}
				l267:
					if !_rules[ruleAuthorship]() {
						goto l264
					}
					goto l265
				l264:
					position, tokenIndex = position264, tokenIndex264
				}
			l265:
				add(ruleUninomialCombo1, position261)
			}
			return true
		l260:
			position, tokenIndex = position260, tokenIndex260
			return false
		},
		/* 35 UninomialCombo2 <- <(Uninomial _ RankUninomial _ Uninomial)> */
		func() bool {
			position268, tokenIndex268 := position, tokenIndex
			{
				position269 := position
				if !_rules[ruleUninomial]() {
					goto l268
				}
				if !_rules[rule_]() {
					goto l268
				}
				if !_rules[ruleRankUninomial]() {
					goto l268
				}
				if !_rules[rule_]() {
					goto l268
				}
				if !_rules[ruleUninomial]() {
					goto l268
				}
				add(ruleUninomialCombo2, position269)
			}
			return true
		l268:
			position, tokenIndex = position268, tokenIndex268
			return false
		},
		/* 36 RankUninomial <- <(RankUninomialPlain / RankUninomialNotho)> */
		func() bool {
			position270, tokenIndex270 := position, tokenIndex
			{
				position271 := position
				{
					position272, tokenIndex272 := position, tokenIndex
					if !_rules[ruleRankUninomialPlain]() {
						goto l273
					}
					goto l272
				l273:
					position, tokenIndex = position272, tokenIndex272
					if !_rules[ruleRankUninomialNotho]() {
						goto l270
					}
				}
			l272:
				add(ruleRankUninomial, position271)
			}
			return true
		l270:
			position, tokenIndex = position270, tokenIndex270
			return false
		},
		/* 37 RankUninomialPlain <- <((('s' 'e' 'c' 't') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('t' 'r' 'i' 'b') / ('s' 'u' 'b' 't' 'r' 'i' 'b') / ('s' 'u' 'b' 's' 'e' 'r') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('f' 'a' 'm') / ('s' 'u' 'b' 'f' 'a' 'm') / ('s' 'u' 'p' 'e' 'r' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position274, tokenIndex274 := position, tokenIndex
			{
				position275 := position
				{
					position276, tokenIndex276 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l277
					}
					position++
					if buffer[position] != rune('e') {
						goto l277
					}
					position++
					if buffer[position] != rune('c') {
						goto l277
					}
					position++
					if buffer[position] != rune('t') {
						goto l277
					}
					position++
					goto l276
				l277:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('s') {
						goto l278
					}
					position++
					if buffer[position] != rune('u') {
						goto l278
					}
					position++
					if buffer[position] != rune('b') {
						goto l278
					}
					position++
					if buffer[position] != rune('s') {
						goto l278
					}
					position++
					if buffer[position] != rune('e') {
						goto l278
					}
					position++
					if buffer[position] != rune('c') {
						goto l278
					}
					position++
					if buffer[position] != rune('t') {
						goto l278
					}
					position++
					goto l276
				l278:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('t') {
						goto l279
					}
					position++
					if buffer[position] != rune('r') {
						goto l279
					}
					position++
					if buffer[position] != rune('i') {
						goto l279
					}
					position++
					if buffer[position] != rune('b') {
						goto l279
					}
					position++
					goto l276
				l279:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('s') {
						goto l280
					}
					position++
					if buffer[position] != rune('u') {
						goto l280
					}
					position++
					if buffer[position] != rune('b') {
						goto l280
					}
					position++
					if buffer[position] != rune('t') {
						goto l280
					}
					position++
					if buffer[position] != rune('r') {
						goto l280
					}
					position++
					if buffer[position] != rune('i') {
						goto l280
					}
					position++
					if buffer[position] != rune('b') {
						goto l280
					}
					position++
					goto l276
				l280:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('s') {
						goto l281
					}
					position++
					if buffer[position] != rune('u') {
						goto l281
					}
					position++
					if buffer[position] != rune('b') {
						goto l281
					}
					position++
					if buffer[position] != rune('s') {
						goto l281
					}
					position++
					if buffer[position] != rune('e') {
						goto l281
					}
					position++
					if buffer[position] != rune('r') {
						goto l281
					}
					position++
					goto l276
				l281:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('s') {
						goto l282
					}
					position++
					if buffer[position] != rune('e') {
						goto l282
					}
					position++
					if buffer[position] != rune('r') {
						goto l282
					}
					position++
					goto l276
				l282:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('s') {
						goto l283
					}
					position++
					if buffer[position] != rune('u') {
						goto l283
					}
					position++
					if buffer[position] != rune('b') {
						goto l283
					}
					position++
					if buffer[position] != rune('g') {
						goto l283
					}
					position++
					if buffer[position] != rune('e') {
						goto l283
					}
					position++
					if buffer[position] != rune('n') {
						goto l283
					}
					position++
					goto l276
				l283:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('s') {
						goto l284
					}
					position++
					if buffer[position] != rune('u') {
						goto l284
					}
					position++
					if buffer[position] != rune('b') {
						goto l284
					}
					position++
					if buffer[position] != rune('g') {
						goto l284
					}
					position++
					goto l276
				l284:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('f') {
						goto l285
					}
					position++
					if buffer[position] != rune('a') {
						goto l285
					}
					position++
					if buffer[position] != rune('m') {
						goto l285
					}
					position++
					goto l276
				l285:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('s') {
						goto l286
					}
					position++
					if buffer[position] != rune('u') {
						goto l286
					}
					position++
					if buffer[position] != rune('b') {
						goto l286
					}
					position++
					if buffer[position] != rune('f') {
						goto l286
					}
					position++
					if buffer[position] != rune('a') {
						goto l286
					}
					position++
					if buffer[position] != rune('m') {
						goto l286
					}
					position++
					goto l276
				l286:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('s') {
						goto l274
					}
					position++
					if buffer[position] != rune('u') {
						goto l274
					}
					position++
					if buffer[position] != rune('p') {
						goto l274
					}
					position++
					if buffer[position] != rune('e') {
						goto l274
					}
					position++
					if buffer[position] != rune('r') {
						goto l274
					}
					position++
					if buffer[position] != rune('t') {
						goto l274
					}
					position++
					if buffer[position] != rune('r') {
						goto l274
					}
					position++
					if buffer[position] != rune('i') {
						goto l274
					}
					position++
					if buffer[position] != rune('b') {
						goto l274
					}
					position++
				}
			l276:
				{
					position287, tokenIndex287 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l288
					}
					position++
					goto l287
				l288:
					position, tokenIndex = position287, tokenIndex287
					{
						position289, tokenIndex289 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l274
						}
						position, tokenIndex = position289, tokenIndex289
					}
				}
			l287:
				add(ruleRankUninomialPlain, position275)
			}
			return true
		l274:
			position, tokenIndex = position274, tokenIndex274
			return false
		},
		/* 38 RankUninomialNotho <- <('n' 'o' 't' 'h' 'o' _? (('s' 'e' 'c' 't') / ('g' 'e' 'n') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'e' 'n') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('s' 'u' 'b' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position290, tokenIndex290 := position, tokenIndex
			{
				position291 := position
				if buffer[position] != rune('n') {
					goto l290
				}
				position++
				if buffer[position] != rune('o') {
					goto l290
				}
				position++
				if buffer[position] != rune('t') {
					goto l290
				}
				position++
				if buffer[position] != rune('h') {
					goto l290
				}
				position++
				if buffer[position] != rune('o') {
					goto l290
				}
				position++
				{
					position292, tokenIndex292 := position, tokenIndex
					if !_rules[rule_]() {
						goto l292
					}
					goto l293
				l292:
					position, tokenIndex = position292, tokenIndex292
				}
			l293:
				{
					position294, tokenIndex294 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l295
					}
					position++
					if buffer[position] != rune('e') {
						goto l295
					}
					position++
					if buffer[position] != rune('c') {
						goto l295
					}
					position++
					if buffer[position] != rune('t') {
						goto l295
					}
					position++
					goto l294
				l295:
					position, tokenIndex = position294, tokenIndex294
					if buffer[position] != rune('g') {
						goto l296
					}
					position++
					if buffer[position] != rune('e') {
						goto l296
					}
					position++
					if buffer[position] != rune('n') {
						goto l296
					}
					position++
					goto l294
				l296:
					position, tokenIndex = position294, tokenIndex294
					if buffer[position] != rune('s') {
						goto l297
					}
					position++
					if buffer[position] != rune('e') {
						goto l297
					}
					position++
					if buffer[position] != rune('r') {
						goto l297
					}
					position++
					goto l294
				l297:
					position, tokenIndex = position294, tokenIndex294
					if buffer[position] != rune('s') {
						goto l298
					}
					position++
					if buffer[position] != rune('u') {
						goto l298
					}
					position++
					if buffer[position] != rune('b') {
						goto l298
					}
					position++
					if buffer[position] != rune('g') {
						goto l298
					}
					position++
					if buffer[position] != rune('e') {
						goto l298
					}
					position++
					if buffer[position] != rune('e') {
						goto l298
					}
					position++
					if buffer[position] != rune('n') {
						goto l298
					}
					position++
					goto l294
				l298:
					position, tokenIndex = position294, tokenIndex294
					if buffer[position] != rune('s') {
						goto l299
					}
					position++
					if buffer[position] != rune('u') {
						goto l299
					}
					position++
					if buffer[position] != rune('b') {
						goto l299
					}
					position++
					if buffer[position] != rune('g') {
						goto l299
					}
					position++
					if buffer[position] != rune('e') {
						goto l299
					}
					position++
					if buffer[position] != rune('n') {
						goto l299
					}
					position++
					goto l294
				l299:
					position, tokenIndex = position294, tokenIndex294
					if buffer[position] != rune('s') {
						goto l300
					}
					position++
					if buffer[position] != rune('u') {
						goto l300
					}
					position++
					if buffer[position] != rune('b') {
						goto l300
					}
					position++
					if buffer[position] != rune('g') {
						goto l300
					}
					position++
					goto l294
				l300:
					position, tokenIndex = position294, tokenIndex294
					if buffer[position] != rune('s') {
						goto l301
					}
					position++
					if buffer[position] != rune('u') {
						goto l301
					}
					position++
					if buffer[position] != rune('b') {
						goto l301
					}
					position++
					if buffer[position] != rune('s') {
						goto l301
					}
					position++
					if buffer[position] != rune('e') {
						goto l301
					}
					position++
					if buffer[position] != rune('c') {
						goto l301
					}
					position++
					if buffer[position] != rune('t') {
						goto l301
					}
					position++
					goto l294
				l301:
					position, tokenIndex = position294, tokenIndex294
					if buffer[position] != rune('s') {
						goto l290
					}
					position++
					if buffer[position] != rune('u') {
						goto l290
					}
					position++
					if buffer[position] != rune('b') {
						goto l290
					}
					position++
					if buffer[position] != rune('t') {
						goto l290
					}
					position++
					if buffer[position] != rune('r') {
						goto l290
					}
					position++
					if buffer[position] != rune('i') {
						goto l290
					}
					position++
					if buffer[position] != rune('b') {
						goto l290
					}
					position++
				}
			l294:
				{
					position302, tokenIndex302 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l303
					}
					position++
					goto l302
				l303:
					position, tokenIndex = position302, tokenIndex302
					{
						position304, tokenIndex304 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l290
						}
						position, tokenIndex = position304, tokenIndex304
					}
				}
			l302:
				add(ruleRankUninomialNotho, position291)
			}
			return true
		l290:
			position, tokenIndex = position290, tokenIndex290
			return false
		},
		/* 39 Uninomial <- <(UninomialWord (_ Authorship !(_ LowerCharExtended LowerCharExtended LowerCharExtended))?)> */
		func() bool {
			position305, tokenIndex305 := position, tokenIndex
			{
				position306 := position
				if !_rules[ruleUninomialWord]() {
					goto l305
				}
				{
					position307, tokenIndex307 := position, tokenIndex
					if !_rules[rule_]() {
						goto l307
					}
					if !_rules[ruleAuthorship]() {
						goto l307
					}
					{
						position309, tokenIndex309 := position, tokenIndex
						if !_rules[rule_]() {
							goto l309
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l309
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l309
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l309
						}
						goto l307
					l309:
						position, tokenIndex = position309, tokenIndex309
					}
					goto l308
				l307:
					position, tokenIndex = position307, tokenIndex307
				}
			l308:
				add(ruleUninomial, position306)
			}
			return true
		l305:
			position, tokenIndex = position305, tokenIndex305
			return false
		},
		/* 40 UninomialWord <- <(CapWord / TwoLetterGenus)> */
		func() bool {
			position310, tokenIndex310 := position, tokenIndex
			{
				position311 := position
				{
					position312, tokenIndex312 := position, tokenIndex
					if !_rules[ruleCapWord]() {
						goto l313
					}
					goto l312
				l313:
					position, tokenIndex = position312, tokenIndex312
					if !_rules[ruleTwoLetterGenus]() {
						goto l310
					}
				}
			l312:
				add(ruleUninomialWord, position311)
			}
			return true
		l310:
			position, tokenIndex = position310, tokenIndex310
			return false
		},
		/* 41 AbbrSubgenus <- <(UpperChar LowerChar* '.')> */
		func() bool {
			position314, tokenIndex314 := position, tokenIndex
			{
				position315 := position
				if !_rules[ruleUpperChar]() {
					goto l314
				}
			l316:
				{
					position317, tokenIndex317 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l317
					}
					goto l316
				l317:
					position, tokenIndex = position317, tokenIndex317
				}
				if buffer[position] != rune('.') {
					goto l314
				}
				position++
				add(ruleAbbrSubgenus, position315)
			}
			return true
		l314:
			position, tokenIndex = position314, tokenIndex314
			return false
		},
		/* 42 AbbrGenus <- <(UpperChar LowerChar? '.')> */
		func() bool {
			position318, tokenIndex318 := position, tokenIndex
			{
				position319 := position
				if !_rules[ruleUpperChar]() {
					goto l318
				}
				{
					position320, tokenIndex320 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l320
					}
					goto l321
				l320:
					position, tokenIndex = position320, tokenIndex320
				}
			l321:
				if buffer[position] != rune('.') {
					goto l318
				}
				position++
				add(ruleAbbrGenus, position319)
			}
			return true
		l318:
			position, tokenIndex = position318, tokenIndex318
			return false
		},
		/* 43 CapWord <- <(CapWordWithDash / CapWord1)> */
		func() bool {
			position322, tokenIndex322 := position, tokenIndex
			{
				position323 := position
				{
					position324, tokenIndex324 := position, tokenIndex
					if !_rules[ruleCapWordWithDash]() {
						goto l325
					}
					goto l324
				l325:
					position, tokenIndex = position324, tokenIndex324
					if !_rules[ruleCapWord1]() {
						goto l322
					}
				}
			l324:
				add(ruleCapWord, position323)
			}
			return true
		l322:
			position, tokenIndex = position322, tokenIndex322
			return false
		},
		/* 44 CapWord1 <- <(NameUpperChar NameLowerChar NameLowerChar+ '?'?)> */
		func() bool {
			position326, tokenIndex326 := position, tokenIndex
			{
				position327 := position
				if !_rules[ruleNameUpperChar]() {
					goto l326
				}
				if !_rules[ruleNameLowerChar]() {
					goto l326
				}
				if !_rules[ruleNameLowerChar]() {
					goto l326
				}
			l328:
				{
					position329, tokenIndex329 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l329
					}
					goto l328
				l329:
					position, tokenIndex = position329, tokenIndex329
				}
				{
					position330, tokenIndex330 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l330
					}
					position++
					goto l331
				l330:
					position, tokenIndex = position330, tokenIndex330
				}
			l331:
				add(ruleCapWord1, position327)
			}
			return true
		l326:
			position, tokenIndex = position326, tokenIndex326
			return false
		},
		/* 45 CapWordWithDash <- <(CapWord1 Dash (UpperAfterDash / LowerAfterDash))> */
		func() bool {
			position332, tokenIndex332 := position, tokenIndex
			{
				position333 := position
				if !_rules[ruleCapWord1]() {
					goto l332
				}
				if !_rules[ruleDash]() {
					goto l332
				}
				{
					position334, tokenIndex334 := position, tokenIndex
					if !_rules[ruleUpperAfterDash]() {
						goto l335
					}
					goto l334
				l335:
					position, tokenIndex = position334, tokenIndex334
					if !_rules[ruleLowerAfterDash]() {
						goto l332
					}
				}
			l334:
				add(ruleCapWordWithDash, position333)
			}
			return true
		l332:
			position, tokenIndex = position332, tokenIndex332
			return false
		},
		/* 46 UpperAfterDash <- <CapWord1> */
		func() bool {
			position336, tokenIndex336 := position, tokenIndex
			{
				position337 := position
				if !_rules[ruleCapWord1]() {
					goto l336
				}
				add(ruleUpperAfterDash, position337)
			}
			return true
		l336:
			position, tokenIndex = position336, tokenIndex336
			return false
		},
		/* 47 LowerAfterDash <- <Word1> */
		func() bool {
			position338, tokenIndex338 := position, tokenIndex
			{
				position339 := position
				if !_rules[ruleWord1]() {
					goto l338
				}
				add(ruleLowerAfterDash, position339)
			}
			return true
		l338:
			position, tokenIndex = position338, tokenIndex338
			return false
		},
		/* 48 TwoLetterGenus <- <(('C' 'a') / ('E' 'a') / ('G' 'e') / ('I' 'a') / ('I' 'o') / ('I' 'x') / ('L' 'o') / ('O' 'a') / ('R' 'a') / ('T' 'y') / ('U' 'a') / ('A' 'a') / ('J' 'a') / ('Z' 'u') / ('L' 'a') / ('Q' 'u') / ('A' 's') / ('B' 'a'))> */
		func() bool {
			position340, tokenIndex340 := position, tokenIndex
			{
				position341 := position
				{
					position342, tokenIndex342 := position, tokenIndex
					if buffer[position] != rune('C') {
						goto l343
					}
					position++
					if buffer[position] != rune('a') {
						goto l343
					}
					position++
					goto l342
				l343:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('E') {
						goto l344
					}
					position++
					if buffer[position] != rune('a') {
						goto l344
					}
					position++
					goto l342
				l344:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('G') {
						goto l345
					}
					position++
					if buffer[position] != rune('e') {
						goto l345
					}
					position++
					goto l342
				l345:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('I') {
						goto l346
					}
					position++
					if buffer[position] != rune('a') {
						goto l346
					}
					position++
					goto l342
				l346:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('I') {
						goto l347
					}
					position++
					if buffer[position] != rune('o') {
						goto l347
					}
					position++
					goto l342
				l347:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('I') {
						goto l348
					}
					position++
					if buffer[position] != rune('x') {
						goto l348
					}
					position++
					goto l342
				l348:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('L') {
						goto l349
					}
					position++
					if buffer[position] != rune('o') {
						goto l349
					}
					position++
					goto l342
				l349:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('O') {
						goto l350
					}
					position++
					if buffer[position] != rune('a') {
						goto l350
					}
					position++
					goto l342
				l350:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('R') {
						goto l351
					}
					position++
					if buffer[position] != rune('a') {
						goto l351
					}
					position++
					goto l342
				l351:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('T') {
						goto l352
					}
					position++
					if buffer[position] != rune('y') {
						goto l352
					}
					position++
					goto l342
				l352:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('U') {
						goto l353
					}
					position++
					if buffer[position] != rune('a') {
						goto l353
					}
					position++
					goto l342
				l353:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('A') {
						goto l354
					}
					position++
					if buffer[position] != rune('a') {
						goto l354
					}
					position++
					goto l342
				l354:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('J') {
						goto l355
					}
					position++
					if buffer[position] != rune('a') {
						goto l355
					}
					position++
					goto l342
				l355:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('Z') {
						goto l356
					}
					position++
					if buffer[position] != rune('u') {
						goto l356
					}
					position++
					goto l342
				l356:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('L') {
						goto l357
					}
					position++
					if buffer[position] != rune('a') {
						goto l357
					}
					position++
					goto l342
				l357:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('Q') {
						goto l358
					}
					position++
					if buffer[position] != rune('u') {
						goto l358
					}
					position++
					goto l342
				l358:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('A') {
						goto l359
					}
					position++
					if buffer[position] != rune('s') {
						goto l359
					}
					position++
					goto l342
				l359:
					position, tokenIndex = position342, tokenIndex342
					if buffer[position] != rune('B') {
						goto l340
					}
					position++
					if buffer[position] != rune('a') {
						goto l340
					}
					position++
				}
			l342:
				add(ruleTwoLetterGenus, position341)
			}
			return true
		l340:
			position, tokenIndex = position340, tokenIndex340
			return false
		},
		/* 49 Word <- <(!((('e' 'x') / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd') / ('p' 'r' 'o') / AuthorPrefix / RankUninomial / Approximation / Word4) SpaceCharEOI) (WordApostr / WordStartsWithDigit / MultiDashedWord / Word2 / Word1) &(SpaceCharEOI / '('))> */
		func() bool {
			position360, tokenIndex360 := position, tokenIndex
			{
				position361 := position
				{
					position362, tokenIndex362 := position, tokenIndex
					{
						position363, tokenIndex363 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l364
						}
						position++
						if buffer[position] != rune('x') {
							goto l364
						}
						position++
						goto l363
					l364:
						position, tokenIndex = position363, tokenIndex363
						if buffer[position] != rune('e') {
							goto l365
						}
						position++
						if buffer[position] != rune('t') {
							goto l365
						}
						position++
						goto l363
					l365:
						position, tokenIndex = position363, tokenIndex363
						if buffer[position] != rune('a') {
							goto l366
						}
						position++
						if buffer[position] != rune('n') {
							goto l366
						}
						position++
						if buffer[position] != rune('d') {
							goto l366
						}
						position++
						goto l363
					l366:
						position, tokenIndex = position363, tokenIndex363
						if buffer[position] != rune('a') {
							goto l367
						}
						position++
						if buffer[position] != rune('p') {
							goto l367
						}
						position++
						if buffer[position] != rune('u') {
							goto l367
						}
						position++
						if buffer[position] != rune('d') {
							goto l367
						}
						position++
						goto l363
					l367:
						position, tokenIndex = position363, tokenIndex363
						if buffer[position] != rune('p') {
							goto l368
						}
						position++
						if buffer[position] != rune('r') {
							goto l368
						}
						position++
						if buffer[position] != rune('o') {
							goto l368
						}
						position++
						goto l363
					l368:
						position, tokenIndex = position363, tokenIndex363
						if !_rules[ruleAuthorPrefix]() {
							goto l369
						}
						goto l363
					l369:
						position, tokenIndex = position363, tokenIndex363
						if !_rules[ruleRankUninomial]() {
							goto l370
						}
						goto l363
					l370:
						position, tokenIndex = position363, tokenIndex363
						if !_rules[ruleApproximation]() {
							goto l371
						}
						goto l363
					l371:
						position, tokenIndex = position363, tokenIndex363
						if !_rules[ruleWord4]() {
							goto l362
						}
					}
				l363:
					if !_rules[ruleSpaceCharEOI]() {
						goto l362
					}
					goto l360
				l362:
					position, tokenIndex = position362, tokenIndex362
				}
				{
					position372, tokenIndex372 := position, tokenIndex
					if !_rules[ruleWordApostr]() {
						goto l373
					}
					goto l372
				l373:
					position, tokenIndex = position372, tokenIndex372
					if !_rules[ruleWordStartsWithDigit]() {
						goto l374
					}
					goto l372
				l374:
					position, tokenIndex = position372, tokenIndex372
					if !_rules[ruleMultiDashedWord]() {
						goto l375
					}
					goto l372
				l375:
					position, tokenIndex = position372, tokenIndex372
					if !_rules[ruleWord2]() {
						goto l376
					}
					goto l372
				l376:
					position, tokenIndex = position372, tokenIndex372
					if !_rules[ruleWord1]() {
						goto l360
					}
				}
			l372:
				{
					position377, tokenIndex377 := position, tokenIndex
					{
						position378, tokenIndex378 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l379
						}
						goto l378
					l379:
						position, tokenIndex = position378, tokenIndex378
						if buffer[position] != rune('(') {
							goto l360
						}
						position++
					}
				l378:
					position, tokenIndex = position377, tokenIndex377
				}
				add(ruleWord, position361)
			}
			return true
		l360:
			position, tokenIndex = position360, tokenIndex360
			return false
		},
		/* 50 Word1 <- <((LowerASCII Dash)? NameLowerChar NameLowerChar+)> */
		func() bool {
			position380, tokenIndex380 := position, tokenIndex
			{
				position381 := position
				{
					position382, tokenIndex382 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l382
					}
					if !_rules[ruleDash]() {
						goto l382
					}
					goto l383
				l382:
					position, tokenIndex = position382, tokenIndex382
				}
			l383:
				if !_rules[ruleNameLowerChar]() {
					goto l380
				}
				if !_rules[ruleNameLowerChar]() {
					goto l380
				}
			l384:
				{
					position385, tokenIndex385 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l385
					}
					goto l384
				l385:
					position, tokenIndex = position385, tokenIndex385
				}
				add(ruleWord1, position381)
			}
			return true
		l380:
			position, tokenIndex = position380, tokenIndex380
			return false
		},
		/* 51 WordStartsWithDigit <- <(('1' / '2' / '3' / '4' / '5' / '6' / '7' / '8' / '9') Nums? ('.' / Dash)? NameLowerChar NameLowerChar NameLowerChar NameLowerChar+)> */
		func() bool {
			position386, tokenIndex386 := position, tokenIndex
			{
				position387 := position
				{
					position388, tokenIndex388 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l389
					}
					position++
					goto l388
				l389:
					position, tokenIndex = position388, tokenIndex388
					if buffer[position] != rune('2') {
						goto l390
					}
					position++
					goto l388
				l390:
					position, tokenIndex = position388, tokenIndex388
					if buffer[position] != rune('3') {
						goto l391
					}
					position++
					goto l388
				l391:
					position, tokenIndex = position388, tokenIndex388
					if buffer[position] != rune('4') {
						goto l392
					}
					position++
					goto l388
				l392:
					position, tokenIndex = position388, tokenIndex388
					if buffer[position] != rune('5') {
						goto l393
					}
					position++
					goto l388
				l393:
					position, tokenIndex = position388, tokenIndex388
					if buffer[position] != rune('6') {
						goto l394
					}
					position++
					goto l388
				l394:
					position, tokenIndex = position388, tokenIndex388
					if buffer[position] != rune('7') {
						goto l395
					}
					position++
					goto l388
				l395:
					position, tokenIndex = position388, tokenIndex388
					if buffer[position] != rune('8') {
						goto l396
					}
					position++
					goto l388
				l396:
					position, tokenIndex = position388, tokenIndex388
					if buffer[position] != rune('9') {
						goto l386
					}
					position++
				}
			l388:
				{
					position397, tokenIndex397 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l397
					}
					goto l398
				l397:
					position, tokenIndex = position397, tokenIndex397
				}
			l398:
				{
					position399, tokenIndex399 := position, tokenIndex
					{
						position401, tokenIndex401 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l402
						}
						position++
						goto l401
					l402:
						position, tokenIndex = position401, tokenIndex401
						if !_rules[ruleDash]() {
							goto l399
						}
					}
				l401:
					goto l400
				l399:
					position, tokenIndex = position399, tokenIndex399
				}
			l400:
				if !_rules[ruleNameLowerChar]() {
					goto l386
				}
				if !_rules[ruleNameLowerChar]() {
					goto l386
				}
				if !_rules[ruleNameLowerChar]() {
					goto l386
				}
				if !_rules[ruleNameLowerChar]() {
					goto l386
				}
			l403:
				{
					position404, tokenIndex404 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l404
					}
					goto l403
				l404:
					position, tokenIndex = position404, tokenIndex404
				}
				add(ruleWordStartsWithDigit, position387)
			}
			return true
		l386:
			position, tokenIndex = position386, tokenIndex386
			return false
		},
		/* 52 Word2 <- <(NameLowerChar+ Dash? NameLowerChar+)> */
		func() bool {
			position405, tokenIndex405 := position, tokenIndex
			{
				position406 := position
				if !_rules[ruleNameLowerChar]() {
					goto l405
				}
			l407:
				{
					position408, tokenIndex408 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l408
					}
					goto l407
				l408:
					position, tokenIndex = position408, tokenIndex408
				}
				{
					position409, tokenIndex409 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l409
					}
					goto l410
				l409:
					position, tokenIndex = position409, tokenIndex409
				}
			l410:
				if !_rules[ruleNameLowerChar]() {
					goto l405
				}
			l411:
				{
					position412, tokenIndex412 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l412
					}
					goto l411
				l412:
					position, tokenIndex = position412, tokenIndex412
				}
				add(ruleWord2, position406)
			}
			return true
		l405:
			position, tokenIndex = position405, tokenIndex405
			return false
		},
		/* 53 WordApostr <- <(NameLowerChar NameLowerChar* Apostrophe Word1)> */
		func() bool {
			position413, tokenIndex413 := position, tokenIndex
			{
				position414 := position
				if !_rules[ruleNameLowerChar]() {
					goto l413
				}
			l415:
				{
					position416, tokenIndex416 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l416
					}
					goto l415
				l416:
					position, tokenIndex = position416, tokenIndex416
				}
				if !_rules[ruleApostrophe]() {
					goto l413
				}
				if !_rules[ruleWord1]() {
					goto l413
				}
				add(ruleWordApostr, position414)
			}
			return true
		l413:
			position, tokenIndex = position413, tokenIndex413
			return false
		},
		/* 54 Word4 <- <(NameLowerChar+ '.' NameLowerChar)> */
		func() bool {
			position417, tokenIndex417 := position, tokenIndex
			{
				position418 := position
				if !_rules[ruleNameLowerChar]() {
					goto l417
				}
			l419:
				{
					position420, tokenIndex420 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l420
					}
					goto l419
				l420:
					position, tokenIndex = position420, tokenIndex420
				}
				if buffer[position] != rune('.') {
					goto l417
				}
				position++
				if !_rules[ruleNameLowerChar]() {
					goto l417
				}
				add(ruleWord4, position418)
			}
			return true
		l417:
			position, tokenIndex = position417, tokenIndex417
			return false
		},
		/* 55 MultiDashedWord <- <(NameLowerChar+ Dash NameLowerChar+ Dash NameLowerChar+ (Dash NameLowerChar+)?)> */
		func() bool {
			position421, tokenIndex421 := position, tokenIndex
			{
				position422 := position
				if !_rules[ruleNameLowerChar]() {
					goto l421
				}
			l423:
				{
					position424, tokenIndex424 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l424
					}
					goto l423
				l424:
					position, tokenIndex = position424, tokenIndex424
				}
				if !_rules[ruleDash]() {
					goto l421
				}
				if !_rules[ruleNameLowerChar]() {
					goto l421
				}
			l425:
				{
					position426, tokenIndex426 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l426
					}
					goto l425
				l426:
					position, tokenIndex = position426, tokenIndex426
				}
				if !_rules[ruleDash]() {
					goto l421
				}
				if !_rules[ruleNameLowerChar]() {
					goto l421
				}
			l427:
				{
					position428, tokenIndex428 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l428
					}
					goto l427
				l428:
					position, tokenIndex = position428, tokenIndex428
				}
				{
					position429, tokenIndex429 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l429
					}
					if !_rules[ruleNameLowerChar]() {
						goto l429
					}
				l431:
					{
						position432, tokenIndex432 := position, tokenIndex
						if !_rules[ruleNameLowerChar]() {
							goto l432
						}
						goto l431
					l432:
						position, tokenIndex = position432, tokenIndex432
					}
					goto l430
				l429:
					position, tokenIndex = position429, tokenIndex429
				}
			l430:
				add(ruleMultiDashedWord, position422)
			}
			return true
		l421:
			position, tokenIndex = position421, tokenIndex421
			return false
		},
		/* 56 HybridChar <- <'×'> */
		func() bool {
			position433, tokenIndex433 := position, tokenIndex
			{
				position434 := position
				if buffer[position] != rune('×') {
					goto l433
				}
				position++
				add(ruleHybridChar, position434)
			}
			return true
		l433:
			position, tokenIndex = position433, tokenIndex433
			return false
		},
		/* 57 ApproxNameIgnored <- <.*> */
		func() bool {
			{
				position436 := position
			l437:
				{
					position438, tokenIndex438 := position, tokenIndex
					if !matchDot() {
						goto l438
					}
					goto l437
				l438:
					position, tokenIndex = position438, tokenIndex438
				}
				add(ruleApproxNameIgnored, position436)
			}
			return true
		},
		/* 58 Approximation <- <(('s' 'p' '.' _? ('n' 'r' '.')) / ('s' 'p' '.' _? ('a' 'f' 'f' '.')) / ('m' 'o' 'n' 's' 't' '.') / '?' / ((('s' 'p' 'p') / ('n' 'r') / ('s' 'p') / ('a' 'f' 'f') / ('s' 'p' 'e' 'c' 'i' 'e' 's')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position439, tokenIndex439 := position, tokenIndex
			{
				position440 := position
				{
					position441, tokenIndex441 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l442
					}
					position++
					if buffer[position] != rune('p') {
						goto l442
					}
					position++
					if buffer[position] != rune('.') {
						goto l442
					}
					position++
					{
						position443, tokenIndex443 := position, tokenIndex
						if !_rules[rule_]() {
							goto l443
						}
						goto l444
					l443:
						position, tokenIndex = position443, tokenIndex443
					}
				l444:
					if buffer[position] != rune('n') {
						goto l442
					}
					position++
					if buffer[position] != rune('r') {
						goto l442
					}
					position++
					if buffer[position] != rune('.') {
						goto l442
					}
					position++
					goto l441
				l442:
					position, tokenIndex = position441, tokenIndex441
					if buffer[position] != rune('s') {
						goto l445
					}
					position++
					if buffer[position] != rune('p') {
						goto l445
					}
					position++
					if buffer[position] != rune('.') {
						goto l445
					}
					position++
					{
						position446, tokenIndex446 := position, tokenIndex
						if !_rules[rule_]() {
							goto l446
						}
						goto l447
					l446:
						position, tokenIndex = position446, tokenIndex446
					}
				l447:
					if buffer[position] != rune('a') {
						goto l445
					}
					position++
					if buffer[position] != rune('f') {
						goto l445
					}
					position++
					if buffer[position] != rune('f') {
						goto l445
					}
					position++
					if buffer[position] != rune('.') {
						goto l445
					}
					position++
					goto l441
				l445:
					position, tokenIndex = position441, tokenIndex441
					if buffer[position] != rune('m') {
						goto l448
					}
					position++
					if buffer[position] != rune('o') {
						goto l448
					}
					position++
					if buffer[position] != rune('n') {
						goto l448
					}
					position++
					if buffer[position] != rune('s') {
						goto l448
					}
					position++
					if buffer[position] != rune('t') {
						goto l448
					}
					position++
					if buffer[position] != rune('.') {
						goto l448
					}
					position++
					goto l441
				l448:
					position, tokenIndex = position441, tokenIndex441
					if buffer[position] != rune('?') {
						goto l449
					}
					position++
					goto l441
				l449:
					position, tokenIndex = position441, tokenIndex441
					{
						position450, tokenIndex450 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l451
						}
						position++
						if buffer[position] != rune('p') {
							goto l451
						}
						position++
						if buffer[position] != rune('p') {
							goto l451
						}
						position++
						goto l450
					l451:
						position, tokenIndex = position450, tokenIndex450
						if buffer[position] != rune('n') {
							goto l452
						}
						position++
						if buffer[position] != rune('r') {
							goto l452
						}
						position++
						goto l450
					l452:
						position, tokenIndex = position450, tokenIndex450
						if buffer[position] != rune('s') {
							goto l453
						}
						position++
						if buffer[position] != rune('p') {
							goto l453
						}
						position++
						goto l450
					l453:
						position, tokenIndex = position450, tokenIndex450
						if buffer[position] != rune('a') {
							goto l454
						}
						position++
						if buffer[position] != rune('f') {
							goto l454
						}
						position++
						if buffer[position] != rune('f') {
							goto l454
						}
						position++
						goto l450
					l454:
						position, tokenIndex = position450, tokenIndex450
						if buffer[position] != rune('s') {
							goto l439
						}
						position++
						if buffer[position] != rune('p') {
							goto l439
						}
						position++
						if buffer[position] != rune('e') {
							goto l439
						}
						position++
						if buffer[position] != rune('c') {
							goto l439
						}
						position++
						if buffer[position] != rune('i') {
							goto l439
						}
						position++
						if buffer[position] != rune('e') {
							goto l439
						}
						position++
						if buffer[position] != rune('s') {
							goto l439
						}
						position++
					}
				l450:
					{
						position455, tokenIndex455 := position, tokenIndex
						{
							position457, tokenIndex457 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l456
							}
							position, tokenIndex = position457, tokenIndex457
						}
						goto l455
					l456:
						position, tokenIndex = position455, tokenIndex455
						if buffer[position] != rune('.') {
							goto l439
						}
						position++
					}
				l455:
				}
			l441:
				add(ruleApproximation, position440)
			}
			return true
		l439:
			position, tokenIndex = position439, tokenIndex439
			return false
		},
		/* 59 Authorship <- <((AuthorshipCombo / OriginalAuthorship) &(SpaceCharEOI / ';' / ','))> */
		func() bool {
			position458, tokenIndex458 := position, tokenIndex
			{
				position459 := position
				{
					position460, tokenIndex460 := position, tokenIndex
					if !_rules[ruleAuthorshipCombo]() {
						goto l461
					}
					goto l460
				l461:
					position, tokenIndex = position460, tokenIndex460
					if !_rules[ruleOriginalAuthorship]() {
						goto l458
					}
				}
			l460:
				{
					position462, tokenIndex462 := position, tokenIndex
					{
						position463, tokenIndex463 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l464
						}
						goto l463
					l464:
						position, tokenIndex = position463, tokenIndex463
						if buffer[position] != rune(';') {
							goto l465
						}
						position++
						goto l463
					l465:
						position, tokenIndex = position463, tokenIndex463
						if buffer[position] != rune(',') {
							goto l458
						}
						position++
					}
				l463:
					position, tokenIndex = position462, tokenIndex462
				}
				add(ruleAuthorship, position459)
			}
			return true
		l458:
			position, tokenIndex = position458, tokenIndex458
			return false
		},
		/* 60 AuthorshipCombo <- <(OriginalAuthorshipComb (_? CombinationAuthorship)?)> */
		func() bool {
			position466, tokenIndex466 := position, tokenIndex
			{
				position467 := position
				if !_rules[ruleOriginalAuthorshipComb]() {
					goto l466
				}
				{
					position468, tokenIndex468 := position, tokenIndex
					{
						position470, tokenIndex470 := position, tokenIndex
						if !_rules[rule_]() {
							goto l470
						}
						goto l471
					l470:
						position, tokenIndex = position470, tokenIndex470
					}
				l471:
					if !_rules[ruleCombinationAuthorship]() {
						goto l468
					}
					goto l469
				l468:
					position, tokenIndex = position468, tokenIndex468
				}
			l469:
				add(ruleAuthorshipCombo, position467)
			}
			return true
		l466:
			position, tokenIndex = position466, tokenIndex466
			return false
		},
		/* 61 OriginalAuthorship <- <AuthorsGroup> */
		func() bool {
			position472, tokenIndex472 := position, tokenIndex
			{
				position473 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l472
				}
				add(ruleOriginalAuthorship, position473)
			}
			return true
		l472:
			position, tokenIndex = position472, tokenIndex472
			return false
		},
		/* 62 OriginalAuthorshipComb <- <(BasionymAuthorshipYearMisformed / BasionymAuthorship / BasionymAuthorshipMissingParens)> */
		func() bool {
			position474, tokenIndex474 := position, tokenIndex
			{
				position475 := position
				{
					position476, tokenIndex476 := position, tokenIndex
					if !_rules[ruleBasionymAuthorshipYearMisformed]() {
						goto l477
					}
					goto l476
				l477:
					position, tokenIndex = position476, tokenIndex476
					if !_rules[ruleBasionymAuthorship]() {
						goto l478
					}
					goto l476
				l478:
					position, tokenIndex = position476, tokenIndex476
					if !_rules[ruleBasionymAuthorshipMissingParens]() {
						goto l474
					}
				}
			l476:
				add(ruleOriginalAuthorshipComb, position475)
			}
			return true
		l474:
			position, tokenIndex = position474, tokenIndex474
			return false
		},
		/* 63 CombinationAuthorship <- <AuthorsGroup> */
		func() bool {
			position479, tokenIndex479 := position, tokenIndex
			{
				position480 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l479
				}
				add(ruleCombinationAuthorship, position480)
			}
			return true
		l479:
			position, tokenIndex = position479, tokenIndex479
			return false
		},
		/* 64 BasionymAuthorshipMissingParens <- <(MissingParensStart / MissingParensEnd)> */
		func() bool {
			position481, tokenIndex481 := position, tokenIndex
			{
				position482 := position
				{
					position483, tokenIndex483 := position, tokenIndex
					if !_rules[ruleMissingParensStart]() {
						goto l484
					}
					goto l483
				l484:
					position, tokenIndex = position483, tokenIndex483
					if !_rules[ruleMissingParensEnd]() {
						goto l481
					}
				}
			l483:
				add(ruleBasionymAuthorshipMissingParens, position482)
			}
			return true
		l481:
			position, tokenIndex = position481, tokenIndex481
			return false
		},
		/* 65 MissingParensStart <- <('(' _? AuthorsGroup)> */
		func() bool {
			position485, tokenIndex485 := position, tokenIndex
			{
				position486 := position
				if buffer[position] != rune('(') {
					goto l485
				}
				position++
				{
					position487, tokenIndex487 := position, tokenIndex
					if !_rules[rule_]() {
						goto l487
					}
					goto l488
				l487:
					position, tokenIndex = position487, tokenIndex487
				}
			l488:
				if !_rules[ruleAuthorsGroup]() {
					goto l485
				}
				add(ruleMissingParensStart, position486)
			}
			return true
		l485:
			position, tokenIndex = position485, tokenIndex485
			return false
		},
		/* 66 MissingParensEnd <- <(AuthorsGroup _? ')')> */
		func() bool {
			position489, tokenIndex489 := position, tokenIndex
			{
				position490 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l489
				}
				{
					position491, tokenIndex491 := position, tokenIndex
					if !_rules[rule_]() {
						goto l491
					}
					goto l492
				l491:
					position, tokenIndex = position491, tokenIndex491
				}
			l492:
				if buffer[position] != rune(')') {
					goto l489
				}
				position++
				add(ruleMissingParensEnd, position490)
			}
			return true
		l489:
			position, tokenIndex = position489, tokenIndex489
			return false
		},
		/* 67 BasionymAuthorshipYearMisformed <- <('(' _? AuthorsGroup _? ')' (_? ',')? _? Year)> */
		func() bool {
			position493, tokenIndex493 := position, tokenIndex
			{
				position494 := position
				if buffer[position] != rune('(') {
					goto l493
				}
				position++
				{
					position495, tokenIndex495 := position, tokenIndex
					if !_rules[rule_]() {
						goto l495
					}
					goto l496
				l495:
					position, tokenIndex = position495, tokenIndex495
				}
			l496:
				if !_rules[ruleAuthorsGroup]() {
					goto l493
				}
				{
					position497, tokenIndex497 := position, tokenIndex
					if !_rules[rule_]() {
						goto l497
					}
					goto l498
				l497:
					position, tokenIndex = position497, tokenIndex497
				}
			l498:
				if buffer[position] != rune(')') {
					goto l493
				}
				position++
				{
					position499, tokenIndex499 := position, tokenIndex
					{
						position501, tokenIndex501 := position, tokenIndex
						if !_rules[rule_]() {
							goto l501
						}
						goto l502
					l501:
						position, tokenIndex = position501, tokenIndex501
					}
				l502:
					if buffer[position] != rune(',') {
						goto l499
					}
					position++
					goto l500
				l499:
					position, tokenIndex = position499, tokenIndex499
				}
			l500:
				{
					position503, tokenIndex503 := position, tokenIndex
					if !_rules[rule_]() {
						goto l503
					}
					goto l504
				l503:
					position, tokenIndex = position503, tokenIndex503
				}
			l504:
				if !_rules[ruleYear]() {
					goto l493
				}
				add(ruleBasionymAuthorshipYearMisformed, position494)
			}
			return true
		l493:
			position, tokenIndex = position493, tokenIndex493
			return false
		},
		/* 68 BasionymAuthorship <- <(BasionymAuthorship1 / BasionymAuthorship2Parens)> */
		func() bool {
			position505, tokenIndex505 := position, tokenIndex
			{
				position506 := position
				{
					position507, tokenIndex507 := position, tokenIndex
					if !_rules[ruleBasionymAuthorship1]() {
						goto l508
					}
					goto l507
				l508:
					position, tokenIndex = position507, tokenIndex507
					if !_rules[ruleBasionymAuthorship2Parens]() {
						goto l505
					}
				}
			l507:
				add(ruleBasionymAuthorship, position506)
			}
			return true
		l505:
			position, tokenIndex = position505, tokenIndex505
			return false
		},
		/* 69 BasionymAuthorship1 <- <('(' _? AuthorsGroup _? ')')> */
		func() bool {
			position509, tokenIndex509 := position, tokenIndex
			{
				position510 := position
				if buffer[position] != rune('(') {
					goto l509
				}
				position++
				{
					position511, tokenIndex511 := position, tokenIndex
					if !_rules[rule_]() {
						goto l511
					}
					goto l512
				l511:
					position, tokenIndex = position511, tokenIndex511
				}
			l512:
				if !_rules[ruleAuthorsGroup]() {
					goto l509
				}
				{
					position513, tokenIndex513 := position, tokenIndex
					if !_rules[rule_]() {
						goto l513
					}
					goto l514
				l513:
					position, tokenIndex = position513, tokenIndex513
				}
			l514:
				if buffer[position] != rune(')') {
					goto l509
				}
				position++
				add(ruleBasionymAuthorship1, position510)
			}
			return true
		l509:
			position, tokenIndex = position509, tokenIndex509
			return false
		},
		/* 70 BasionymAuthorship2Parens <- <('(' _? '(' _? AuthorsGroup _? ')' _? ')')> */
		func() bool {
			position515, tokenIndex515 := position, tokenIndex
			{
				position516 := position
				if buffer[position] != rune('(') {
					goto l515
				}
				position++
				{
					position517, tokenIndex517 := position, tokenIndex
					if !_rules[rule_]() {
						goto l517
					}
					goto l518
				l517:
					position, tokenIndex = position517, tokenIndex517
				}
			l518:
				if buffer[position] != rune('(') {
					goto l515
				}
				position++
				{
					position519, tokenIndex519 := position, tokenIndex
					if !_rules[rule_]() {
						goto l519
					}
					goto l520
				l519:
					position, tokenIndex = position519, tokenIndex519
				}
			l520:
				if !_rules[ruleAuthorsGroup]() {
					goto l515
				}
				{
					position521, tokenIndex521 := position, tokenIndex
					if !_rules[rule_]() {
						goto l521
					}
					goto l522
				l521:
					position, tokenIndex = position521, tokenIndex521
				}
			l522:
				if buffer[position] != rune(')') {
					goto l515
				}
				position++
				{
					position523, tokenIndex523 := position, tokenIndex
					if !_rules[rule_]() {
						goto l523
					}
					goto l524
				l523:
					position, tokenIndex = position523, tokenIndex523
				}
			l524:
				if buffer[position] != rune(')') {
					goto l515
				}
				position++
				add(ruleBasionymAuthorship2Parens, position516)
			}
			return true
		l515:
			position, tokenIndex = position515, tokenIndex515
			return false
		},
		/* 71 AuthorsGroup <- <(AuthorsTeam (_ (AuthorEmend / AuthorEx) AuthorsTeam)?)> */
		func() bool {
			position525, tokenIndex525 := position, tokenIndex
			{
				position526 := position
				if !_rules[ruleAuthorsTeam]() {
					goto l525
				}
				{
					position527, tokenIndex527 := position, tokenIndex
					if !_rules[rule_]() {
						goto l527
					}
					{
						position529, tokenIndex529 := position, tokenIndex
						if !_rules[ruleAuthorEmend]() {
							goto l530
						}
						goto l529
					l530:
						position, tokenIndex = position529, tokenIndex529
						if !_rules[ruleAuthorEx]() {
							goto l527
						}
					}
				l529:
					if !_rules[ruleAuthorsTeam]() {
						goto l527
					}
					goto l528
				l527:
					position, tokenIndex = position527, tokenIndex527
				}
			l528:
				add(ruleAuthorsGroup, position526)
			}
			return true
		l525:
			position, tokenIndex = position525, tokenIndex525
			return false
		},
		/* 72 AuthorsTeam <- <(Author (AuthorSep Author)* (_? ','? _? Year)?)> */
		func() bool {
			position531, tokenIndex531 := position, tokenIndex
			{
				position532 := position
				if !_rules[ruleAuthor]() {
					goto l531
				}
			l533:
				{
					position534, tokenIndex534 := position, tokenIndex
					if !_rules[ruleAuthorSep]() {
						goto l534
					}
					if !_rules[ruleAuthor]() {
						goto l534
					}
					goto l533
				l534:
					position, tokenIndex = position534, tokenIndex534
				}
				{
					position535, tokenIndex535 := position, tokenIndex
					{
						position537, tokenIndex537 := position, tokenIndex
						if !_rules[rule_]() {
							goto l537
						}
						goto l538
					l537:
						position, tokenIndex = position537, tokenIndex537
					}
				l538:
					{
						position539, tokenIndex539 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l539
						}
						position++
						goto l540
					l539:
						position, tokenIndex = position539, tokenIndex539
					}
				l540:
					{
						position541, tokenIndex541 := position, tokenIndex
						if !_rules[rule_]() {
							goto l541
						}
						goto l542
					l541:
						position, tokenIndex = position541, tokenIndex541
					}
				l542:
					if !_rules[ruleYear]() {
						goto l535
					}
					goto l536
				l535:
					position, tokenIndex = position535, tokenIndex535
				}
			l536:
				add(ruleAuthorsTeam, position532)
			}
			return true
		l531:
			position, tokenIndex = position531, tokenIndex531
			return false
		},
		/* 73 AuthorSep <- <(AuthorSep1 / AuthorSep2)> */
		func() bool {
			position543, tokenIndex543 := position, tokenIndex
			{
				position544 := position
				{
					position545, tokenIndex545 := position, tokenIndex
					if !_rules[ruleAuthorSep1]() {
						goto l546
					}
					goto l545
				l546:
					position, tokenIndex = position545, tokenIndex545
					if !_rules[ruleAuthorSep2]() {
						goto l543
					}
				}
			l545:
				add(ruleAuthorSep, position544)
			}
			return true
		l543:
			position, tokenIndex = position543, tokenIndex543
			return false
		},
		/* 74 AuthorSep1 <- <(_? (',' _)? ('&' / AuthorSepSpanish / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd')) _?)> */
		func() bool {
			position547, tokenIndex547 := position, tokenIndex
			{
				position548 := position
				{
					position549, tokenIndex549 := position, tokenIndex
					if !_rules[rule_]() {
						goto l549
					}
					goto l550
				l549:
					position, tokenIndex = position549, tokenIndex549
				}
			l550:
				{
					position551, tokenIndex551 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l551
					}
					position++
					if !_rules[rule_]() {
						goto l551
					}
					goto l552
				l551:
					position, tokenIndex = position551, tokenIndex551
				}
			l552:
				{
					position553, tokenIndex553 := position, tokenIndex
					if buffer[position] != rune('&') {
						goto l554
					}
					position++
					goto l553
				l554:
					position, tokenIndex = position553, tokenIndex553
					if !_rules[ruleAuthorSepSpanish]() {
						goto l555
					}
					goto l553
				l555:
					position, tokenIndex = position553, tokenIndex553
					if buffer[position] != rune('e') {
						goto l556
					}
					position++
					if buffer[position] != rune('t') {
						goto l556
					}
					position++
					goto l553
				l556:
					position, tokenIndex = position553, tokenIndex553
					if buffer[position] != rune('a') {
						goto l557
					}
					position++
					if buffer[position] != rune('n') {
						goto l557
					}
					position++
					if buffer[position] != rune('d') {
						goto l557
					}
					position++
					goto l553
				l557:
					position, tokenIndex = position553, tokenIndex553
					if buffer[position] != rune('a') {
						goto l547
					}
					position++
					if buffer[position] != rune('p') {
						goto l547
					}
					position++
					if buffer[position] != rune('u') {
						goto l547
					}
					position++
					if buffer[position] != rune('d') {
						goto l547
					}
					position++
				}
			l553:
				{
					position558, tokenIndex558 := position, tokenIndex
					if !_rules[rule_]() {
						goto l558
					}
					goto l559
				l558:
					position, tokenIndex = position558, tokenIndex558
				}
			l559:
				add(ruleAuthorSep1, position548)
			}
			return true
		l547:
			position, tokenIndex = position547, tokenIndex547
			return false
		},
		/* 75 AuthorSep2 <- <(_? ',' _?)> */
		func() bool {
			position560, tokenIndex560 := position, tokenIndex
			{
				position561 := position
				{
					position562, tokenIndex562 := position, tokenIndex
					if !_rules[rule_]() {
						goto l562
					}
					goto l563
				l562:
					position, tokenIndex = position562, tokenIndex562
				}
			l563:
				if buffer[position] != rune(',') {
					goto l560
				}
				position++
				{
					position564, tokenIndex564 := position, tokenIndex
					if !_rules[rule_]() {
						goto l564
					}
					goto l565
				l564:
					position, tokenIndex = position564, tokenIndex564
				}
			l565:
				add(ruleAuthorSep2, position561)
			}
			return true
		l560:
			position, tokenIndex = position560, tokenIndex560
			return false
		},
		/* 76 AuthorSepSpanish <- <(_? 'y' _?)> */
		func() bool {
			position566, tokenIndex566 := position, tokenIndex
			{
				position567 := position
				{
					position568, tokenIndex568 := position, tokenIndex
					if !_rules[rule_]() {
						goto l568
					}
					goto l569
				l568:
					position, tokenIndex = position568, tokenIndex568
				}
			l569:
				if buffer[position] != rune('y') {
					goto l566
				}
				position++
				{
					position570, tokenIndex570 := position, tokenIndex
					if !_rules[rule_]() {
						goto l570
					}
					goto l571
				l570:
					position, tokenIndex = position570, tokenIndex570
				}
			l571:
				add(ruleAuthorSepSpanish, position567)
			}
			return true
		l566:
			position, tokenIndex = position566, tokenIndex566
			return false
		},
		/* 77 AuthorEx <- <((('e' 'x' '.'?) / ('i' 'n')) _)> */
		func() bool {
			position572, tokenIndex572 := position, tokenIndex
			{
				position573 := position
				{
					position574, tokenIndex574 := position, tokenIndex
					if buffer[position] != rune('e') {
						goto l575
					}
					position++
					if buffer[position] != rune('x') {
						goto l575
					}
					position++
					{
						position576, tokenIndex576 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l576
						}
						position++
						goto l577
					l576:
						position, tokenIndex = position576, tokenIndex576
					}
				l577:
					goto l574
				l575:
					position, tokenIndex = position574, tokenIndex574
					if buffer[position] != rune('i') {
						goto l572
					}
					position++
					if buffer[position] != rune('n') {
						goto l572
					}
					position++
				}
			l574:
				if !_rules[rule_]() {
					goto l572
				}
				add(ruleAuthorEx, position573)
			}
			return true
		l572:
			position, tokenIndex = position572, tokenIndex572
			return false
		},
		/* 78 AuthorEmend <- <('e' 'm' 'e' 'n' 'd' '.'? _)> */
		func() bool {
			position578, tokenIndex578 := position, tokenIndex
			{
				position579 := position
				if buffer[position] != rune('e') {
					goto l578
				}
				position++
				if buffer[position] != rune('m') {
					goto l578
				}
				position++
				if buffer[position] != rune('e') {
					goto l578
				}
				position++
				if buffer[position] != rune('n') {
					goto l578
				}
				position++
				if buffer[position] != rune('d') {
					goto l578
				}
				position++
				{
					position580, tokenIndex580 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l580
					}
					position++
					goto l581
				l580:
					position, tokenIndex = position580, tokenIndex580
				}
			l581:
				if !_rules[rule_]() {
					goto l578
				}
				add(ruleAuthorEmend, position579)
			}
			return true
		l578:
			position, tokenIndex = position578, tokenIndex578
			return false
		},
		/* 79 Author <- <((Author0 / Author1 / Author2 / UnknownAuthor) (_ AuthorEtAl)?)> */
		func() bool {
			position582, tokenIndex582 := position, tokenIndex
			{
				position583 := position
				{
					position584, tokenIndex584 := position, tokenIndex
					if !_rules[ruleAuthor0]() {
						goto l585
					}
					goto l584
				l585:
					position, tokenIndex = position584, tokenIndex584
					if !_rules[ruleAuthor1]() {
						goto l586
					}
					goto l584
				l586:
					position, tokenIndex = position584, tokenIndex584
					if !_rules[ruleAuthor2]() {
						goto l587
					}
					goto l584
				l587:
					position, tokenIndex = position584, tokenIndex584
					if !_rules[ruleUnknownAuthor]() {
						goto l582
					}
				}
			l584:
				{
					position588, tokenIndex588 := position, tokenIndex
					if !_rules[rule_]() {
						goto l588
					}
					if !_rules[ruleAuthorEtAl]() {
						goto l588
					}
					goto l589
				l588:
					position, tokenIndex = position588, tokenIndex588
				}
			l589:
				add(ruleAuthor, position583)
			}
			return true
		l582:
			position, tokenIndex = position582, tokenIndex582
			return false
		},
		/* 80 Author0 <- <(Author2 FiliusFNoSpace)> */
		func() bool {
			position590, tokenIndex590 := position, tokenIndex
			{
				position591 := position
				if !_rules[ruleAuthor2]() {
					goto l590
				}
				if !_rules[ruleFiliusFNoSpace]() {
					goto l590
				}
				add(ruleAuthor0, position591)
			}
			return true
		l590:
			position, tokenIndex = position590, tokenIndex590
			return false
		},
		/* 81 Author1 <- <(Author2 _? (Filius / AuthorSuffix))> */
		func() bool {
			position592, tokenIndex592 := position, tokenIndex
			{
				position593 := position
				if !_rules[ruleAuthor2]() {
					goto l592
				}
				{
					position594, tokenIndex594 := position, tokenIndex
					if !_rules[rule_]() {
						goto l594
					}
					goto l595
				l594:
					position, tokenIndex = position594, tokenIndex594
				}
			l595:
				{
					position596, tokenIndex596 := position, tokenIndex
					if !_rules[ruleFilius]() {
						goto l597
					}
					goto l596
				l597:
					position, tokenIndex = position596, tokenIndex596
					if !_rules[ruleAuthorSuffix]() {
						goto l592
					}
				}
			l596:
				add(ruleAuthor1, position593)
			}
			return true
		l592:
			position, tokenIndex = position592, tokenIndex592
			return false
		},
		/* 82 Author2 <- <(AuthorWord (_? AuthorWord)*)> */
		func() bool {
			position598, tokenIndex598 := position, tokenIndex
			{
				position599 := position
				if !_rules[ruleAuthorWord]() {
					goto l598
				}
			l600:
				{
					position601, tokenIndex601 := position, tokenIndex
					{
						position602, tokenIndex602 := position, tokenIndex
						if !_rules[rule_]() {
							goto l602
						}
						goto l603
					l602:
						position, tokenIndex = position602, tokenIndex602
					}
				l603:
					if !_rules[ruleAuthorWord]() {
						goto l601
					}
					goto l600
				l601:
					position, tokenIndex = position601, tokenIndex601
				}
				add(ruleAuthor2, position599)
			}
			return true
		l598:
			position, tokenIndex = position598, tokenIndex598
			return false
		},
		/* 83 UnknownAuthor <- <('?' / ((('a' 'u' 'c' 't') / ('a' 'n' 'o' 'n')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position604, tokenIndex604 := position, tokenIndex
			{
				position605 := position
				{
					position606, tokenIndex606 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l607
					}
					position++
					goto l606
				l607:
					position, tokenIndex = position606, tokenIndex606
					{
						position608, tokenIndex608 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l609
						}
						position++
						if buffer[position] != rune('u') {
							goto l609
						}
						position++
						if buffer[position] != rune('c') {
							goto l609
						}
						position++
						if buffer[position] != rune('t') {
							goto l609
						}
						position++
						goto l608
					l609:
						position, tokenIndex = position608, tokenIndex608
						if buffer[position] != rune('a') {
							goto l604
						}
						position++
						if buffer[position] != rune('n') {
							goto l604
						}
						position++
						if buffer[position] != rune('o') {
							goto l604
						}
						position++
						if buffer[position] != rune('n') {
							goto l604
						}
						position++
					}
				l608:
					{
						position610, tokenIndex610 := position, tokenIndex
						{
							position612, tokenIndex612 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l611
							}
							position, tokenIndex = position612, tokenIndex612
						}
						goto l610
					l611:
						position, tokenIndex = position610, tokenIndex610
						if buffer[position] != rune('.') {
							goto l604
						}
						position++
					}
				l610:
				}
			l606:
				add(ruleUnknownAuthor, position605)
			}
			return true
		l604:
			position, tokenIndex = position604, tokenIndex604
			return false
		},
		/* 84 AuthorWord <- <(!(('b' / 'B') ('o' / 'O') ('l' / 'L') ('d' / 'D') ':') (AuthorDashInitials / AuthorWord2 / AuthorWord3 / AuthorPrefix))> */
		func() bool {
			position613, tokenIndex613 := position, tokenIndex
			{
				position614 := position
				{
					position615, tokenIndex615 := position, tokenIndex
					{
						position616, tokenIndex616 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l617
						}
						position++
						goto l616
					l617:
						position, tokenIndex = position616, tokenIndex616
						if buffer[position] != rune('B') {
							goto l615
						}
						position++
					}
				l616:
					{
						position618, tokenIndex618 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l619
						}
						position++
						goto l618
					l619:
						position, tokenIndex = position618, tokenIndex618
						if buffer[position] != rune('O') {
							goto l615
						}
						position++
					}
				l618:
					{
						position620, tokenIndex620 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l621
						}
						position++
						goto l620
					l621:
						position, tokenIndex = position620, tokenIndex620
						if buffer[position] != rune('L') {
							goto l615
						}
						position++
					}
				l620:
					{
						position622, tokenIndex622 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l623
						}
						position++
						goto l622
					l623:
						position, tokenIndex = position622, tokenIndex622
						if buffer[position] != rune('D') {
							goto l615
						}
						position++
					}
				l622:
					if buffer[position] != rune(':') {
						goto l615
					}
					position++
					goto l613
				l615:
					position, tokenIndex = position615, tokenIndex615
				}
				{
					position624, tokenIndex624 := position, tokenIndex
					if !_rules[ruleAuthorDashInitials]() {
						goto l625
					}
					goto l624
				l625:
					position, tokenIndex = position624, tokenIndex624
					if !_rules[ruleAuthorWord2]() {
						goto l626
					}
					goto l624
				l626:
					position, tokenIndex = position624, tokenIndex624
					if !_rules[ruleAuthorWord3]() {
						goto l627
					}
					goto l624
				l627:
					position, tokenIndex = position624, tokenIndex624
					if !_rules[ruleAuthorPrefix]() {
						goto l613
					}
				}
			l624:
				add(ruleAuthorWord, position614)
			}
			return true
		l613:
			position, tokenIndex = position613, tokenIndex613
			return false
		},
		/* 85 AuthorEtAl <- <(('a' 'r' 'g' '.') / ('e' 't' ' ' 'a' 'l' '.' '{' '?' '}') / ((('e' 't') / '&') (' ' 'a' 'l') '.'?))> */
		func() bool {
			position628, tokenIndex628 := position, tokenIndex
			{
				position629 := position
				{
					position630, tokenIndex630 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l631
					}
					position++
					if buffer[position] != rune('r') {
						goto l631
					}
					position++
					if buffer[position] != rune('g') {
						goto l631
					}
					position++
					if buffer[position] != rune('.') {
						goto l631
					}
					position++
					goto l630
				l631:
					position, tokenIndex = position630, tokenIndex630
					if buffer[position] != rune('e') {
						goto l632
					}
					position++
					if buffer[position] != rune('t') {
						goto l632
					}
					position++
					if buffer[position] != rune(' ') {
						goto l632
					}
					position++
					if buffer[position] != rune('a') {
						goto l632
					}
					position++
					if buffer[position] != rune('l') {
						goto l632
					}
					position++
					if buffer[position] != rune('.') {
						goto l632
					}
					position++
					if buffer[position] != rune('{') {
						goto l632
					}
					position++
					if buffer[position] != rune('?') {
						goto l632
					}
					position++
					if buffer[position] != rune('}') {
						goto l632
					}
					position++
					goto l630
				l632:
					position, tokenIndex = position630, tokenIndex630
					{
						position633, tokenIndex633 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l634
						}
						position++
						if buffer[position] != rune('t') {
							goto l634
						}
						position++
						goto l633
					l634:
						position, tokenIndex = position633, tokenIndex633
						if buffer[position] != rune('&') {
							goto l628
						}
						position++
					}
				l633:
					if buffer[position] != rune(' ') {
						goto l628
					}
					position++
					if buffer[position] != rune('a') {
						goto l628
					}
					position++
					if buffer[position] != rune('l') {
						goto l628
					}
					position++
					{
						position635, tokenIndex635 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l635
						}
						position++
						goto l636
					l635:
						position, tokenIndex = position635, tokenIndex635
					}
				l636:
				}
			l630:
				add(ruleAuthorEtAl, position629)
			}
			return true
		l628:
			position, tokenIndex = position628, tokenIndex628
			return false
		},
		/* 86 AuthorWord2 <- <(AuthorWord3 Dash AuthorWordSoft)> */
		func() bool {
			position637, tokenIndex637 := position, tokenIndex
			{
				position638 := position
				if !_rules[ruleAuthorWord3]() {
					goto l637
				}
				if !_rules[ruleDash]() {
					goto l637
				}
				if !_rules[ruleAuthorWordSoft]() {
					goto l637
				}
				add(ruleAuthorWord2, position638)
			}
			return true
		l637:
			position, tokenIndex = position637, tokenIndex637
			return false
		},
		/* 87 AuthorWord3 <- <(AuthorPrefixGlued? (AllCapsAuthorWord / CapAuthorWord) '.'?)> */
		func() bool {
			position639, tokenIndex639 := position, tokenIndex
			{
				position640 := position
				{
					position641, tokenIndex641 := position, tokenIndex
					if !_rules[ruleAuthorPrefixGlued]() {
						goto l641
					}
					goto l642
				l641:
					position, tokenIndex = position641, tokenIndex641
				}
			l642:
				{
					position643, tokenIndex643 := position, tokenIndex
					if !_rules[ruleAllCapsAuthorWord]() {
						goto l644
					}
					goto l643
				l644:
					position, tokenIndex = position643, tokenIndex643
					if !_rules[ruleCapAuthorWord]() {
						goto l639
					}
				}
			l643:
				{
					position645, tokenIndex645 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l645
					}
					position++
					goto l646
				l645:
					position, tokenIndex = position645, tokenIndex645
				}
			l646:
				add(ruleAuthorWord3, position640)
			}
			return true
		l639:
			position, tokenIndex = position639, tokenIndex639
			return false
		},
		/* 88 AuthorDashInitials <- <(AuthorUpperChar '.'? Dash AuthorUpperChar '.'?)> */
		func() bool {
			position647, tokenIndex647 := position, tokenIndex
			{
				position648 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l647
				}
				{
					position649, tokenIndex649 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l649
					}
					position++
					goto l650
				l649:
					position, tokenIndex = position649, tokenIndex649
				}
			l650:
				if !_rules[ruleDash]() {
					goto l647
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l647
				}
				{
					position651, tokenIndex651 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l651
					}
					position++
					goto l652
				l651:
					position, tokenIndex = position651, tokenIndex651
				}
			l652:
				add(ruleAuthorDashInitials, position648)
			}
			return true
		l647:
			position, tokenIndex = position647, tokenIndex647
			return false
		},
		/* 89 AuthorWordSoft <- <(((AuthorUpperChar (AuthorUpperChar+ / AuthorLowerChar+)) / AuthorLowerChar+) '.'?)> */
		func() bool {
			position653, tokenIndex653 := position, tokenIndex
			{
				position654 := position
				{
					position655, tokenIndex655 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l656
					}
					{
						position657, tokenIndex657 := position, tokenIndex
						if !_rules[ruleAuthorUpperChar]() {
							goto l658
						}
					l659:
						{
							position660, tokenIndex660 := position, tokenIndex
							if !_rules[ruleAuthorUpperChar]() {
								goto l660
							}
							goto l659
						l660:
							position, tokenIndex = position660, tokenIndex660
						}
						goto l657
					l658:
						position, tokenIndex = position657, tokenIndex657
						if !_rules[ruleAuthorLowerChar]() {
							goto l656
						}
					l661:
						{
							position662, tokenIndex662 := position, tokenIndex
							if !_rules[ruleAuthorLowerChar]() {
								goto l662
							}
							goto l661
						l662:
							position, tokenIndex = position662, tokenIndex662
						}
					}
				l657:
					goto l655
				l656:
					position, tokenIndex = position655, tokenIndex655
					if !_rules[ruleAuthorLowerChar]() {
						goto l653
					}
				l663:
					{
						position664, tokenIndex664 := position, tokenIndex
						if !_rules[ruleAuthorLowerChar]() {
							goto l664
						}
						goto l663
					l664:
						position, tokenIndex = position664, tokenIndex664
					}
				}
			l655:
				{
					position665, tokenIndex665 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l665
					}
					position++
					goto l666
				l665:
					position, tokenIndex = position665, tokenIndex665
				}
			l666:
				add(ruleAuthorWordSoft, position654)
			}
			return true
		l653:
			position, tokenIndex = position653, tokenIndex653
			return false
		},
		/* 90 CapAuthorWord <- <(AuthorUpperChar AuthorLowerChar*)> */
		func() bool {
			position667, tokenIndex667 := position, tokenIndex
			{
				position668 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l667
				}
			l669:
				{
					position670, tokenIndex670 := position, tokenIndex
					if !_rules[ruleAuthorLowerChar]() {
						goto l670
					}
					goto l669
				l670:
					position, tokenIndex = position670, tokenIndex670
				}
				add(ruleCapAuthorWord, position668)
			}
			return true
		l667:
			position, tokenIndex = position667, tokenIndex667
			return false
		},
		/* 91 AllCapsAuthorWord <- <(AuthorUpperChar AuthorUpperChar+)> */
		func() bool {
			position671, tokenIndex671 := position, tokenIndex
			{
				position672 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l671
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l671
				}
			l673:
				{
					position674, tokenIndex674 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l674
					}
					goto l673
				l674:
					position, tokenIndex = position674, tokenIndex674
				}
				add(ruleAllCapsAuthorWord, position672)
			}
			return true
		l671:
			position, tokenIndex = position671, tokenIndex671
			return false
		},
		/* 92 Filius <- <(FiliusF / ('f' 'i' 'l' '.') / ('f' 'i' 'l' 'i' 'u' 's'))> */
		func() bool {
			position675, tokenIndex675 := position, tokenIndex
			{
				position676 := position
				{
					position677, tokenIndex677 := position, tokenIndex
					if !_rules[ruleFiliusF]() {
						goto l678
					}
					goto l677
				l678:
					position, tokenIndex = position677, tokenIndex677
					if buffer[position] != rune('f') {
						goto l679
					}
					position++
					if buffer[position] != rune('i') {
						goto l679
					}
					position++
					if buffer[position] != rune('l') {
						goto l679
					}
					position++
					if buffer[position] != rune('.') {
						goto l679
					}
					position++
					goto l677
				l679:
					position, tokenIndex = position677, tokenIndex677
					if buffer[position] != rune('f') {
						goto l675
					}
					position++
					if buffer[position] != rune('i') {
						goto l675
					}
					position++
					if buffer[position] != rune('l') {
						goto l675
					}
					position++
					if buffer[position] != rune('i') {
						goto l675
					}
					position++
					if buffer[position] != rune('u') {
						goto l675
					}
					position++
					if buffer[position] != rune('s') {
						goto l675
					}
					position++
				}
			l677:
				add(ruleFilius, position676)
			}
			return true
		l675:
			position, tokenIndex = position675, tokenIndex675
			return false
		},
		/* 93 FiliusF <- <('f' '.' !(_ Word))> */
		func() bool {
			position680, tokenIndex680 := position, tokenIndex
			{
				position681 := position
				if buffer[position] != rune('f') {
					goto l680
				}
				position++
				if buffer[position] != rune('.') {
					goto l680
				}
				position++
				{
					position682, tokenIndex682 := position, tokenIndex
					if !_rules[rule_]() {
						goto l682
					}
					if !_rules[ruleWord]() {
						goto l682
					}
					goto l680
				l682:
					position, tokenIndex = position682, tokenIndex682
				}
				add(ruleFiliusF, position681)
			}
			return true
		l680:
			position, tokenIndex = position680, tokenIndex680
			return false
		},
		/* 94 FiliusFNoSpace <- <('f' '.')> */
		func() bool {
			position683, tokenIndex683 := position, tokenIndex
			{
				position684 := position
				if buffer[position] != rune('f') {
					goto l683
				}
				position++
				if buffer[position] != rune('.') {
					goto l683
				}
				position++
				add(ruleFiliusFNoSpace, position684)
			}
			return true
		l683:
			position, tokenIndex = position683, tokenIndex683
			return false
		},
		/* 95 AuthorSuffix <- <('b' 'i' 's')> */
		func() bool {
			position685, tokenIndex685 := position, tokenIndex
			{
				position686 := position
				if buffer[position] != rune('b') {
					goto l685
				}
				position++
				if buffer[position] != rune('i') {
					goto l685
				}
				position++
				if buffer[position] != rune('s') {
					goto l685
				}
				position++
				add(ruleAuthorSuffix, position686)
			}
			return true
		l685:
			position, tokenIndex = position685, tokenIndex685
			return false
		},
		/* 96 AuthorPrefixGlued <- <(('d' / 'O' / 'L' / ('M' 'c') / 'M') Apostrophe)> */
		func() bool {
			position687, tokenIndex687 := position, tokenIndex
			{
				position688 := position
				{
					position689, tokenIndex689 := position, tokenIndex
					if buffer[position] != rune('d') {
						goto l690
					}
					position++
					goto l689
				l690:
					position, tokenIndex = position689, tokenIndex689
					if buffer[position] != rune('O') {
						goto l691
					}
					position++
					goto l689
				l691:
					position, tokenIndex = position689, tokenIndex689
					if buffer[position] != rune('L') {
						goto l692
					}
					position++
					goto l689
				l692:
					position, tokenIndex = position689, tokenIndex689
					if buffer[position] != rune('M') {
						goto l693
					}
					position++
					if buffer[position] != rune('c') {
						goto l693
					}
					position++
					goto l689
				l693:
					position, tokenIndex = position689, tokenIndex689
					if buffer[position] != rune('M') {
						goto l687
					}
					position++
				}
			l689:
				if !_rules[ruleApostrophe]() {
					goto l687
				}
				add(ruleAuthorPrefixGlued, position688)
			}
			return true
		l687:
			position, tokenIndex = position687, tokenIndex687
			return false
		},
		/* 97 AuthorPrefix <- <(AuthorPrefix1 / AuthorPrefix2)> */
		func() bool {
			position694, tokenIndex694 := position, tokenIndex
			{
				position695 := position
				{
					position696, tokenIndex696 := position, tokenIndex
					if !_rules[ruleAuthorPrefix1]() {
						goto l697
					}
					goto l696
				l697:
					position, tokenIndex = position696, tokenIndex696
					if !_rules[ruleAuthorPrefix2]() {
						goto l694
					}
				}
			l696:
				add(ruleAuthorPrefix, position695)
			}
			return true
		l694:
			position, tokenIndex = position694, tokenIndex694
			return false
		},
		/* 98 AuthorPrefix2 <- <(('v' '.' (_? ('d' '.'))?) / (Apostrophe 't'))> */
		func() bool {
			position698, tokenIndex698 := position, tokenIndex
			{
				position699 := position
				{
					position700, tokenIndex700 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l701
					}
					position++
					if buffer[position] != rune('.') {
						goto l701
					}
					position++
					{
						position702, tokenIndex702 := position, tokenIndex
						{
							position704, tokenIndex704 := position, tokenIndex
							if !_rules[rule_]() {
								goto l704
							}
							goto l705
						l704:
							position, tokenIndex = position704, tokenIndex704
						}
					l705:
						if buffer[position] != rune('d') {
							goto l702
						}
						position++
						if buffer[position] != rune('.') {
							goto l702
						}
						position++
						goto l703
					l702:
						position, tokenIndex = position702, tokenIndex702
					}
				l703:
					goto l700
				l701:
					position, tokenIndex = position700, tokenIndex700
					if !_rules[ruleApostrophe]() {
						goto l698
					}
					if buffer[position] != rune('t') {
						goto l698
					}
					position++
				}
			l700:
				add(ruleAuthorPrefix2, position699)
			}
			return true
		l698:
			position, tokenIndex = position698, tokenIndex698
			return false
		},
		/* 99 AuthorPrefix1 <- <((('a' 'b') / ('a' 'f') / ('b' 'i' 's') / ('d' 'a') / ('d' 'e' 'r') / ('d' 'e' 's') / ('d' 'e' 'n') / ('d' 'e' 'l') / ('d' 'e' 'l' 'l' 'a') / ('d' 'e' 'l' 'a') / ('d' 'e') / ('d' 'i') / ('d' 'u') / ('e' 'l') / ('l' 'a') / ('l' 'e') / ('t' 'e' 'r') / ('v' 'a' 'n') / ('d' Apostrophe) / ('i' 'n' Apostrophe 't') / ('z' 'u' 'r') / ('z' 'u') / ('v' 'o' 'n' (_ (('d' '.') / ('d' 'e' 'm')))?) / ('v' (_ 'd')?)) &_)> */
		func() bool {
			position706, tokenIndex706 := position, tokenIndex
			{
				position707 := position
				{
					position708, tokenIndex708 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l709
					}
					position++
					if buffer[position] != rune('b') {
						goto l709
					}
					position++
					goto l708
				l709:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('a') {
						goto l710
					}
					position++
					if buffer[position] != rune('f') {
						goto l710
					}
					position++
					goto l708
				l710:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('b') {
						goto l711
					}
					position++
					if buffer[position] != rune('i') {
						goto l711
					}
					position++
					if buffer[position] != rune('s') {
						goto l711
					}
					position++
					goto l708
				l711:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('d') {
						goto l712
					}
					position++
					if buffer[position] != rune('a') {
						goto l712
					}
					position++
					goto l708
				l712:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('d') {
						goto l713
					}
					position++
					if buffer[position] != rune('e') {
						goto l713
					}
					position++
					if buffer[position] != rune('r') {
						goto l713
					}
					position++
					goto l708
				l713:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('d') {
						goto l714
					}
					position++
					if buffer[position] != rune('e') {
						goto l714
					}
					position++
					if buffer[position] != rune('s') {
						goto l714
					}
					position++
					goto l708
				l714:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('d') {
						goto l715
					}
					position++
					if buffer[position] != rune('e') {
						goto l715
					}
					position++
					if buffer[position] != rune('n') {
						goto l715
					}
					position++
					goto l708
				l715:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('d') {
						goto l716
					}
					position++
					if buffer[position] != rune('e') {
						goto l716
					}
					position++
					if buffer[position] != rune('l') {
						goto l716
					}
					position++
					goto l708
				l716:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('d') {
						goto l717
					}
					position++
					if buffer[position] != rune('e') {
						goto l717
					}
					position++
					if buffer[position] != rune('l') {
						goto l717
					}
					position++
					if buffer[position] != rune('l') {
						goto l717
					}
					position++
					if buffer[position] != rune('a') {
						goto l717
					}
					position++
					goto l708
				l717:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('d') {
						goto l718
					}
					position++
					if buffer[position] != rune('e') {
						goto l718
					}
					position++
					if buffer[position] != rune('l') {
						goto l718
					}
					position++
					if buffer[position] != rune('a') {
						goto l718
					}
					position++
					goto l708
				l718:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('d') {
						goto l719
					}
					position++
					if buffer[position] != rune('e') {
						goto l719
					}
					position++
					goto l708
				l719:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('d') {
						goto l720
					}
					position++
					if buffer[position] != rune('i') {
						goto l720
					}
					position++
					goto l708
				l720:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('d') {
						goto l721
					}
					position++
					if buffer[position] != rune('u') {
						goto l721
					}
					position++
					goto l708
				l721:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('e') {
						goto l722
					}
					position++
					if buffer[position] != rune('l') {
						goto l722
					}
					position++
					goto l708
				l722:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('l') {
						goto l723
					}
					position++
					if buffer[position] != rune('a') {
						goto l723
					}
					position++
					goto l708
				l723:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('l') {
						goto l724
					}
					position++
					if buffer[position] != rune('e') {
						goto l724
					}
					position++
					goto l708
				l724:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('t') {
						goto l725
					}
					position++
					if buffer[position] != rune('e') {
						goto l725
					}
					position++
					if buffer[position] != rune('r') {
						goto l725
					}
					position++
					goto l708
				l725:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('v') {
						goto l726
					}
					position++
					if buffer[position] != rune('a') {
						goto l726
					}
					position++
					if buffer[position] != rune('n') {
						goto l726
					}
					position++
					goto l708
				l726:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('d') {
						goto l727
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l727
					}
					goto l708
				l727:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('i') {
						goto l728
					}
					position++
					if buffer[position] != rune('n') {
						goto l728
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l728
					}
					if buffer[position] != rune('t') {
						goto l728
					}
					position++
					goto l708
				l728:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('z') {
						goto l729
					}
					position++
					if buffer[position] != rune('u') {
						goto l729
					}
					position++
					if buffer[position] != rune('r') {
						goto l729
					}
					position++
					goto l708
				l729:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('z') {
						goto l730
					}
					position++
					if buffer[position] != rune('u') {
						goto l730
					}
					position++
					goto l708
				l730:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('v') {
						goto l731
					}
					position++
					if buffer[position] != rune('o') {
						goto l731
					}
					position++
					if buffer[position] != rune('n') {
						goto l731
					}
					position++
					{
						position732, tokenIndex732 := position, tokenIndex
						if !_rules[rule_]() {
							goto l732
						}
						{
							position734, tokenIndex734 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l735
							}
							position++
							if buffer[position] != rune('.') {
								goto l735
							}
							position++
							goto l734
						l735:
							position, tokenIndex = position734, tokenIndex734
							if buffer[position] != rune('d') {
								goto l732
							}
							position++
							if buffer[position] != rune('e') {
								goto l732
							}
							position++
							if buffer[position] != rune('m') {
								goto l732
							}
							position++
						}
					l734:
						goto l733
					l732:
						position, tokenIndex = position732, tokenIndex732
					}
				l733:
					goto l708
				l731:
					position, tokenIndex = position708, tokenIndex708
					if buffer[position] != rune('v') {
						goto l706
					}
					position++
					{
						position736, tokenIndex736 := position, tokenIndex
						if !_rules[rule_]() {
							goto l736
						}
						if buffer[position] != rune('d') {
							goto l736
						}
						position++
						goto l737
					l736:
						position, tokenIndex = position736, tokenIndex736
					}
				l737:
				}
			l708:
				{
					position738, tokenIndex738 := position, tokenIndex
					if !_rules[rule_]() {
						goto l706
					}
					position, tokenIndex = position738, tokenIndex738
				}
				add(ruleAuthorPrefix1, position707)
			}
			return true
		l706:
			position, tokenIndex = position706, tokenIndex706
			return false
		},
		/* 100 AuthorUpperChar <- <(UpperASCII / MiscodedChar / ('À' / 'Á' / 'Â' / 'Ã' / 'Ä' / 'Å' / 'Æ' / 'Ç' / 'È' / 'É' / 'Ê' / 'Ë' / 'Ì' / 'Í' / 'Î' / 'Ï' / 'Ð' / 'Ñ' / 'Ò' / 'Ó' / 'Ô' / 'Õ' / 'Ö' / 'Ø' / 'Ù' / 'Ú' / 'Û' / 'Ü' / 'Ý' / 'Ć' / 'Č' / 'Ď' / 'İ' / 'Ķ' / 'Ĺ' / 'ĺ' / 'Ľ' / 'ľ' / 'Ł' / 'ł' / 'Ņ' / 'Ō' / 'Ő' / 'Œ' / 'Ř' / 'Ś' / 'Ŝ' / 'Ş' / 'Š' / 'Ÿ' / 'Ź' / 'Ż' / 'Ž' / 'ƒ' / 'Ǿ' / 'Ș' / 'Ț'))> */
		func() bool {
			position739, tokenIndex739 := position, tokenIndex
			{
				position740 := position
				{
					position741, tokenIndex741 := position, tokenIndex
					if !_rules[ruleUpperASCII]() {
						goto l742
					}
					goto l741
				l742:
					position, tokenIndex = position741, tokenIndex741
					if !_rules[ruleMiscodedChar]() {
						goto l743
					}
					goto l741
				l743:
					position, tokenIndex = position741, tokenIndex741
					{
						position744, tokenIndex744 := position, tokenIndex
						if buffer[position] != rune('À') {
							goto l745
						}
						position++
						goto l744
					l745:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Á') {
							goto l746
						}
						position++
						goto l744
					l746:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Â') {
							goto l747
						}
						position++
						goto l744
					l747:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ã') {
							goto l748
						}
						position++
						goto l744
					l748:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ä') {
							goto l749
						}
						position++
						goto l744
					l749:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Å') {
							goto l750
						}
						position++
						goto l744
					l750:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Æ') {
							goto l751
						}
						position++
						goto l744
					l751:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ç') {
							goto l752
						}
						position++
						goto l744
					l752:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('È') {
							goto l753
						}
						position++
						goto l744
					l753:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('É') {
							goto l754
						}
						position++
						goto l744
					l754:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ê') {
							goto l755
						}
						position++
						goto l744
					l755:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ë') {
							goto l756
						}
						position++
						goto l744
					l756:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ì') {
							goto l757
						}
						position++
						goto l744
					l757:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Í') {
							goto l758
						}
						position++
						goto l744
					l758:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Î') {
							goto l759
						}
						position++
						goto l744
					l759:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ï') {
							goto l760
						}
						position++
						goto l744
					l760:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ð') {
							goto l761
						}
						position++
						goto l744
					l761:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ñ') {
							goto l762
						}
						position++
						goto l744
					l762:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ò') {
							goto l763
						}
						position++
						goto l744
					l763:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ó') {
							goto l764
						}
						position++
						goto l744
					l764:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ô') {
							goto l765
						}
						position++
						goto l744
					l765:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Õ') {
							goto l766
						}
						position++
						goto l744
					l766:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ö') {
							goto l767
						}
						position++
						goto l744
					l767:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ø') {
							goto l768
						}
						position++
						goto l744
					l768:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ù') {
							goto l769
						}
						position++
						goto l744
					l769:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ú') {
							goto l770
						}
						position++
						goto l744
					l770:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Û') {
							goto l771
						}
						position++
						goto l744
					l771:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ü') {
							goto l772
						}
						position++
						goto l744
					l772:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ý') {
							goto l773
						}
						position++
						goto l744
					l773:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ć') {
							goto l774
						}
						position++
						goto l744
					l774:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Č') {
							goto l775
						}
						position++
						goto l744
					l775:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ď') {
							goto l776
						}
						position++
						goto l744
					l776:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('İ') {
							goto l777
						}
						position++
						goto l744
					l777:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ķ') {
							goto l778
						}
						position++
						goto l744
					l778:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ĺ') {
							goto l779
						}
						position++
						goto l744
					l779:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('ĺ') {
							goto l780
						}
						position++
						goto l744
					l780:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ľ') {
							goto l781
						}
						position++
						goto l744
					l781:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('ľ') {
							goto l782
						}
						position++
						goto l744
					l782:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ł') {
							goto l783
						}
						position++
						goto l744
					l783:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('ł') {
							goto l784
						}
						position++
						goto l744
					l784:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ņ') {
							goto l785
						}
						position++
						goto l744
					l785:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ō') {
							goto l786
						}
						position++
						goto l744
					l786:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ő') {
							goto l787
						}
						position++
						goto l744
					l787:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Œ') {
							goto l788
						}
						position++
						goto l744
					l788:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ř') {
							goto l789
						}
						position++
						goto l744
					l789:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ś') {
							goto l790
						}
						position++
						goto l744
					l790:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ŝ') {
							goto l791
						}
						position++
						goto l744
					l791:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ş') {
							goto l792
						}
						position++
						goto l744
					l792:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Š') {
							goto l793
						}
						position++
						goto l744
					l793:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ÿ') {
							goto l794
						}
						position++
						goto l744
					l794:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ź') {
							goto l795
						}
						position++
						goto l744
					l795:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ż') {
							goto l796
						}
						position++
						goto l744
					l796:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ž') {
							goto l797
						}
						position++
						goto l744
					l797:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('ƒ') {
							goto l798
						}
						position++
						goto l744
					l798:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ǿ') {
							goto l799
						}
						position++
						goto l744
					l799:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ș') {
							goto l800
						}
						position++
						goto l744
					l800:
						position, tokenIndex = position744, tokenIndex744
						if buffer[position] != rune('Ț') {
							goto l739
						}
						position++
					}
				l744:
				}
			l741:
				add(ruleAuthorUpperChar, position740)
			}
			return true
		l739:
			position, tokenIndex = position739, tokenIndex739
			return false
		},
		/* 101 AuthorLowerChar <- <(LowerASCII / MiscodedChar / ('à' / 'á' / 'â' / 'ã' / 'ä' / 'å' / 'æ' / 'ç' / 'è' / 'é' / 'ê' / 'ë' / 'ì' / 'í' / 'î' / 'ï' / 'ð' / 'ñ' / 'ò' / 'ó' / 'ó' / 'ô' / 'õ' / 'ö' / 'ø' / 'ù' / 'ú' / 'û' / 'ü' / 'ý' / 'ÿ' / 'ā' / 'ă' / 'ą' / 'ć' / 'ĉ' / 'č' / 'ď' / 'đ' / '\'' / 'ē' / 'ĕ' / 'ė' / 'ę' / 'ě' / 'ğ' / 'ī' / 'ĭ' / 'İ' / 'ı' / 'ĺ' / 'ľ' / 'ł' / 'ń' / 'ņ' / 'ň' / 'ŏ' / 'ő' / 'œ' / 'ŕ' / 'ř' / 'ś' / 'ş' / 'š' / 'ţ' / 'ť' / 'ũ' / 'ū' / 'ŭ' / 'ů' / 'ű' / 'ź' / 'ż' / 'ž' / 'ſ' / 'ǎ' / 'ǔ' / 'ǧ' / 'ș' / 'ț' / 'ȳ' / 'ß'))> */
		func() bool {
			position801, tokenIndex801 := position, tokenIndex
			{
				position802 := position
				{
					position803, tokenIndex803 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l804
					}
					goto l803
				l804:
					position, tokenIndex = position803, tokenIndex803
					if !_rules[ruleMiscodedChar]() {
						goto l805
					}
					goto l803
				l805:
					position, tokenIndex = position803, tokenIndex803
					{
						position806, tokenIndex806 := position, tokenIndex
						if buffer[position] != rune('à') {
							goto l807
						}
						position++
						goto l806
					l807:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('á') {
							goto l808
						}
						position++
						goto l806
					l808:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('â') {
							goto l809
						}
						position++
						goto l806
					l809:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ã') {
							goto l810
						}
						position++
						goto l806
					l810:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ä') {
							goto l811
						}
						position++
						goto l806
					l811:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('å') {
							goto l812
						}
						position++
						goto l806
					l812:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('æ') {
							goto l813
						}
						position++
						goto l806
					l813:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ç') {
							goto l814
						}
						position++
						goto l806
					l814:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('è') {
							goto l815
						}
						position++
						goto l806
					l815:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('é') {
							goto l816
						}
						position++
						goto l806
					l816:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ê') {
							goto l817
						}
						position++
						goto l806
					l817:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ë') {
							goto l818
						}
						position++
						goto l806
					l818:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ì') {
							goto l819
						}
						position++
						goto l806
					l819:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('í') {
							goto l820
						}
						position++
						goto l806
					l820:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('î') {
							goto l821
						}
						position++
						goto l806
					l821:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ï') {
							goto l822
						}
						position++
						goto l806
					l822:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ð') {
							goto l823
						}
						position++
						goto l806
					l823:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ñ') {
							goto l824
						}
						position++
						goto l806
					l824:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ò') {
							goto l825
						}
						position++
						goto l806
					l825:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ó') {
							goto l826
						}
						position++
						goto l806
					l826:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ó') {
							goto l827
						}
						position++
						goto l806
					l827:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ô') {
							goto l828
						}
						position++
						goto l806
					l828:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('õ') {
							goto l829
						}
						position++
						goto l806
					l829:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ö') {
							goto l830
						}
						position++
						goto l806
					l830:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ø') {
							goto l831
						}
						position++
						goto l806
					l831:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ù') {
							goto l832
						}
						position++
						goto l806
					l832:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ú') {
							goto l833
						}
						position++
						goto l806
					l833:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('û') {
							goto l834
						}
						position++
						goto l806
					l834:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ü') {
							goto l835
						}
						position++
						goto l806
					l835:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ý') {
							goto l836
						}
						position++
						goto l806
					l836:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ÿ') {
							goto l837
						}
						position++
						goto l806
					l837:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ā') {
							goto l838
						}
						position++
						goto l806
					l838:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ă') {
							goto l839
						}
						position++
						goto l806
					l839:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ą') {
							goto l840
						}
						position++
						goto l806
					l840:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ć') {
							goto l841
						}
						position++
						goto l806
					l841:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ĉ') {
							goto l842
						}
						position++
						goto l806
					l842:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('č') {
							goto l843
						}
						position++
						goto l806
					l843:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ď') {
							goto l844
						}
						position++
						goto l806
					l844:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('đ') {
							goto l845
						}
						position++
						goto l806
					l845:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('\'') {
							goto l846
						}
						position++
						goto l806
					l846:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ē') {
							goto l847
						}
						position++
						goto l806
					l847:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ĕ') {
							goto l848
						}
						position++
						goto l806
					l848:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ė') {
							goto l849
						}
						position++
						goto l806
					l849:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ę') {
							goto l850
						}
						position++
						goto l806
					l850:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ě') {
							goto l851
						}
						position++
						goto l806
					l851:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ğ') {
							goto l852
						}
						position++
						goto l806
					l852:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ī') {
							goto l853
						}
						position++
						goto l806
					l853:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ĭ') {
							goto l854
						}
						position++
						goto l806
					l854:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('İ') {
							goto l855
						}
						position++
						goto l806
					l855:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ı') {
							goto l856
						}
						position++
						goto l806
					l856:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ĺ') {
							goto l857
						}
						position++
						goto l806
					l857:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ľ') {
							goto l858
						}
						position++
						goto l806
					l858:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ł') {
							goto l859
						}
						position++
						goto l806
					l859:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ń') {
							goto l860
						}
						position++
						goto l806
					l860:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ņ') {
							goto l861
						}
						position++
						goto l806
					l861:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ň') {
							goto l862
						}
						position++
						goto l806
					l862:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ŏ') {
							goto l863
						}
						position++
						goto l806
					l863:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ő') {
							goto l864
						}
						position++
						goto l806
					l864:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('œ') {
							goto l865
						}
						position++
						goto l806
					l865:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ŕ') {
							goto l866
						}
						position++
						goto l806
					l866:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ř') {
							goto l867
						}
						position++
						goto l806
					l867:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ś') {
							goto l868
						}
						position++
						goto l806
					l868:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ş') {
							goto l869
						}
						position++
						goto l806
					l869:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('š') {
							goto l870
						}
						position++
						goto l806
					l870:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ţ') {
							goto l871
						}
						position++
						goto l806
					l871:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ť') {
							goto l872
						}
						position++
						goto l806
					l872:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ũ') {
							goto l873
						}
						position++
						goto l806
					l873:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ū') {
							goto l874
						}
						position++
						goto l806
					l874:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ŭ') {
							goto l875
						}
						position++
						goto l806
					l875:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ů') {
							goto l876
						}
						position++
						goto l806
					l876:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ű') {
							goto l877
						}
						position++
						goto l806
					l877:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ź') {
							goto l878
						}
						position++
						goto l806
					l878:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ż') {
							goto l879
						}
						position++
						goto l806
					l879:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ž') {
							goto l880
						}
						position++
						goto l806
					l880:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ſ') {
							goto l881
						}
						position++
						goto l806
					l881:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ǎ') {
							goto l882
						}
						position++
						goto l806
					l882:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ǔ') {
							goto l883
						}
						position++
						goto l806
					l883:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ǧ') {
							goto l884
						}
						position++
						goto l806
					l884:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ș') {
							goto l885
						}
						position++
						goto l806
					l885:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ț') {
							goto l886
						}
						position++
						goto l806
					l886:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ȳ') {
							goto l887
						}
						position++
						goto l806
					l887:
						position, tokenIndex = position806, tokenIndex806
						if buffer[position] != rune('ß') {
							goto l801
						}
						position++
					}
				l806:
				}
			l803:
				add(ruleAuthorLowerChar, position802)
			}
			return true
		l801:
			position, tokenIndex = position801, tokenIndex801
			return false
		},
		/* 102 Year <- <(YearRange / YearApprox / YearWithParens / YearWithPage / YearWithDot / YearWithChar / YearNum)> */
		func() bool {
			position888, tokenIndex888 := position, tokenIndex
			{
				position889 := position
				{
					position890, tokenIndex890 := position, tokenIndex
					if !_rules[ruleYearRange]() {
						goto l891
					}
					goto l890
				l891:
					position, tokenIndex = position890, tokenIndex890
					if !_rules[ruleYearApprox]() {
						goto l892
					}
					goto l890
				l892:
					position, tokenIndex = position890, tokenIndex890
					if !_rules[ruleYearWithParens]() {
						goto l893
					}
					goto l890
				l893:
					position, tokenIndex = position890, tokenIndex890
					if !_rules[ruleYearWithPage]() {
						goto l894
					}
					goto l890
				l894:
					position, tokenIndex = position890, tokenIndex890
					if !_rules[ruleYearWithDot]() {
						goto l895
					}
					goto l890
				l895:
					position, tokenIndex = position890, tokenIndex890
					if !_rules[ruleYearWithChar]() {
						goto l896
					}
					goto l890
				l896:
					position, tokenIndex = position890, tokenIndex890
					if !_rules[ruleYearNum]() {
						goto l888
					}
				}
			l890:
				add(ruleYear, position889)
			}
			return true
		l888:
			position, tokenIndex = position888, tokenIndex888
			return false
		},
		/* 103 YearRange <- <(YearNum (Dash / Slash) (Nums+ ('a' / 'b' / 'c' / 'd' / 'e' / 'f' / 'g' / 'h' / 'i' / 'j' / 'k' / 'l' / 'm' / 'n' / 'o' / 'p' / 'q' / 'r' / 's' / 't' / 'u' / 'v' / 'w' / 'x' / 'y' / 'z' / '?')*))> */
		func() bool {
			position897, tokenIndex897 := position, tokenIndex
			{
				position898 := position
				if !_rules[ruleYearNum]() {
					goto l897
				}
				{
					position899, tokenIndex899 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l900
					}
					goto l899
				l900:
					position, tokenIndex = position899, tokenIndex899
					if !_rules[ruleSlash]() {
						goto l897
					}
				}
			l899:
				if !_rules[ruleNums]() {
					goto l897
				}
			l901:
				{
					position902, tokenIndex902 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l902
					}
					goto l901
				l902:
					position, tokenIndex = position902, tokenIndex902
				}
			l903:
				{
					position904, tokenIndex904 := position, tokenIndex
					{
						position905, tokenIndex905 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l906
						}
						position++
						goto l905
					l906:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('b') {
							goto l907
						}
						position++
						goto l905
					l907:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('c') {
							goto l908
						}
						position++
						goto l905
					l908:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('d') {
							goto l909
						}
						position++
						goto l905
					l909:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('e') {
							goto l910
						}
						position++
						goto l905
					l910:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('f') {
							goto l911
						}
						position++
						goto l905
					l911:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('g') {
							goto l912
						}
						position++
						goto l905
					l912:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('h') {
							goto l913
						}
						position++
						goto l905
					l913:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('i') {
							goto l914
						}
						position++
						goto l905
					l914:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('j') {
							goto l915
						}
						position++
						goto l905
					l915:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('k') {
							goto l916
						}
						position++
						goto l905
					l916:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('l') {
							goto l917
						}
						position++
						goto l905
					l917:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('m') {
							goto l918
						}
						position++
						goto l905
					l918:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('n') {
							goto l919
						}
						position++
						goto l905
					l919:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('o') {
							goto l920
						}
						position++
						goto l905
					l920:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('p') {
							goto l921
						}
						position++
						goto l905
					l921:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('q') {
							goto l922
						}
						position++
						goto l905
					l922:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('r') {
							goto l923
						}
						position++
						goto l905
					l923:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('s') {
							goto l924
						}
						position++
						goto l905
					l924:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('t') {
							goto l925
						}
						position++
						goto l905
					l925:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('u') {
							goto l926
						}
						position++
						goto l905
					l926:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('v') {
							goto l927
						}
						position++
						goto l905
					l927:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('w') {
							goto l928
						}
						position++
						goto l905
					l928:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('x') {
							goto l929
						}
						position++
						goto l905
					l929:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('y') {
							goto l930
						}
						position++
						goto l905
					l930:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('z') {
							goto l931
						}
						position++
						goto l905
					l931:
						position, tokenIndex = position905, tokenIndex905
						if buffer[position] != rune('?') {
							goto l904
						}
						position++
					}
				l905:
					goto l903
				l904:
					position, tokenIndex = position904, tokenIndex904
				}
				add(ruleYearRange, position898)
			}
			return true
		l897:
			position, tokenIndex = position897, tokenIndex897
			return false
		},
		/* 104 YearWithDot <- <(YearNum '.')> */
		func() bool {
			position932, tokenIndex932 := position, tokenIndex
			{
				position933 := position
				if !_rules[ruleYearNum]() {
					goto l932
				}
				if buffer[position] != rune('.') {
					goto l932
				}
				position++
				add(ruleYearWithDot, position933)
			}
			return true
		l932:
			position, tokenIndex = position932, tokenIndex932
			return false
		},
		/* 105 YearApprox <- <('[' _? YearNum _? ']')> */
		func() bool {
			position934, tokenIndex934 := position, tokenIndex
			{
				position935 := position
				if buffer[position] != rune('[') {
					goto l934
				}
				position++
				{
					position936, tokenIndex936 := position, tokenIndex
					if !_rules[rule_]() {
						goto l936
					}
					goto l937
				l936:
					position, tokenIndex = position936, tokenIndex936
				}
			l937:
				if !_rules[ruleYearNum]() {
					goto l934
				}
				{
					position938, tokenIndex938 := position, tokenIndex
					if !_rules[rule_]() {
						goto l938
					}
					goto l939
				l938:
					position, tokenIndex = position938, tokenIndex938
				}
			l939:
				if buffer[position] != rune(']') {
					goto l934
				}
				position++
				add(ruleYearApprox, position935)
			}
			return true
		l934:
			position, tokenIndex = position934, tokenIndex934
			return false
		},
		/* 106 YearWithPage <- <((YearWithChar / YearNum) _? ':' _? Nums+)> */
		func() bool {
			position940, tokenIndex940 := position, tokenIndex
			{
				position941 := position
				{
					position942, tokenIndex942 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l943
					}
					goto l942
				l943:
					position, tokenIndex = position942, tokenIndex942
					if !_rules[ruleYearNum]() {
						goto l940
					}
				}
			l942:
				{
					position944, tokenIndex944 := position, tokenIndex
					if !_rules[rule_]() {
						goto l944
					}
					goto l945
				l944:
					position, tokenIndex = position944, tokenIndex944
				}
			l945:
				if buffer[position] != rune(':') {
					goto l940
				}
				position++
				{
					position946, tokenIndex946 := position, tokenIndex
					if !_rules[rule_]() {
						goto l946
					}
					goto l947
				l946:
					position, tokenIndex = position946, tokenIndex946
				}
			l947:
				if !_rules[ruleNums]() {
					goto l940
				}
			l948:
				{
					position949, tokenIndex949 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l949
					}
					goto l948
				l949:
					position, tokenIndex = position949, tokenIndex949
				}
				add(ruleYearWithPage, position941)
			}
			return true
		l940:
			position, tokenIndex = position940, tokenIndex940
			return false
		},
		/* 107 YearWithParens <- <('(' (YearWithChar / YearNum) ')')> */
		func() bool {
			position950, tokenIndex950 := position, tokenIndex
			{
				position951 := position
				if buffer[position] != rune('(') {
					goto l950
				}
				position++
				{
					position952, tokenIndex952 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l953
					}
					goto l952
				l953:
					position, tokenIndex = position952, tokenIndex952
					if !_rules[ruleYearNum]() {
						goto l950
					}
				}
			l952:
				if buffer[position] != rune(')') {
					goto l950
				}
				position++
				add(ruleYearWithParens, position951)
			}
			return true
		l950:
			position, tokenIndex = position950, tokenIndex950
			return false
		},
		/* 108 YearWithChar <- <(YearNum LowerASCII)> */
		func() bool {
			position954, tokenIndex954 := position, tokenIndex
			{
				position955 := position
				if !_rules[ruleYearNum]() {
					goto l954
				}
				if !_rules[ruleLowerASCII]() {
					goto l954
				}
				add(ruleYearWithChar, position955)
			}
			return true
		l954:
			position, tokenIndex = position954, tokenIndex954
			return false
		},
		/* 109 YearNum <- <(('1' / '2') ('0' / '7' / '8' / '9') Nums (Nums / '?') '?'*)> */
		func() bool {
			position956, tokenIndex956 := position, tokenIndex
			{
				position957 := position
				{
					position958, tokenIndex958 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l959
					}
					position++
					goto l958
				l959:
					position, tokenIndex = position958, tokenIndex958
					if buffer[position] != rune('2') {
						goto l956
					}
					position++
				}
			l958:
				{
					position960, tokenIndex960 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l961
					}
					position++
					goto l960
				l961:
					position, tokenIndex = position960, tokenIndex960
					if buffer[position] != rune('7') {
						goto l962
					}
					position++
					goto l960
				l962:
					position, tokenIndex = position960, tokenIndex960
					if buffer[position] != rune('8') {
						goto l963
					}
					position++
					goto l960
				l963:
					position, tokenIndex = position960, tokenIndex960
					if buffer[position] != rune('9') {
						goto l956
					}
					position++
				}
			l960:
				if !_rules[ruleNums]() {
					goto l956
				}
				{
					position964, tokenIndex964 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l965
					}
					goto l964
				l965:
					position, tokenIndex = position964, tokenIndex964
					if buffer[position] != rune('?') {
						goto l956
					}
					position++
				}
			l964:
			l966:
				{
					position967, tokenIndex967 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l967
					}
					position++
					goto l966
				l967:
					position, tokenIndex = position967, tokenIndex967
				}
				add(ruleYearNum, position957)
			}
			return true
		l956:
			position, tokenIndex = position956, tokenIndex956
			return false
		},
		/* 110 NameUpperChar <- <(UpperChar / UpperCharExtended)> */
		func() bool {
			position968, tokenIndex968 := position, tokenIndex
			{
				position969 := position
				{
					position970, tokenIndex970 := position, tokenIndex
					if !_rules[ruleUpperChar]() {
						goto l971
					}
					goto l970
				l971:
					position, tokenIndex = position970, tokenIndex970
					if !_rules[ruleUpperCharExtended]() {
						goto l968
					}
				}
			l970:
				add(ruleNameUpperChar, position969)
			}
			return true
		l968:
			position, tokenIndex = position968, tokenIndex968
			return false
		},
		/* 111 UpperCharExtended <- <('Æ' / 'Œ' / 'Ö')> */
		func() bool {
			position972, tokenIndex972 := position, tokenIndex
			{
				position973 := position
				{
					position974, tokenIndex974 := position, tokenIndex
					if buffer[position] != rune('Æ') {
						goto l975
					}
					position++
					goto l974
				l975:
					position, tokenIndex = position974, tokenIndex974
					if buffer[position] != rune('Œ') {
						goto l976
					}
					position++
					goto l974
				l976:
					position, tokenIndex = position974, tokenIndex974
					if buffer[position] != rune('Ö') {
						goto l972
					}
					position++
				}
			l974:
				add(ruleUpperCharExtended, position973)
			}
			return true
		l972:
			position, tokenIndex = position972, tokenIndex972
			return false
		},
		/* 112 UpperChar <- <UpperASCII> */
		func() bool {
			position977, tokenIndex977 := position, tokenIndex
			{
				position978 := position
				if !_rules[ruleUpperASCII]() {
					goto l977
				}
				add(ruleUpperChar, position978)
			}
			return true
		l977:
			position, tokenIndex = position977, tokenIndex977
			return false
		},
		/* 113 NameLowerChar <- <(LowerChar / LowerCharExtended / MiscodedChar)> */
		func() bool {
			position979, tokenIndex979 := position, tokenIndex
			{
				position980 := position
				{
					position981, tokenIndex981 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l982
					}
					goto l981
				l982:
					position, tokenIndex = position981, tokenIndex981
					if !_rules[ruleLowerCharExtended]() {
						goto l983
					}
					goto l981
				l983:
					position, tokenIndex = position981, tokenIndex981
					if !_rules[ruleMiscodedChar]() {
						goto l979
					}
				}
			l981:
				add(ruleNameLowerChar, position980)
			}
			return true
		l979:
			position, tokenIndex = position979, tokenIndex979
			return false
		},
		/* 114 MiscodedChar <- <'�'> */
		func() bool {
			position984, tokenIndex984 := position, tokenIndex
			{
				position985 := position
				if buffer[position] != rune('�') {
					goto l984
				}
				position++
				add(ruleMiscodedChar, position985)
			}
			return true
		l984:
			position, tokenIndex = position984, tokenIndex984
			return false
		},
		/* 115 LowerCharExtended <- <('æ' / 'œ' / 'à' / 'â' / 'å' / 'ã' / 'ä' / 'á' / 'ç' / 'č' / 'é' / 'è' / 'ë' / 'í' / 'ì' / 'ï' / 'ň' / 'ñ' / 'ñ' / 'ó' / 'ò' / 'ô' / 'ø' / 'õ' / 'ö' / 'ú' / 'ù' / 'ü' / 'ŕ' / 'ř' / 'ŗ' / 'ſ' / 'š' / 'š' / 'ş' / 'ß' / 'ž')> */
		func() bool {
			position986, tokenIndex986 := position, tokenIndex
			{
				position987 := position
				{
					position988, tokenIndex988 := position, tokenIndex
					if buffer[position] != rune('æ') {
						goto l989
					}
					position++
					goto l988
				l989:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('œ') {
						goto l990
					}
					position++
					goto l988
				l990:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('à') {
						goto l991
					}
					position++
					goto l988
				l991:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('â') {
						goto l992
					}
					position++
					goto l988
				l992:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('å') {
						goto l993
					}
					position++
					goto l988
				l993:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ã') {
						goto l994
					}
					position++
					goto l988
				l994:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ä') {
						goto l995
					}
					position++
					goto l988
				l995:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('á') {
						goto l996
					}
					position++
					goto l988
				l996:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ç') {
						goto l997
					}
					position++
					goto l988
				l997:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('č') {
						goto l998
					}
					position++
					goto l988
				l998:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('é') {
						goto l999
					}
					position++
					goto l988
				l999:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('è') {
						goto l1000
					}
					position++
					goto l988
				l1000:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ë') {
						goto l1001
					}
					position++
					goto l988
				l1001:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('í') {
						goto l1002
					}
					position++
					goto l988
				l1002:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ì') {
						goto l1003
					}
					position++
					goto l988
				l1003:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ï') {
						goto l1004
					}
					position++
					goto l988
				l1004:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ň') {
						goto l1005
					}
					position++
					goto l988
				l1005:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ñ') {
						goto l1006
					}
					position++
					goto l988
				l1006:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ñ') {
						goto l1007
					}
					position++
					goto l988
				l1007:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ó') {
						goto l1008
					}
					position++
					goto l988
				l1008:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ò') {
						goto l1009
					}
					position++
					goto l988
				l1009:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ô') {
						goto l1010
					}
					position++
					goto l988
				l1010:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ø') {
						goto l1011
					}
					position++
					goto l988
				l1011:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('õ') {
						goto l1012
					}
					position++
					goto l988
				l1012:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ö') {
						goto l1013
					}
					position++
					goto l988
				l1013:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ú') {
						goto l1014
					}
					position++
					goto l988
				l1014:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ù') {
						goto l1015
					}
					position++
					goto l988
				l1015:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ü') {
						goto l1016
					}
					position++
					goto l988
				l1016:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ŕ') {
						goto l1017
					}
					position++
					goto l988
				l1017:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ř') {
						goto l1018
					}
					position++
					goto l988
				l1018:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ŗ') {
						goto l1019
					}
					position++
					goto l988
				l1019:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ſ') {
						goto l1020
					}
					position++
					goto l988
				l1020:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('š') {
						goto l1021
					}
					position++
					goto l988
				l1021:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('š') {
						goto l1022
					}
					position++
					goto l988
				l1022:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ş') {
						goto l1023
					}
					position++
					goto l988
				l1023:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ß') {
						goto l1024
					}
					position++
					goto l988
				l1024:
					position, tokenIndex = position988, tokenIndex988
					if buffer[position] != rune('ž') {
						goto l986
					}
					position++
				}
			l988:
				add(ruleLowerCharExtended, position987)
			}
			return true
		l986:
			position, tokenIndex = position986, tokenIndex986
			return false
		},
		/* 116 LowerChar <- <LowerASCII> */
		func() bool {
			position1025, tokenIndex1025 := position, tokenIndex
			{
				position1026 := position
				if !_rules[ruleLowerASCII]() {
					goto l1025
				}
				add(ruleLowerChar, position1026)
			}
			return true
		l1025:
			position, tokenIndex = position1025, tokenIndex1025
			return false
		},
		/* 117 SpaceCharEOI <- <(_ / !.)> */
		func() bool {
			position1027, tokenIndex1027 := position, tokenIndex
			{
				position1028 := position
				{
					position1029, tokenIndex1029 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1030
					}
					goto l1029
				l1030:
					position, tokenIndex = position1029, tokenIndex1029
					{
						position1031, tokenIndex1031 := position, tokenIndex
						if !matchDot() {
							goto l1031
						}
						goto l1027
					l1031:
						position, tokenIndex = position1031, tokenIndex1031
					}
				}
			l1029:
				add(ruleSpaceCharEOI, position1028)
			}
			return true
		l1027:
			position, tokenIndex = position1027, tokenIndex1027
			return false
		},
		/* 118 Nums <- <[0-9]> */
		func() bool {
			position1032, tokenIndex1032 := position, tokenIndex
			{
				position1033 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l1032
				}
				position++
				add(ruleNums, position1033)
			}
			return true
		l1032:
			position, tokenIndex = position1032, tokenIndex1032
			return false
		},
		/* 119 LowerGreek <- <[α-ω]> */
		func() bool {
			position1034, tokenIndex1034 := position, tokenIndex
			{
				position1035 := position
				if c := buffer[position]; c < rune('α') || c > rune('ω') {
					goto l1034
				}
				position++
				add(ruleLowerGreek, position1035)
			}
			return true
		l1034:
			position, tokenIndex = position1034, tokenIndex1034
			return false
		},
		/* 120 LowerASCII <- <[a-z]> */
		func() bool {
			position1036, tokenIndex1036 := position, tokenIndex
			{
				position1037 := position
				if c := buffer[position]; c < rune('a') || c > rune('z') {
					goto l1036
				}
				position++
				add(ruleLowerASCII, position1037)
			}
			return true
		l1036:
			position, tokenIndex = position1036, tokenIndex1036
			return false
		},
		/* 121 UpperASCII <- <[A-Z]> */
		func() bool {
			position1038, tokenIndex1038 := position, tokenIndex
			{
				position1039 := position
				if c := buffer[position]; c < rune('A') || c > rune('Z') {
					goto l1038
				}
				position++
				add(ruleUpperASCII, position1039)
			}
			return true
		l1038:
			position, tokenIndex = position1038, tokenIndex1038
			return false
		},
		/* 122 Apostrophe <- <(ApostrOther / ApostrASCII)> */
		func() bool {
			position1040, tokenIndex1040 := position, tokenIndex
			{
				position1041 := position
				{
					position1042, tokenIndex1042 := position, tokenIndex
					if !_rules[ruleApostrOther]() {
						goto l1043
					}
					goto l1042
				l1043:
					position, tokenIndex = position1042, tokenIndex1042
					if !_rules[ruleApostrASCII]() {
						goto l1040
					}
				}
			l1042:
				add(ruleApostrophe, position1041)
			}
			return true
		l1040:
			position, tokenIndex = position1040, tokenIndex1040
			return false
		},
		/* 123 ApostrASCII <- <'\''> */
		func() bool {
			position1044, tokenIndex1044 := position, tokenIndex
			{
				position1045 := position
				if buffer[position] != rune('\'') {
					goto l1044
				}
				position++
				add(ruleApostrASCII, position1045)
			}
			return true
		l1044:
			position, tokenIndex = position1044, tokenIndex1044
			return false
		},
		/* 124 ApostrOther <- <('‘' / '’')> */
		func() bool {
			position1046, tokenIndex1046 := position, tokenIndex
			{
				position1047 := position
				{
					position1048, tokenIndex1048 := position, tokenIndex
					if buffer[position] != rune('‘') {
						goto l1049
					}
					position++
					goto l1048
				l1049:
					position, tokenIndex = position1048, tokenIndex1048
					if buffer[position] != rune('’') {
						goto l1046
					}
					position++
				}
			l1048:
				add(ruleApostrOther, position1047)
			}
			return true
		l1046:
			position, tokenIndex = position1046, tokenIndex1046
			return false
		},
		/* 125 Dash <- <'-'> */
		func() bool {
			position1050, tokenIndex1050 := position, tokenIndex
			{
				position1051 := position
				if buffer[position] != rune('-') {
					goto l1050
				}
				position++
				add(ruleDash, position1051)
			}
			return true
		l1050:
			position, tokenIndex = position1050, tokenIndex1050
			return false
		},
		/* 126 Slash <- <'/'> */
		func() bool {
			position1052, tokenIndex1052 := position, tokenIndex
			{
				position1053 := position
				if buffer[position] != rune('/') {
					goto l1052
				}
				position++
				add(ruleSlash, position1053)
			}
			return true
		l1052:
			position, tokenIndex = position1052, tokenIndex1052
			return false
		},
		/* 127 _ <- <(MultipleSpace / SingleSpace)> */
		func() bool {
			position1054, tokenIndex1054 := position, tokenIndex
			{
				position1055 := position
				{
					position1056, tokenIndex1056 := position, tokenIndex
					if !_rules[ruleMultipleSpace]() {
						goto l1057
					}
					goto l1056
				l1057:
					position, tokenIndex = position1056, tokenIndex1056
					if !_rules[ruleSingleSpace]() {
						goto l1054
					}
				}
			l1056:
				add(rule_, position1055)
			}
			return true
		l1054:
			position, tokenIndex = position1054, tokenIndex1054
			return false
		},
		/* 128 MultipleSpace <- <(SingleSpace SingleSpace+)> */
		func() bool {
			position1058, tokenIndex1058 := position, tokenIndex
			{
				position1059 := position
				if !_rules[ruleSingleSpace]() {
					goto l1058
				}
				if !_rules[ruleSingleSpace]() {
					goto l1058
				}
			l1060:
				{
					position1061, tokenIndex1061 := position, tokenIndex
					if !_rules[ruleSingleSpace]() {
						goto l1061
					}
					goto l1060
				l1061:
					position, tokenIndex = position1061, tokenIndex1061
				}
				add(ruleMultipleSpace, position1059)
			}
			return true
		l1058:
			position, tokenIndex = position1058, tokenIndex1058
			return false
		},
		/* 129 SingleSpace <- <(' ' / OtherSpace)> */
		func() bool {
			position1062, tokenIndex1062 := position, tokenIndex
			{
				position1063 := position
				{
					position1064, tokenIndex1064 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l1065
					}
					position++
					goto l1064
				l1065:
					position, tokenIndex = position1064, tokenIndex1064
					if !_rules[ruleOtherSpace]() {
						goto l1062
					}
				}
			l1064:
				add(ruleSingleSpace, position1063)
			}
			return true
		l1062:
			position, tokenIndex = position1062, tokenIndex1062
			return false
		},
		/* 130 OtherSpace <- <('\u3000' / '\u00a0' / '\t' / '\r' / '\n' / '\f' / '\v')> */
		func() bool {
			position1066, tokenIndex1066 := position, tokenIndex
			{
				position1067 := position
				{
					position1068, tokenIndex1068 := position, tokenIndex
					if buffer[position] != rune('\u3000') {
						goto l1069
					}
					position++
					goto l1068
				l1069:
					position, tokenIndex = position1068, tokenIndex1068
					if buffer[position] != rune('\u00a0') {
						goto l1070
					}
					position++
					goto l1068
				l1070:
					position, tokenIndex = position1068, tokenIndex1068
					if buffer[position] != rune('\t') {
						goto l1071
					}
					position++
					goto l1068
				l1071:
					position, tokenIndex = position1068, tokenIndex1068
					if buffer[position] != rune('\r') {
						goto l1072
					}
					position++
					goto l1068
				l1072:
					position, tokenIndex = position1068, tokenIndex1068
					if buffer[position] != rune('\n') {
						goto l1073
					}
					position++
					goto l1068
				l1073:
					position, tokenIndex = position1068, tokenIndex1068
					if buffer[position] != rune('\f') {
						goto l1074
					}
					position++
					goto l1068
				l1074:
					position, tokenIndex = position1068, tokenIndex1068
					if buffer[position] != rune('\v') {
						goto l1066
					}
					position++
				}
			l1068:
				add(ruleOtherSpace, position1067)
			}
			return true
		l1066:
			position, tokenIndex = position1066, tokenIndex1066
			return false
		},
		/* 131 END <- <!.> */
		func() bool {
			position1075, tokenIndex1075 := position, tokenIndex
			{
				position1076 := position
				{
					position1077, tokenIndex1077 := position, tokenIndex
					if !matchDot() {
						goto l1077
					}
					goto l1075
				l1077:
					position, tokenIndex = position1077, tokenIndex1077
				}
				add(ruleEND, position1076)
			}
			return true
		l1075:
			position, tokenIndex = position1075, tokenIndex1075
			return false
		},
	}
	p.rules = _rules
	return nil
}
