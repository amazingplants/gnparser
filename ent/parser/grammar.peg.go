package parser

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleSciName
	ruleTail
	ruleName
	ruleHybridFormula
	ruleHybridFormulaFull
	ruleHybridFormulaPart
	ruleNamedHybrid
	ruleNamedSpeciesHybrid
	ruleNamedGenusHybrid
	ruleGraftChimeraFormula
	ruleGraftChimeraFormulaFull
	ruleGraftChimeraFormulaPart
	ruleNamedGenusGraftChimera
	ruleCandidatusName
	ruleCandidatus
	ruleSingleName
	ruleNameUninomial
	ruleNameApprox
	ruleNameComp
	ruleNameSpecies
	ruleGenusWord
	ruleInfraspGroup
	ruleInfraspEpithet
	ruleCultivarWordGroup
	ruleCultivar
	ruleRankCultivar
	ruleNotHybridChar
	ruleCultivarRecursive
	ruleCultivarApostrophe
	ruleSpeciesEpithet
	ruleComparison
	ruleRank
	ruleRankNotho
	ruleRankOtherUncommon
	ruleRankOther
	ruleRankVar
	ruleRankForma
	ruleRankSsp
	ruleRankAgamo
	ruleSubgenusOrSuperspecies
	ruleSubgenus
	ruleSubgenus2
	ruleSubgenus1
	ruleUninomialCombo
	ruleUninomialCombo1
	ruleUninomialCombo2
	ruleRankUninomial
	ruleRankUninomialPlain
	ruleRankUninomialNotho
	ruleUninomial
	ruleUninomialWord
	ruleAbbrSubgenus
	ruleAbbrGenus
	ruleCapWord
	ruleCapWord1
	ruleCapWordWithDash
	ruleUpperAfterDash
	ruleLowerAfterDash
	ruleTwoLetterGenus
	ruleWord
	ruleWord1
	ruleWordStartsWithDigit
	ruleWord2
	ruleWordApostr
	ruleWord4
	ruleMultiDashedWord
	ruleHybridChar
	ruleGraftChimeraChar
	ruleApproxNameIgnored
	ruleApproximation
	ruleAuthorship
	ruleAuthorshipCombo
	ruleOriginalAuthorship
	ruleOriginalAuthorshipComb
	ruleCombinationAuthorship
	ruleBasionymAuthorshipMissingParens
	ruleMissingParensStart
	ruleMissingParensEnd
	ruleBasionymAuthorshipYearMisformed
	ruleBasionymAuthorship
	ruleBasionymAuthorship1
	ruleBasionymAuthorship2Parens
	ruleAuthorsGroup
	ruleAuthorsTeam
	ruleAuthorSep
	ruleAuthorSep1
	ruleAuthorSep2
	ruleAuthorSepSpanish
	ruleAuthorEx
	ruleAuthorEmend
	ruleAuthor
	ruleAuthor0
	ruleAuthor1
	ruleAuthor2
	ruleUnknownAuthor
	ruleAuthorWord
	ruleAuthorEtAl
	ruleAuthorWord2
	ruleAuthorWord3
	ruleAuthorDashInitials
	ruleAuthorWordSoft
	ruleCapAuthorWord
	ruleAllCapsAuthorWord
	ruleFilius
	ruleFiliusF
	ruleFiliusFNoSpace
	ruleAuthorSuffix
	ruleAuthorPrefixGlued
	ruleAuthorPrefix
	ruleAuthorPrefix2
	ruleAuthorPrefix1
	ruleAuthorUpperChar
	ruleAuthorLowerChar
	ruleYear
	ruleYearRange
	ruleYearWithDot
	ruleYearApprox
	ruleYearWithPage
	ruleYearWithParens
	ruleYearWithChar
	ruleYearNum
	ruleNameUpperChar
	ruleUpperCharExtended
	ruleUpperChar
	ruleNameLowerChar
	ruleMiscodedChar
	ruleLowerCharExtended
	ruleLowerChar
	ruleSpaceCharEOI
	ruleNums
	ruleLowerGreek
	ruleLowerASCII
	ruleUpperASCII
	ruleApostrophe
	ruleApostrASCII
	ruleApostrOther
	ruleDash
	ruleSlash
	rule_
	ruleMultipleSpace
	ruleSingleSpace
	ruleOtherSpace
	ruleEND
)

var rul3s = [...]string{
	"Unknown",
	"SciName",
	"Tail",
	"Name",
	"HybridFormula",
	"HybridFormulaFull",
	"HybridFormulaPart",
	"NamedHybrid",
	"NamedSpeciesHybrid",
	"NamedGenusHybrid",
	"GraftChimeraFormula",
	"GraftChimeraFormulaFull",
	"GraftChimeraFormulaPart",
	"NamedGenusGraftChimera",
	"CandidatusName",
	"Candidatus",
	"SingleName",
	"NameUninomial",
	"NameApprox",
	"NameComp",
	"NameSpecies",
	"GenusWord",
	"InfraspGroup",
	"InfraspEpithet",
	"CultivarWordGroup",
	"Cultivar",
	"RankCultivar",
	"NotHybridChar",
	"CultivarRecursive",
	"CultivarApostrophe",
	"SpeciesEpithet",
	"Comparison",
	"Rank",
	"RankNotho",
	"RankOtherUncommon",
	"RankOther",
	"RankVar",
	"RankForma",
	"RankSsp",
	"RankAgamo",
	"SubgenusOrSuperspecies",
	"Subgenus",
	"Subgenus2",
	"Subgenus1",
	"UninomialCombo",
	"UninomialCombo1",
	"UninomialCombo2",
	"RankUninomial",
	"RankUninomialPlain",
	"RankUninomialNotho",
	"Uninomial",
	"UninomialWord",
	"AbbrSubgenus",
	"AbbrGenus",
	"CapWord",
	"CapWord1",
	"CapWordWithDash",
	"UpperAfterDash",
	"LowerAfterDash",
	"TwoLetterGenus",
	"Word",
	"Word1",
	"WordStartsWithDigit",
	"Word2",
	"WordApostr",
	"Word4",
	"MultiDashedWord",
	"HybridChar",
	"GraftChimeraChar",
	"ApproxNameIgnored",
	"Approximation",
	"Authorship",
	"AuthorshipCombo",
	"OriginalAuthorship",
	"OriginalAuthorshipComb",
	"CombinationAuthorship",
	"BasionymAuthorshipMissingParens",
	"MissingParensStart",
	"MissingParensEnd",
	"BasionymAuthorshipYearMisformed",
	"BasionymAuthorship",
	"BasionymAuthorship1",
	"BasionymAuthorship2Parens",
	"AuthorsGroup",
	"AuthorsTeam",
	"AuthorSep",
	"AuthorSep1",
	"AuthorSep2",
	"AuthorSepSpanish",
	"AuthorEx",
	"AuthorEmend",
	"Author",
	"Author0",
	"Author1",
	"Author2",
	"UnknownAuthor",
	"AuthorWord",
	"AuthorEtAl",
	"AuthorWord2",
	"AuthorWord3",
	"AuthorDashInitials",
	"AuthorWordSoft",
	"CapAuthorWord",
	"AllCapsAuthorWord",
	"Filius",
	"FiliusF",
	"FiliusFNoSpace",
	"AuthorSuffix",
	"AuthorPrefixGlued",
	"AuthorPrefix",
	"AuthorPrefix2",
	"AuthorPrefix1",
	"AuthorUpperChar",
	"AuthorLowerChar",
	"Year",
	"YearRange",
	"YearWithDot",
	"YearApprox",
	"YearWithPage",
	"YearWithParens",
	"YearWithChar",
	"YearNum",
	"NameUpperChar",
	"UpperCharExtended",
	"UpperChar",
	"NameLowerChar",
	"MiscodedChar",
	"LowerCharExtended",
	"LowerChar",
	"SpaceCharEOI",
	"Nums",
	"LowerGreek",
	"LowerASCII",
	"UpperASCII",
	"Apostrophe",
	"ApostrASCII",
	"ApostrOther",
	"Dash",
	"Slash",
	"_",
	"MultipleSpace",
	"SingleSpace",
	"OtherSpace",
	"END",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type Engine struct {
	baseEngine

	Buffer string
	buffer []rune
	rules  [144]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *Engine) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *Engine) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *Engine
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *Engine) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *Engine) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *Engine) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func Pretty(pretty bool) func(*Engine) error {
	return func(p *Engine) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*Engine) error {
	return func(p *Engine) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *Engine) Init(options ...func(*Engine) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 SciName <- <(_? Name Tail END)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				{
					position2, tokenIndex2 := position, tokenIndex
					if !_rules[rule_]() {
						goto l2
					}
					goto l3
				l2:
					position, tokenIndex = position2, tokenIndex2
				}
			l3:
				if !_rules[ruleName]() {
					goto l0
				}
				if !_rules[ruleTail]() {
					goto l0
				}
				if !_rules[ruleEND]() {
					goto l0
				}
				add(ruleSciName, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Tail <- <((_ / ';' / ',') .*)?> */
		func() bool {
			{
				position5 := position
				{
					position6, tokenIndex6 := position, tokenIndex
					{
						position8, tokenIndex8 := position, tokenIndex
						if !_rules[rule_]() {
							goto l9
						}
						goto l8
					l9:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(';') {
							goto l10
						}
						position++
						goto l8
					l10:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(',') {
							goto l6
						}
						position++
					}
				l8:
				l11:
					{
						position12, tokenIndex12 := position, tokenIndex
						if !matchDot() {
							goto l12
						}
						goto l11
					l12:
						position, tokenIndex = position12, tokenIndex12
					}
					goto l7
				l6:
					position, tokenIndex = position6, tokenIndex6
				}
			l7:
				add(ruleTail, position5)
			}
			return true
		},
		/* 2 Name <- <(NamedGenusGraftChimera / GraftChimeraFormula / NamedHybrid / HybridFormula / CandidatusName / SingleName)> */
		func() bool {
			position13, tokenIndex13 := position, tokenIndex
			{
				position14 := position
				{
					position15, tokenIndex15 := position, tokenIndex
					if !_rules[ruleNamedGenusGraftChimera]() {
						goto l16
					}
					goto l15
				l16:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleGraftChimeraFormula]() {
						goto l17
					}
					goto l15
				l17:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleNamedHybrid]() {
						goto l18
					}
					goto l15
				l18:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleHybridFormula]() {
						goto l19
					}
					goto l15
				l19:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleCandidatusName]() {
						goto l20
					}
					goto l15
				l20:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleSingleName]() {
						goto l13
					}
				}
			l15:
				add(ruleName, position14)
			}
			return true
		l13:
			position, tokenIndex = position13, tokenIndex13
			return false
		},
		/* 3 HybridFormula <- <(SingleName (_ (HybridFormulaPart / HybridFormulaFull))+)> */
		func() bool {
			position21, tokenIndex21 := position, tokenIndex
			{
				position22 := position
				if !_rules[ruleSingleName]() {
					goto l21
				}
				if !_rules[rule_]() {
					goto l21
				}
				{
					position25, tokenIndex25 := position, tokenIndex
					if !_rules[ruleHybridFormulaPart]() {
						goto l26
					}
					goto l25
				l26:
					position, tokenIndex = position25, tokenIndex25
					if !_rules[ruleHybridFormulaFull]() {
						goto l21
					}
				}
			l25:
			l23:
				{
					position24, tokenIndex24 := position, tokenIndex
					if !_rules[rule_]() {
						goto l24
					}
					{
						position27, tokenIndex27 := position, tokenIndex
						if !_rules[ruleHybridFormulaPart]() {
							goto l28
						}
						goto l27
					l28:
						position, tokenIndex = position27, tokenIndex27
						if !_rules[ruleHybridFormulaFull]() {
							goto l24
						}
					}
				l27:
					goto l23
				l24:
					position, tokenIndex = position24, tokenIndex24
				}
				add(ruleHybridFormula, position22)
			}
			return true
		l21:
			position, tokenIndex = position21, tokenIndex21
			return false
		},
		/* 4 HybridFormulaFull <- <(HybridChar (_ SingleName)?)> */
		func() bool {
			position29, tokenIndex29 := position, tokenIndex
			{
				position30 := position
				if !_rules[ruleHybridChar]() {
					goto l29
				}
				{
					position31, tokenIndex31 := position, tokenIndex
					if !_rules[rule_]() {
						goto l31
					}
					if !_rules[ruleSingleName]() {
						goto l31
					}
					goto l32
				l31:
					position, tokenIndex = position31, tokenIndex31
				}
			l32:
				add(ruleHybridFormulaFull, position30)
			}
			return true
		l29:
			position, tokenIndex = position29, tokenIndex29
			return false
		},
		/* 5 HybridFormulaPart <- <(HybridChar _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position33, tokenIndex33 := position, tokenIndex
			{
				position34 := position
				if !_rules[ruleHybridChar]() {
					goto l33
				}
				if !_rules[rule_]() {
					goto l33
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l33
				}
				{
					position35, tokenIndex35 := position, tokenIndex
					if !_rules[rule_]() {
						goto l35
					}
					if !_rules[ruleInfraspGroup]() {
						goto l35
					}
					goto l36
				l35:
					position, tokenIndex = position35, tokenIndex35
				}
			l36:
				add(ruleHybridFormulaPart, position34)
			}
			return true
		l33:
			position, tokenIndex = position33, tokenIndex33
			return false
		},
		/* 6 NamedHybrid <- <(NamedGenusHybrid / NamedSpeciesHybrid)> */
		func() bool {
			position37, tokenIndex37 := position, tokenIndex
			{
				position38 := position
				{
					position39, tokenIndex39 := position, tokenIndex
					if !_rules[ruleNamedGenusHybrid]() {
						goto l40
					}
					goto l39
				l40:
					position, tokenIndex = position39, tokenIndex39
					if !_rules[ruleNamedSpeciesHybrid]() {
						goto l37
					}
				}
			l39:
				add(ruleNamedHybrid, position38)
			}
			return true
		l37:
			position, tokenIndex = position37, tokenIndex37
			return false
		},
		/* 7 NamedSpeciesHybrid <- <(GenusWord (_ Subgenus)? (_ Comparison)? _ HybridChar _? SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position41, tokenIndex41 := position, tokenIndex
			{
				position42 := position
				if !_rules[ruleGenusWord]() {
					goto l41
				}
				{
					position43, tokenIndex43 := position, tokenIndex
					if !_rules[rule_]() {
						goto l43
					}
					if !_rules[ruleSubgenus]() {
						goto l43
					}
					goto l44
				l43:
					position, tokenIndex = position43, tokenIndex43
				}
			l44:
				{
					position45, tokenIndex45 := position, tokenIndex
					if !_rules[rule_]() {
						goto l45
					}
					if !_rules[ruleComparison]() {
						goto l45
					}
					goto l46
				l45:
					position, tokenIndex = position45, tokenIndex45
				}
			l46:
				if !_rules[rule_]() {
					goto l41
				}
				if !_rules[ruleHybridChar]() {
					goto l41
				}
				{
					position47, tokenIndex47 := position, tokenIndex
					if !_rules[rule_]() {
						goto l47
					}
					goto l48
				l47:
					position, tokenIndex = position47, tokenIndex47
				}
			l48:
				if !_rules[ruleSpeciesEpithet]() {
					goto l41
				}
				{
					position49, tokenIndex49 := position, tokenIndex
					if !_rules[rule_]() {
						goto l49
					}
					if !_rules[ruleInfraspGroup]() {
						goto l49
					}
					goto l50
				l49:
					position, tokenIndex = position49, tokenIndex49
				}
			l50:
				add(ruleNamedSpeciesHybrid, position42)
			}
			return true
		l41:
			position, tokenIndex = position41, tokenIndex41
			return false
		},
		/* 8 NamedGenusHybrid <- <(HybridChar _? SingleName)> */
		func() bool {
			position51, tokenIndex51 := position, tokenIndex
			{
				position52 := position
				if !_rules[ruleHybridChar]() {
					goto l51
				}
				{
					position53, tokenIndex53 := position, tokenIndex
					if !_rules[rule_]() {
						goto l53
					}
					goto l54
				l53:
					position, tokenIndex = position53, tokenIndex53
				}
			l54:
				if !_rules[ruleSingleName]() {
					goto l51
				}
				add(ruleNamedGenusHybrid, position52)
			}
			return true
		l51:
			position, tokenIndex = position51, tokenIndex51
			return false
		},
		/* 9 GraftChimeraFormula <- <(SingleName (_ (GraftChimeraFormulaPart / GraftChimeraFormulaFull))+)> */
		func() bool {
			position55, tokenIndex55 := position, tokenIndex
			{
				position56 := position
				if !_rules[ruleSingleName]() {
					goto l55
				}
				if !_rules[rule_]() {
					goto l55
				}
				{
					position59, tokenIndex59 := position, tokenIndex
					if !_rules[ruleGraftChimeraFormulaPart]() {
						goto l60
					}
					goto l59
				l60:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleGraftChimeraFormulaFull]() {
						goto l55
					}
				}
			l59:
			l57:
				{
					position58, tokenIndex58 := position, tokenIndex
					if !_rules[rule_]() {
						goto l58
					}
					{
						position61, tokenIndex61 := position, tokenIndex
						if !_rules[ruleGraftChimeraFormulaPart]() {
							goto l62
						}
						goto l61
					l62:
						position, tokenIndex = position61, tokenIndex61
						if !_rules[ruleGraftChimeraFormulaFull]() {
							goto l58
						}
					}
				l61:
					goto l57
				l58:
					position, tokenIndex = position58, tokenIndex58
				}
				add(ruleGraftChimeraFormula, position56)
			}
			return true
		l55:
			position, tokenIndex = position55, tokenIndex55
			return false
		},
		/* 10 GraftChimeraFormulaFull <- <(GraftChimeraChar (_ SingleName)?)> */
		func() bool {
			position63, tokenIndex63 := position, tokenIndex
			{
				position64 := position
				if !_rules[ruleGraftChimeraChar]() {
					goto l63
				}
				{
					position65, tokenIndex65 := position, tokenIndex
					if !_rules[rule_]() {
						goto l65
					}
					if !_rules[ruleSingleName]() {
						goto l65
					}
					goto l66
				l65:
					position, tokenIndex = position65, tokenIndex65
				}
			l66:
				add(ruleGraftChimeraFormulaFull, position64)
			}
			return true
		l63:
			position, tokenIndex = position63, tokenIndex63
			return false
		},
		/* 11 GraftChimeraFormulaPart <- <(GraftChimeraChar _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position67, tokenIndex67 := position, tokenIndex
			{
				position68 := position
				if !_rules[ruleGraftChimeraChar]() {
					goto l67
				}
				if !_rules[rule_]() {
					goto l67
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l67
				}
				{
					position69, tokenIndex69 := position, tokenIndex
					if !_rules[rule_]() {
						goto l69
					}
					if !_rules[ruleInfraspGroup]() {
						goto l69
					}
					goto l70
				l69:
					position, tokenIndex = position69, tokenIndex69
				}
			l70:
				add(ruleGraftChimeraFormulaPart, position68)
			}
			return true
		l67:
			position, tokenIndex = position67, tokenIndex67
			return false
		},
		/* 12 NamedGenusGraftChimera <- <(GraftChimeraChar _? SingleName)> */
		func() bool {
			position71, tokenIndex71 := position, tokenIndex
			{
				position72 := position
				if !_rules[ruleGraftChimeraChar]() {
					goto l71
				}
				{
					position73, tokenIndex73 := position, tokenIndex
					if !_rules[rule_]() {
						goto l73
					}
					goto l74
				l73:
					position, tokenIndex = position73, tokenIndex73
				}
			l74:
				if !_rules[ruleSingleName]() {
					goto l71
				}
				add(ruleNamedGenusGraftChimera, position72)
			}
			return true
		l71:
			position, tokenIndex = position71, tokenIndex71
			return false
		},
		/* 13 CandidatusName <- <(Candidatus _ SingleName)> */
		func() bool {
			position75, tokenIndex75 := position, tokenIndex
			{
				position76 := position
				if !_rules[ruleCandidatus]() {
					goto l75
				}
				if !_rules[rule_]() {
					goto l75
				}
				if !_rules[ruleSingleName]() {
					goto l75
				}
				add(ruleCandidatusName, position76)
			}
			return true
		l75:
			position, tokenIndex = position75, tokenIndex75
			return false
		},
		/* 14 Candidatus <- <('C' 'a' 'n' 'd' 'i' 'd' 'a' 't' 'u' 's')> */
		func() bool {
			position77, tokenIndex77 := position, tokenIndex
			{
				position78 := position
				if buffer[position] != rune('C') {
					goto l77
				}
				position++
				if buffer[position] != rune('a') {
					goto l77
				}
				position++
				if buffer[position] != rune('n') {
					goto l77
				}
				position++
				if buffer[position] != rune('d') {
					goto l77
				}
				position++
				if buffer[position] != rune('i') {
					goto l77
				}
				position++
				if buffer[position] != rune('d') {
					goto l77
				}
				position++
				if buffer[position] != rune('a') {
					goto l77
				}
				position++
				if buffer[position] != rune('t') {
					goto l77
				}
				position++
				if buffer[position] != rune('u') {
					goto l77
				}
				position++
				if buffer[position] != rune('s') {
					goto l77
				}
				position++
				add(ruleCandidatus, position78)
			}
			return true
		l77:
			position, tokenIndex = position77, tokenIndex77
			return false
		},
		/* 15 SingleName <- <(NameComp / NameApprox / NameSpecies / NameUninomial)> */
		func() bool {
			position79, tokenIndex79 := position, tokenIndex
			{
				position80 := position
				{
					position81, tokenIndex81 := position, tokenIndex
					if !_rules[ruleNameComp]() {
						goto l82
					}
					goto l81
				l82:
					position, tokenIndex = position81, tokenIndex81
					if !_rules[ruleNameApprox]() {
						goto l83
					}
					goto l81
				l83:
					position, tokenIndex = position81, tokenIndex81
					if !_rules[ruleNameSpecies]() {
						goto l84
					}
					goto l81
				l84:
					position, tokenIndex = position81, tokenIndex81
					if !_rules[ruleNameUninomial]() {
						goto l79
					}
				}
			l81:
				add(ruleSingleName, position80)
			}
			return true
		l79:
			position, tokenIndex = position79, tokenIndex79
			return false
		},
		/* 16 NameUninomial <- <((UninomialCombo / Uninomial) (_ CultivarWordGroup)?)> */
		func() bool {
			position85, tokenIndex85 := position, tokenIndex
			{
				position86 := position
				{
					position87, tokenIndex87 := position, tokenIndex
					if !_rules[ruleUninomialCombo]() {
						goto l88
					}
					goto l87
				l88:
					position, tokenIndex = position87, tokenIndex87
					if !_rules[ruleUninomial]() {
						goto l85
					}
				}
			l87:
				{
					position89, tokenIndex89 := position, tokenIndex
					if !_rules[rule_]() {
						goto l89
					}
					if !_rules[ruleCultivarWordGroup]() {
						goto l89
					}
					goto l90
				l89:
					position, tokenIndex = position89, tokenIndex89
				}
			l90:
				add(ruleNameUninomial, position86)
			}
			return true
		l85:
			position, tokenIndex = position85, tokenIndex85
			return false
		},
		/* 17 NameApprox <- <(GenusWord (_ SpeciesEpithet)? _ Approximation ApproxNameIgnored)> */
		func() bool {
			position91, tokenIndex91 := position, tokenIndex
			{
				position92 := position
				if !_rules[ruleGenusWord]() {
					goto l91
				}
				{
					position93, tokenIndex93 := position, tokenIndex
					if !_rules[rule_]() {
						goto l93
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l93
					}
					goto l94
				l93:
					position, tokenIndex = position93, tokenIndex93
				}
			l94:
				if !_rules[rule_]() {
					goto l91
				}
				if !_rules[ruleApproximation]() {
					goto l91
				}
				if !_rules[ruleApproxNameIgnored]() {
					goto l91
				}
				add(ruleNameApprox, position92)
			}
			return true
		l91:
			position, tokenIndex = position91, tokenIndex91
			return false
		},
		/* 18 NameComp <- <(GenusWord _ Comparison (_ SpeciesEpithet)?)> */
		func() bool {
			position95, tokenIndex95 := position, tokenIndex
			{
				position96 := position
				if !_rules[ruleGenusWord]() {
					goto l95
				}
				if !_rules[rule_]() {
					goto l95
				}
				if !_rules[ruleComparison]() {
					goto l95
				}
				{
					position97, tokenIndex97 := position, tokenIndex
					if !_rules[rule_]() {
						goto l97
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l97
					}
					goto l98
				l97:
					position, tokenIndex = position97, tokenIndex97
				}
			l98:
				add(ruleNameComp, position96)
			}
			return true
		l95:
			position, tokenIndex = position95, tokenIndex95
			return false
		},
		/* 19 NameSpecies <- <(GenusWord (_? (Subgenus / SubgenusOrSuperspecies))? _ SpeciesEpithet (_ InfraspGroup)? (_ CultivarWordGroup)?)> */
		func() bool {
			position99, tokenIndex99 := position, tokenIndex
			{
				position100 := position
				if !_rules[ruleGenusWord]() {
					goto l99
				}
				{
					position101, tokenIndex101 := position, tokenIndex
					{
						position103, tokenIndex103 := position, tokenIndex
						if !_rules[rule_]() {
							goto l103
						}
						goto l104
					l103:
						position, tokenIndex = position103, tokenIndex103
					}
				l104:
					{
						position105, tokenIndex105 := position, tokenIndex
						if !_rules[ruleSubgenus]() {
							goto l106
						}
						goto l105
					l106:
						position, tokenIndex = position105, tokenIndex105
						if !_rules[ruleSubgenusOrSuperspecies]() {
							goto l101
						}
					}
				l105:
					goto l102
				l101:
					position, tokenIndex = position101, tokenIndex101
				}
			l102:
				if !_rules[rule_]() {
					goto l99
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l99
				}
				{
					position107, tokenIndex107 := position, tokenIndex
					if !_rules[rule_]() {
						goto l107
					}
					if !_rules[ruleInfraspGroup]() {
						goto l107
					}
					goto l108
				l107:
					position, tokenIndex = position107, tokenIndex107
				}
			l108:
				{
					position109, tokenIndex109 := position, tokenIndex
					if !_rules[rule_]() {
						goto l109
					}
					if !_rules[ruleCultivarWordGroup]() {
						goto l109
					}
					goto l110
				l109:
					position, tokenIndex = position109, tokenIndex109
				}
			l110:
				add(ruleNameSpecies, position100)
			}
			return true
		l99:
			position, tokenIndex = position99, tokenIndex99
			return false
		},
		/* 20 GenusWord <- <((AbbrGenus / UninomialWord) !(_ AuthorWord))> */
		func() bool {
			position111, tokenIndex111 := position, tokenIndex
			{
				position112 := position
				{
					position113, tokenIndex113 := position, tokenIndex
					if !_rules[ruleAbbrGenus]() {
						goto l114
					}
					goto l113
				l114:
					position, tokenIndex = position113, tokenIndex113
					if !_rules[ruleUninomialWord]() {
						goto l111
					}
				}
			l113:
				{
					position115, tokenIndex115 := position, tokenIndex
					if !_rules[rule_]() {
						goto l115
					}
					if !_rules[ruleAuthorWord]() {
						goto l115
					}
					goto l111
				l115:
					position, tokenIndex = position115, tokenIndex115
				}
				add(ruleGenusWord, position112)
			}
			return true
		l111:
			position, tokenIndex = position111, tokenIndex111
			return false
		},
		/* 21 InfraspGroup <- <(InfraspEpithet (_ InfraspEpithet)? (_ InfraspEpithet)?)> */
		func() bool {
			position116, tokenIndex116 := position, tokenIndex
			{
				position117 := position
				if !_rules[ruleInfraspEpithet]() {
					goto l116
				}
				{
					position118, tokenIndex118 := position, tokenIndex
					if !_rules[rule_]() {
						goto l118
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l118
					}
					goto l119
				l118:
					position, tokenIndex = position118, tokenIndex118
				}
			l119:
				{
					position120, tokenIndex120 := position, tokenIndex
					if !_rules[rule_]() {
						goto l120
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l120
					}
					goto l121
				l120:
					position, tokenIndex = position120, tokenIndex120
				}
			l121:
				add(ruleInfraspGroup, position117)
			}
			return true
		l116:
			position, tokenIndex = position116, tokenIndex116
			return false
		},
		/* 22 InfraspEpithet <- <((Rank _?)? !AuthorEx Word (_? Authorship)?)> */
		func() bool {
			position122, tokenIndex122 := position, tokenIndex
			{
				position123 := position
				{
					position124, tokenIndex124 := position, tokenIndex
					if !_rules[ruleRank]() {
						goto l124
					}
					{
						position126, tokenIndex126 := position, tokenIndex
						if !_rules[rule_]() {
							goto l126
						}
						goto l127
					l126:
						position, tokenIndex = position126, tokenIndex126
					}
				l127:
					goto l125
				l124:
					position, tokenIndex = position124, tokenIndex124
				}
			l125:
				{
					position128, tokenIndex128 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l128
					}
					goto l122
				l128:
					position, tokenIndex = position128, tokenIndex128
				}
				if !_rules[ruleWord]() {
					goto l122
				}
				{
					position129, tokenIndex129 := position, tokenIndex
					{
						position131, tokenIndex131 := position, tokenIndex
						if !_rules[rule_]() {
							goto l131
						}
						goto l132
					l131:
						position, tokenIndex = position131, tokenIndex131
					}
				l132:
					if !_rules[ruleAuthorship]() {
						goto l129
					}
					goto l130
				l129:
					position, tokenIndex = position129, tokenIndex129
				}
			l130:
				add(ruleInfraspEpithet, position123)
			}
			return true
		l122:
			position, tokenIndex = position122, tokenIndex122
			return false
		},
		/* 23 CultivarWordGroup <- <(((RankCultivar _)? CultivarApostrophe CultivarRecursive CultivarApostrophe) / (RankCultivar _ Cultivar))> */
		func() bool {
			position133, tokenIndex133 := position, tokenIndex
			{
				position134 := position
				{
					position135, tokenIndex135 := position, tokenIndex
					{
						position137, tokenIndex137 := position, tokenIndex
						if !_rules[ruleRankCultivar]() {
							goto l137
						}
						if !_rules[rule_]() {
							goto l137
						}
						goto l138
					l137:
						position, tokenIndex = position137, tokenIndex137
					}
				l138:
					if !_rules[ruleCultivarApostrophe]() {
						goto l136
					}
					if !_rules[ruleCultivarRecursive]() {
						goto l136
					}
					if !_rules[ruleCultivarApostrophe]() {
						goto l136
					}
					goto l135
				l136:
					position, tokenIndex = position135, tokenIndex135
					if !_rules[ruleRankCultivar]() {
						goto l133
					}
					if !_rules[rule_]() {
						goto l133
					}
					if !_rules[ruleCultivar]() {
						goto l133
					}
				}
			l135:
				add(ruleCultivarWordGroup, position134)
			}
			return true
		l133:
			position, tokenIndex = position133, tokenIndex133
			return false
		},
		/* 24 Cultivar <- <NotHybridChar+> */
		func() bool {
			position139, tokenIndex139 := position, tokenIndex
			{
				position140 := position
				if !_rules[ruleNotHybridChar]() {
					goto l139
				}
			l141:
				{
					position142, tokenIndex142 := position, tokenIndex
					if !_rules[ruleNotHybridChar]() {
						goto l142
					}
					goto l141
				l142:
					position, tokenIndex = position142, tokenIndex142
				}
				add(ruleCultivar, position140)
			}
			return true
		l139:
			position, tokenIndex = position139, tokenIndex139
			return false
		},
		/* 25 RankCultivar <- <('c' 'v' '.'?)> */
		func() bool {
			position143, tokenIndex143 := position, tokenIndex
			{
				position144 := position
				if buffer[position] != rune('c') {
					goto l143
				}
				position++
				if buffer[position] != rune('v') {
					goto l143
				}
				position++
				{
					position145, tokenIndex145 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l145
					}
					position++
					goto l146
				l145:
					position, tokenIndex = position145, tokenIndex145
				}
			l146:
				add(ruleRankCultivar, position144)
			}
			return true
		l143:
			position, tokenIndex = position143, tokenIndex143
			return false
		},
		/* 26 NotHybridChar <- <(!(_ HybridChar) .)> */
		func() bool {
			position147, tokenIndex147 := position, tokenIndex
			{
				position148 := position
				{
					position149, tokenIndex149 := position, tokenIndex
					if !_rules[rule_]() {
						goto l149
					}
					if !_rules[ruleHybridChar]() {
						goto l149
					}
					goto l147
				l149:
					position, tokenIndex = position149, tokenIndex149
				}
				if !matchDot() {
					goto l147
				}
				add(ruleNotHybridChar, position148)
			}
			return true
		l147:
			position, tokenIndex = position147, tokenIndex147
			return false
		},
		/* 27 CultivarRecursive <- <((NotHybridChar CultivarRecursive) / &CultivarApostrophe)> */
		func() bool {
			position150, tokenIndex150 := position, tokenIndex
			{
				position151 := position
				{
					position152, tokenIndex152 := position, tokenIndex
					if !_rules[ruleNotHybridChar]() {
						goto l153
					}
					if !_rules[ruleCultivarRecursive]() {
						goto l153
					}
					goto l152
				l153:
					position, tokenIndex = position152, tokenIndex152
					{
						position154, tokenIndex154 := position, tokenIndex
						if !_rules[ruleCultivarApostrophe]() {
							goto l150
						}
						position, tokenIndex = position154, tokenIndex154
					}
				}
			l152:
				add(ruleCultivarRecursive, position151)
			}
			return true
		l150:
			position, tokenIndex = position150, tokenIndex150
			return false
		},
		/* 28 CultivarApostrophe <- <('\'' / '‘' / '’' / '"' / '“' / '”')> */
		func() bool {
			position155, tokenIndex155 := position, tokenIndex
			{
				position156 := position
				{
					position157, tokenIndex157 := position, tokenIndex
					if buffer[position] != rune('\'') {
						goto l158
					}
					position++
					goto l157
				l158:
					position, tokenIndex = position157, tokenIndex157
					if buffer[position] != rune('‘') {
						goto l159
					}
					position++
					goto l157
				l159:
					position, tokenIndex = position157, tokenIndex157
					if buffer[position] != rune('’') {
						goto l160
					}
					position++
					goto l157
				l160:
					position, tokenIndex = position157, tokenIndex157
					if buffer[position] != rune('"') {
						goto l161
					}
					position++
					goto l157
				l161:
					position, tokenIndex = position157, tokenIndex157
					if buffer[position] != rune('“') {
						goto l162
					}
					position++
					goto l157
				l162:
					position, tokenIndex = position157, tokenIndex157
					if buffer[position] != rune('”') {
						goto l155
					}
					position++
				}
			l157:
				add(ruleCultivarApostrophe, position156)
			}
			return true
		l155:
			position, tokenIndex = position155, tokenIndex155
			return false
		},
		/* 29 SpeciesEpithet <- <(!AuthorEx Word (_? Authorship)?)> */
		func() bool {
			position163, tokenIndex163 := position, tokenIndex
			{
				position164 := position
				{
					position165, tokenIndex165 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l165
					}
					goto l163
				l165:
					position, tokenIndex = position165, tokenIndex165
				}
				if !_rules[ruleWord]() {
					goto l163
				}
				{
					position166, tokenIndex166 := position, tokenIndex
					{
						position168, tokenIndex168 := position, tokenIndex
						if !_rules[rule_]() {
							goto l168
						}
						goto l169
					l168:
						position, tokenIndex = position168, tokenIndex168
					}
				l169:
					if !_rules[ruleAuthorship]() {
						goto l166
					}
					goto l167
				l166:
					position, tokenIndex = position166, tokenIndex166
				}
			l167:
				add(ruleSpeciesEpithet, position164)
			}
			return true
		l163:
			position, tokenIndex = position163, tokenIndex163
			return false
		},
		/* 30 Comparison <- <('c' 'f' '.'? &SpaceCharEOI)> */
		func() bool {
			position170, tokenIndex170 := position, tokenIndex
			{
				position171 := position
				if buffer[position] != rune('c') {
					goto l170
				}
				position++
				if buffer[position] != rune('f') {
					goto l170
				}
				position++
				{
					position172, tokenIndex172 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l172
					}
					position++
					goto l173
				l172:
					position, tokenIndex = position172, tokenIndex172
				}
			l173:
				{
					position174, tokenIndex174 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l170
					}
					position, tokenIndex = position174, tokenIndex174
				}
				add(ruleComparison, position171)
			}
			return true
		l170:
			position, tokenIndex = position170, tokenIndex170
			return false
		},
		/* 31 Rank <- <((RankForma / RankVar / RankSsp / RankOther / RankOtherUncommon / RankAgamo / RankNotho) (_? LowerGreek ('.' / &SpaceCharEOI))?)> */
		func() bool {
			position175, tokenIndex175 := position, tokenIndex
			{
				position176 := position
				{
					position177, tokenIndex177 := position, tokenIndex
					if !_rules[ruleRankForma]() {
						goto l178
					}
					goto l177
				l178:
					position, tokenIndex = position177, tokenIndex177
					if !_rules[ruleRankVar]() {
						goto l179
					}
					goto l177
				l179:
					position, tokenIndex = position177, tokenIndex177
					if !_rules[ruleRankSsp]() {
						goto l180
					}
					goto l177
				l180:
					position, tokenIndex = position177, tokenIndex177
					if !_rules[ruleRankOther]() {
						goto l181
					}
					goto l177
				l181:
					position, tokenIndex = position177, tokenIndex177
					if !_rules[ruleRankOtherUncommon]() {
						goto l182
					}
					goto l177
				l182:
					position, tokenIndex = position177, tokenIndex177
					if !_rules[ruleRankAgamo]() {
						goto l183
					}
					goto l177
				l183:
					position, tokenIndex = position177, tokenIndex177
					if !_rules[ruleRankNotho]() {
						goto l175
					}
				}
			l177:
				{
					position184, tokenIndex184 := position, tokenIndex
					{
						position186, tokenIndex186 := position, tokenIndex
						if !_rules[rule_]() {
							goto l186
						}
						goto l187
					l186:
						position, tokenIndex = position186, tokenIndex186
					}
				l187:
					if !_rules[ruleLowerGreek]() {
						goto l184
					}
					{
						position188, tokenIndex188 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l189
						}
						position++
						goto l188
					l189:
						position, tokenIndex = position188, tokenIndex188
						{
							position190, tokenIndex190 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l184
							}
							position, tokenIndex = position190, tokenIndex190
						}
					}
				l188:
					goto l185
				l184:
					position, tokenIndex = position184, tokenIndex184
				}
			l185:
				add(ruleRank, position176)
			}
			return true
		l175:
			position, tokenIndex = position175, tokenIndex175
			return false
		},
		/* 32 RankNotho <- <((('n' 'o' 't' 'h' 'o' (('v' 'a' 'r') / ('f' 'o') / 'f' / ('s' 'u' 'b' 's' 'p') / ('s' 's' 'p') / ('s' 'p') / ('m' 'o' 'r' 't' 'h') / ('s' 'u' 'p' 's' 'p') / ('s' 'u'))) / ('n' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position191, tokenIndex191 := position, tokenIndex
			{
				position192 := position
				{
					position193, tokenIndex193 := position, tokenIndex
					if buffer[position] != rune('n') {
						goto l194
					}
					position++
					if buffer[position] != rune('o') {
						goto l194
					}
					position++
					if buffer[position] != rune('t') {
						goto l194
					}
					position++
					if buffer[position] != rune('h') {
						goto l194
					}
					position++
					if buffer[position] != rune('o') {
						goto l194
					}
					position++
					{
						position195, tokenIndex195 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l196
						}
						position++
						if buffer[position] != rune('a') {
							goto l196
						}
						position++
						if buffer[position] != rune('r') {
							goto l196
						}
						position++
						goto l195
					l196:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('f') {
							goto l197
						}
						position++
						if buffer[position] != rune('o') {
							goto l197
						}
						position++
						goto l195
					l197:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('f') {
							goto l198
						}
						position++
						goto l195
					l198:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('s') {
							goto l199
						}
						position++
						if buffer[position] != rune('u') {
							goto l199
						}
						position++
						if buffer[position] != rune('b') {
							goto l199
						}
						position++
						if buffer[position] != rune('s') {
							goto l199
						}
						position++
						if buffer[position] != rune('p') {
							goto l199
						}
						position++
						goto l195
					l199:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('s') {
							goto l200
						}
						position++
						if buffer[position] != rune('s') {
							goto l200
						}
						position++
						if buffer[position] != rune('p') {
							goto l200
						}
						position++
						goto l195
					l200:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('s') {
							goto l201
						}
						position++
						if buffer[position] != rune('p') {
							goto l201
						}
						position++
						goto l195
					l201:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('m') {
							goto l202
						}
						position++
						if buffer[position] != rune('o') {
							goto l202
						}
						position++
						if buffer[position] != rune('r') {
							goto l202
						}
						position++
						if buffer[position] != rune('t') {
							goto l202
						}
						position++
						if buffer[position] != rune('h') {
							goto l202
						}
						position++
						goto l195
					l202:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('s') {
							goto l203
						}
						position++
						if buffer[position] != rune('u') {
							goto l203
						}
						position++
						if buffer[position] != rune('p') {
							goto l203
						}
						position++
						if buffer[position] != rune('s') {
							goto l203
						}
						position++
						if buffer[position] != rune('p') {
							goto l203
						}
						position++
						goto l195
					l203:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('s') {
							goto l194
						}
						position++
						if buffer[position] != rune('u') {
							goto l194
						}
						position++
					}
				l195:
					goto l193
				l194:
					position, tokenIndex = position193, tokenIndex193
					if buffer[position] != rune('n') {
						goto l191
					}
					position++
					if buffer[position] != rune('v') {
						goto l191
					}
					position++
					if buffer[position] != rune('a') {
						goto l191
					}
					position++
					if buffer[position] != rune('r') {
						goto l191
					}
					position++
				}
			l193:
				{
					position204, tokenIndex204 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l205
					}
					position++
					goto l204
				l205:
					position, tokenIndex = position204, tokenIndex204
					{
						position206, tokenIndex206 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l191
						}
						position, tokenIndex = position206, tokenIndex206
					}
				}
			l204:
				add(ruleRankNotho, position192)
			}
			return true
		l191:
			position, tokenIndex = position191, tokenIndex191
			return false
		},
		/* 33 RankOtherUncommon <- <(('*' / ('n' 'a' 't' 'i' 'o') / ('n' 'a' 't' '.') / ('n' 'a' 't') / ('f' '.' 's' 'p') / 'α' / ('β' 'β') / 'β' / 'γ' / 'δ' / 'ε' / 'φ' / 'θ' / 'μ' / ('a' '.') / ('b' '.') / ('c' '.') / ('d' '.') / ('e' '.') / ('g' '.') / ('k' '.') / ('m' 'u' 't' '.')) &SpaceCharEOI)> */
		func() bool {
			position207, tokenIndex207 := position, tokenIndex
			{
				position208 := position
				{
					position209, tokenIndex209 := position, tokenIndex
					if buffer[position] != rune('*') {
						goto l210
					}
					position++
					goto l209
				l210:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('n') {
						goto l211
					}
					position++
					if buffer[position] != rune('a') {
						goto l211
					}
					position++
					if buffer[position] != rune('t') {
						goto l211
					}
					position++
					if buffer[position] != rune('i') {
						goto l211
					}
					position++
					if buffer[position] != rune('o') {
						goto l211
					}
					position++
					goto l209
				l211:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('n') {
						goto l212
					}
					position++
					if buffer[position] != rune('a') {
						goto l212
					}
					position++
					if buffer[position] != rune('t') {
						goto l212
					}
					position++
					if buffer[position] != rune('.') {
						goto l212
					}
					position++
					goto l209
				l212:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('n') {
						goto l213
					}
					position++
					if buffer[position] != rune('a') {
						goto l213
					}
					position++
					if buffer[position] != rune('t') {
						goto l213
					}
					position++
					goto l209
				l213:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('f') {
						goto l214
					}
					position++
					if buffer[position] != rune('.') {
						goto l214
					}
					position++
					if buffer[position] != rune('s') {
						goto l214
					}
					position++
					if buffer[position] != rune('p') {
						goto l214
					}
					position++
					goto l209
				l214:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('α') {
						goto l215
					}
					position++
					goto l209
				l215:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('β') {
						goto l216
					}
					position++
					if buffer[position] != rune('β') {
						goto l216
					}
					position++
					goto l209
				l216:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('β') {
						goto l217
					}
					position++
					goto l209
				l217:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('γ') {
						goto l218
					}
					position++
					goto l209
				l218:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('δ') {
						goto l219
					}
					position++
					goto l209
				l219:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('ε') {
						goto l220
					}
					position++
					goto l209
				l220:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('φ') {
						goto l221
					}
					position++
					goto l209
				l221:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('θ') {
						goto l222
					}
					position++
					goto l209
				l222:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('μ') {
						goto l223
					}
					position++
					goto l209
				l223:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('a') {
						goto l224
					}
					position++
					if buffer[position] != rune('.') {
						goto l224
					}
					position++
					goto l209
				l224:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('b') {
						goto l225
					}
					position++
					if buffer[position] != rune('.') {
						goto l225
					}
					position++
					goto l209
				l225:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('c') {
						goto l226
					}
					position++
					if buffer[position] != rune('.') {
						goto l226
					}
					position++
					goto l209
				l226:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('d') {
						goto l227
					}
					position++
					if buffer[position] != rune('.') {
						goto l227
					}
					position++
					goto l209
				l227:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('e') {
						goto l228
					}
					position++
					if buffer[position] != rune('.') {
						goto l228
					}
					position++
					goto l209
				l228:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('g') {
						goto l229
					}
					position++
					if buffer[position] != rune('.') {
						goto l229
					}
					position++
					goto l209
				l229:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('k') {
						goto l230
					}
					position++
					if buffer[position] != rune('.') {
						goto l230
					}
					position++
					goto l209
				l230:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('m') {
						goto l207
					}
					position++
					if buffer[position] != rune('u') {
						goto l207
					}
					position++
					if buffer[position] != rune('t') {
						goto l207
					}
					position++
					if buffer[position] != rune('.') {
						goto l207
					}
					position++
				}
			l209:
				{
					position231, tokenIndex231 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l207
					}
					position, tokenIndex = position231, tokenIndex231
				}
				add(ruleRankOtherUncommon, position208)
			}
			return true
		l207:
			position, tokenIndex = position207, tokenIndex207
			return false
		},
		/* 34 RankOther <- <((('m' 'o' 'r' 'p' 'h') / ('c' 'o' 'n' 'v' 'a' 'r') / ('p' 's' 'e' 'u' 'd' 'o' 'v' 'a' 'r') / ('s' 'e' 'c' 't') / ('s' 'e' 'r') / ('s' 'u' 'b' 'v' 'a' 'r') / ('s' 'u' 'b' 'f') / ('r' 'a' 'c' 'e') / ('p' 'v') / ('p' 'a' 't' 'h' 'o' 'v' 'a' 'r') / ('a' 'b' '.' (_? ('n' '.'))?) / ('s' 't')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position232, tokenIndex232 := position, tokenIndex
			{
				position233 := position
				{
					position234, tokenIndex234 := position, tokenIndex
					if buffer[position] != rune('m') {
						goto l235
					}
					position++
					if buffer[position] != rune('o') {
						goto l235
					}
					position++
					if buffer[position] != rune('r') {
						goto l235
					}
					position++
					if buffer[position] != rune('p') {
						goto l235
					}
					position++
					if buffer[position] != rune('h') {
						goto l235
					}
					position++
					goto l234
				l235:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('c') {
						goto l236
					}
					position++
					if buffer[position] != rune('o') {
						goto l236
					}
					position++
					if buffer[position] != rune('n') {
						goto l236
					}
					position++
					if buffer[position] != rune('v') {
						goto l236
					}
					position++
					if buffer[position] != rune('a') {
						goto l236
					}
					position++
					if buffer[position] != rune('r') {
						goto l236
					}
					position++
					goto l234
				l236:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('p') {
						goto l237
					}
					position++
					if buffer[position] != rune('s') {
						goto l237
					}
					position++
					if buffer[position] != rune('e') {
						goto l237
					}
					position++
					if buffer[position] != rune('u') {
						goto l237
					}
					position++
					if buffer[position] != rune('d') {
						goto l237
					}
					position++
					if buffer[position] != rune('o') {
						goto l237
					}
					position++
					if buffer[position] != rune('v') {
						goto l237
					}
					position++
					if buffer[position] != rune('a') {
						goto l237
					}
					position++
					if buffer[position] != rune('r') {
						goto l237
					}
					position++
					goto l234
				l237:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('s') {
						goto l238
					}
					position++
					if buffer[position] != rune('e') {
						goto l238
					}
					position++
					if buffer[position] != rune('c') {
						goto l238
					}
					position++
					if buffer[position] != rune('t') {
						goto l238
					}
					position++
					goto l234
				l238:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('s') {
						goto l239
					}
					position++
					if buffer[position] != rune('e') {
						goto l239
					}
					position++
					if buffer[position] != rune('r') {
						goto l239
					}
					position++
					goto l234
				l239:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('s') {
						goto l240
					}
					position++
					if buffer[position] != rune('u') {
						goto l240
					}
					position++
					if buffer[position] != rune('b') {
						goto l240
					}
					position++
					if buffer[position] != rune('v') {
						goto l240
					}
					position++
					if buffer[position] != rune('a') {
						goto l240
					}
					position++
					if buffer[position] != rune('r') {
						goto l240
					}
					position++
					goto l234
				l240:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('s') {
						goto l241
					}
					position++
					if buffer[position] != rune('u') {
						goto l241
					}
					position++
					if buffer[position] != rune('b') {
						goto l241
					}
					position++
					if buffer[position] != rune('f') {
						goto l241
					}
					position++
					goto l234
				l241:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('r') {
						goto l242
					}
					position++
					if buffer[position] != rune('a') {
						goto l242
					}
					position++
					if buffer[position] != rune('c') {
						goto l242
					}
					position++
					if buffer[position] != rune('e') {
						goto l242
					}
					position++
					goto l234
				l242:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('p') {
						goto l243
					}
					position++
					if buffer[position] != rune('v') {
						goto l243
					}
					position++
					goto l234
				l243:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('p') {
						goto l244
					}
					position++
					if buffer[position] != rune('a') {
						goto l244
					}
					position++
					if buffer[position] != rune('t') {
						goto l244
					}
					position++
					if buffer[position] != rune('h') {
						goto l244
					}
					position++
					if buffer[position] != rune('o') {
						goto l244
					}
					position++
					if buffer[position] != rune('v') {
						goto l244
					}
					position++
					if buffer[position] != rune('a') {
						goto l244
					}
					position++
					if buffer[position] != rune('r') {
						goto l244
					}
					position++
					goto l234
				l244:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('a') {
						goto l245
					}
					position++
					if buffer[position] != rune('b') {
						goto l245
					}
					position++
					if buffer[position] != rune('.') {
						goto l245
					}
					position++
					{
						position246, tokenIndex246 := position, tokenIndex
						{
							position248, tokenIndex248 := position, tokenIndex
							if !_rules[rule_]() {
								goto l248
							}
							goto l249
						l248:
							position, tokenIndex = position248, tokenIndex248
						}
					l249:
						if buffer[position] != rune('n') {
							goto l246
						}
						position++
						if buffer[position] != rune('.') {
							goto l246
						}
						position++
						goto l247
					l246:
						position, tokenIndex = position246, tokenIndex246
					}
				l247:
					goto l234
				l245:
					position, tokenIndex = position234, tokenIndex234
					if buffer[position] != rune('s') {
						goto l232
					}
					position++
					if buffer[position] != rune('t') {
						goto l232
					}
					position++
				}
			l234:
				{
					position250, tokenIndex250 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l251
					}
					position++
					goto l250
				l251:
					position, tokenIndex = position250, tokenIndex250
					{
						position252, tokenIndex252 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l232
						}
						position, tokenIndex = position252, tokenIndex252
					}
				}
			l250:
				add(ruleRankOther, position233)
			}
			return true
		l232:
			position, tokenIndex = position232, tokenIndex232
			return false
		},
		/* 35 RankVar <- <((('v' 'a' 'r' 'i' 'e' 't' 'y') / ('[' 'v' 'a' 'r' '.' ']') / ('v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position253, tokenIndex253 := position, tokenIndex
			{
				position254 := position
				{
					position255, tokenIndex255 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l256
					}
					position++
					if buffer[position] != rune('a') {
						goto l256
					}
					position++
					if buffer[position] != rune('r') {
						goto l256
					}
					position++
					if buffer[position] != rune('i') {
						goto l256
					}
					position++
					if buffer[position] != rune('e') {
						goto l256
					}
					position++
					if buffer[position] != rune('t') {
						goto l256
					}
					position++
					if buffer[position] != rune('y') {
						goto l256
					}
					position++
					goto l255
				l256:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('[') {
						goto l257
					}
					position++
					if buffer[position] != rune('v') {
						goto l257
					}
					position++
					if buffer[position] != rune('a') {
						goto l257
					}
					position++
					if buffer[position] != rune('r') {
						goto l257
					}
					position++
					if buffer[position] != rune('.') {
						goto l257
					}
					position++
					if buffer[position] != rune(']') {
						goto l257
					}
					position++
					goto l255
				l257:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('v') {
						goto l253
					}
					position++
					if buffer[position] != rune('a') {
						goto l253
					}
					position++
					if buffer[position] != rune('r') {
						goto l253
					}
					position++
				}
			l255:
				{
					position258, tokenIndex258 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l259
					}
					position++
					goto l258
				l259:
					position, tokenIndex = position258, tokenIndex258
					{
						position260, tokenIndex260 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l253
						}
						position, tokenIndex = position260, tokenIndex260
					}
				}
			l258:
				add(ruleRankVar, position254)
			}
			return true
		l253:
			position, tokenIndex = position253, tokenIndex253
			return false
		},
		/* 36 RankForma <- <((('f' 'o' 'r' 'm' 'a') / ('f' 'm' 'a') / ('f' 'm') / ('f' 'o' 'r' 'm') / ('f' 'o') / 'f') ('.' / &SpaceCharEOI))> */
		func() bool {
			position261, tokenIndex261 := position, tokenIndex
			{
				position262 := position
				{
					position263, tokenIndex263 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l264
					}
					position++
					if buffer[position] != rune('o') {
						goto l264
					}
					position++
					if buffer[position] != rune('r') {
						goto l264
					}
					position++
					if buffer[position] != rune('m') {
						goto l264
					}
					position++
					if buffer[position] != rune('a') {
						goto l264
					}
					position++
					goto l263
				l264:
					position, tokenIndex = position263, tokenIndex263
					if buffer[position] != rune('f') {
						goto l265
					}
					position++
					if buffer[position] != rune('m') {
						goto l265
					}
					position++
					if buffer[position] != rune('a') {
						goto l265
					}
					position++
					goto l263
				l265:
					position, tokenIndex = position263, tokenIndex263
					if buffer[position] != rune('f') {
						goto l266
					}
					position++
					if buffer[position] != rune('m') {
						goto l266
					}
					position++
					goto l263
				l266:
					position, tokenIndex = position263, tokenIndex263
					if buffer[position] != rune('f') {
						goto l267
					}
					position++
					if buffer[position] != rune('o') {
						goto l267
					}
					position++
					if buffer[position] != rune('r') {
						goto l267
					}
					position++
					if buffer[position] != rune('m') {
						goto l267
					}
					position++
					goto l263
				l267:
					position, tokenIndex = position263, tokenIndex263
					if buffer[position] != rune('f') {
						goto l268
					}
					position++
					if buffer[position] != rune('o') {
						goto l268
					}
					position++
					goto l263
				l268:
					position, tokenIndex = position263, tokenIndex263
					if buffer[position] != rune('f') {
						goto l261
					}
					position++
				}
			l263:
				{
					position269, tokenIndex269 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l270
					}
					position++
					goto l269
				l270:
					position, tokenIndex = position269, tokenIndex269
					{
						position271, tokenIndex271 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l261
						}
						position, tokenIndex = position271, tokenIndex271
					}
				}
			l269:
				add(ruleRankForma, position262)
			}
			return true
		l261:
			position, tokenIndex = position261, tokenIndex261
			return false
		},
		/* 37 RankSsp <- <((('s' 's' 'p') / ('s' 'u' 'b' 's' 'p' 'e' 'c') / ('s' 'u' 'b' 's' 'p')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position272, tokenIndex272 := position, tokenIndex
			{
				position273 := position
				{
					position274, tokenIndex274 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l275
					}
					position++
					if buffer[position] != rune('s') {
						goto l275
					}
					position++
					if buffer[position] != rune('p') {
						goto l275
					}
					position++
					goto l274
				l275:
					position, tokenIndex = position274, tokenIndex274
					if buffer[position] != rune('s') {
						goto l276
					}
					position++
					if buffer[position] != rune('u') {
						goto l276
					}
					position++
					if buffer[position] != rune('b') {
						goto l276
					}
					position++
					if buffer[position] != rune('s') {
						goto l276
					}
					position++
					if buffer[position] != rune('p') {
						goto l276
					}
					position++
					if buffer[position] != rune('e') {
						goto l276
					}
					position++
					if buffer[position] != rune('c') {
						goto l276
					}
					position++
					goto l274
				l276:
					position, tokenIndex = position274, tokenIndex274
					if buffer[position] != rune('s') {
						goto l272
					}
					position++
					if buffer[position] != rune('u') {
						goto l272
					}
					position++
					if buffer[position] != rune('b') {
						goto l272
					}
					position++
					if buffer[position] != rune('s') {
						goto l272
					}
					position++
					if buffer[position] != rune('p') {
						goto l272
					}
					position++
				}
			l274:
				{
					position277, tokenIndex277 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l278
					}
					position++
					goto l277
				l278:
					position, tokenIndex = position277, tokenIndex277
					{
						position279, tokenIndex279 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l272
						}
						position, tokenIndex = position279, tokenIndex279
					}
				}
			l277:
				add(ruleRankSsp, position273)
			}
			return true
		l272:
			position, tokenIndex = position272, tokenIndex272
			return false
		},
		/* 38 RankAgamo <- <((('a' 'g' 'a' 'm' 'o' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 's' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position280, tokenIndex280 := position, tokenIndex
			{
				position281 := position
				{
					position282, tokenIndex282 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l283
					}
					position++
					if buffer[position] != rune('g') {
						goto l283
					}
					position++
					if buffer[position] != rune('a') {
						goto l283
					}
					position++
					if buffer[position] != rune('m') {
						goto l283
					}
					position++
					if buffer[position] != rune('o') {
						goto l283
					}
					position++
					if buffer[position] != rune('s') {
						goto l283
					}
					position++
					if buffer[position] != rune('p') {
						goto l283
					}
					position++
					goto l282
				l283:
					position, tokenIndex = position282, tokenIndex282
					if buffer[position] != rune('a') {
						goto l284
					}
					position++
					if buffer[position] != rune('g') {
						goto l284
					}
					position++
					if buffer[position] != rune('a') {
						goto l284
					}
					position++
					if buffer[position] != rune('m') {
						goto l284
					}
					position++
					if buffer[position] != rune('o') {
						goto l284
					}
					position++
					if buffer[position] != rune('s') {
						goto l284
					}
					position++
					if buffer[position] != rune('s') {
						goto l284
					}
					position++
					if buffer[position] != rune('p') {
						goto l284
					}
					position++
					goto l282
				l284:
					position, tokenIndex = position282, tokenIndex282
					if buffer[position] != rune('a') {
						goto l280
					}
					position++
					if buffer[position] != rune('g') {
						goto l280
					}
					position++
					if buffer[position] != rune('a') {
						goto l280
					}
					position++
					if buffer[position] != rune('m') {
						goto l280
					}
					position++
					if buffer[position] != rune('o') {
						goto l280
					}
					position++
					if buffer[position] != rune('v') {
						goto l280
					}
					position++
					if buffer[position] != rune('a') {
						goto l280
					}
					position++
					if buffer[position] != rune('r') {
						goto l280
					}
					position++
				}
			l282:
				{
					position285, tokenIndex285 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l286
					}
					position++
					goto l285
				l286:
					position, tokenIndex = position285, tokenIndex285
					{
						position287, tokenIndex287 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l280
						}
						position, tokenIndex = position287, tokenIndex287
					}
				}
			l285:
				add(ruleRankAgamo, position281)
			}
			return true
		l280:
			position, tokenIndex = position280, tokenIndex280
			return false
		},
		/* 39 SubgenusOrSuperspecies <- <('(' _? NameLowerChar+ _? ')')> */
		func() bool {
			position288, tokenIndex288 := position, tokenIndex
			{
				position289 := position
				if buffer[position] != rune('(') {
					goto l288
				}
				position++
				{
					position290, tokenIndex290 := position, tokenIndex
					if !_rules[rule_]() {
						goto l290
					}
					goto l291
				l290:
					position, tokenIndex = position290, tokenIndex290
				}
			l291:
				if !_rules[ruleNameLowerChar]() {
					goto l288
				}
			l292:
				{
					position293, tokenIndex293 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l293
					}
					goto l292
				l293:
					position, tokenIndex = position293, tokenIndex293
				}
				{
					position294, tokenIndex294 := position, tokenIndex
					if !_rules[rule_]() {
						goto l294
					}
					goto l295
				l294:
					position, tokenIndex = position294, tokenIndex294
				}
			l295:
				if buffer[position] != rune(')') {
					goto l288
				}
				position++
				add(ruleSubgenusOrSuperspecies, position289)
			}
			return true
		l288:
			position, tokenIndex = position288, tokenIndex288
			return false
		},
		/* 40 Subgenus <- <(Subgenus2 / Subgenus1)> */
		func() bool {
			position296, tokenIndex296 := position, tokenIndex
			{
				position297 := position
				{
					position298, tokenIndex298 := position, tokenIndex
					if !_rules[ruleSubgenus2]() {
						goto l299
					}
					goto l298
				l299:
					position, tokenIndex = position298, tokenIndex298
					if !_rules[ruleSubgenus1]() {
						goto l296
					}
				}
			l298:
				add(ruleSubgenus, position297)
			}
			return true
		l296:
			position, tokenIndex = position296, tokenIndex296
			return false
		},
		/* 41 Subgenus2 <- <('(' _? AbbrSubgenus _? ')' !(_? NameUpperChar))> */
		func() bool {
			position300, tokenIndex300 := position, tokenIndex
			{
				position301 := position
				if buffer[position] != rune('(') {
					goto l300
				}
				position++
				{
					position302, tokenIndex302 := position, tokenIndex
					if !_rules[rule_]() {
						goto l302
					}
					goto l303
				l302:
					position, tokenIndex = position302, tokenIndex302
				}
			l303:
				if !_rules[ruleAbbrSubgenus]() {
					goto l300
				}
				{
					position304, tokenIndex304 := position, tokenIndex
					if !_rules[rule_]() {
						goto l304
					}
					goto l305
				l304:
					position, tokenIndex = position304, tokenIndex304
				}
			l305:
				if buffer[position] != rune(')') {
					goto l300
				}
				position++
				{
					position306, tokenIndex306 := position, tokenIndex
					{
						position307, tokenIndex307 := position, tokenIndex
						if !_rules[rule_]() {
							goto l307
						}
						goto l308
					l307:
						position, tokenIndex = position307, tokenIndex307
					}
				l308:
					if !_rules[ruleNameUpperChar]() {
						goto l306
					}
					goto l300
				l306:
					position, tokenIndex = position306, tokenIndex306
				}
				add(ruleSubgenus2, position301)
			}
			return true
		l300:
			position, tokenIndex = position300, tokenIndex300
			return false
		},
		/* 42 Subgenus1 <- <('(' _? UninomialWord _? ')')> */
		func() bool {
			position309, tokenIndex309 := position, tokenIndex
			{
				position310 := position
				if buffer[position] != rune('(') {
					goto l309
				}
				position++
				{
					position311, tokenIndex311 := position, tokenIndex
					if !_rules[rule_]() {
						goto l311
					}
					goto l312
				l311:
					position, tokenIndex = position311, tokenIndex311
				}
			l312:
				if !_rules[ruleUninomialWord]() {
					goto l309
				}
				{
					position313, tokenIndex313 := position, tokenIndex
					if !_rules[rule_]() {
						goto l313
					}
					goto l314
				l313:
					position, tokenIndex = position313, tokenIndex313
				}
			l314:
				if buffer[position] != rune(')') {
					goto l309
				}
				position++
				add(ruleSubgenus1, position310)
			}
			return true
		l309:
			position, tokenIndex = position309, tokenIndex309
			return false
		},
		/* 43 UninomialCombo <- <(UninomialCombo1 / UninomialCombo2)> */
		func() bool {
			position315, tokenIndex315 := position, tokenIndex
			{
				position316 := position
				{
					position317, tokenIndex317 := position, tokenIndex
					if !_rules[ruleUninomialCombo1]() {
						goto l318
					}
					goto l317
				l318:
					position, tokenIndex = position317, tokenIndex317
					if !_rules[ruleUninomialCombo2]() {
						goto l315
					}
				}
			l317:
				add(ruleUninomialCombo, position316)
			}
			return true
		l315:
			position, tokenIndex = position315, tokenIndex315
			return false
		},
		/* 44 UninomialCombo1 <- <(UninomialWord _? Subgenus (_? Authorship)?)> */
		func() bool {
			position319, tokenIndex319 := position, tokenIndex
			{
				position320 := position
				if !_rules[ruleUninomialWord]() {
					goto l319
				}
				{
					position321, tokenIndex321 := position, tokenIndex
					if !_rules[rule_]() {
						goto l321
					}
					goto l322
				l321:
					position, tokenIndex = position321, tokenIndex321
				}
			l322:
				if !_rules[ruleSubgenus]() {
					goto l319
				}
				{
					position323, tokenIndex323 := position, tokenIndex
					{
						position325, tokenIndex325 := position, tokenIndex
						if !_rules[rule_]() {
							goto l325
						}
						goto l326
					l325:
						position, tokenIndex = position325, tokenIndex325
					}
				l326:
					if !_rules[ruleAuthorship]() {
						goto l323
					}
					goto l324
				l323:
					position, tokenIndex = position323, tokenIndex323
				}
			l324:
				add(ruleUninomialCombo1, position320)
			}
			return true
		l319:
			position, tokenIndex = position319, tokenIndex319
			return false
		},
		/* 45 UninomialCombo2 <- <(Uninomial _ RankUninomial _ Uninomial)> */
		func() bool {
			position327, tokenIndex327 := position, tokenIndex
			{
				position328 := position
				if !_rules[ruleUninomial]() {
					goto l327
				}
				if !_rules[rule_]() {
					goto l327
				}
				if !_rules[ruleRankUninomial]() {
					goto l327
				}
				if !_rules[rule_]() {
					goto l327
				}
				if !_rules[ruleUninomial]() {
					goto l327
				}
				add(ruleUninomialCombo2, position328)
			}
			return true
		l327:
			position, tokenIndex = position327, tokenIndex327
			return false
		},
		/* 46 RankUninomial <- <(RankUninomialPlain / RankUninomialNotho)> */
		func() bool {
			position329, tokenIndex329 := position, tokenIndex
			{
				position330 := position
				{
					position331, tokenIndex331 := position, tokenIndex
					if !_rules[ruleRankUninomialPlain]() {
						goto l332
					}
					goto l331
				l332:
					position, tokenIndex = position331, tokenIndex331
					if !_rules[ruleRankUninomialNotho]() {
						goto l329
					}
				}
			l331:
				add(ruleRankUninomial, position330)
			}
			return true
		l329:
			position, tokenIndex = position329, tokenIndex329
			return false
		},
		/* 47 RankUninomialPlain <- <((('s' 'e' 'c' 't') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('t' 'r' 'i' 'b') / ('s' 'u' 'b' 't' 'r' 'i' 'b') / ('s' 'u' 'b' 's' 'e' 'r') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('f' 'a' 'm') / ('s' 'u' 'b' 'f' 'a' 'm') / ('s' 'u' 'p' 'e' 'r' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position333, tokenIndex333 := position, tokenIndex
			{
				position334 := position
				{
					position335, tokenIndex335 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l336
					}
					position++
					if buffer[position] != rune('e') {
						goto l336
					}
					position++
					if buffer[position] != rune('c') {
						goto l336
					}
					position++
					if buffer[position] != rune('t') {
						goto l336
					}
					position++
					goto l335
				l336:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('s') {
						goto l337
					}
					position++
					if buffer[position] != rune('u') {
						goto l337
					}
					position++
					if buffer[position] != rune('b') {
						goto l337
					}
					position++
					if buffer[position] != rune('s') {
						goto l337
					}
					position++
					if buffer[position] != rune('e') {
						goto l337
					}
					position++
					if buffer[position] != rune('c') {
						goto l337
					}
					position++
					if buffer[position] != rune('t') {
						goto l337
					}
					position++
					goto l335
				l337:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('t') {
						goto l338
					}
					position++
					if buffer[position] != rune('r') {
						goto l338
					}
					position++
					if buffer[position] != rune('i') {
						goto l338
					}
					position++
					if buffer[position] != rune('b') {
						goto l338
					}
					position++
					goto l335
				l338:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('s') {
						goto l339
					}
					position++
					if buffer[position] != rune('u') {
						goto l339
					}
					position++
					if buffer[position] != rune('b') {
						goto l339
					}
					position++
					if buffer[position] != rune('t') {
						goto l339
					}
					position++
					if buffer[position] != rune('r') {
						goto l339
					}
					position++
					if buffer[position] != rune('i') {
						goto l339
					}
					position++
					if buffer[position] != rune('b') {
						goto l339
					}
					position++
					goto l335
				l339:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('s') {
						goto l340
					}
					position++
					if buffer[position] != rune('u') {
						goto l340
					}
					position++
					if buffer[position] != rune('b') {
						goto l340
					}
					position++
					if buffer[position] != rune('s') {
						goto l340
					}
					position++
					if buffer[position] != rune('e') {
						goto l340
					}
					position++
					if buffer[position] != rune('r') {
						goto l340
					}
					position++
					goto l335
				l340:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('s') {
						goto l341
					}
					position++
					if buffer[position] != rune('e') {
						goto l341
					}
					position++
					if buffer[position] != rune('r') {
						goto l341
					}
					position++
					goto l335
				l341:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('s') {
						goto l342
					}
					position++
					if buffer[position] != rune('u') {
						goto l342
					}
					position++
					if buffer[position] != rune('b') {
						goto l342
					}
					position++
					if buffer[position] != rune('g') {
						goto l342
					}
					position++
					if buffer[position] != rune('e') {
						goto l342
					}
					position++
					if buffer[position] != rune('n') {
						goto l342
					}
					position++
					goto l335
				l342:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('s') {
						goto l343
					}
					position++
					if buffer[position] != rune('u') {
						goto l343
					}
					position++
					if buffer[position] != rune('b') {
						goto l343
					}
					position++
					if buffer[position] != rune('g') {
						goto l343
					}
					position++
					goto l335
				l343:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('f') {
						goto l344
					}
					position++
					if buffer[position] != rune('a') {
						goto l344
					}
					position++
					if buffer[position] != rune('m') {
						goto l344
					}
					position++
					goto l335
				l344:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('s') {
						goto l345
					}
					position++
					if buffer[position] != rune('u') {
						goto l345
					}
					position++
					if buffer[position] != rune('b') {
						goto l345
					}
					position++
					if buffer[position] != rune('f') {
						goto l345
					}
					position++
					if buffer[position] != rune('a') {
						goto l345
					}
					position++
					if buffer[position] != rune('m') {
						goto l345
					}
					position++
					goto l335
				l345:
					position, tokenIndex = position335, tokenIndex335
					if buffer[position] != rune('s') {
						goto l333
					}
					position++
					if buffer[position] != rune('u') {
						goto l333
					}
					position++
					if buffer[position] != rune('p') {
						goto l333
					}
					position++
					if buffer[position] != rune('e') {
						goto l333
					}
					position++
					if buffer[position] != rune('r') {
						goto l333
					}
					position++
					if buffer[position] != rune('t') {
						goto l333
					}
					position++
					if buffer[position] != rune('r') {
						goto l333
					}
					position++
					if buffer[position] != rune('i') {
						goto l333
					}
					position++
					if buffer[position] != rune('b') {
						goto l333
					}
					position++
				}
			l335:
				{
					position346, tokenIndex346 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l347
					}
					position++
					goto l346
				l347:
					position, tokenIndex = position346, tokenIndex346
					{
						position348, tokenIndex348 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l333
						}
						position, tokenIndex = position348, tokenIndex348
					}
				}
			l346:
				add(ruleRankUninomialPlain, position334)
			}
			return true
		l333:
			position, tokenIndex = position333, tokenIndex333
			return false
		},
		/* 48 RankUninomialNotho <- <('n' 'o' 't' 'h' 'o' _? (('s' 'e' 'c' 't') / ('g' 'e' 'n') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'e' 'n') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('s' 'u' 'b' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position349, tokenIndex349 := position, tokenIndex
			{
				position350 := position
				if buffer[position] != rune('n') {
					goto l349
				}
				position++
				if buffer[position] != rune('o') {
					goto l349
				}
				position++
				if buffer[position] != rune('t') {
					goto l349
				}
				position++
				if buffer[position] != rune('h') {
					goto l349
				}
				position++
				if buffer[position] != rune('o') {
					goto l349
				}
				position++
				{
					position351, tokenIndex351 := position, tokenIndex
					if !_rules[rule_]() {
						goto l351
					}
					goto l352
				l351:
					position, tokenIndex = position351, tokenIndex351
				}
			l352:
				{
					position353, tokenIndex353 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l354
					}
					position++
					if buffer[position] != rune('e') {
						goto l354
					}
					position++
					if buffer[position] != rune('c') {
						goto l354
					}
					position++
					if buffer[position] != rune('t') {
						goto l354
					}
					position++
					goto l353
				l354:
					position, tokenIndex = position353, tokenIndex353
					if buffer[position] != rune('g') {
						goto l355
					}
					position++
					if buffer[position] != rune('e') {
						goto l355
					}
					position++
					if buffer[position] != rune('n') {
						goto l355
					}
					position++
					goto l353
				l355:
					position, tokenIndex = position353, tokenIndex353
					if buffer[position] != rune('s') {
						goto l356
					}
					position++
					if buffer[position] != rune('e') {
						goto l356
					}
					position++
					if buffer[position] != rune('r') {
						goto l356
					}
					position++
					goto l353
				l356:
					position, tokenIndex = position353, tokenIndex353
					if buffer[position] != rune('s') {
						goto l357
					}
					position++
					if buffer[position] != rune('u') {
						goto l357
					}
					position++
					if buffer[position] != rune('b') {
						goto l357
					}
					position++
					if buffer[position] != rune('g') {
						goto l357
					}
					position++
					if buffer[position] != rune('e') {
						goto l357
					}
					position++
					if buffer[position] != rune('e') {
						goto l357
					}
					position++
					if buffer[position] != rune('n') {
						goto l357
					}
					position++
					goto l353
				l357:
					position, tokenIndex = position353, tokenIndex353
					if buffer[position] != rune('s') {
						goto l358
					}
					position++
					if buffer[position] != rune('u') {
						goto l358
					}
					position++
					if buffer[position] != rune('b') {
						goto l358
					}
					position++
					if buffer[position] != rune('g') {
						goto l358
					}
					position++
					if buffer[position] != rune('e') {
						goto l358
					}
					position++
					if buffer[position] != rune('n') {
						goto l358
					}
					position++
					goto l353
				l358:
					position, tokenIndex = position353, tokenIndex353
					if buffer[position] != rune('s') {
						goto l359
					}
					position++
					if buffer[position] != rune('u') {
						goto l359
					}
					position++
					if buffer[position] != rune('b') {
						goto l359
					}
					position++
					if buffer[position] != rune('g') {
						goto l359
					}
					position++
					goto l353
				l359:
					position, tokenIndex = position353, tokenIndex353
					if buffer[position] != rune('s') {
						goto l360
					}
					position++
					if buffer[position] != rune('u') {
						goto l360
					}
					position++
					if buffer[position] != rune('b') {
						goto l360
					}
					position++
					if buffer[position] != rune('s') {
						goto l360
					}
					position++
					if buffer[position] != rune('e') {
						goto l360
					}
					position++
					if buffer[position] != rune('c') {
						goto l360
					}
					position++
					if buffer[position] != rune('t') {
						goto l360
					}
					position++
					goto l353
				l360:
					position, tokenIndex = position353, tokenIndex353
					if buffer[position] != rune('s') {
						goto l349
					}
					position++
					if buffer[position] != rune('u') {
						goto l349
					}
					position++
					if buffer[position] != rune('b') {
						goto l349
					}
					position++
					if buffer[position] != rune('t') {
						goto l349
					}
					position++
					if buffer[position] != rune('r') {
						goto l349
					}
					position++
					if buffer[position] != rune('i') {
						goto l349
					}
					position++
					if buffer[position] != rune('b') {
						goto l349
					}
					position++
				}
			l353:
				{
					position361, tokenIndex361 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l362
					}
					position++
					goto l361
				l362:
					position, tokenIndex = position361, tokenIndex361
					{
						position363, tokenIndex363 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l349
						}
						position, tokenIndex = position363, tokenIndex363
					}
				}
			l361:
				add(ruleRankUninomialNotho, position350)
			}
			return true
		l349:
			position, tokenIndex = position349, tokenIndex349
			return false
		},
		/* 49 Uninomial <- <(UninomialWord (_ Authorship !(_ LowerCharExtended LowerCharExtended LowerCharExtended))?)> */
		func() bool {
			position364, tokenIndex364 := position, tokenIndex
			{
				position365 := position
				if !_rules[ruleUninomialWord]() {
					goto l364
				}
				{
					position366, tokenIndex366 := position, tokenIndex
					if !_rules[rule_]() {
						goto l366
					}
					if !_rules[ruleAuthorship]() {
						goto l366
					}
					{
						position368, tokenIndex368 := position, tokenIndex
						if !_rules[rule_]() {
							goto l368
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l368
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l368
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l368
						}
						goto l366
					l368:
						position, tokenIndex = position368, tokenIndex368
					}
					goto l367
				l366:
					position, tokenIndex = position366, tokenIndex366
				}
			l367:
				add(ruleUninomial, position365)
			}
			return true
		l364:
			position, tokenIndex = position364, tokenIndex364
			return false
		},
		/* 50 UninomialWord <- <(CapWord / TwoLetterGenus)> */
		func() bool {
			position369, tokenIndex369 := position, tokenIndex
			{
				position370 := position
				{
					position371, tokenIndex371 := position, tokenIndex
					if !_rules[ruleCapWord]() {
						goto l372
					}
					goto l371
				l372:
					position, tokenIndex = position371, tokenIndex371
					if !_rules[ruleTwoLetterGenus]() {
						goto l369
					}
				}
			l371:
				add(ruleUninomialWord, position370)
			}
			return true
		l369:
			position, tokenIndex = position369, tokenIndex369
			return false
		},
		/* 51 AbbrSubgenus <- <(UpperChar LowerChar* '.')> */
		func() bool {
			position373, tokenIndex373 := position, tokenIndex
			{
				position374 := position
				if !_rules[ruleUpperChar]() {
					goto l373
				}
			l375:
				{
					position376, tokenIndex376 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l376
					}
					goto l375
				l376:
					position, tokenIndex = position376, tokenIndex376
				}
				if buffer[position] != rune('.') {
					goto l373
				}
				position++
				add(ruleAbbrSubgenus, position374)
			}
			return true
		l373:
			position, tokenIndex = position373, tokenIndex373
			return false
		},
		/* 52 AbbrGenus <- <(UpperChar LowerChar? '.')> */
		func() bool {
			position377, tokenIndex377 := position, tokenIndex
			{
				position378 := position
				if !_rules[ruleUpperChar]() {
					goto l377
				}
				{
					position379, tokenIndex379 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l379
					}
					goto l380
				l379:
					position, tokenIndex = position379, tokenIndex379
				}
			l380:
				if buffer[position] != rune('.') {
					goto l377
				}
				position++
				add(ruleAbbrGenus, position378)
			}
			return true
		l377:
			position, tokenIndex = position377, tokenIndex377
			return false
		},
		/* 53 CapWord <- <(CapWordWithDash / CapWord1)> */
		func() bool {
			position381, tokenIndex381 := position, tokenIndex
			{
				position382 := position
				{
					position383, tokenIndex383 := position, tokenIndex
					if !_rules[ruleCapWordWithDash]() {
						goto l384
					}
					goto l383
				l384:
					position, tokenIndex = position383, tokenIndex383
					if !_rules[ruleCapWord1]() {
						goto l381
					}
				}
			l383:
				add(ruleCapWord, position382)
			}
			return true
		l381:
			position, tokenIndex = position381, tokenIndex381
			return false
		},
		/* 54 CapWord1 <- <(NameUpperChar NameLowerChar NameLowerChar+ '?'?)> */
		func() bool {
			position385, tokenIndex385 := position, tokenIndex
			{
				position386 := position
				if !_rules[ruleNameUpperChar]() {
					goto l385
				}
				if !_rules[ruleNameLowerChar]() {
					goto l385
				}
				if !_rules[ruleNameLowerChar]() {
					goto l385
				}
			l387:
				{
					position388, tokenIndex388 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l388
					}
					goto l387
				l388:
					position, tokenIndex = position388, tokenIndex388
				}
				{
					position389, tokenIndex389 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l389
					}
					position++
					goto l390
				l389:
					position, tokenIndex = position389, tokenIndex389
				}
			l390:
				add(ruleCapWord1, position386)
			}
			return true
		l385:
			position, tokenIndex = position385, tokenIndex385
			return false
		},
		/* 55 CapWordWithDash <- <(CapWord1 Dash (UpperAfterDash / LowerAfterDash))> */
		func() bool {
			position391, tokenIndex391 := position, tokenIndex
			{
				position392 := position
				if !_rules[ruleCapWord1]() {
					goto l391
				}
				if !_rules[ruleDash]() {
					goto l391
				}
				{
					position393, tokenIndex393 := position, tokenIndex
					if !_rules[ruleUpperAfterDash]() {
						goto l394
					}
					goto l393
				l394:
					position, tokenIndex = position393, tokenIndex393
					if !_rules[ruleLowerAfterDash]() {
						goto l391
					}
				}
			l393:
				add(ruleCapWordWithDash, position392)
			}
			return true
		l391:
			position, tokenIndex = position391, tokenIndex391
			return false
		},
		/* 56 UpperAfterDash <- <CapWord1> */
		func() bool {
			position395, tokenIndex395 := position, tokenIndex
			{
				position396 := position
				if !_rules[ruleCapWord1]() {
					goto l395
				}
				add(ruleUpperAfterDash, position396)
			}
			return true
		l395:
			position, tokenIndex = position395, tokenIndex395
			return false
		},
		/* 57 LowerAfterDash <- <Word1> */
		func() bool {
			position397, tokenIndex397 := position, tokenIndex
			{
				position398 := position
				if !_rules[ruleWord1]() {
					goto l397
				}
				add(ruleLowerAfterDash, position398)
			}
			return true
		l397:
			position, tokenIndex = position397, tokenIndex397
			return false
		},
		/* 58 TwoLetterGenus <- <(('C' 'a') / ('D' 'o') / ('E' 'a') / ('G' 'e') / ('I' 'a') / ('I' 'o') / ('I' 'x') / ('L' 'o') / ('O' 'a') / ('O' 'o') / ('N' 'u') / ('R' 'a') / ('T' 'y') / ('U' 'a') / ('A' 'a') / ('J' 'a') / ('Z' 'u') / ('L' 'a') / ('Q' 'u') / ('A' 's') / ('B' 'a'))> */
		func() bool {
			position399, tokenIndex399 := position, tokenIndex
			{
				position400 := position
				{
					position401, tokenIndex401 := position, tokenIndex
					if buffer[position] != rune('C') {
						goto l402
					}
					position++
					if buffer[position] != rune('a') {
						goto l402
					}
					position++
					goto l401
				l402:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('D') {
						goto l403
					}
					position++
					if buffer[position] != rune('o') {
						goto l403
					}
					position++
					goto l401
				l403:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('E') {
						goto l404
					}
					position++
					if buffer[position] != rune('a') {
						goto l404
					}
					position++
					goto l401
				l404:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('G') {
						goto l405
					}
					position++
					if buffer[position] != rune('e') {
						goto l405
					}
					position++
					goto l401
				l405:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('I') {
						goto l406
					}
					position++
					if buffer[position] != rune('a') {
						goto l406
					}
					position++
					goto l401
				l406:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('I') {
						goto l407
					}
					position++
					if buffer[position] != rune('o') {
						goto l407
					}
					position++
					goto l401
				l407:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('I') {
						goto l408
					}
					position++
					if buffer[position] != rune('x') {
						goto l408
					}
					position++
					goto l401
				l408:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('L') {
						goto l409
					}
					position++
					if buffer[position] != rune('o') {
						goto l409
					}
					position++
					goto l401
				l409:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('O') {
						goto l410
					}
					position++
					if buffer[position] != rune('a') {
						goto l410
					}
					position++
					goto l401
				l410:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('O') {
						goto l411
					}
					position++
					if buffer[position] != rune('o') {
						goto l411
					}
					position++
					goto l401
				l411:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('N') {
						goto l412
					}
					position++
					if buffer[position] != rune('u') {
						goto l412
					}
					position++
					goto l401
				l412:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('R') {
						goto l413
					}
					position++
					if buffer[position] != rune('a') {
						goto l413
					}
					position++
					goto l401
				l413:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('T') {
						goto l414
					}
					position++
					if buffer[position] != rune('y') {
						goto l414
					}
					position++
					goto l401
				l414:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('U') {
						goto l415
					}
					position++
					if buffer[position] != rune('a') {
						goto l415
					}
					position++
					goto l401
				l415:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('A') {
						goto l416
					}
					position++
					if buffer[position] != rune('a') {
						goto l416
					}
					position++
					goto l401
				l416:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('J') {
						goto l417
					}
					position++
					if buffer[position] != rune('a') {
						goto l417
					}
					position++
					goto l401
				l417:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('Z') {
						goto l418
					}
					position++
					if buffer[position] != rune('u') {
						goto l418
					}
					position++
					goto l401
				l418:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('L') {
						goto l419
					}
					position++
					if buffer[position] != rune('a') {
						goto l419
					}
					position++
					goto l401
				l419:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('Q') {
						goto l420
					}
					position++
					if buffer[position] != rune('u') {
						goto l420
					}
					position++
					goto l401
				l420:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('A') {
						goto l421
					}
					position++
					if buffer[position] != rune('s') {
						goto l421
					}
					position++
					goto l401
				l421:
					position, tokenIndex = position401, tokenIndex401
					if buffer[position] != rune('B') {
						goto l399
					}
					position++
					if buffer[position] != rune('a') {
						goto l399
					}
					position++
				}
			l401:
				add(ruleTwoLetterGenus, position400)
			}
			return true
		l399:
			position, tokenIndex = position399, tokenIndex399
			return false
		},
		/* 59 Word <- <(!((('e' 'x') / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd') / ('p' 'r' 'o') / ('c' 'v') / ('c' 'u' 'l' 't' 'i' 'v' 'a' 'r') / AuthorPrefix / RankUninomial / Approximation / Word4) SpaceCharEOI) (WordApostr / WordStartsWithDigit / MultiDashedWord / Word2 / Word1) &(SpaceCharEOI / '('))> */
		func() bool {
			position422, tokenIndex422 := position, tokenIndex
			{
				position423 := position
				{
					position424, tokenIndex424 := position, tokenIndex
					{
						position425, tokenIndex425 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l426
						}
						position++
						if buffer[position] != rune('x') {
							goto l426
						}
						position++
						goto l425
					l426:
						position, tokenIndex = position425, tokenIndex425
						if buffer[position] != rune('e') {
							goto l427
						}
						position++
						if buffer[position] != rune('t') {
							goto l427
						}
						position++
						goto l425
					l427:
						position, tokenIndex = position425, tokenIndex425
						if buffer[position] != rune('a') {
							goto l428
						}
						position++
						if buffer[position] != rune('n') {
							goto l428
						}
						position++
						if buffer[position] != rune('d') {
							goto l428
						}
						position++
						goto l425
					l428:
						position, tokenIndex = position425, tokenIndex425
						if buffer[position] != rune('a') {
							goto l429
						}
						position++
						if buffer[position] != rune('p') {
							goto l429
						}
						position++
						if buffer[position] != rune('u') {
							goto l429
						}
						position++
						if buffer[position] != rune('d') {
							goto l429
						}
						position++
						goto l425
					l429:
						position, tokenIndex = position425, tokenIndex425
						if buffer[position] != rune('p') {
							goto l430
						}
						position++
						if buffer[position] != rune('r') {
							goto l430
						}
						position++
						if buffer[position] != rune('o') {
							goto l430
						}
						position++
						goto l425
					l430:
						position, tokenIndex = position425, tokenIndex425
						if buffer[position] != rune('c') {
							goto l431
						}
						position++
						if buffer[position] != rune('v') {
							goto l431
						}
						position++
						goto l425
					l431:
						position, tokenIndex = position425, tokenIndex425
						if buffer[position] != rune('c') {
							goto l432
						}
						position++
						if buffer[position] != rune('u') {
							goto l432
						}
						position++
						if buffer[position] != rune('l') {
							goto l432
						}
						position++
						if buffer[position] != rune('t') {
							goto l432
						}
						position++
						if buffer[position] != rune('i') {
							goto l432
						}
						position++
						if buffer[position] != rune('v') {
							goto l432
						}
						position++
						if buffer[position] != rune('a') {
							goto l432
						}
						position++
						if buffer[position] != rune('r') {
							goto l432
						}
						position++
						goto l425
					l432:
						position, tokenIndex = position425, tokenIndex425
						if !_rules[ruleAuthorPrefix]() {
							goto l433
						}
						goto l425
					l433:
						position, tokenIndex = position425, tokenIndex425
						if !_rules[ruleRankUninomial]() {
							goto l434
						}
						goto l425
					l434:
						position, tokenIndex = position425, tokenIndex425
						if !_rules[ruleApproximation]() {
							goto l435
						}
						goto l425
					l435:
						position, tokenIndex = position425, tokenIndex425
						if !_rules[ruleWord4]() {
							goto l424
						}
					}
				l425:
					if !_rules[ruleSpaceCharEOI]() {
						goto l424
					}
					goto l422
				l424:
					position, tokenIndex = position424, tokenIndex424
				}
				{
					position436, tokenIndex436 := position, tokenIndex
					if !_rules[ruleWordApostr]() {
						goto l437
					}
					goto l436
				l437:
					position, tokenIndex = position436, tokenIndex436
					if !_rules[ruleWordStartsWithDigit]() {
						goto l438
					}
					goto l436
				l438:
					position, tokenIndex = position436, tokenIndex436
					if !_rules[ruleMultiDashedWord]() {
						goto l439
					}
					goto l436
				l439:
					position, tokenIndex = position436, tokenIndex436
					if !_rules[ruleWord2]() {
						goto l440
					}
					goto l436
				l440:
					position, tokenIndex = position436, tokenIndex436
					if !_rules[ruleWord1]() {
						goto l422
					}
				}
			l436:
				{
					position441, tokenIndex441 := position, tokenIndex
					{
						position442, tokenIndex442 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l443
						}
						goto l442
					l443:
						position, tokenIndex = position442, tokenIndex442
						if buffer[position] != rune('(') {
							goto l422
						}
						position++
					}
				l442:
					position, tokenIndex = position441, tokenIndex441
				}
				add(ruleWord, position423)
			}
			return true
		l422:
			position, tokenIndex = position422, tokenIndex422
			return false
		},
		/* 60 Word1 <- <((LowerASCII Dash)? NameLowerChar NameLowerChar+)> */
		func() bool {
			position444, tokenIndex444 := position, tokenIndex
			{
				position445 := position
				{
					position446, tokenIndex446 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l446
					}
					if !_rules[ruleDash]() {
						goto l446
					}
					goto l447
				l446:
					position, tokenIndex = position446, tokenIndex446
				}
			l447:
				if !_rules[ruleNameLowerChar]() {
					goto l444
				}
				if !_rules[ruleNameLowerChar]() {
					goto l444
				}
			l448:
				{
					position449, tokenIndex449 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l449
					}
					goto l448
				l449:
					position, tokenIndex = position449, tokenIndex449
				}
				add(ruleWord1, position445)
			}
			return true
		l444:
			position, tokenIndex = position444, tokenIndex444
			return false
		},
		/* 61 WordStartsWithDigit <- <(('1' / '2' / '3' / '4' / '5' / '6' / '7' / '8' / '9') Nums? ('.' / Dash)? NameLowerChar NameLowerChar NameLowerChar NameLowerChar+)> */
		func() bool {
			position450, tokenIndex450 := position, tokenIndex
			{
				position451 := position
				{
					position452, tokenIndex452 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l453
					}
					position++
					goto l452
				l453:
					position, tokenIndex = position452, tokenIndex452
					if buffer[position] != rune('2') {
						goto l454
					}
					position++
					goto l452
				l454:
					position, tokenIndex = position452, tokenIndex452
					if buffer[position] != rune('3') {
						goto l455
					}
					position++
					goto l452
				l455:
					position, tokenIndex = position452, tokenIndex452
					if buffer[position] != rune('4') {
						goto l456
					}
					position++
					goto l452
				l456:
					position, tokenIndex = position452, tokenIndex452
					if buffer[position] != rune('5') {
						goto l457
					}
					position++
					goto l452
				l457:
					position, tokenIndex = position452, tokenIndex452
					if buffer[position] != rune('6') {
						goto l458
					}
					position++
					goto l452
				l458:
					position, tokenIndex = position452, tokenIndex452
					if buffer[position] != rune('7') {
						goto l459
					}
					position++
					goto l452
				l459:
					position, tokenIndex = position452, tokenIndex452
					if buffer[position] != rune('8') {
						goto l460
					}
					position++
					goto l452
				l460:
					position, tokenIndex = position452, tokenIndex452
					if buffer[position] != rune('9') {
						goto l450
					}
					position++
				}
			l452:
				{
					position461, tokenIndex461 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l461
					}
					goto l462
				l461:
					position, tokenIndex = position461, tokenIndex461
				}
			l462:
				{
					position463, tokenIndex463 := position, tokenIndex
					{
						position465, tokenIndex465 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l466
						}
						position++
						goto l465
					l466:
						position, tokenIndex = position465, tokenIndex465
						if !_rules[ruleDash]() {
							goto l463
						}
					}
				l465:
					goto l464
				l463:
					position, tokenIndex = position463, tokenIndex463
				}
			l464:
				if !_rules[ruleNameLowerChar]() {
					goto l450
				}
				if !_rules[ruleNameLowerChar]() {
					goto l450
				}
				if !_rules[ruleNameLowerChar]() {
					goto l450
				}
				if !_rules[ruleNameLowerChar]() {
					goto l450
				}
			l467:
				{
					position468, tokenIndex468 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l468
					}
					goto l467
				l468:
					position, tokenIndex = position468, tokenIndex468
				}
				add(ruleWordStartsWithDigit, position451)
			}
			return true
		l450:
			position, tokenIndex = position450, tokenIndex450
			return false
		},
		/* 62 Word2 <- <(NameLowerChar+ Dash? NameLowerChar+)> */
		func() bool {
			position469, tokenIndex469 := position, tokenIndex
			{
				position470 := position
				if !_rules[ruleNameLowerChar]() {
					goto l469
				}
			l471:
				{
					position472, tokenIndex472 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l472
					}
					goto l471
				l472:
					position, tokenIndex = position472, tokenIndex472
				}
				{
					position473, tokenIndex473 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l473
					}
					goto l474
				l473:
					position, tokenIndex = position473, tokenIndex473
				}
			l474:
				if !_rules[ruleNameLowerChar]() {
					goto l469
				}
			l475:
				{
					position476, tokenIndex476 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l476
					}
					goto l475
				l476:
					position, tokenIndex = position476, tokenIndex476
				}
				add(ruleWord2, position470)
			}
			return true
		l469:
			position, tokenIndex = position469, tokenIndex469
			return false
		},
		/* 63 WordApostr <- <(NameLowerChar NameLowerChar* Apostrophe Word1)> */
		func() bool {
			position477, tokenIndex477 := position, tokenIndex
			{
				position478 := position
				if !_rules[ruleNameLowerChar]() {
					goto l477
				}
			l479:
				{
					position480, tokenIndex480 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l480
					}
					goto l479
				l480:
					position, tokenIndex = position480, tokenIndex480
				}
				if !_rules[ruleApostrophe]() {
					goto l477
				}
				if !_rules[ruleWord1]() {
					goto l477
				}
				add(ruleWordApostr, position478)
			}
			return true
		l477:
			position, tokenIndex = position477, tokenIndex477
			return false
		},
		/* 64 Word4 <- <(NameLowerChar+ '.' NameLowerChar)> */
		func() bool {
			position481, tokenIndex481 := position, tokenIndex
			{
				position482 := position
				if !_rules[ruleNameLowerChar]() {
					goto l481
				}
			l483:
				{
					position484, tokenIndex484 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l484
					}
					goto l483
				l484:
					position, tokenIndex = position484, tokenIndex484
				}
				if buffer[position] != rune('.') {
					goto l481
				}
				position++
				if !_rules[ruleNameLowerChar]() {
					goto l481
				}
				add(ruleWord4, position482)
			}
			return true
		l481:
			position, tokenIndex = position481, tokenIndex481
			return false
		},
		/* 65 MultiDashedWord <- <(NameLowerChar+ Dash NameLowerChar+ Dash NameLowerChar+ (Dash NameLowerChar+)?)> */
		func() bool {
			position485, tokenIndex485 := position, tokenIndex
			{
				position486 := position
				if !_rules[ruleNameLowerChar]() {
					goto l485
				}
			l487:
				{
					position488, tokenIndex488 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l488
					}
					goto l487
				l488:
					position, tokenIndex = position488, tokenIndex488
				}
				if !_rules[ruleDash]() {
					goto l485
				}
				if !_rules[ruleNameLowerChar]() {
					goto l485
				}
			l489:
				{
					position490, tokenIndex490 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l490
					}
					goto l489
				l490:
					position, tokenIndex = position490, tokenIndex490
				}
				if !_rules[ruleDash]() {
					goto l485
				}
				if !_rules[ruleNameLowerChar]() {
					goto l485
				}
			l491:
				{
					position492, tokenIndex492 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l492
					}
					goto l491
				l492:
					position, tokenIndex = position492, tokenIndex492
				}
				{
					position493, tokenIndex493 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l493
					}
					if !_rules[ruleNameLowerChar]() {
						goto l493
					}
				l495:
					{
						position496, tokenIndex496 := position, tokenIndex
						if !_rules[ruleNameLowerChar]() {
							goto l496
						}
						goto l495
					l496:
						position, tokenIndex = position496, tokenIndex496
					}
					goto l494
				l493:
					position, tokenIndex = position493, tokenIndex493
				}
			l494:
				add(ruleMultiDashedWord, position486)
			}
			return true
		l485:
			position, tokenIndex = position485, tokenIndex485
			return false
		},
		/* 66 HybridChar <- <('×' / (('x' / 'X') &_) / (('x' / 'X') &UninomialWord) / (('x' / 'X') &END))> */
		func() bool {
			position497, tokenIndex497 := position, tokenIndex
			{
				position498 := position
				{
					position499, tokenIndex499 := position, tokenIndex
					if buffer[position] != rune('×') {
						goto l500
					}
					position++
					goto l499
				l500:
					position, tokenIndex = position499, tokenIndex499
					{
						position502, tokenIndex502 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l503
						}
						position++
						goto l502
					l503:
						position, tokenIndex = position502, tokenIndex502
						if buffer[position] != rune('X') {
							goto l501
						}
						position++
					}
				l502:
					{
						position504, tokenIndex504 := position, tokenIndex
						if !_rules[rule_]() {
							goto l501
						}
						position, tokenIndex = position504, tokenIndex504
					}
					goto l499
				l501:
					position, tokenIndex = position499, tokenIndex499
					{
						position506, tokenIndex506 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l507
						}
						position++
						goto l506
					l507:
						position, tokenIndex = position506, tokenIndex506
						if buffer[position] != rune('X') {
							goto l505
						}
						position++
					}
				l506:
					{
						position508, tokenIndex508 := position, tokenIndex
						if !_rules[ruleUninomialWord]() {
							goto l505
						}
						position, tokenIndex = position508, tokenIndex508
					}
					goto l499
				l505:
					position, tokenIndex = position499, tokenIndex499
					{
						position509, tokenIndex509 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l510
						}
						position++
						goto l509
					l510:
						position, tokenIndex = position509, tokenIndex509
						if buffer[position] != rune('X') {
							goto l497
						}
						position++
					}
				l509:
					{
						position511, tokenIndex511 := position, tokenIndex
						if !_rules[ruleEND]() {
							goto l497
						}
						position, tokenIndex = position511, tokenIndex511
					}
				}
			l499:
				add(ruleHybridChar, position498)
			}
			return true
		l497:
			position, tokenIndex = position497, tokenIndex497
			return false
		},
		/* 67 GraftChimeraChar <- <'+'> */
		func() bool {
			position512, tokenIndex512 := position, tokenIndex
			{
				position513 := position
				if buffer[position] != rune('+') {
					goto l512
				}
				position++
				add(ruleGraftChimeraChar, position513)
			}
			return true
		l512:
			position, tokenIndex = position512, tokenIndex512
			return false
		},
		/* 68 ApproxNameIgnored <- <.*> */
		func() bool {
			{
				position515 := position
			l516:
				{
					position517, tokenIndex517 := position, tokenIndex
					if !matchDot() {
						goto l517
					}
					goto l516
				l517:
					position, tokenIndex = position517, tokenIndex517
				}
				add(ruleApproxNameIgnored, position515)
			}
			return true
		},
		/* 69 Approximation <- <(('s' 'p' '.' _? ('n' 'r' '.')) / ('s' 'p' '.' _? ('a' 'f' 'f' '.')) / ('m' 'o' 'n' 's' 't' '.') / '?' / ((('s' 'p' 'p') / ('n' 'r') / ('s' 'p') / ('a' 'f' 'f') / ('s' 'p' 'e' 'c' 'i' 'e' 's')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position518, tokenIndex518 := position, tokenIndex
			{
				position519 := position
				{
					position520, tokenIndex520 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l521
					}
					position++
					if buffer[position] != rune('p') {
						goto l521
					}
					position++
					if buffer[position] != rune('.') {
						goto l521
					}
					position++
					{
						position522, tokenIndex522 := position, tokenIndex
						if !_rules[rule_]() {
							goto l522
						}
						goto l523
					l522:
						position, tokenIndex = position522, tokenIndex522
					}
				l523:
					if buffer[position] != rune('n') {
						goto l521
					}
					position++
					if buffer[position] != rune('r') {
						goto l521
					}
					position++
					if buffer[position] != rune('.') {
						goto l521
					}
					position++
					goto l520
				l521:
					position, tokenIndex = position520, tokenIndex520
					if buffer[position] != rune('s') {
						goto l524
					}
					position++
					if buffer[position] != rune('p') {
						goto l524
					}
					position++
					if buffer[position] != rune('.') {
						goto l524
					}
					position++
					{
						position525, tokenIndex525 := position, tokenIndex
						if !_rules[rule_]() {
							goto l525
						}
						goto l526
					l525:
						position, tokenIndex = position525, tokenIndex525
					}
				l526:
					if buffer[position] != rune('a') {
						goto l524
					}
					position++
					if buffer[position] != rune('f') {
						goto l524
					}
					position++
					if buffer[position] != rune('f') {
						goto l524
					}
					position++
					if buffer[position] != rune('.') {
						goto l524
					}
					position++
					goto l520
				l524:
					position, tokenIndex = position520, tokenIndex520
					if buffer[position] != rune('m') {
						goto l527
					}
					position++
					if buffer[position] != rune('o') {
						goto l527
					}
					position++
					if buffer[position] != rune('n') {
						goto l527
					}
					position++
					if buffer[position] != rune('s') {
						goto l527
					}
					position++
					if buffer[position] != rune('t') {
						goto l527
					}
					position++
					if buffer[position] != rune('.') {
						goto l527
					}
					position++
					goto l520
				l527:
					position, tokenIndex = position520, tokenIndex520
					if buffer[position] != rune('?') {
						goto l528
					}
					position++
					goto l520
				l528:
					position, tokenIndex = position520, tokenIndex520
					{
						position529, tokenIndex529 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l530
						}
						position++
						if buffer[position] != rune('p') {
							goto l530
						}
						position++
						if buffer[position] != rune('p') {
							goto l530
						}
						position++
						goto l529
					l530:
						position, tokenIndex = position529, tokenIndex529
						if buffer[position] != rune('n') {
							goto l531
						}
						position++
						if buffer[position] != rune('r') {
							goto l531
						}
						position++
						goto l529
					l531:
						position, tokenIndex = position529, tokenIndex529
						if buffer[position] != rune('s') {
							goto l532
						}
						position++
						if buffer[position] != rune('p') {
							goto l532
						}
						position++
						goto l529
					l532:
						position, tokenIndex = position529, tokenIndex529
						if buffer[position] != rune('a') {
							goto l533
						}
						position++
						if buffer[position] != rune('f') {
							goto l533
						}
						position++
						if buffer[position] != rune('f') {
							goto l533
						}
						position++
						goto l529
					l533:
						position, tokenIndex = position529, tokenIndex529
						if buffer[position] != rune('s') {
							goto l518
						}
						position++
						if buffer[position] != rune('p') {
							goto l518
						}
						position++
						if buffer[position] != rune('e') {
							goto l518
						}
						position++
						if buffer[position] != rune('c') {
							goto l518
						}
						position++
						if buffer[position] != rune('i') {
							goto l518
						}
						position++
						if buffer[position] != rune('e') {
							goto l518
						}
						position++
						if buffer[position] != rune('s') {
							goto l518
						}
						position++
					}
				l529:
					{
						position534, tokenIndex534 := position, tokenIndex
						{
							position536, tokenIndex536 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l535
							}
							position, tokenIndex = position536, tokenIndex536
						}
						goto l534
					l535:
						position, tokenIndex = position534, tokenIndex534
						if buffer[position] != rune('.') {
							goto l518
						}
						position++
					}
				l534:
				}
			l520:
				add(ruleApproximation, position519)
			}
			return true
		l518:
			position, tokenIndex = position518, tokenIndex518
			return false
		},
		/* 70 Authorship <- <((AuthorshipCombo / OriginalAuthorship) &(SpaceCharEOI / ';' / ','))> */
		func() bool {
			position537, tokenIndex537 := position, tokenIndex
			{
				position538 := position
				{
					position539, tokenIndex539 := position, tokenIndex
					if !_rules[ruleAuthorshipCombo]() {
						goto l540
					}
					goto l539
				l540:
					position, tokenIndex = position539, tokenIndex539
					if !_rules[ruleOriginalAuthorship]() {
						goto l537
					}
				}
			l539:
				{
					position541, tokenIndex541 := position, tokenIndex
					{
						position542, tokenIndex542 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l543
						}
						goto l542
					l543:
						position, tokenIndex = position542, tokenIndex542
						if buffer[position] != rune(';') {
							goto l544
						}
						position++
						goto l542
					l544:
						position, tokenIndex = position542, tokenIndex542
						if buffer[position] != rune(',') {
							goto l537
						}
						position++
					}
				l542:
					position, tokenIndex = position541, tokenIndex541
				}
				add(ruleAuthorship, position538)
			}
			return true
		l537:
			position, tokenIndex = position537, tokenIndex537
			return false
		},
		/* 71 AuthorshipCombo <- <(OriginalAuthorshipComb (_? CombinationAuthorship)?)> */
		func() bool {
			position545, tokenIndex545 := position, tokenIndex
			{
				position546 := position
				if !_rules[ruleOriginalAuthorshipComb]() {
					goto l545
				}
				{
					position547, tokenIndex547 := position, tokenIndex
					{
						position549, tokenIndex549 := position, tokenIndex
						if !_rules[rule_]() {
							goto l549
						}
						goto l550
					l549:
						position, tokenIndex = position549, tokenIndex549
					}
				l550:
					if !_rules[ruleCombinationAuthorship]() {
						goto l547
					}
					goto l548
				l547:
					position, tokenIndex = position547, tokenIndex547
				}
			l548:
				add(ruleAuthorshipCombo, position546)
			}
			return true
		l545:
			position, tokenIndex = position545, tokenIndex545
			return false
		},
		/* 72 OriginalAuthorship <- <AuthorsGroup> */
		func() bool {
			position551, tokenIndex551 := position, tokenIndex
			{
				position552 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l551
				}
				add(ruleOriginalAuthorship, position552)
			}
			return true
		l551:
			position, tokenIndex = position551, tokenIndex551
			return false
		},
		/* 73 OriginalAuthorshipComb <- <(BasionymAuthorshipYearMisformed / BasionymAuthorship / BasionymAuthorshipMissingParens)> */
		func() bool {
			position553, tokenIndex553 := position, tokenIndex
			{
				position554 := position
				{
					position555, tokenIndex555 := position, tokenIndex
					if !_rules[ruleBasionymAuthorshipYearMisformed]() {
						goto l556
					}
					goto l555
				l556:
					position, tokenIndex = position555, tokenIndex555
					if !_rules[ruleBasionymAuthorship]() {
						goto l557
					}
					goto l555
				l557:
					position, tokenIndex = position555, tokenIndex555
					if !_rules[ruleBasionymAuthorshipMissingParens]() {
						goto l553
					}
				}
			l555:
				add(ruleOriginalAuthorshipComb, position554)
			}
			return true
		l553:
			position, tokenIndex = position553, tokenIndex553
			return false
		},
		/* 74 CombinationAuthorship <- <AuthorsGroup> */
		func() bool {
			position558, tokenIndex558 := position, tokenIndex
			{
				position559 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l558
				}
				add(ruleCombinationAuthorship, position559)
			}
			return true
		l558:
			position, tokenIndex = position558, tokenIndex558
			return false
		},
		/* 75 BasionymAuthorshipMissingParens <- <(MissingParensStart / MissingParensEnd)> */
		func() bool {
			position560, tokenIndex560 := position, tokenIndex
			{
				position561 := position
				{
					position562, tokenIndex562 := position, tokenIndex
					if !_rules[ruleMissingParensStart]() {
						goto l563
					}
					goto l562
				l563:
					position, tokenIndex = position562, tokenIndex562
					if !_rules[ruleMissingParensEnd]() {
						goto l560
					}
				}
			l562:
				add(ruleBasionymAuthorshipMissingParens, position561)
			}
			return true
		l560:
			position, tokenIndex = position560, tokenIndex560
			return false
		},
		/* 76 MissingParensStart <- <('(' _? AuthorsGroup)> */
		func() bool {
			position564, tokenIndex564 := position, tokenIndex
			{
				position565 := position
				if buffer[position] != rune('(') {
					goto l564
				}
				position++
				{
					position566, tokenIndex566 := position, tokenIndex
					if !_rules[rule_]() {
						goto l566
					}
					goto l567
				l566:
					position, tokenIndex = position566, tokenIndex566
				}
			l567:
				if !_rules[ruleAuthorsGroup]() {
					goto l564
				}
				add(ruleMissingParensStart, position565)
			}
			return true
		l564:
			position, tokenIndex = position564, tokenIndex564
			return false
		},
		/* 77 MissingParensEnd <- <(AuthorsGroup _? ')')> */
		func() bool {
			position568, tokenIndex568 := position, tokenIndex
			{
				position569 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l568
				}
				{
					position570, tokenIndex570 := position, tokenIndex
					if !_rules[rule_]() {
						goto l570
					}
					goto l571
				l570:
					position, tokenIndex = position570, tokenIndex570
				}
			l571:
				if buffer[position] != rune(')') {
					goto l568
				}
				position++
				add(ruleMissingParensEnd, position569)
			}
			return true
		l568:
			position, tokenIndex = position568, tokenIndex568
			return false
		},
		/* 78 BasionymAuthorshipYearMisformed <- <('(' _? AuthorsGroup _? ')' (_? ',')? _? Year)> */
		func() bool {
			position572, tokenIndex572 := position, tokenIndex
			{
				position573 := position
				if buffer[position] != rune('(') {
					goto l572
				}
				position++
				{
					position574, tokenIndex574 := position, tokenIndex
					if !_rules[rule_]() {
						goto l574
					}
					goto l575
				l574:
					position, tokenIndex = position574, tokenIndex574
				}
			l575:
				if !_rules[ruleAuthorsGroup]() {
					goto l572
				}
				{
					position576, tokenIndex576 := position, tokenIndex
					if !_rules[rule_]() {
						goto l576
					}
					goto l577
				l576:
					position, tokenIndex = position576, tokenIndex576
				}
			l577:
				if buffer[position] != rune(')') {
					goto l572
				}
				position++
				{
					position578, tokenIndex578 := position, tokenIndex
					{
						position580, tokenIndex580 := position, tokenIndex
						if !_rules[rule_]() {
							goto l580
						}
						goto l581
					l580:
						position, tokenIndex = position580, tokenIndex580
					}
				l581:
					if buffer[position] != rune(',') {
						goto l578
					}
					position++
					goto l579
				l578:
					position, tokenIndex = position578, tokenIndex578
				}
			l579:
				{
					position582, tokenIndex582 := position, tokenIndex
					if !_rules[rule_]() {
						goto l582
					}
					goto l583
				l582:
					position, tokenIndex = position582, tokenIndex582
				}
			l583:
				if !_rules[ruleYear]() {
					goto l572
				}
				add(ruleBasionymAuthorshipYearMisformed, position573)
			}
			return true
		l572:
			position, tokenIndex = position572, tokenIndex572
			return false
		},
		/* 79 BasionymAuthorship <- <(BasionymAuthorship1 / BasionymAuthorship2Parens)> */
		func() bool {
			position584, tokenIndex584 := position, tokenIndex
			{
				position585 := position
				{
					position586, tokenIndex586 := position, tokenIndex
					if !_rules[ruleBasionymAuthorship1]() {
						goto l587
					}
					goto l586
				l587:
					position, tokenIndex = position586, tokenIndex586
					if !_rules[ruleBasionymAuthorship2Parens]() {
						goto l584
					}
				}
			l586:
				add(ruleBasionymAuthorship, position585)
			}
			return true
		l584:
			position, tokenIndex = position584, tokenIndex584
			return false
		},
		/* 80 BasionymAuthorship1 <- <('(' _? AuthorsGroup _? ')')> */
		func() bool {
			position588, tokenIndex588 := position, tokenIndex
			{
				position589 := position
				if buffer[position] != rune('(') {
					goto l588
				}
				position++
				{
					position590, tokenIndex590 := position, tokenIndex
					if !_rules[rule_]() {
						goto l590
					}
					goto l591
				l590:
					position, tokenIndex = position590, tokenIndex590
				}
			l591:
				if !_rules[ruleAuthorsGroup]() {
					goto l588
				}
				{
					position592, tokenIndex592 := position, tokenIndex
					if !_rules[rule_]() {
						goto l592
					}
					goto l593
				l592:
					position, tokenIndex = position592, tokenIndex592
				}
			l593:
				if buffer[position] != rune(')') {
					goto l588
				}
				position++
				add(ruleBasionymAuthorship1, position589)
			}
			return true
		l588:
			position, tokenIndex = position588, tokenIndex588
			return false
		},
		/* 81 BasionymAuthorship2Parens <- <('(' _? '(' _? AuthorsGroup _? ')' _? ')')> */
		func() bool {
			position594, tokenIndex594 := position, tokenIndex
			{
				position595 := position
				if buffer[position] != rune('(') {
					goto l594
				}
				position++
				{
					position596, tokenIndex596 := position, tokenIndex
					if !_rules[rule_]() {
						goto l596
					}
					goto l597
				l596:
					position, tokenIndex = position596, tokenIndex596
				}
			l597:
				if buffer[position] != rune('(') {
					goto l594
				}
				position++
				{
					position598, tokenIndex598 := position, tokenIndex
					if !_rules[rule_]() {
						goto l598
					}
					goto l599
				l598:
					position, tokenIndex = position598, tokenIndex598
				}
			l599:
				if !_rules[ruleAuthorsGroup]() {
					goto l594
				}
				{
					position600, tokenIndex600 := position, tokenIndex
					if !_rules[rule_]() {
						goto l600
					}
					goto l601
				l600:
					position, tokenIndex = position600, tokenIndex600
				}
			l601:
				if buffer[position] != rune(')') {
					goto l594
				}
				position++
				{
					position602, tokenIndex602 := position, tokenIndex
					if !_rules[rule_]() {
						goto l602
					}
					goto l603
				l602:
					position, tokenIndex = position602, tokenIndex602
				}
			l603:
				if buffer[position] != rune(')') {
					goto l594
				}
				position++
				add(ruleBasionymAuthorship2Parens, position595)
			}
			return true
		l594:
			position, tokenIndex = position594, tokenIndex594
			return false
		},
		/* 82 AuthorsGroup <- <(AuthorsTeam (_ (AuthorEmend / AuthorEx) AuthorsTeam)?)> */
		func() bool {
			position604, tokenIndex604 := position, tokenIndex
			{
				position605 := position
				if !_rules[ruleAuthorsTeam]() {
					goto l604
				}
				{
					position606, tokenIndex606 := position, tokenIndex
					if !_rules[rule_]() {
						goto l606
					}
					{
						position608, tokenIndex608 := position, tokenIndex
						if !_rules[ruleAuthorEmend]() {
							goto l609
						}
						goto l608
					l609:
						position, tokenIndex = position608, tokenIndex608
						if !_rules[ruleAuthorEx]() {
							goto l606
						}
					}
				l608:
					if !_rules[ruleAuthorsTeam]() {
						goto l606
					}
					goto l607
				l606:
					position, tokenIndex = position606, tokenIndex606
				}
			l607:
				add(ruleAuthorsGroup, position605)
			}
			return true
		l604:
			position, tokenIndex = position604, tokenIndex604
			return false
		},
		/* 83 AuthorsTeam <- <(Author (AuthorSep Author)* (_? ','? _? Year)?)> */
		func() bool {
			position610, tokenIndex610 := position, tokenIndex
			{
				position611 := position
				if !_rules[ruleAuthor]() {
					goto l610
				}
			l612:
				{
					position613, tokenIndex613 := position, tokenIndex
					if !_rules[ruleAuthorSep]() {
						goto l613
					}
					if !_rules[ruleAuthor]() {
						goto l613
					}
					goto l612
				l613:
					position, tokenIndex = position613, tokenIndex613
				}
				{
					position614, tokenIndex614 := position, tokenIndex
					{
						position616, tokenIndex616 := position, tokenIndex
						if !_rules[rule_]() {
							goto l616
						}
						goto l617
					l616:
						position, tokenIndex = position616, tokenIndex616
					}
				l617:
					{
						position618, tokenIndex618 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l618
						}
						position++
						goto l619
					l618:
						position, tokenIndex = position618, tokenIndex618
					}
				l619:
					{
						position620, tokenIndex620 := position, tokenIndex
						if !_rules[rule_]() {
							goto l620
						}
						goto l621
					l620:
						position, tokenIndex = position620, tokenIndex620
					}
				l621:
					if !_rules[ruleYear]() {
						goto l614
					}
					goto l615
				l614:
					position, tokenIndex = position614, tokenIndex614
				}
			l615:
				add(ruleAuthorsTeam, position611)
			}
			return true
		l610:
			position, tokenIndex = position610, tokenIndex610
			return false
		},
		/* 84 AuthorSep <- <(AuthorSep1 / AuthorSep2)> */
		func() bool {
			position622, tokenIndex622 := position, tokenIndex
			{
				position623 := position
				{
					position624, tokenIndex624 := position, tokenIndex
					if !_rules[ruleAuthorSep1]() {
						goto l625
					}
					goto l624
				l625:
					position, tokenIndex = position624, tokenIndex624
					if !_rules[ruleAuthorSep2]() {
						goto l622
					}
				}
			l624:
				add(ruleAuthorSep, position623)
			}
			return true
		l622:
			position, tokenIndex = position622, tokenIndex622
			return false
		},
		/* 85 AuthorSep1 <- <(_? (',' _)? ('&' / AuthorSepSpanish / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd')) _?)> */
		func() bool {
			position626, tokenIndex626 := position, tokenIndex
			{
				position627 := position
				{
					position628, tokenIndex628 := position, tokenIndex
					if !_rules[rule_]() {
						goto l628
					}
					goto l629
				l628:
					position, tokenIndex = position628, tokenIndex628
				}
			l629:
				{
					position630, tokenIndex630 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l630
					}
					position++
					if !_rules[rule_]() {
						goto l630
					}
					goto l631
				l630:
					position, tokenIndex = position630, tokenIndex630
				}
			l631:
				{
					position632, tokenIndex632 := position, tokenIndex
					if buffer[position] != rune('&') {
						goto l633
					}
					position++
					goto l632
				l633:
					position, tokenIndex = position632, tokenIndex632
					if !_rules[ruleAuthorSepSpanish]() {
						goto l634
					}
					goto l632
				l634:
					position, tokenIndex = position632, tokenIndex632
					if buffer[position] != rune('e') {
						goto l635
					}
					position++
					if buffer[position] != rune('t') {
						goto l635
					}
					position++
					goto l632
				l635:
					position, tokenIndex = position632, tokenIndex632
					if buffer[position] != rune('a') {
						goto l636
					}
					position++
					if buffer[position] != rune('n') {
						goto l636
					}
					position++
					if buffer[position] != rune('d') {
						goto l636
					}
					position++
					goto l632
				l636:
					position, tokenIndex = position632, tokenIndex632
					if buffer[position] != rune('a') {
						goto l626
					}
					position++
					if buffer[position] != rune('p') {
						goto l626
					}
					position++
					if buffer[position] != rune('u') {
						goto l626
					}
					position++
					if buffer[position] != rune('d') {
						goto l626
					}
					position++
				}
			l632:
				{
					position637, tokenIndex637 := position, tokenIndex
					if !_rules[rule_]() {
						goto l637
					}
					goto l638
				l637:
					position, tokenIndex = position637, tokenIndex637
				}
			l638:
				add(ruleAuthorSep1, position627)
			}
			return true
		l626:
			position, tokenIndex = position626, tokenIndex626
			return false
		},
		/* 86 AuthorSep2 <- <(_? ',' _?)> */
		func() bool {
			position639, tokenIndex639 := position, tokenIndex
			{
				position640 := position
				{
					position641, tokenIndex641 := position, tokenIndex
					if !_rules[rule_]() {
						goto l641
					}
					goto l642
				l641:
					position, tokenIndex = position641, tokenIndex641
				}
			l642:
				if buffer[position] != rune(',') {
					goto l639
				}
				position++
				{
					position643, tokenIndex643 := position, tokenIndex
					if !_rules[rule_]() {
						goto l643
					}
					goto l644
				l643:
					position, tokenIndex = position643, tokenIndex643
				}
			l644:
				add(ruleAuthorSep2, position640)
			}
			return true
		l639:
			position, tokenIndex = position639, tokenIndex639
			return false
		},
		/* 87 AuthorSepSpanish <- <(_? 'y' _?)> */
		func() bool {
			position645, tokenIndex645 := position, tokenIndex
			{
				position646 := position
				{
					position647, tokenIndex647 := position, tokenIndex
					if !_rules[rule_]() {
						goto l647
					}
					goto l648
				l647:
					position, tokenIndex = position647, tokenIndex647
				}
			l648:
				if buffer[position] != rune('y') {
					goto l645
				}
				position++
				{
					position649, tokenIndex649 := position, tokenIndex
					if !_rules[rule_]() {
						goto l649
					}
					goto l650
				l649:
					position, tokenIndex = position649, tokenIndex649
				}
			l650:
				add(ruleAuthorSepSpanish, position646)
			}
			return true
		l645:
			position, tokenIndex = position645, tokenIndex645
			return false
		},
		/* 88 AuthorEx <- <((('e' 'x' '.'?) / ('m' 's' _ ('i' 'n')) / ('i' 'n')) _)> */
		func() bool {
			position651, tokenIndex651 := position, tokenIndex
			{
				position652 := position
				{
					position653, tokenIndex653 := position, tokenIndex
					if buffer[position] != rune('e') {
						goto l654
					}
					position++
					if buffer[position] != rune('x') {
						goto l654
					}
					position++
					{
						position655, tokenIndex655 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l655
						}
						position++
						goto l656
					l655:
						position, tokenIndex = position655, tokenIndex655
					}
				l656:
					goto l653
				l654:
					position, tokenIndex = position653, tokenIndex653
					if buffer[position] != rune('m') {
						goto l657
					}
					position++
					if buffer[position] != rune('s') {
						goto l657
					}
					position++
					if !_rules[rule_]() {
						goto l657
					}
					if buffer[position] != rune('i') {
						goto l657
					}
					position++
					if buffer[position] != rune('n') {
						goto l657
					}
					position++
					goto l653
				l657:
					position, tokenIndex = position653, tokenIndex653
					if buffer[position] != rune('i') {
						goto l651
					}
					position++
					if buffer[position] != rune('n') {
						goto l651
					}
					position++
				}
			l653:
				if !_rules[rule_]() {
					goto l651
				}
				add(ruleAuthorEx, position652)
			}
			return true
		l651:
			position, tokenIndex = position651, tokenIndex651
			return false
		},
		/* 89 AuthorEmend <- <('e' 'm' 'e' 'n' 'd' '.'? _)> */
		func() bool {
			position658, tokenIndex658 := position, tokenIndex
			{
				position659 := position
				if buffer[position] != rune('e') {
					goto l658
				}
				position++
				if buffer[position] != rune('m') {
					goto l658
				}
				position++
				if buffer[position] != rune('e') {
					goto l658
				}
				position++
				if buffer[position] != rune('n') {
					goto l658
				}
				position++
				if buffer[position] != rune('d') {
					goto l658
				}
				position++
				{
					position660, tokenIndex660 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l660
					}
					position++
					goto l661
				l660:
					position, tokenIndex = position660, tokenIndex660
				}
			l661:
				if !_rules[rule_]() {
					goto l658
				}
				add(ruleAuthorEmend, position659)
			}
			return true
		l658:
			position, tokenIndex = position658, tokenIndex658
			return false
		},
		/* 90 Author <- <((Author0 / Author1 / Author2 / UnknownAuthor) (_ AuthorEtAl)?)> */
		func() bool {
			position662, tokenIndex662 := position, tokenIndex
			{
				position663 := position
				{
					position664, tokenIndex664 := position, tokenIndex
					if !_rules[ruleAuthor0]() {
						goto l665
					}
					goto l664
				l665:
					position, tokenIndex = position664, tokenIndex664
					if !_rules[ruleAuthor1]() {
						goto l666
					}
					goto l664
				l666:
					position, tokenIndex = position664, tokenIndex664
					if !_rules[ruleAuthor2]() {
						goto l667
					}
					goto l664
				l667:
					position, tokenIndex = position664, tokenIndex664
					if !_rules[ruleUnknownAuthor]() {
						goto l662
					}
				}
			l664:
				{
					position668, tokenIndex668 := position, tokenIndex
					if !_rules[rule_]() {
						goto l668
					}
					if !_rules[ruleAuthorEtAl]() {
						goto l668
					}
					goto l669
				l668:
					position, tokenIndex = position668, tokenIndex668
				}
			l669:
				add(ruleAuthor, position663)
			}
			return true
		l662:
			position, tokenIndex = position662, tokenIndex662
			return false
		},
		/* 91 Author0 <- <(Author2 FiliusFNoSpace)> */
		func() bool {
			position670, tokenIndex670 := position, tokenIndex
			{
				position671 := position
				if !_rules[ruleAuthor2]() {
					goto l670
				}
				if !_rules[ruleFiliusFNoSpace]() {
					goto l670
				}
				add(ruleAuthor0, position671)
			}
			return true
		l670:
			position, tokenIndex = position670, tokenIndex670
			return false
		},
		/* 92 Author1 <- <(Author2 _? (Filius / AuthorSuffix))> */
		func() bool {
			position672, tokenIndex672 := position, tokenIndex
			{
				position673 := position
				if !_rules[ruleAuthor2]() {
					goto l672
				}
				{
					position674, tokenIndex674 := position, tokenIndex
					if !_rules[rule_]() {
						goto l674
					}
					goto l675
				l674:
					position, tokenIndex = position674, tokenIndex674
				}
			l675:
				{
					position676, tokenIndex676 := position, tokenIndex
					if !_rules[ruleFilius]() {
						goto l677
					}
					goto l676
				l677:
					position, tokenIndex = position676, tokenIndex676
					if !_rules[ruleAuthorSuffix]() {
						goto l672
					}
				}
			l676:
				add(ruleAuthor1, position673)
			}
			return true
		l672:
			position, tokenIndex = position672, tokenIndex672
			return false
		},
		/* 93 Author2 <- <(AuthorWord (_? AuthorWord)*)> */
		func() bool {
			position678, tokenIndex678 := position, tokenIndex
			{
				position679 := position
				if !_rules[ruleAuthorWord]() {
					goto l678
				}
			l680:
				{
					position681, tokenIndex681 := position, tokenIndex
					{
						position682, tokenIndex682 := position, tokenIndex
						if !_rules[rule_]() {
							goto l682
						}
						goto l683
					l682:
						position, tokenIndex = position682, tokenIndex682
					}
				l683:
					if !_rules[ruleAuthorWord]() {
						goto l681
					}
					goto l680
				l681:
					position, tokenIndex = position681, tokenIndex681
				}
				add(ruleAuthor2, position679)
			}
			return true
		l678:
			position, tokenIndex = position678, tokenIndex678
			return false
		},
		/* 94 UnknownAuthor <- <('?' / ((('a' 'u' 'c' 't') / ('a' 'n' 'o' 'n')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position684, tokenIndex684 := position, tokenIndex
			{
				position685 := position
				{
					position686, tokenIndex686 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l687
					}
					position++
					goto l686
				l687:
					position, tokenIndex = position686, tokenIndex686
					{
						position688, tokenIndex688 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l689
						}
						position++
						if buffer[position] != rune('u') {
							goto l689
						}
						position++
						if buffer[position] != rune('c') {
							goto l689
						}
						position++
						if buffer[position] != rune('t') {
							goto l689
						}
						position++
						goto l688
					l689:
						position, tokenIndex = position688, tokenIndex688
						if buffer[position] != rune('a') {
							goto l684
						}
						position++
						if buffer[position] != rune('n') {
							goto l684
						}
						position++
						if buffer[position] != rune('o') {
							goto l684
						}
						position++
						if buffer[position] != rune('n') {
							goto l684
						}
						position++
					}
				l688:
					{
						position690, tokenIndex690 := position, tokenIndex
						{
							position692, tokenIndex692 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l691
							}
							position, tokenIndex = position692, tokenIndex692
						}
						goto l690
					l691:
						position, tokenIndex = position690, tokenIndex690
						if buffer[position] != rune('.') {
							goto l684
						}
						position++
					}
				l690:
				}
			l686:
				add(ruleUnknownAuthor, position685)
			}
			return true
		l684:
			position, tokenIndex = position684, tokenIndex684
			return false
		},
		/* 95 AuthorWord <- <(!(HybridChar / (('b' / 'B') ('o' / 'O') ('l' / 'L') ('d' / 'D') ':')) (AuthorDashInitials / AuthorWord2 / AuthorWord3 / AuthorPrefix))> */
		func() bool {
			position693, tokenIndex693 := position, tokenIndex
			{
				position694 := position
				{
					position695, tokenIndex695 := position, tokenIndex
					{
						position696, tokenIndex696 := position, tokenIndex
						if !_rules[ruleHybridChar]() {
							goto l697
						}
						goto l696
					l697:
						position, tokenIndex = position696, tokenIndex696
						{
							position698, tokenIndex698 := position, tokenIndex
							if buffer[position] != rune('b') {
								goto l699
							}
							position++
							goto l698
						l699:
							position, tokenIndex = position698, tokenIndex698
							if buffer[position] != rune('B') {
								goto l695
							}
							position++
						}
					l698:
						{
							position700, tokenIndex700 := position, tokenIndex
							if buffer[position] != rune('o') {
								goto l701
							}
							position++
							goto l700
						l701:
							position, tokenIndex = position700, tokenIndex700
							if buffer[position] != rune('O') {
								goto l695
							}
							position++
						}
					l700:
						{
							position702, tokenIndex702 := position, tokenIndex
							if buffer[position] != rune('l') {
								goto l703
							}
							position++
							goto l702
						l703:
							position, tokenIndex = position702, tokenIndex702
							if buffer[position] != rune('L') {
								goto l695
							}
							position++
						}
					l702:
						{
							position704, tokenIndex704 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l705
							}
							position++
							goto l704
						l705:
							position, tokenIndex = position704, tokenIndex704
							if buffer[position] != rune('D') {
								goto l695
							}
							position++
						}
					l704:
						if buffer[position] != rune(':') {
							goto l695
						}
						position++
					}
				l696:
					goto l693
				l695:
					position, tokenIndex = position695, tokenIndex695
				}
				{
					position706, tokenIndex706 := position, tokenIndex
					if !_rules[ruleAuthorDashInitials]() {
						goto l707
					}
					goto l706
				l707:
					position, tokenIndex = position706, tokenIndex706
					if !_rules[ruleAuthorWord2]() {
						goto l708
					}
					goto l706
				l708:
					position, tokenIndex = position706, tokenIndex706
					if !_rules[ruleAuthorWord3]() {
						goto l709
					}
					goto l706
				l709:
					position, tokenIndex = position706, tokenIndex706
					if !_rules[ruleAuthorPrefix]() {
						goto l693
					}
				}
			l706:
				add(ruleAuthorWord, position694)
			}
			return true
		l693:
			position, tokenIndex = position693, tokenIndex693
			return false
		},
		/* 96 AuthorEtAl <- <(('a' 'r' 'g' '.') / ('e' 't' ' ' 'a' 'l' '.' '{' '?' '}') / ((('e' 't') / '&') (' ' 'a' 'l') '.'?))> */
		func() bool {
			position710, tokenIndex710 := position, tokenIndex
			{
				position711 := position
				{
					position712, tokenIndex712 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l713
					}
					position++
					if buffer[position] != rune('r') {
						goto l713
					}
					position++
					if buffer[position] != rune('g') {
						goto l713
					}
					position++
					if buffer[position] != rune('.') {
						goto l713
					}
					position++
					goto l712
				l713:
					position, tokenIndex = position712, tokenIndex712
					if buffer[position] != rune('e') {
						goto l714
					}
					position++
					if buffer[position] != rune('t') {
						goto l714
					}
					position++
					if buffer[position] != rune(' ') {
						goto l714
					}
					position++
					if buffer[position] != rune('a') {
						goto l714
					}
					position++
					if buffer[position] != rune('l') {
						goto l714
					}
					position++
					if buffer[position] != rune('.') {
						goto l714
					}
					position++
					if buffer[position] != rune('{') {
						goto l714
					}
					position++
					if buffer[position] != rune('?') {
						goto l714
					}
					position++
					if buffer[position] != rune('}') {
						goto l714
					}
					position++
					goto l712
				l714:
					position, tokenIndex = position712, tokenIndex712
					{
						position715, tokenIndex715 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l716
						}
						position++
						if buffer[position] != rune('t') {
							goto l716
						}
						position++
						goto l715
					l716:
						position, tokenIndex = position715, tokenIndex715
						if buffer[position] != rune('&') {
							goto l710
						}
						position++
					}
				l715:
					if buffer[position] != rune(' ') {
						goto l710
					}
					position++
					if buffer[position] != rune('a') {
						goto l710
					}
					position++
					if buffer[position] != rune('l') {
						goto l710
					}
					position++
					{
						position717, tokenIndex717 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l717
						}
						position++
						goto l718
					l717:
						position, tokenIndex = position717, tokenIndex717
					}
				l718:
				}
			l712:
				add(ruleAuthorEtAl, position711)
			}
			return true
		l710:
			position, tokenIndex = position710, tokenIndex710
			return false
		},
		/* 97 AuthorWord2 <- <(AuthorWord3 Dash AuthorWordSoft)> */
		func() bool {
			position719, tokenIndex719 := position, tokenIndex
			{
				position720 := position
				if !_rules[ruleAuthorWord3]() {
					goto l719
				}
				if !_rules[ruleDash]() {
					goto l719
				}
				if !_rules[ruleAuthorWordSoft]() {
					goto l719
				}
				add(ruleAuthorWord2, position720)
			}
			return true
		l719:
			position, tokenIndex = position719, tokenIndex719
			return false
		},
		/* 98 AuthorWord3 <- <(AuthorPrefixGlued? (AllCapsAuthorWord / CapAuthorWord) '.'?)> */
		func() bool {
			position721, tokenIndex721 := position, tokenIndex
			{
				position722 := position
				{
					position723, tokenIndex723 := position, tokenIndex
					if !_rules[ruleAuthorPrefixGlued]() {
						goto l723
					}
					goto l724
				l723:
					position, tokenIndex = position723, tokenIndex723
				}
			l724:
				{
					position725, tokenIndex725 := position, tokenIndex
					if !_rules[ruleAllCapsAuthorWord]() {
						goto l726
					}
					goto l725
				l726:
					position, tokenIndex = position725, tokenIndex725
					if !_rules[ruleCapAuthorWord]() {
						goto l721
					}
				}
			l725:
				{
					position727, tokenIndex727 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l727
					}
					position++
					goto l728
				l727:
					position, tokenIndex = position727, tokenIndex727
				}
			l728:
				add(ruleAuthorWord3, position722)
			}
			return true
		l721:
			position, tokenIndex = position721, tokenIndex721
			return false
		},
		/* 99 AuthorDashInitials <- <(AuthorUpperChar '.'? Dash AuthorUpperChar '.'?)> */
		func() bool {
			position729, tokenIndex729 := position, tokenIndex
			{
				position730 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l729
				}
				{
					position731, tokenIndex731 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l731
					}
					position++
					goto l732
				l731:
					position, tokenIndex = position731, tokenIndex731
				}
			l732:
				if !_rules[ruleDash]() {
					goto l729
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l729
				}
				{
					position733, tokenIndex733 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l733
					}
					position++
					goto l734
				l733:
					position, tokenIndex = position733, tokenIndex733
				}
			l734:
				add(ruleAuthorDashInitials, position730)
			}
			return true
		l729:
			position, tokenIndex = position729, tokenIndex729
			return false
		},
		/* 100 AuthorWordSoft <- <(((AuthorUpperChar (AuthorUpperChar+ / AuthorLowerChar+)) / AuthorLowerChar+) '.'?)> */
		func() bool {
			position735, tokenIndex735 := position, tokenIndex
			{
				position736 := position
				{
					position737, tokenIndex737 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l738
					}
					{
						position739, tokenIndex739 := position, tokenIndex
						if !_rules[ruleAuthorUpperChar]() {
							goto l740
						}
					l741:
						{
							position742, tokenIndex742 := position, tokenIndex
							if !_rules[ruleAuthorUpperChar]() {
								goto l742
							}
							goto l741
						l742:
							position, tokenIndex = position742, tokenIndex742
						}
						goto l739
					l740:
						position, tokenIndex = position739, tokenIndex739
						if !_rules[ruleAuthorLowerChar]() {
							goto l738
						}
					l743:
						{
							position744, tokenIndex744 := position, tokenIndex
							if !_rules[ruleAuthorLowerChar]() {
								goto l744
							}
							goto l743
						l744:
							position, tokenIndex = position744, tokenIndex744
						}
					}
				l739:
					goto l737
				l738:
					position, tokenIndex = position737, tokenIndex737
					if !_rules[ruleAuthorLowerChar]() {
						goto l735
					}
				l745:
					{
						position746, tokenIndex746 := position, tokenIndex
						if !_rules[ruleAuthorLowerChar]() {
							goto l746
						}
						goto l745
					l746:
						position, tokenIndex = position746, tokenIndex746
					}
				}
			l737:
				{
					position747, tokenIndex747 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l747
					}
					position++
					goto l748
				l747:
					position, tokenIndex = position747, tokenIndex747
				}
			l748:
				add(ruleAuthorWordSoft, position736)
			}
			return true
		l735:
			position, tokenIndex = position735, tokenIndex735
			return false
		},
		/* 101 CapAuthorWord <- <(AuthorUpperChar AuthorLowerChar*)> */
		func() bool {
			position749, tokenIndex749 := position, tokenIndex
			{
				position750 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l749
				}
			l751:
				{
					position752, tokenIndex752 := position, tokenIndex
					if !_rules[ruleAuthorLowerChar]() {
						goto l752
					}
					goto l751
				l752:
					position, tokenIndex = position752, tokenIndex752
				}
				add(ruleCapAuthorWord, position750)
			}
			return true
		l749:
			position, tokenIndex = position749, tokenIndex749
			return false
		},
		/* 102 AllCapsAuthorWord <- <(AuthorUpperChar AuthorUpperChar+)> */
		func() bool {
			position753, tokenIndex753 := position, tokenIndex
			{
				position754 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l753
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l753
				}
			l755:
				{
					position756, tokenIndex756 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l756
					}
					goto l755
				l756:
					position, tokenIndex = position756, tokenIndex756
				}
				add(ruleAllCapsAuthorWord, position754)
			}
			return true
		l753:
			position, tokenIndex = position753, tokenIndex753
			return false
		},
		/* 103 Filius <- <(FiliusF / ('f' 'i' 'l' '.') / ('f' 'i' 'l' 'i' 'u' 's'))> */
		func() bool {
			position757, tokenIndex757 := position, tokenIndex
			{
				position758 := position
				{
					position759, tokenIndex759 := position, tokenIndex
					if !_rules[ruleFiliusF]() {
						goto l760
					}
					goto l759
				l760:
					position, tokenIndex = position759, tokenIndex759
					if buffer[position] != rune('f') {
						goto l761
					}
					position++
					if buffer[position] != rune('i') {
						goto l761
					}
					position++
					if buffer[position] != rune('l') {
						goto l761
					}
					position++
					if buffer[position] != rune('.') {
						goto l761
					}
					position++
					goto l759
				l761:
					position, tokenIndex = position759, tokenIndex759
					if buffer[position] != rune('f') {
						goto l757
					}
					position++
					if buffer[position] != rune('i') {
						goto l757
					}
					position++
					if buffer[position] != rune('l') {
						goto l757
					}
					position++
					if buffer[position] != rune('i') {
						goto l757
					}
					position++
					if buffer[position] != rune('u') {
						goto l757
					}
					position++
					if buffer[position] != rune('s') {
						goto l757
					}
					position++
				}
			l759:
				add(ruleFilius, position758)
			}
			return true
		l757:
			position, tokenIndex = position757, tokenIndex757
			return false
		},
		/* 104 FiliusF <- <('f' '.' !(_ Word))> */
		func() bool {
			position762, tokenIndex762 := position, tokenIndex
			{
				position763 := position
				if buffer[position] != rune('f') {
					goto l762
				}
				position++
				if buffer[position] != rune('.') {
					goto l762
				}
				position++
				{
					position764, tokenIndex764 := position, tokenIndex
					if !_rules[rule_]() {
						goto l764
					}
					if !_rules[ruleWord]() {
						goto l764
					}
					goto l762
				l764:
					position, tokenIndex = position764, tokenIndex764
				}
				add(ruleFiliusF, position763)
			}
			return true
		l762:
			position, tokenIndex = position762, tokenIndex762
			return false
		},
		/* 105 FiliusFNoSpace <- <('f' '.')> */
		func() bool {
			position765, tokenIndex765 := position, tokenIndex
			{
				position766 := position
				if buffer[position] != rune('f') {
					goto l765
				}
				position++
				if buffer[position] != rune('.') {
					goto l765
				}
				position++
				add(ruleFiliusFNoSpace, position766)
			}
			return true
		l765:
			position, tokenIndex = position765, tokenIndex765
			return false
		},
		/* 106 AuthorSuffix <- <(('b' 'i' 's') / ('t' 'e' 'r'))> */
		func() bool {
			position767, tokenIndex767 := position, tokenIndex
			{
				position768 := position
				{
					position769, tokenIndex769 := position, tokenIndex
					if buffer[position] != rune('b') {
						goto l770
					}
					position++
					if buffer[position] != rune('i') {
						goto l770
					}
					position++
					if buffer[position] != rune('s') {
						goto l770
					}
					position++
					goto l769
				l770:
					position, tokenIndex = position769, tokenIndex769
					if buffer[position] != rune('t') {
						goto l767
					}
					position++
					if buffer[position] != rune('e') {
						goto l767
					}
					position++
					if buffer[position] != rune('r') {
						goto l767
					}
					position++
				}
			l769:
				add(ruleAuthorSuffix, position768)
			}
			return true
		l767:
			position, tokenIndex = position767, tokenIndex767
			return false
		},
		/* 107 AuthorPrefixGlued <- <(('d' / 'O' / 'L' / ('M' 'c') / 'M') Apostrophe)> */
		func() bool {
			position771, tokenIndex771 := position, tokenIndex
			{
				position772 := position
				{
					position773, tokenIndex773 := position, tokenIndex
					if buffer[position] != rune('d') {
						goto l774
					}
					position++
					goto l773
				l774:
					position, tokenIndex = position773, tokenIndex773
					if buffer[position] != rune('O') {
						goto l775
					}
					position++
					goto l773
				l775:
					position, tokenIndex = position773, tokenIndex773
					if buffer[position] != rune('L') {
						goto l776
					}
					position++
					goto l773
				l776:
					position, tokenIndex = position773, tokenIndex773
					if buffer[position] != rune('M') {
						goto l777
					}
					position++
					if buffer[position] != rune('c') {
						goto l777
					}
					position++
					goto l773
				l777:
					position, tokenIndex = position773, tokenIndex773
					if buffer[position] != rune('M') {
						goto l771
					}
					position++
				}
			l773:
				if !_rules[ruleApostrophe]() {
					goto l771
				}
				add(ruleAuthorPrefixGlued, position772)
			}
			return true
		l771:
			position, tokenIndex = position771, tokenIndex771
			return false
		},
		/* 108 AuthorPrefix <- <(AuthorPrefix1 / AuthorPrefix2)> */
		func() bool {
			position778, tokenIndex778 := position, tokenIndex
			{
				position779 := position
				{
					position780, tokenIndex780 := position, tokenIndex
					if !_rules[ruleAuthorPrefix1]() {
						goto l781
					}
					goto l780
				l781:
					position, tokenIndex = position780, tokenIndex780
					if !_rules[ruleAuthorPrefix2]() {
						goto l778
					}
				}
			l780:
				add(ruleAuthorPrefix, position779)
			}
			return true
		l778:
			position, tokenIndex = position778, tokenIndex778
			return false
		},
		/* 109 AuthorPrefix2 <- <(('v' '.' (_? ('d' '.'))?) / (Apostrophe 't'))> */
		func() bool {
			position782, tokenIndex782 := position, tokenIndex
			{
				position783 := position
				{
					position784, tokenIndex784 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l785
					}
					position++
					if buffer[position] != rune('.') {
						goto l785
					}
					position++
					{
						position786, tokenIndex786 := position, tokenIndex
						{
							position788, tokenIndex788 := position, tokenIndex
							if !_rules[rule_]() {
								goto l788
							}
							goto l789
						l788:
							position, tokenIndex = position788, tokenIndex788
						}
					l789:
						if buffer[position] != rune('d') {
							goto l786
						}
						position++
						if buffer[position] != rune('.') {
							goto l786
						}
						position++
						goto l787
					l786:
						position, tokenIndex = position786, tokenIndex786
					}
				l787:
					goto l784
				l785:
					position, tokenIndex = position784, tokenIndex784
					if !_rules[ruleApostrophe]() {
						goto l782
					}
					if buffer[position] != rune('t') {
						goto l782
					}
					position++
				}
			l784:
				add(ruleAuthorPrefix2, position783)
			}
			return true
		l782:
			position, tokenIndex = position782, tokenIndex782
			return false
		},
		/* 110 AuthorPrefix1 <- <((('a' 'b') / ('a' 'f') / ('b' 'i' 's') / ('d' 'a') / ('d' 'e' 'r') / ('d' 'e' 's') / ('d' 'e' 'n') / ('d' 'e' 'l' 'l' 'a') / ('d' 'e' 'l' 'a') / ('d' 'e' 'l' 'l' 'e') / ('d' 'e' 'l') / ('d' 'e' ' ' 'l' 'o' 's') / ('d' 'e') / ('d' 'i') / ('d' 'o' 's') / ('d' 'u') / ('d' 'o') / ('e' 'l') / ('l' 'a') / ('l' 'e') / ('t' 'e' 'n') / ('t' 'e' 'r') / ('v' 'a' 'n') / ('v' 'e' 'r') / ('d' Apostrophe) / ('i' 'n' Apostrophe 't') / ('z' 'u' 'r') / ('z' 'u') / ('v' 'o' 'n' (_ (('d' '.') / ('d' 'e' 'm')))?) / ('v' (_ 'd')?)) &_)> */
		func() bool {
			position790, tokenIndex790 := position, tokenIndex
			{
				position791 := position
				{
					position792, tokenIndex792 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l793
					}
					position++
					if buffer[position] != rune('b') {
						goto l793
					}
					position++
					goto l792
				l793:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('a') {
						goto l794
					}
					position++
					if buffer[position] != rune('f') {
						goto l794
					}
					position++
					goto l792
				l794:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('b') {
						goto l795
					}
					position++
					if buffer[position] != rune('i') {
						goto l795
					}
					position++
					if buffer[position] != rune('s') {
						goto l795
					}
					position++
					goto l792
				l795:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('d') {
						goto l796
					}
					position++
					if buffer[position] != rune('a') {
						goto l796
					}
					position++
					goto l792
				l796:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('d') {
						goto l797
					}
					position++
					if buffer[position] != rune('e') {
						goto l797
					}
					position++
					if buffer[position] != rune('r') {
						goto l797
					}
					position++
					goto l792
				l797:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('d') {
						goto l798
					}
					position++
					if buffer[position] != rune('e') {
						goto l798
					}
					position++
					if buffer[position] != rune('s') {
						goto l798
					}
					position++
					goto l792
				l798:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('d') {
						goto l799
					}
					position++
					if buffer[position] != rune('e') {
						goto l799
					}
					position++
					if buffer[position] != rune('n') {
						goto l799
					}
					position++
					goto l792
				l799:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('d') {
						goto l800
					}
					position++
					if buffer[position] != rune('e') {
						goto l800
					}
					position++
					if buffer[position] != rune('l') {
						goto l800
					}
					position++
					if buffer[position] != rune('l') {
						goto l800
					}
					position++
					if buffer[position] != rune('a') {
						goto l800
					}
					position++
					goto l792
				l800:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('d') {
						goto l801
					}
					position++
					if buffer[position] != rune('e') {
						goto l801
					}
					position++
					if buffer[position] != rune('l') {
						goto l801
					}
					position++
					if buffer[position] != rune('a') {
						goto l801
					}
					position++
					goto l792
				l801:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('d') {
						goto l802
					}
					position++
					if buffer[position] != rune('e') {
						goto l802
					}
					position++
					if buffer[position] != rune('l') {
						goto l802
					}
					position++
					if buffer[position] != rune('l') {
						goto l802
					}
					position++
					if buffer[position] != rune('e') {
						goto l802
					}
					position++
					goto l792
				l802:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('d') {
						goto l803
					}
					position++
					if buffer[position] != rune('e') {
						goto l803
					}
					position++
					if buffer[position] != rune('l') {
						goto l803
					}
					position++
					goto l792
				l803:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('d') {
						goto l804
					}
					position++
					if buffer[position] != rune('e') {
						goto l804
					}
					position++
					if buffer[position] != rune(' ') {
						goto l804
					}
					position++
					if buffer[position] != rune('l') {
						goto l804
					}
					position++
					if buffer[position] != rune('o') {
						goto l804
					}
					position++
					if buffer[position] != rune('s') {
						goto l804
					}
					position++
					goto l792
				l804:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('d') {
						goto l805
					}
					position++
					if buffer[position] != rune('e') {
						goto l805
					}
					position++
					goto l792
				l805:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('d') {
						goto l806
					}
					position++
					if buffer[position] != rune('i') {
						goto l806
					}
					position++
					goto l792
				l806:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('d') {
						goto l807
					}
					position++
					if buffer[position] != rune('o') {
						goto l807
					}
					position++
					if buffer[position] != rune('s') {
						goto l807
					}
					position++
					goto l792
				l807:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('d') {
						goto l808
					}
					position++
					if buffer[position] != rune('u') {
						goto l808
					}
					position++
					goto l792
				l808:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('d') {
						goto l809
					}
					position++
					if buffer[position] != rune('o') {
						goto l809
					}
					position++
					goto l792
				l809:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('e') {
						goto l810
					}
					position++
					if buffer[position] != rune('l') {
						goto l810
					}
					position++
					goto l792
				l810:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('l') {
						goto l811
					}
					position++
					if buffer[position] != rune('a') {
						goto l811
					}
					position++
					goto l792
				l811:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('l') {
						goto l812
					}
					position++
					if buffer[position] != rune('e') {
						goto l812
					}
					position++
					goto l792
				l812:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('t') {
						goto l813
					}
					position++
					if buffer[position] != rune('e') {
						goto l813
					}
					position++
					if buffer[position] != rune('n') {
						goto l813
					}
					position++
					goto l792
				l813:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('t') {
						goto l814
					}
					position++
					if buffer[position] != rune('e') {
						goto l814
					}
					position++
					if buffer[position] != rune('r') {
						goto l814
					}
					position++
					goto l792
				l814:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('v') {
						goto l815
					}
					position++
					if buffer[position] != rune('a') {
						goto l815
					}
					position++
					if buffer[position] != rune('n') {
						goto l815
					}
					position++
					goto l792
				l815:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('v') {
						goto l816
					}
					position++
					if buffer[position] != rune('e') {
						goto l816
					}
					position++
					if buffer[position] != rune('r') {
						goto l816
					}
					position++
					goto l792
				l816:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('d') {
						goto l817
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l817
					}
					goto l792
				l817:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('i') {
						goto l818
					}
					position++
					if buffer[position] != rune('n') {
						goto l818
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l818
					}
					if buffer[position] != rune('t') {
						goto l818
					}
					position++
					goto l792
				l818:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('z') {
						goto l819
					}
					position++
					if buffer[position] != rune('u') {
						goto l819
					}
					position++
					if buffer[position] != rune('r') {
						goto l819
					}
					position++
					goto l792
				l819:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('z') {
						goto l820
					}
					position++
					if buffer[position] != rune('u') {
						goto l820
					}
					position++
					goto l792
				l820:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('v') {
						goto l821
					}
					position++
					if buffer[position] != rune('o') {
						goto l821
					}
					position++
					if buffer[position] != rune('n') {
						goto l821
					}
					position++
					{
						position822, tokenIndex822 := position, tokenIndex
						if !_rules[rule_]() {
							goto l822
						}
						{
							position824, tokenIndex824 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l825
							}
							position++
							if buffer[position] != rune('.') {
								goto l825
							}
							position++
							goto l824
						l825:
							position, tokenIndex = position824, tokenIndex824
							if buffer[position] != rune('d') {
								goto l822
							}
							position++
							if buffer[position] != rune('e') {
								goto l822
							}
							position++
							if buffer[position] != rune('m') {
								goto l822
							}
							position++
						}
					l824:
						goto l823
					l822:
						position, tokenIndex = position822, tokenIndex822
					}
				l823:
					goto l792
				l821:
					position, tokenIndex = position792, tokenIndex792
					if buffer[position] != rune('v') {
						goto l790
					}
					position++
					{
						position826, tokenIndex826 := position, tokenIndex
						if !_rules[rule_]() {
							goto l826
						}
						if buffer[position] != rune('d') {
							goto l826
						}
						position++
						goto l827
					l826:
						position, tokenIndex = position826, tokenIndex826
					}
				l827:
				}
			l792:
				{
					position828, tokenIndex828 := position, tokenIndex
					if !_rules[rule_]() {
						goto l790
					}
					position, tokenIndex = position828, tokenIndex828
				}
				add(ruleAuthorPrefix1, position791)
			}
			return true
		l790:
			position, tokenIndex = position790, tokenIndex790
			return false
		},
		/* 111 AuthorUpperChar <- <(UpperASCII / MiscodedChar / ('À' / 'Á' / 'Â' / 'Ã' / 'Ä' / 'Å' / 'Æ' / 'Ç' / 'È' / 'É' / 'Ê' / 'Ë' / 'Ì' / 'Í' / 'Î' / 'Ï' / 'Ð' / 'Ñ' / 'Ò' / 'Ó' / 'Ô' / 'Õ' / 'Ö' / 'Ø' / 'Ù' / 'Ú' / 'Û' / 'Ü' / 'Ý' / 'Ć' / 'Č' / 'Ď' / 'İ' / 'Ķ' / 'Ĺ' / 'ĺ' / 'Ľ' / 'ľ' / 'Ł' / 'ł' / 'Ņ' / 'Ō' / 'Ő' / 'Œ' / 'Ř' / 'Ś' / 'Ŝ' / 'Ş' / 'Š' / 'Ÿ' / 'Ź' / 'Ż' / 'Ž' / 'ƒ' / 'Ǿ' / 'Ș' / 'Ț'))> */
		func() bool {
			position829, tokenIndex829 := position, tokenIndex
			{
				position830 := position
				{
					position831, tokenIndex831 := position, tokenIndex
					if !_rules[ruleUpperASCII]() {
						goto l832
					}
					goto l831
				l832:
					position, tokenIndex = position831, tokenIndex831
					if !_rules[ruleMiscodedChar]() {
						goto l833
					}
					goto l831
				l833:
					position, tokenIndex = position831, tokenIndex831
					{
						position834, tokenIndex834 := position, tokenIndex
						if buffer[position] != rune('À') {
							goto l835
						}
						position++
						goto l834
					l835:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Á') {
							goto l836
						}
						position++
						goto l834
					l836:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Â') {
							goto l837
						}
						position++
						goto l834
					l837:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ã') {
							goto l838
						}
						position++
						goto l834
					l838:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ä') {
							goto l839
						}
						position++
						goto l834
					l839:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Å') {
							goto l840
						}
						position++
						goto l834
					l840:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Æ') {
							goto l841
						}
						position++
						goto l834
					l841:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ç') {
							goto l842
						}
						position++
						goto l834
					l842:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('È') {
							goto l843
						}
						position++
						goto l834
					l843:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('É') {
							goto l844
						}
						position++
						goto l834
					l844:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ê') {
							goto l845
						}
						position++
						goto l834
					l845:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ë') {
							goto l846
						}
						position++
						goto l834
					l846:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ì') {
							goto l847
						}
						position++
						goto l834
					l847:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Í') {
							goto l848
						}
						position++
						goto l834
					l848:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Î') {
							goto l849
						}
						position++
						goto l834
					l849:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ï') {
							goto l850
						}
						position++
						goto l834
					l850:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ð') {
							goto l851
						}
						position++
						goto l834
					l851:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ñ') {
							goto l852
						}
						position++
						goto l834
					l852:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ò') {
							goto l853
						}
						position++
						goto l834
					l853:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ó') {
							goto l854
						}
						position++
						goto l834
					l854:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ô') {
							goto l855
						}
						position++
						goto l834
					l855:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Õ') {
							goto l856
						}
						position++
						goto l834
					l856:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ö') {
							goto l857
						}
						position++
						goto l834
					l857:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ø') {
							goto l858
						}
						position++
						goto l834
					l858:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ù') {
							goto l859
						}
						position++
						goto l834
					l859:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ú') {
							goto l860
						}
						position++
						goto l834
					l860:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Û') {
							goto l861
						}
						position++
						goto l834
					l861:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ü') {
							goto l862
						}
						position++
						goto l834
					l862:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ý') {
							goto l863
						}
						position++
						goto l834
					l863:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ć') {
							goto l864
						}
						position++
						goto l834
					l864:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Č') {
							goto l865
						}
						position++
						goto l834
					l865:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ď') {
							goto l866
						}
						position++
						goto l834
					l866:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('İ') {
							goto l867
						}
						position++
						goto l834
					l867:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ķ') {
							goto l868
						}
						position++
						goto l834
					l868:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ĺ') {
							goto l869
						}
						position++
						goto l834
					l869:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('ĺ') {
							goto l870
						}
						position++
						goto l834
					l870:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ľ') {
							goto l871
						}
						position++
						goto l834
					l871:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('ľ') {
							goto l872
						}
						position++
						goto l834
					l872:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ł') {
							goto l873
						}
						position++
						goto l834
					l873:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('ł') {
							goto l874
						}
						position++
						goto l834
					l874:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ņ') {
							goto l875
						}
						position++
						goto l834
					l875:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ō') {
							goto l876
						}
						position++
						goto l834
					l876:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ő') {
							goto l877
						}
						position++
						goto l834
					l877:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Œ') {
							goto l878
						}
						position++
						goto l834
					l878:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ř') {
							goto l879
						}
						position++
						goto l834
					l879:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ś') {
							goto l880
						}
						position++
						goto l834
					l880:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ŝ') {
							goto l881
						}
						position++
						goto l834
					l881:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ş') {
							goto l882
						}
						position++
						goto l834
					l882:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Š') {
							goto l883
						}
						position++
						goto l834
					l883:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ÿ') {
							goto l884
						}
						position++
						goto l834
					l884:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ź') {
							goto l885
						}
						position++
						goto l834
					l885:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ż') {
							goto l886
						}
						position++
						goto l834
					l886:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ž') {
							goto l887
						}
						position++
						goto l834
					l887:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('ƒ') {
							goto l888
						}
						position++
						goto l834
					l888:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ǿ') {
							goto l889
						}
						position++
						goto l834
					l889:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ș') {
							goto l890
						}
						position++
						goto l834
					l890:
						position, tokenIndex = position834, tokenIndex834
						if buffer[position] != rune('Ț') {
							goto l829
						}
						position++
					}
				l834:
				}
			l831:
				add(ruleAuthorUpperChar, position830)
			}
			return true
		l829:
			position, tokenIndex = position829, tokenIndex829
			return false
		},
		/* 112 AuthorLowerChar <- <(LowerASCII / MiscodedChar / Apostrophe / ('à' / 'á' / 'â' / 'ã' / 'ä' / 'å' / 'æ' / 'ç' / 'è' / 'é' / 'ê' / 'ë' / 'ì' / 'í' / 'î' / 'ï' / 'ð' / 'ñ' / 'ò' / 'ó' / 'ó' / 'ô' / 'õ' / 'ö' / 'ø' / 'ù' / 'ú' / 'û' / 'ü' / 'ý' / 'ÿ' / 'ā' / 'ă' / 'ą' / 'ć' / 'ĉ' / 'č' / 'ď' / 'đ' / 'ē' / 'ĕ' / 'ė' / 'ę' / 'ě' / 'ğ' / 'ī' / 'ĭ' / 'İ' / 'ı' / 'ĺ' / 'ľ' / 'ł' / 'ń' / 'ņ' / 'ň' / 'ŏ' / 'ő' / 'œ' / 'ŕ' / 'ř' / 'ś' / 'ş' / 'š' / 'ţ' / 'ť' / 'ũ' / 'ū' / 'ŭ' / 'ů' / 'ű' / 'ź' / 'ż' / 'ž' / 'ſ' / 'ǎ' / 'ǔ' / 'ǧ' / 'ș' / 'ț' / 'ȳ' / 'ß'))> */
		func() bool {
			position891, tokenIndex891 := position, tokenIndex
			{
				position892 := position
				{
					position893, tokenIndex893 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l894
					}
					goto l893
				l894:
					position, tokenIndex = position893, tokenIndex893
					if !_rules[ruleMiscodedChar]() {
						goto l895
					}
					goto l893
				l895:
					position, tokenIndex = position893, tokenIndex893
					if !_rules[ruleApostrophe]() {
						goto l896
					}
					goto l893
				l896:
					position, tokenIndex = position893, tokenIndex893
					{
						position897, tokenIndex897 := position, tokenIndex
						if buffer[position] != rune('à') {
							goto l898
						}
						position++
						goto l897
					l898:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('á') {
							goto l899
						}
						position++
						goto l897
					l899:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('â') {
							goto l900
						}
						position++
						goto l897
					l900:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ã') {
							goto l901
						}
						position++
						goto l897
					l901:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ä') {
							goto l902
						}
						position++
						goto l897
					l902:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('å') {
							goto l903
						}
						position++
						goto l897
					l903:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('æ') {
							goto l904
						}
						position++
						goto l897
					l904:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ç') {
							goto l905
						}
						position++
						goto l897
					l905:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('è') {
							goto l906
						}
						position++
						goto l897
					l906:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('é') {
							goto l907
						}
						position++
						goto l897
					l907:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ê') {
							goto l908
						}
						position++
						goto l897
					l908:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ë') {
							goto l909
						}
						position++
						goto l897
					l909:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ì') {
							goto l910
						}
						position++
						goto l897
					l910:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('í') {
							goto l911
						}
						position++
						goto l897
					l911:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('î') {
							goto l912
						}
						position++
						goto l897
					l912:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ï') {
							goto l913
						}
						position++
						goto l897
					l913:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ð') {
							goto l914
						}
						position++
						goto l897
					l914:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ñ') {
							goto l915
						}
						position++
						goto l897
					l915:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ò') {
							goto l916
						}
						position++
						goto l897
					l916:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ó') {
							goto l917
						}
						position++
						goto l897
					l917:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ó') {
							goto l918
						}
						position++
						goto l897
					l918:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ô') {
							goto l919
						}
						position++
						goto l897
					l919:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('õ') {
							goto l920
						}
						position++
						goto l897
					l920:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ö') {
							goto l921
						}
						position++
						goto l897
					l921:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ø') {
							goto l922
						}
						position++
						goto l897
					l922:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ù') {
							goto l923
						}
						position++
						goto l897
					l923:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ú') {
							goto l924
						}
						position++
						goto l897
					l924:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('û') {
							goto l925
						}
						position++
						goto l897
					l925:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ü') {
							goto l926
						}
						position++
						goto l897
					l926:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ý') {
							goto l927
						}
						position++
						goto l897
					l927:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ÿ') {
							goto l928
						}
						position++
						goto l897
					l928:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ā') {
							goto l929
						}
						position++
						goto l897
					l929:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ă') {
							goto l930
						}
						position++
						goto l897
					l930:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ą') {
							goto l931
						}
						position++
						goto l897
					l931:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ć') {
							goto l932
						}
						position++
						goto l897
					l932:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ĉ') {
							goto l933
						}
						position++
						goto l897
					l933:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('č') {
							goto l934
						}
						position++
						goto l897
					l934:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ď') {
							goto l935
						}
						position++
						goto l897
					l935:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('đ') {
							goto l936
						}
						position++
						goto l897
					l936:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ē') {
							goto l937
						}
						position++
						goto l897
					l937:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ĕ') {
							goto l938
						}
						position++
						goto l897
					l938:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ė') {
							goto l939
						}
						position++
						goto l897
					l939:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ę') {
							goto l940
						}
						position++
						goto l897
					l940:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ě') {
							goto l941
						}
						position++
						goto l897
					l941:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ğ') {
							goto l942
						}
						position++
						goto l897
					l942:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ī') {
							goto l943
						}
						position++
						goto l897
					l943:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ĭ') {
							goto l944
						}
						position++
						goto l897
					l944:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('İ') {
							goto l945
						}
						position++
						goto l897
					l945:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ı') {
							goto l946
						}
						position++
						goto l897
					l946:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ĺ') {
							goto l947
						}
						position++
						goto l897
					l947:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ľ') {
							goto l948
						}
						position++
						goto l897
					l948:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ł') {
							goto l949
						}
						position++
						goto l897
					l949:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ń') {
							goto l950
						}
						position++
						goto l897
					l950:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ņ') {
							goto l951
						}
						position++
						goto l897
					l951:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ň') {
							goto l952
						}
						position++
						goto l897
					l952:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ŏ') {
							goto l953
						}
						position++
						goto l897
					l953:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ő') {
							goto l954
						}
						position++
						goto l897
					l954:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('œ') {
							goto l955
						}
						position++
						goto l897
					l955:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ŕ') {
							goto l956
						}
						position++
						goto l897
					l956:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ř') {
							goto l957
						}
						position++
						goto l897
					l957:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ś') {
							goto l958
						}
						position++
						goto l897
					l958:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ş') {
							goto l959
						}
						position++
						goto l897
					l959:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('š') {
							goto l960
						}
						position++
						goto l897
					l960:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ţ') {
							goto l961
						}
						position++
						goto l897
					l961:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ť') {
							goto l962
						}
						position++
						goto l897
					l962:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ũ') {
							goto l963
						}
						position++
						goto l897
					l963:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ū') {
							goto l964
						}
						position++
						goto l897
					l964:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ŭ') {
							goto l965
						}
						position++
						goto l897
					l965:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ů') {
							goto l966
						}
						position++
						goto l897
					l966:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ű') {
							goto l967
						}
						position++
						goto l897
					l967:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ź') {
							goto l968
						}
						position++
						goto l897
					l968:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ż') {
							goto l969
						}
						position++
						goto l897
					l969:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ž') {
							goto l970
						}
						position++
						goto l897
					l970:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ſ') {
							goto l971
						}
						position++
						goto l897
					l971:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ǎ') {
							goto l972
						}
						position++
						goto l897
					l972:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ǔ') {
							goto l973
						}
						position++
						goto l897
					l973:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ǧ') {
							goto l974
						}
						position++
						goto l897
					l974:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ș') {
							goto l975
						}
						position++
						goto l897
					l975:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ț') {
							goto l976
						}
						position++
						goto l897
					l976:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ȳ') {
							goto l977
						}
						position++
						goto l897
					l977:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('ß') {
							goto l891
						}
						position++
					}
				l897:
				}
			l893:
				add(ruleAuthorLowerChar, position892)
			}
			return true
		l891:
			position, tokenIndex = position891, tokenIndex891
			return false
		},
		/* 113 Year <- <(YearRange / YearApprox / YearWithParens / YearWithPage / YearWithDot / YearWithChar / YearNum)> */
		func() bool {
			position978, tokenIndex978 := position, tokenIndex
			{
				position979 := position
				{
					position980, tokenIndex980 := position, tokenIndex
					if !_rules[ruleYearRange]() {
						goto l981
					}
					goto l980
				l981:
					position, tokenIndex = position980, tokenIndex980
					if !_rules[ruleYearApprox]() {
						goto l982
					}
					goto l980
				l982:
					position, tokenIndex = position980, tokenIndex980
					if !_rules[ruleYearWithParens]() {
						goto l983
					}
					goto l980
				l983:
					position, tokenIndex = position980, tokenIndex980
					if !_rules[ruleYearWithPage]() {
						goto l984
					}
					goto l980
				l984:
					position, tokenIndex = position980, tokenIndex980
					if !_rules[ruleYearWithDot]() {
						goto l985
					}
					goto l980
				l985:
					position, tokenIndex = position980, tokenIndex980
					if !_rules[ruleYearWithChar]() {
						goto l986
					}
					goto l980
				l986:
					position, tokenIndex = position980, tokenIndex980
					if !_rules[ruleYearNum]() {
						goto l978
					}
				}
			l980:
				add(ruleYear, position979)
			}
			return true
		l978:
			position, tokenIndex = position978, tokenIndex978
			return false
		},
		/* 114 YearRange <- <(YearNum (Dash / Slash) (Nums+ ('a' / 'b' / 'c' / 'd' / 'e' / 'f' / 'g' / 'h' / 'i' / 'j' / 'k' / 'l' / 'm' / 'n' / 'o' / 'p' / 'q' / 'r' / 's' / 't' / 'u' / 'v' / 'w' / 'x' / 'y' / 'z' / '?')*))> */
		func() bool {
			position987, tokenIndex987 := position, tokenIndex
			{
				position988 := position
				if !_rules[ruleYearNum]() {
					goto l987
				}
				{
					position989, tokenIndex989 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l990
					}
					goto l989
				l990:
					position, tokenIndex = position989, tokenIndex989
					if !_rules[ruleSlash]() {
						goto l987
					}
				}
			l989:
				if !_rules[ruleNums]() {
					goto l987
				}
			l991:
				{
					position992, tokenIndex992 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l992
					}
					goto l991
				l992:
					position, tokenIndex = position992, tokenIndex992
				}
			l993:
				{
					position994, tokenIndex994 := position, tokenIndex
					{
						position995, tokenIndex995 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l996
						}
						position++
						goto l995
					l996:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('b') {
							goto l997
						}
						position++
						goto l995
					l997:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('c') {
							goto l998
						}
						position++
						goto l995
					l998:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('d') {
							goto l999
						}
						position++
						goto l995
					l999:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('e') {
							goto l1000
						}
						position++
						goto l995
					l1000:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('f') {
							goto l1001
						}
						position++
						goto l995
					l1001:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('g') {
							goto l1002
						}
						position++
						goto l995
					l1002:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('h') {
							goto l1003
						}
						position++
						goto l995
					l1003:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('i') {
							goto l1004
						}
						position++
						goto l995
					l1004:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('j') {
							goto l1005
						}
						position++
						goto l995
					l1005:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('k') {
							goto l1006
						}
						position++
						goto l995
					l1006:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('l') {
							goto l1007
						}
						position++
						goto l995
					l1007:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('m') {
							goto l1008
						}
						position++
						goto l995
					l1008:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('n') {
							goto l1009
						}
						position++
						goto l995
					l1009:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('o') {
							goto l1010
						}
						position++
						goto l995
					l1010:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('p') {
							goto l1011
						}
						position++
						goto l995
					l1011:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('q') {
							goto l1012
						}
						position++
						goto l995
					l1012:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('r') {
							goto l1013
						}
						position++
						goto l995
					l1013:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('s') {
							goto l1014
						}
						position++
						goto l995
					l1014:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('t') {
							goto l1015
						}
						position++
						goto l995
					l1015:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('u') {
							goto l1016
						}
						position++
						goto l995
					l1016:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('v') {
							goto l1017
						}
						position++
						goto l995
					l1017:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('w') {
							goto l1018
						}
						position++
						goto l995
					l1018:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('x') {
							goto l1019
						}
						position++
						goto l995
					l1019:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('y') {
							goto l1020
						}
						position++
						goto l995
					l1020:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('z') {
							goto l1021
						}
						position++
						goto l995
					l1021:
						position, tokenIndex = position995, tokenIndex995
						if buffer[position] != rune('?') {
							goto l994
						}
						position++
					}
				l995:
					goto l993
				l994:
					position, tokenIndex = position994, tokenIndex994
				}
				add(ruleYearRange, position988)
			}
			return true
		l987:
			position, tokenIndex = position987, tokenIndex987
			return false
		},
		/* 115 YearWithDot <- <(YearNum '.')> */
		func() bool {
			position1022, tokenIndex1022 := position, tokenIndex
			{
				position1023 := position
				if !_rules[ruleYearNum]() {
					goto l1022
				}
				if buffer[position] != rune('.') {
					goto l1022
				}
				position++
				add(ruleYearWithDot, position1023)
			}
			return true
		l1022:
			position, tokenIndex = position1022, tokenIndex1022
			return false
		},
		/* 116 YearApprox <- <('[' _? YearNum _? ']')> */
		func() bool {
			position1024, tokenIndex1024 := position, tokenIndex
			{
				position1025 := position
				if buffer[position] != rune('[') {
					goto l1024
				}
				position++
				{
					position1026, tokenIndex1026 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1026
					}
					goto l1027
				l1026:
					position, tokenIndex = position1026, tokenIndex1026
				}
			l1027:
				if !_rules[ruleYearNum]() {
					goto l1024
				}
				{
					position1028, tokenIndex1028 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1028
					}
					goto l1029
				l1028:
					position, tokenIndex = position1028, tokenIndex1028
				}
			l1029:
				if buffer[position] != rune(']') {
					goto l1024
				}
				position++
				add(ruleYearApprox, position1025)
			}
			return true
		l1024:
			position, tokenIndex = position1024, tokenIndex1024
			return false
		},
		/* 117 YearWithPage <- <((YearWithChar / YearNum) _? ':' _? Nums+)> */
		func() bool {
			position1030, tokenIndex1030 := position, tokenIndex
			{
				position1031 := position
				{
					position1032, tokenIndex1032 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l1033
					}
					goto l1032
				l1033:
					position, tokenIndex = position1032, tokenIndex1032
					if !_rules[ruleYearNum]() {
						goto l1030
					}
				}
			l1032:
				{
					position1034, tokenIndex1034 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1034
					}
					goto l1035
				l1034:
					position, tokenIndex = position1034, tokenIndex1034
				}
			l1035:
				if buffer[position] != rune(':') {
					goto l1030
				}
				position++
				{
					position1036, tokenIndex1036 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1036
					}
					goto l1037
				l1036:
					position, tokenIndex = position1036, tokenIndex1036
				}
			l1037:
				if !_rules[ruleNums]() {
					goto l1030
				}
			l1038:
				{
					position1039, tokenIndex1039 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l1039
					}
					goto l1038
				l1039:
					position, tokenIndex = position1039, tokenIndex1039
				}
				add(ruleYearWithPage, position1031)
			}
			return true
		l1030:
			position, tokenIndex = position1030, tokenIndex1030
			return false
		},
		/* 118 YearWithParens <- <('(' (YearWithChar / YearNum) ')')> */
		func() bool {
			position1040, tokenIndex1040 := position, tokenIndex
			{
				position1041 := position
				if buffer[position] != rune('(') {
					goto l1040
				}
				position++
				{
					position1042, tokenIndex1042 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l1043
					}
					goto l1042
				l1043:
					position, tokenIndex = position1042, tokenIndex1042
					if !_rules[ruleYearNum]() {
						goto l1040
					}
				}
			l1042:
				if buffer[position] != rune(')') {
					goto l1040
				}
				position++
				add(ruleYearWithParens, position1041)
			}
			return true
		l1040:
			position, tokenIndex = position1040, tokenIndex1040
			return false
		},
		/* 119 YearWithChar <- <(YearNum LowerASCII)> */
		func() bool {
			position1044, tokenIndex1044 := position, tokenIndex
			{
				position1045 := position
				if !_rules[ruleYearNum]() {
					goto l1044
				}
				if !_rules[ruleLowerASCII]() {
					goto l1044
				}
				add(ruleYearWithChar, position1045)
			}
			return true
		l1044:
			position, tokenIndex = position1044, tokenIndex1044
			return false
		},
		/* 120 YearNum <- <(('1' / '2') ('0' / '7' / '8' / '9') Nums (Nums / '?') '?'*)> */
		func() bool {
			position1046, tokenIndex1046 := position, tokenIndex
			{
				position1047 := position
				{
					position1048, tokenIndex1048 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l1049
					}
					position++
					goto l1048
				l1049:
					position, tokenIndex = position1048, tokenIndex1048
					if buffer[position] != rune('2') {
						goto l1046
					}
					position++
				}
			l1048:
				{
					position1050, tokenIndex1050 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l1051
					}
					position++
					goto l1050
				l1051:
					position, tokenIndex = position1050, tokenIndex1050
					if buffer[position] != rune('7') {
						goto l1052
					}
					position++
					goto l1050
				l1052:
					position, tokenIndex = position1050, tokenIndex1050
					if buffer[position] != rune('8') {
						goto l1053
					}
					position++
					goto l1050
				l1053:
					position, tokenIndex = position1050, tokenIndex1050
					if buffer[position] != rune('9') {
						goto l1046
					}
					position++
				}
			l1050:
				if !_rules[ruleNums]() {
					goto l1046
				}
				{
					position1054, tokenIndex1054 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l1055
					}
					goto l1054
				l1055:
					position, tokenIndex = position1054, tokenIndex1054
					if buffer[position] != rune('?') {
						goto l1046
					}
					position++
				}
			l1054:
			l1056:
				{
					position1057, tokenIndex1057 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l1057
					}
					position++
					goto l1056
				l1057:
					position, tokenIndex = position1057, tokenIndex1057
				}
				add(ruleYearNum, position1047)
			}
			return true
		l1046:
			position, tokenIndex = position1046, tokenIndex1046
			return false
		},
		/* 121 NameUpperChar <- <(UpperChar / UpperCharExtended)> */
		func() bool {
			position1058, tokenIndex1058 := position, tokenIndex
			{
				position1059 := position
				{
					position1060, tokenIndex1060 := position, tokenIndex
					if !_rules[ruleUpperChar]() {
						goto l1061
					}
					goto l1060
				l1061:
					position, tokenIndex = position1060, tokenIndex1060
					if !_rules[ruleUpperCharExtended]() {
						goto l1058
					}
				}
			l1060:
				add(ruleNameUpperChar, position1059)
			}
			return true
		l1058:
			position, tokenIndex = position1058, tokenIndex1058
			return false
		},
		/* 122 UpperCharExtended <- <('Æ' / 'Œ' / 'Ö')> */
		func() bool {
			position1062, tokenIndex1062 := position, tokenIndex
			{
				position1063 := position
				{
					position1064, tokenIndex1064 := position, tokenIndex
					if buffer[position] != rune('Æ') {
						goto l1065
					}
					position++
					goto l1064
				l1065:
					position, tokenIndex = position1064, tokenIndex1064
					if buffer[position] != rune('Œ') {
						goto l1066
					}
					position++
					goto l1064
				l1066:
					position, tokenIndex = position1064, tokenIndex1064
					if buffer[position] != rune('Ö') {
						goto l1062
					}
					position++
				}
			l1064:
				add(ruleUpperCharExtended, position1063)
			}
			return true
		l1062:
			position, tokenIndex = position1062, tokenIndex1062
			return false
		},
		/* 123 UpperChar <- <UpperASCII> */
		func() bool {
			position1067, tokenIndex1067 := position, tokenIndex
			{
				position1068 := position
				if !_rules[ruleUpperASCII]() {
					goto l1067
				}
				add(ruleUpperChar, position1068)
			}
			return true
		l1067:
			position, tokenIndex = position1067, tokenIndex1067
			return false
		},
		/* 124 NameLowerChar <- <(LowerChar / LowerCharExtended / MiscodedChar)> */
		func() bool {
			position1069, tokenIndex1069 := position, tokenIndex
			{
				position1070 := position
				{
					position1071, tokenIndex1071 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l1072
					}
					goto l1071
				l1072:
					position, tokenIndex = position1071, tokenIndex1071
					if !_rules[ruleLowerCharExtended]() {
						goto l1073
					}
					goto l1071
				l1073:
					position, tokenIndex = position1071, tokenIndex1071
					if !_rules[ruleMiscodedChar]() {
						goto l1069
					}
				}
			l1071:
				add(ruleNameLowerChar, position1070)
			}
			return true
		l1069:
			position, tokenIndex = position1069, tokenIndex1069
			return false
		},
		/* 125 MiscodedChar <- <'�'> */
		func() bool {
			position1074, tokenIndex1074 := position, tokenIndex
			{
				position1075 := position
				if buffer[position] != rune('�') {
					goto l1074
				}
				position++
				add(ruleMiscodedChar, position1075)
			}
			return true
		l1074:
			position, tokenIndex = position1074, tokenIndex1074
			return false
		},
		/* 126 LowerCharExtended <- <('æ' / 'œ' / 'à' / 'â' / 'å' / 'ã' / 'ä' / 'á' / 'ç' / 'č' / 'é' / 'è' / 'ë' / 'í' / 'ì' / 'ï' / 'ň' / 'ñ' / 'ñ' / 'ó' / 'ò' / 'ô' / 'ø' / 'õ' / 'ö' / 'ú' / 'ù' / 'ü' / 'ŕ' / 'ř' / 'ŗ' / 'ſ' / 'š' / 'š' / 'ş' / 'ß' / 'ž')> */
		func() bool {
			position1076, tokenIndex1076 := position, tokenIndex
			{
				position1077 := position
				{
					position1078, tokenIndex1078 := position, tokenIndex
					if buffer[position] != rune('æ') {
						goto l1079
					}
					position++
					goto l1078
				l1079:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('œ') {
						goto l1080
					}
					position++
					goto l1078
				l1080:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('à') {
						goto l1081
					}
					position++
					goto l1078
				l1081:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('â') {
						goto l1082
					}
					position++
					goto l1078
				l1082:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('å') {
						goto l1083
					}
					position++
					goto l1078
				l1083:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ã') {
						goto l1084
					}
					position++
					goto l1078
				l1084:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ä') {
						goto l1085
					}
					position++
					goto l1078
				l1085:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('á') {
						goto l1086
					}
					position++
					goto l1078
				l1086:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ç') {
						goto l1087
					}
					position++
					goto l1078
				l1087:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('č') {
						goto l1088
					}
					position++
					goto l1078
				l1088:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('é') {
						goto l1089
					}
					position++
					goto l1078
				l1089:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('è') {
						goto l1090
					}
					position++
					goto l1078
				l1090:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ë') {
						goto l1091
					}
					position++
					goto l1078
				l1091:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('í') {
						goto l1092
					}
					position++
					goto l1078
				l1092:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ì') {
						goto l1093
					}
					position++
					goto l1078
				l1093:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ï') {
						goto l1094
					}
					position++
					goto l1078
				l1094:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ň') {
						goto l1095
					}
					position++
					goto l1078
				l1095:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ñ') {
						goto l1096
					}
					position++
					goto l1078
				l1096:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ñ') {
						goto l1097
					}
					position++
					goto l1078
				l1097:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ó') {
						goto l1098
					}
					position++
					goto l1078
				l1098:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ò') {
						goto l1099
					}
					position++
					goto l1078
				l1099:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ô') {
						goto l1100
					}
					position++
					goto l1078
				l1100:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ø') {
						goto l1101
					}
					position++
					goto l1078
				l1101:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('õ') {
						goto l1102
					}
					position++
					goto l1078
				l1102:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ö') {
						goto l1103
					}
					position++
					goto l1078
				l1103:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ú') {
						goto l1104
					}
					position++
					goto l1078
				l1104:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ù') {
						goto l1105
					}
					position++
					goto l1078
				l1105:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ü') {
						goto l1106
					}
					position++
					goto l1078
				l1106:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ŕ') {
						goto l1107
					}
					position++
					goto l1078
				l1107:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ř') {
						goto l1108
					}
					position++
					goto l1078
				l1108:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ŗ') {
						goto l1109
					}
					position++
					goto l1078
				l1109:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ſ') {
						goto l1110
					}
					position++
					goto l1078
				l1110:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('š') {
						goto l1111
					}
					position++
					goto l1078
				l1111:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('š') {
						goto l1112
					}
					position++
					goto l1078
				l1112:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ş') {
						goto l1113
					}
					position++
					goto l1078
				l1113:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ß') {
						goto l1114
					}
					position++
					goto l1078
				l1114:
					position, tokenIndex = position1078, tokenIndex1078
					if buffer[position] != rune('ž') {
						goto l1076
					}
					position++
				}
			l1078:
				add(ruleLowerCharExtended, position1077)
			}
			return true
		l1076:
			position, tokenIndex = position1076, tokenIndex1076
			return false
		},
		/* 127 LowerChar <- <LowerASCII> */
		func() bool {
			position1115, tokenIndex1115 := position, tokenIndex
			{
				position1116 := position
				if !_rules[ruleLowerASCII]() {
					goto l1115
				}
				add(ruleLowerChar, position1116)
			}
			return true
		l1115:
			position, tokenIndex = position1115, tokenIndex1115
			return false
		},
		/* 128 SpaceCharEOI <- <(_ / !.)> */
		func() bool {
			position1117, tokenIndex1117 := position, tokenIndex
			{
				position1118 := position
				{
					position1119, tokenIndex1119 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1120
					}
					goto l1119
				l1120:
					position, tokenIndex = position1119, tokenIndex1119
					{
						position1121, tokenIndex1121 := position, tokenIndex
						if !matchDot() {
							goto l1121
						}
						goto l1117
					l1121:
						position, tokenIndex = position1121, tokenIndex1121
					}
				}
			l1119:
				add(ruleSpaceCharEOI, position1118)
			}
			return true
		l1117:
			position, tokenIndex = position1117, tokenIndex1117
			return false
		},
		/* 129 Nums <- <[0-9]> */
		func() bool {
			position1122, tokenIndex1122 := position, tokenIndex
			{
				position1123 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l1122
				}
				position++
				add(ruleNums, position1123)
			}
			return true
		l1122:
			position, tokenIndex = position1122, tokenIndex1122
			return false
		},
		/* 130 LowerGreek <- <[α-ω]> */
		func() bool {
			position1124, tokenIndex1124 := position, tokenIndex
			{
				position1125 := position
				if c := buffer[position]; c < rune('α') || c > rune('ω') {
					goto l1124
				}
				position++
				add(ruleLowerGreek, position1125)
			}
			return true
		l1124:
			position, tokenIndex = position1124, tokenIndex1124
			return false
		},
		/* 131 LowerASCII <- <[a-z]> */
		func() bool {
			position1126, tokenIndex1126 := position, tokenIndex
			{
				position1127 := position
				if c := buffer[position]; c < rune('a') || c > rune('z') {
					goto l1126
				}
				position++
				add(ruleLowerASCII, position1127)
			}
			return true
		l1126:
			position, tokenIndex = position1126, tokenIndex1126
			return false
		},
		/* 132 UpperASCII <- <[A-Z]> */
		func() bool {
			position1128, tokenIndex1128 := position, tokenIndex
			{
				position1129 := position
				if c := buffer[position]; c < rune('A') || c > rune('Z') {
					goto l1128
				}
				position++
				add(ruleUpperASCII, position1129)
			}
			return true
		l1128:
			position, tokenIndex = position1128, tokenIndex1128
			return false
		},
		/* 133 Apostrophe <- <(ApostrOther / ApostrASCII)> */
		func() bool {
			position1130, tokenIndex1130 := position, tokenIndex
			{
				position1131 := position
				{
					position1132, tokenIndex1132 := position, tokenIndex
					if !_rules[ruleApostrOther]() {
						goto l1133
					}
					goto l1132
				l1133:
					position, tokenIndex = position1132, tokenIndex1132
					if !_rules[ruleApostrASCII]() {
						goto l1130
					}
				}
			l1132:
				add(ruleApostrophe, position1131)
			}
			return true
		l1130:
			position, tokenIndex = position1130, tokenIndex1130
			return false
		},
		/* 134 ApostrASCII <- <'\''> */
		func() bool {
			position1134, tokenIndex1134 := position, tokenIndex
			{
				position1135 := position
				if buffer[position] != rune('\'') {
					goto l1134
				}
				position++
				add(ruleApostrASCII, position1135)
			}
			return true
		l1134:
			position, tokenIndex = position1134, tokenIndex1134
			return false
		},
		/* 135 ApostrOther <- <('‘' / '’' / '`' / '´')> */
		func() bool {
			position1136, tokenIndex1136 := position, tokenIndex
			{
				position1137 := position
				{
					position1138, tokenIndex1138 := position, tokenIndex
					if buffer[position] != rune('‘') {
						goto l1139
					}
					position++
					goto l1138
				l1139:
					position, tokenIndex = position1138, tokenIndex1138
					if buffer[position] != rune('’') {
						goto l1140
					}
					position++
					goto l1138
				l1140:
					position, tokenIndex = position1138, tokenIndex1138
					if buffer[position] != rune('`') {
						goto l1141
					}
					position++
					goto l1138
				l1141:
					position, tokenIndex = position1138, tokenIndex1138
					if buffer[position] != rune('´') {
						goto l1136
					}
					position++
				}
			l1138:
				add(ruleApostrOther, position1137)
			}
			return true
		l1136:
			position, tokenIndex = position1136, tokenIndex1136
			return false
		},
		/* 136 Dash <- <'-'> */
		func() bool {
			position1142, tokenIndex1142 := position, tokenIndex
			{
				position1143 := position
				if buffer[position] != rune('-') {
					goto l1142
				}
				position++
				add(ruleDash, position1143)
			}
			return true
		l1142:
			position, tokenIndex = position1142, tokenIndex1142
			return false
		},
		/* 137 Slash <- <'/'> */
		func() bool {
			position1144, tokenIndex1144 := position, tokenIndex
			{
				position1145 := position
				if buffer[position] != rune('/') {
					goto l1144
				}
				position++
				add(ruleSlash, position1145)
			}
			return true
		l1144:
			position, tokenIndex = position1144, tokenIndex1144
			return false
		},
		/* 138 _ <- <(MultipleSpace / SingleSpace)> */
		func() bool {
			position1146, tokenIndex1146 := position, tokenIndex
			{
				position1147 := position
				{
					position1148, tokenIndex1148 := position, tokenIndex
					if !_rules[ruleMultipleSpace]() {
						goto l1149
					}
					goto l1148
				l1149:
					position, tokenIndex = position1148, tokenIndex1148
					if !_rules[ruleSingleSpace]() {
						goto l1146
					}
				}
			l1148:
				add(rule_, position1147)
			}
			return true
		l1146:
			position, tokenIndex = position1146, tokenIndex1146
			return false
		},
		/* 139 MultipleSpace <- <(SingleSpace SingleSpace+)> */
		func() bool {
			position1150, tokenIndex1150 := position, tokenIndex
			{
				position1151 := position
				if !_rules[ruleSingleSpace]() {
					goto l1150
				}
				if !_rules[ruleSingleSpace]() {
					goto l1150
				}
			l1152:
				{
					position1153, tokenIndex1153 := position, tokenIndex
					if !_rules[ruleSingleSpace]() {
						goto l1153
					}
					goto l1152
				l1153:
					position, tokenIndex = position1153, tokenIndex1153
				}
				add(ruleMultipleSpace, position1151)
			}
			return true
		l1150:
			position, tokenIndex = position1150, tokenIndex1150
			return false
		},
		/* 140 SingleSpace <- <(' ' / OtherSpace)> */
		func() bool {
			position1154, tokenIndex1154 := position, tokenIndex
			{
				position1155 := position
				{
					position1156, tokenIndex1156 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l1157
					}
					position++
					goto l1156
				l1157:
					position, tokenIndex = position1156, tokenIndex1156
					if !_rules[ruleOtherSpace]() {
						goto l1154
					}
				}
			l1156:
				add(ruleSingleSpace, position1155)
			}
			return true
		l1154:
			position, tokenIndex = position1154, tokenIndex1154
			return false
		},
		/* 141 OtherSpace <- <('\u3000' / '\u00a0' / '\t' / '\r' / '\n' / '\f' / '\v')> */
		func() bool {
			position1158, tokenIndex1158 := position, tokenIndex
			{
				position1159 := position
				{
					position1160, tokenIndex1160 := position, tokenIndex
					if buffer[position] != rune('\u3000') {
						goto l1161
					}
					position++
					goto l1160
				l1161:
					position, tokenIndex = position1160, tokenIndex1160
					if buffer[position] != rune('\u00a0') {
						goto l1162
					}
					position++
					goto l1160
				l1162:
					position, tokenIndex = position1160, tokenIndex1160
					if buffer[position] != rune('\t') {
						goto l1163
					}
					position++
					goto l1160
				l1163:
					position, tokenIndex = position1160, tokenIndex1160
					if buffer[position] != rune('\r') {
						goto l1164
					}
					position++
					goto l1160
				l1164:
					position, tokenIndex = position1160, tokenIndex1160
					if buffer[position] != rune('\n') {
						goto l1165
					}
					position++
					goto l1160
				l1165:
					position, tokenIndex = position1160, tokenIndex1160
					if buffer[position] != rune('\f') {
						goto l1166
					}
					position++
					goto l1160
				l1166:
					position, tokenIndex = position1160, tokenIndex1160
					if buffer[position] != rune('\v') {
						goto l1158
					}
					position++
				}
			l1160:
				add(ruleOtherSpace, position1159)
			}
			return true
		l1158:
			position, tokenIndex = position1158, tokenIndex1158
			return false
		},
		/* 142 END <- <!.> */
		func() bool {
			position1167, tokenIndex1167 := position, tokenIndex
			{
				position1168 := position
				{
					position1169, tokenIndex1169 := position, tokenIndex
					if !matchDot() {
						goto l1169
					}
					goto l1167
				l1169:
					position, tokenIndex = position1169, tokenIndex1169
				}
				add(ruleEND, position1168)
			}
			return true
		l1167:
			position, tokenIndex = position1167, tokenIndex1167
			return false
		},
	}
	p.rules = _rules
	return nil
}
