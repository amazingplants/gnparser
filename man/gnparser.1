.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "GNPARSER" "1" "November 2021" "" ""
.
.SH "NAME"
\fBgnparser\fR \- parse biodiversity scientific names
.
.SH "SYNOPSIS"
\fBgnparser\fR [OPTION\.\.\.] [TERM/FILE]
.
.SH "DESCRIPTION"
\fBGNparser\fR breaks biodiversity scientific names into their structural elements\. For example it finds that a genus in \fIHomo sapiens\fR is \fIHomo\fR\.
.
.P
It can be used for one name, or for many names in a file (one name per line)\.
.
.SH "USAGE"
.
.SS "Usage for one name"
.
.nf

gnparser "Pleurosigma vitrea var\. kjellmanii H\.Peragallo, 1891"

# CSV output (default)
gnparser "Parus major Linnaeus, 1788"
# or
gnparser \-f csv "Parus major Linnaeus, 1788"

# TSV output (default)
gnparser \-f tsv "Parus major Linnaeus, 1788"

# JSON compact format
gnparser "Parus major Linnaeus, 1788" \-f compact

# pretty format
gnparser \-f pretty "Parus major Linnaeus, 1788"

# to parse a name from the standard input
echo "Parus major Linnaeus, 1788" | gnparser
.
.fi
.
.SS "Usage for many names in a file"
There is no flag for parsing a file\. If parser finds the given file path on your computer, it will parse the content of the file, assuming that every line is a new scientific name\. If the file path is not found, gnparser will try to parse the "path" as a scientific name\.
.
.P
Parsed results will stream to STDOUT, while progress of the parsing will be directed to STDERR\.
.
.IP "" 4
.
.nf

# to parse with 200 parallel processes
gnparser \-j 200 names\.txt > names_parsed\.csv

# to parse file with more detailed output
gnparser names\.txt \-d \-f compact > names_parsed\.txt

# to parse files using pipes
cat names\.txt | gnparser \-f csv \-j 200 > names_parsed\.csv

# to parse using stream method instead of batch method\.
cat names\.txt | gnparser \-s > names_parsed\.csv

# to not remove html tags and entities during parsing\. You gain a bit of
# performance with this option if your data does not contain HTML tags or
# entities\.
gnparser "<i>Pomatomus</i>&nbsp;<i>saltator</i>"
gnparser \-i "<i>Pomatomus</i>&nbsp;<i>saltator</i>"
gnparser \-i "Pomatomus saltator"
.
.fi
.
.IP "" 0
.
.SH "GNPARSER SETTINGS"
.
.SS "\-h, \-\-help"
Prints help information:
.
.IP "" 4
.
.nf

gnparser \-h
.
.fi
.
.IP "" 0
.
.SS "\-b, \-\-batch_size (values: positive integers, default 50,000)"
Sets a maximum number of names collected into a batch before processing\. This flag is ignored, if parsing is applied to only one name or if parsing mode is set to streaming with \-s flag:
.
.P
gnparser \-b 100 names\.txt
.
.SS "\-c, \-\-capitalize"
Capitalizes the first letter of a name\-string before parsing:
.
.P
gnparser "homo sapiens" \-c
.
.SS "\-C, \-\-cultivar"
Parses given name/s according to the Code of Cultivar Plants:
.
.P
gnparser "Sarracenia flava \'Maxima\'" \-C gnparser "Cytisus purpureus + Laburnum anagyroides" \-C
.
.SS "\-d, \-\-details"
Return more details for a parsed name\. This flag is ignored for CSV formatting:
.
.IP "" 4
.
.nf

gnparser "Pardosa moesta Banks, 1982" \-d \-f pretty
.
.fi
.
.IP "" 0
.
.SS "\-f, \-\-format"
Determines an output format\. Can be \fBcompact\fR, \fBpretty\fR, \fBcsv\fR\. Default is \fBcsv\fR\.
.
.P
The default \fBcsv\fR format returns a header row and the CSV\-compatible parsed result:
.
.IP "" 4
.
.nf

gnparser "Pardosa moesta"
.
.fi
.
.IP "" 0
.
.P
The \fBtsv\fR format returns a header row and a tab\-delimited output:
.
.IP "" 4
.
.nf

gnparser "Pardosa moesta" \-f tsv
.
.fi
.
.IP "" 0
.
.P
The \fBcompact\fR format returns a JSON\-encoded result without indentations and new lines:
.
.IP "" 4
.
.nf

gnparser "Pardosa moesta" \-f compact
.
.fi
.
.IP "" 0
.
.P
The \fBpretty\fR format returns a JSON\-encoded result in a more human\-readable form:
.
.IP "" 4
.
.nf

gnparser "Pardosa moesta" \-f pretty
.
.fi
.
.IP "" 0
.
.SS "\-i, \-\-ignore_tags"
By default \fBgnparser\fR scans names for HTML tags and removes them before parsing\. It slows the process slightly\. If there are no HTML tags in names (no names are like \fB<i>Aus bus<i> L\.\fR, this flag allows to skip HTML removal step, increasing performance slightly:
.
.IP "" 4
.
.nf

gnparser \-i plain\-text\-names\.txt
.
.fi
.
.IP "" 0
.
.SS "\-j, \-\-jobs (positive integer, default is a number of CPUs on a machine)"
The number of jobs running concurrently\. This flag is ignored when parsing one name:
.
.IP "" 4
.
.nf

gnparser \-j 200 names\.txt
.
.fi
.
.IP "" 0
.
.SS "\-p, \-\-port (port number)"
Set a port to run web\-interface and RESTful API and starts an HTTP service on this port:
.
.IP "" 4
.
.nf

gnparser \-p 80
.
.fi
.
.IP "" 0
.
.SS "\-s, \-\-stream"
Changes parsing method for large number of names from \fBbatch\fR to \fBstream\fR\. If this flag is set, gnparser can be used from any language application using pipe\-in/pipe\-out methods\. Such an approach requires sending 1 name at a time to gnparser instead of sending names in batches\. Streaming allows to achieve that, but there is a slight decrease in performance:
.
.IP "" 4
.
.nf

gnparser \-s names\.json
.
.fi
.
.IP "" 0
.
.SS "\-u, \-\-unordered"
If this flag is on, output and intput order will not be syncronized\. If there is only one parsing job running (\fB\-j\fR flag), the input and output will be of the same order even if \fB\-u\fR flag is given\.
.
.IP "" 4
.
.nf

gnparser \-u \-j 100 names\.txt
.
.fi
.
.IP "" 0
.
.SS "\-V, \-\-version"
Shows the version number of gnparser\.
.
.SH "COPYRIGHT"
The MIT License (MIT)
.
.P
Copyright (c) 2018\-2022 Dmitry Mozzherin
.
.SH "Contributors"
Toby Marsden, Geoffrey Ower, Hernan Lucas Pereira
