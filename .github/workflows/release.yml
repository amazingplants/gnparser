name: Release
on:
  # schedule:
  #   - cron: '10 3 * * *'
  # workflow_dispatch:
  #   inputs:
  #     tag_name:
  #       description: 'Tag name for release'
  #       required: false
  #       default: nightly
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+-[0-9]

jobs:
  binaries:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.build.outputs.version }}
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Install peg
      run: go get -u github.com/pointlander/peg

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - run: git fetch --prune --unshallow

    - name: Install goimports
      run: go get golang.org/x/tools/cmd/goimports

    - name: Get dependencies
      run: make deps

    - name: Build
      id: build
      run: |
        make BUILD_DIR=../build/bin build
        printf '::set-output name=version::%s\n' "$(./build/bin/gnparser -V | head -n 4 | tail -n 3 | sed -z 's/\n/%0A/g')"

    - name: Build release
      run: |
        make RELEASE_DIR=../build/release nightly

    - uses: actions/upload-artifact@v2
      with:
        name: gnparser
        path: build/release/gnparser*
        retention-days: 1

  publish:
    needs: [binaries]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
      - if: github.event_name == 'workflow_dispatch'
        run: echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
      - if: github.event_name == 'schedule'
        run: echo 'TAG_NAME=nightly' >> $GITHUB_ENV
      - if: github.event_name == 'push'
        run: |
          TAG_NAME=${{ github.ref }}
          echo "TAG_NAME=${TAG_NAME#refs/tags/}" >> $GITHUB_ENV
      - if: env.TAG_NAME == 'nightly'
        run: echo 'SUBJECT=GNparser development build' >> $GITHUB_ENV
      - if: env.TAG_NAME != 'nightly'
        run: echo 'SUBJECT=GNparser release build' >> $GITHUB_ENV
      - if: env.TAG_NAME == 'nightly'
        uses: dev-drprasad/delete-tag-and-release@v0.1.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          delete_release: ''
          tag_name: nightly
      - uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.TAG_NAME }}
          name: Nightly build
          prerelease: ${{ env.TAG_NAME == 'nightly' }}
          commitish: ${{ github.sha }}
          gzip: false
          allow_override: ${{ env.TAG_NAME == 'nightly' }}
          files: |
            gnparser-linux.tar.gz:./gnparser/gnparser-linux.tar.gz
            gnparser-mac.tar.gz:./gnparser/gnparser-mac.tar.gz
            gnparser-win-64.zip:./gnparser/gnparser-win-64.zip
          body: |
            ${{ env.SUBJECT }}
            ```
            ${{ needs.binaries.outputs.version }}```

            ## Install gnparser

            ### Linux and Mac (x64)

            1. Download **gnparser tar file**
            2. Run `tar xvf gnparser-linux.tar.gz`
            3. Copy gnparser to your path `cp gnparser /usr/local/bin`

            ### Windows (x64)

            1. Download **gnparser zip file**
            2. Unzip it
            3. Copy gnparser.exe somewhere in your path (see README for details)

